{"version":3,"file":"src_app_pages_report-by-product-branch-premium_report-by-product-branch-premium_module_ts.js","mappings":"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","sources":["./src/app/pages/report-by-product-branch-premium/report-by-product-branch-premium-export.service.ts","./src/app/pages/report-by-product-branch-premium/report-by-product-branch-premium.component.ts","./src/app/pages/report-by-product-branch-premium/report-by-product-branch-premium.module.ts"],"sourcesContent":["import { HttpClient, HttpParams } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Workbook } from 'exceljs';\nimport * as fs from 'file-saver';\nimport { AuthService } from '../../../app/modules/auth';\nimport { BizOperationService } from '../../../app/core/biz.operation.service';\nimport { environment } from '../../../environments/environment';\nimport { Platform } from '@ionic/angular';\nimport { AttachmentDownloadService } from 'src/app/_metronic/core/services/attachment-data.service';\n\nconst API_ADDON_URL = `${environment.apiUrl}/premiumProductBranch`;\nconst API_HIREARCHY_URL = `${environment.apiUrl}/officeHirearchy`;\nconst API_AGENT_OFFICE_URL = `${environment.apiUrl}/agentByOffice`;\n\n\nconst alphabet = [\"A\", \"B\", \"C\", \"D\", \"E\", \"F\", \"G\", \"H\", \"I\", \"J\", \"K\", \"L\", \"M\", \"N\", \"O\", \"P\", \"Q\", \"R\", \"S\", \"T\", \"U\", \"V\", \"W\", \"X\", \"Y\", \"Z\",\n  \"AA\", \"AB\", \"AC\", \"AD\", \"AE\", \"AF\", \"AG\", \"AH\", \"AI\", \"AJ\", \"AK\", \"AL\", \"AM\", \"AN\", \"AO\", \"AP\", \"AQ\", \"AR\", \"AS\", \"AT\", \"AU\", \"AV\", \"AW\", \"AX\", \"AY\", \"AZ\",\n  \"BA\", \"BB\", \"BC\", \"BD\", \"BE\", \"BF\", \"BG\", \"BH\", \"BI\", \"BJ\", \"BK\", \"BL\", \"BM\", \"BN\", \"BO\", \"BP\", \"BQ\", \"BR\", \"BS\", \"BT\", \"BU\", \"BV\", \"BW\", \"BX\", \"BY\", \"BZ\",\n  \"CA\", \"CB\", \"CC\", \"CD\", \"CE\", \"CF\", \"CG\", \"CH\", \"CI\", \"CJ\", \"CK\", \"CL\", \"CM\", \"CN\", \"CO\", \"CP\", \"CQ\", \"CR\", \"CS\", \"CT\", \"CU\", \"CV\", \"CW\", \"CX\", \"CY\", \"CZ\",\n  \"DA\", \"DB\", \"DC\", \"DD\", \"DE\", \"DF\", \"DG\", \"DH\", \"DI\", \"DJ\", \"DK\", \"DL\", \"DM\", \"DN\", \"DO\", \"DP\", \"DQ\", \"DR\", \"DS\", \"DT\", \"DU\", \"DV\", \"DW\", \"DX\", \"DY\", \"DZ\",\n  \"EA\", \"EB\", \"EC\", \"ED\", \"EE\", \"EF\", \"EG\", \"EH\", \"EI\", \"EJ\", \"EK\", \"EL\", \"EM\", \"EN\", \"EO\", \"EP\", \"EQ\", \"ER\", \"ES\", \"ET\", \"EU\", \"EV\", \"EW\", \"EX\", \"EY\", \"Z\"];\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ReportProductBranchPremiumExportService extends BizOperationService<any, number>{\n  constructor(protected httpClient: HttpClient, private authService: AuthService,\n    public platform: Platform, private attachmentDownloadService: AttachmentDownloadService) {\n    super(httpClient, API_ADDON_URL);\n  }\n\n  getOfficeHirearchy(parentId, typeCode) {\n    let reqObj = {\n      parentId: parentId,\n      typeCode: typeCode,\n    }\n    const params = new HttpParams({\n      fromObject: reqObj\n    });\n    return this.httpClient.get<any>(API_HIREARCHY_URL, { params: params });\n  }\n\n  getAgentOffice(officeId) {\n    let reqObj = {\n      officeId: officeId,\n    }\n    const params = new HttpParams({\n      fromObject: reqObj\n    });\n    return this.httpClient.get<any>(API_AGENT_OFFICE_URL, { params: params });\n  }\n\n\n  getAllReportData(searchValue) {\n    if (searchValue.fromDate) {\n      searchValue.fromDate = this.formatDateYYYY_MM_DD(searchValue.fromDate);\n    }\n    if (searchValue.toDate) {\n      searchValue.toDate = this.formatDateYYYY_MM_DD(searchValue.toDate);\n    }\n    const params = new HttpParams({\n      fromObject: searchValue\n    });\n    return this.httpClient.get(API_ADDON_URL, { params: params });\n  }\n\n  getAllAboutBRAM(fnaId) {\n    return this.httpClient.get(API_ADDON_URL + '/' + fnaId + '/asset');\n  }\n\n\n  formatDateYYYY_MM_DD(date) {\n    var d = new Date(date),\n      month = '' + (d.getMonth() + 1),\n      day = '' + d.getDate(),\n      year = d.getFullYear();\n    if (month.length < 2)\n      month = '0' + month;\n    if (day.length < 2)\n      day = '0' + day;\n    return [year, month, day].join('-');\n  }\n\n  exportExcel(excelData) {\n    //Title, Header & Data\n    const title = excelData.title;\n    const searchValue = excelData.searchValue\n    const productsHeader = excelData.productsHeader\n    const branchDataForExcel = excelData.branchDataForExcel\n    const totalValue = excelData.totalValue\n\n\n    //Create a workbook with a worksheet\n    let workbook = new Workbook();\n    let worksheet = workbook.addWorksheet('Sheet1');\n\n    // Freeze\n    worksheet.views = [\n      { state: 'frozen', xSplit: 2, ySplit: 4, activeCell: 'A1' }\n    ];\n\n    //Add Row and formatting\n    worksheet.mergeCells('A1', 'B2');\n    let titleRow = worksheet.getCell('A1');\n    titleRow.value = title\n    titleRow.font = {\n      name: 'Calibri',\n      size: 12,\n      underline: 'single',\n      bold: true,\n      color: { argb: '0085A3' }\n    }\n    titleRow.alignment = { vertical: 'middle', horizontal: 'left' }\n\n    //Reported Date:\n    worksheet.mergeCells('G1', 'G1');\n    let reportDate = worksheet.getCell('G1');\n    reportDate.value = 'Reported Date: ' + this.formatReportedDate(new Date());\n    reportDate.font = {\n      name: 'Calibri',\n      size: 10,\n      bold: true\n    }\n    reportDate.alignment = { vertical: 'middle', horizontal: 'left' }\n\n     //Reported By:\n     worksheet.mergeCells('G2', 'G2');\n     let reportBy = worksheet.getCell('G2');\n     reportBy.value = 'Reported By: ' + this.authService.currentUserValue.firstName + this.authService.currentUserValue.lastName\n     reportBy.font = {\n       name: 'Calibri',\n       size: 10,    \n       bold: true\n     }\n     reportBy.alignment = { vertical: 'middle', horizontal: 'left' }\n   \n\n    // Display search name   \n    if (searchValue.length > 0) {\n      for (var i = 0; i < searchValue.length; i++) {\n        let cellIndex = null;\n        let cellIndexValue = null;\n        if (searchValue[i].fromDate) {\n          cellIndex = 'F1';\n          cellIndexValue = 'From Date: ' + searchValue[i].fromDate;\n        }\n        if (searchValue[i].toDate) {\n          cellIndex = 'F2';\n          cellIndexValue = 'To Date: ' + searchValue[i].toDate;\n        }\n        if (searchValue[i].companyName) {\n          cellIndex = 'L1';\n          cellIndexValue = 'Company: ' + searchValue[i].companyName;\n        }\n        if (searchValue[i].channelName) {\n          cellIndex = 'M1';\n          cellIndexValue = 'Channel: ' + searchValue[i].channelName;\n        }\n        if (searchValue[i].regionName) {\n          cellIndex = 'N1';\n          cellIndexValue = 'Region: ' + searchValue[i].regionName;\n        }\n        if (searchValue[i].clusterName) {\n          cellIndex = 'L2';\n          cellIndexValue = 'Cluster: ' + searchValue[i].clusterName;\n        }\n        if (searchValue[i].branchName) {\n          cellIndex = 'M2';\n          cellIndexValue = 'Branch: ' + searchValue[i].branchName;\n        }\n        if (searchValue[i].agentName) {\n          cellIndex = 'N2';\n          cellIndexValue = 'Agent: ' + searchValue[i].agentName;\n        }\n\n        if (cellIndex != null && cellIndexValue != null) {\n          let searchCell = worksheet.getCell(cellIndex);\n          searchCell.value = cellIndexValue;\n          searchCell.font = {\n            name: 'Calibri',\n            size: 10,\n            bold: true\n          }\n          searchCell.alignment = { vertical: 'middle', horizontal: 'left' }\n        }\n      }\n    }\n\n    worksheet.addRow([]);\n    // Adding Data with Conditional Formatting\n    let startIndex: number = 0;\n    for (var i = 0; i < productsHeader.length; i++) {\n      let start = this.calculateStartPoint(startIndex);\n      startIndex += 1;\n      let fireCell = worksheet.getCell(start);\n      fireCell.value = productsHeader[i];\n      fireCell.font = {\n        name: 'Calibri',\n        size: 12,\n        bold: true\n      }\n      fireCell.alignment = { vertical: 'middle', horizontal: 'center' }\n    }\n\n    branchDataForExcel.forEach(d => {\n      let row = worksheet.addRow(d);\n      let no = row.getCell(1);\n      if (no) {\n        no.alignment = { vertical: 'middle', horizontal: 'center' }\n      }\n      let index = 0;\n      d.forEach(a => {\n        index++;\n        if (index != 2 && index != 3 && index != 4 && index != 5) {\n          let center = row.getCell(index);\n          if (center) {\n            center.alignment = { vertical: 'middle', horizontal: 'right' }\n          }\n        }\n        if (index == 1) {\n          let center = row.getCell(index);\n          if (center) {\n            center.alignment = { vertical: 'middle', horizontal: 'center' }\n          }\n        }\n\n        if (index > 2) {\n          let center = row.getCell(index);\n          center.numFmt = '#,##0.00_);(#,##0.00)';\n        }\n      });\n    }\n    );\n\n    // Adding Data with Conditional Formatting\n    let startTotalIndex: number = 0;\n    for (var i = 0; i < totalValue.length; i++) {\n      let start = this.calculateTotalPoint(startTotalIndex, branchDataForExcel.length);\n      startTotalIndex += 1;\n      let totalCell = worksheet.getCell(start);\n      totalCell.value = totalValue[i];\n      totalCell.font = {\n        name: 'Calibri',\n        size: 12,\n        bold: true\n      }\n      totalCell.alignment = { vertical: 'middle', horizontal: 'right' }\n      if (startTotalIndex > 2) {\n        totalCell.numFmt = '#,##0.00_);(#,##0.00)';\n      }\n    }\n\n    worksheet.columns.forEach(function (column, i) {\n      var maxLength = 0;\n      column[\"eachCell\"]({ includeEmpty: true }, function (cell) {\n        var columnLength = cell.value ? cell.value.toString().length : 10;\n        if (columnLength > maxLength) {\n          maxLength = columnLength;\n        }\n      });\n      column.width = maxLength < 10 ? 10 : maxLength;\n    });\n\n    worksheet.getColumn(1).width = 25;\n\n    const autoHeight = (worksheet) => {\n      const lineHeight = 12 // height per line is roughly 12\n      worksheet.eachRow((row) => {\n        let maxLine = 1\n        row.eachCell((cell) => {\n          maxLine = Math.max(cell.value.split('\\n').length - 1, maxLine)\n        })\n        row.height = lineHeight * maxLine\n      })\n    }\n\n    //Generate & Save Excel File\n    workbook.xlsx.writeBuffer().then((data) => {\n      let blob = new Blob([data], { type: 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet; charset=utf-8' });\n      if (this.platform.is('android') || this.platform.is('ios')) {\n        this.attachmentDownloadService.mobileDownload(title + '_' + this.formatDateDDMMYYY(new Date()) + '.xlsx', blob);\n      } else {\n        fs.saveAs(blob, title + '_' + this.formatDateDDMMYYY(new Date()) + '.xlsx');\n      }\n    });\n\n  }\n\n  calculateStartPoint(index) {\n    return alphabet[index] + '4'\n  }\n\n  calculateEndPoint(index) {\n    return alphabet[index] + '4'\n  }\n\n  calculateDataPoint(index) {\n    return alphabet[index] + '5'\n  }\n\n  calculatePremiumDataPoint(index) {\n    return alphabet[index] + '6'\n  }\n\n  calculateTotalPoint(index, position) {\n    let currentIndex: number = Number(position) + 5;\n    return alphabet[index] + currentIndex.toString();\n  }\n\n  formatDateDDMMYYY(date) {\n    var d = new Date(date),\n      month = '' + (d.getMonth() + 1),\n      day = '' + d.getDate(),\n      year = d.getFullYear();\n    if (month.length < 2)\n      month = '0' + month;\n    if (day.length < 2)\n      day = '0' + day;\n    return [day, month, year].join('_');\n  }\n\n  mathRoundTo(num: number, places: number) {\n    const factor = 10 ** places;\n    return (Math.round(num * factor) / factor).toLocaleString();\n  };\n\n  formatReportedDate(date) {\n    var d = new Date(date),\n      month = '' + (d.getMonth() + 1),\n      day = '' + d.getDate(),\n      year = d.getFullYear();\n    if (month.length < 2)\n      month = '0' + month;\n    if (day.length < 2)\n      day = '0' + day;\n    return [day, month, year].join('/');\n  }\n\n}\n\n","import { ChangeDetectorRef, Component, OnInit } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport * as moment from 'moment';\nimport { validateAllFields } from '../../../app/core/valid-all-feild';\nimport { ReportIdentityType, ReportStatus } from '../report-detail-by-agent/report-detail-by-agent.const';\nimport { ReportProductBranchPremiumExportService } from './report-by-product-branch-premium-export.service';\nimport { CONSTANT_AGENT_REPORT_DATA } from './report-by-product-branch-premium.const';\n\n@Component({\n  selector: 'app-report-by-product-branch-premium',\n  templateUrl: './report-by-product-branch-premium.component.html',\n  styleUrls: ['./report-by-product-branch-premium.component.scss']\n})\nexport class ReportByProductBranchPremiumComponent implements OnInit {\n  createFormGroup: FormGroup;\n  fromMinDate = null;\n  fromMaxDate = null;\n  toMaxDate: { year: number; month: number; day: number; };\n  selectOptions = {\n    companies: [],\n    channels: [],\n    regions: [],\n    cluster: [],\n    branches: [],\n    agents: [],\n  }\n  reports = [];\n  products = [];\n  policies = [];\n  productList = [];\n\n  agentName: string = null;\n  companyName: string = null;\n  channelName: string = null;\n  regionName: string = null;\n  clusterName: string = null;\n  branchName: string = null;\n\n  productValues = [];\n  subHeader = [];\n  dataExcel = [];\n  productsHeader: any[];\n  branchDataList: any[];\n  isData: boolean = false;\n  branchDataForExcel: any[];\n  title: string = 'By Product Branch - Premium';\n  dataList = [];\n  totalDataList = [];\n\n  constructor(private cdf: ChangeDetectorRef,\n    public exportService: ReportProductBranchPremiumExportService) { }\n\n\n  ngOnInit(): void {\n    this.loadForm();\n    this.getOfficeHirearchy();\n    this.fromMinDate = null;\n    this.fromMaxDate = null;\n  }\n\n  async getOfficeHirearchy() {\n    await this.exportService.getOfficeHirearchy('', '01').toPromise().then(async (res: any) => {\n      if (res) {\n        this.selectOptions.companies = res\n      }\n    });\n  }\n\n  async getAllReports() {\n    if (this.createFormGroup.invalid) {\n      validateAllFields(this.createFormGroup);\n    } else {\n      this.productsHeader = [];\n      this.branchDataList = [];\n      this.dataList = [];\n      this.totalDataList = [];\n\n      await this.exportService.getAllReportData(this.createFormGroup.value).toPromise().then(async (res: any) => {\n        if (res) {\n          if (res.products.length > 0) {\n            for (var i = 0; i < res.products.length; i++) {\n              this.productsHeader.push({ id: res.products[i].id, name: res.products[i].name })\n            }\n          }\n\n          if (res.dataList.length > 0) {\n            this.isData = true;\n            this.dataList = res.dataList;\n            let countNo: number = 0;\n            for (var i = 0; i < this.dataList.length; i++) {\n              let list = [];\n              for (var j = 0; j < this.productsHeader.length; j++) {\n                list.push({ id: this.productsHeader[j].id, noOfPolicy: 0.00, totalPreminum: 0.00 });\n              }\n              countNo += 1;\n              this.dataList[i].no = countNo;\n              this.dataList[i].productDataList = JSON.parse(JSON.stringify(list));\n              this.dataList[i].totalDataList = JSON.parse(JSON.stringify(list));\n              if (this.dataList[i].products) {\n                for (var j = 0; j < this.dataList[i].products.length; j++) {\n                  for (var k = 0; k < this.dataList[i].productDataList.length; k++) {\n                    if (this.dataList[i].productDataList[k].id == this.dataList[i].products[j].id) {\n                      this.dataList[i].productDataList[k].noOfPolicy = this.dataList[i].products[j].noOfPolicy\n                      this.dataList[i].productDataList[k].totalPreminum = this.dataList[i].products[j].totalPreminum\n                    }\n                  }\n                }\n              }\n              if (countNo == this.dataList.length) {\n                this.totalDataList = JSON.parse(JSON.stringify(list))\n                for (var i = 0; i < this.dataList.length; i++) {\n                  for (var j = 0; j < this.dataList[i].products.length; j++) {\n                    let total: number = 0;\n                    for (var k = 0; k < this.totalDataList.length; k++) {\n                      if (this.totalDataList[k].id == this.dataList[i].products[j].id) {\n                        this.totalDataList[k].totalPreminum += Number(this.dataList[i].products[j].totalPreminum);\n                      }\n                    }\n                  }\n                }\n\n                for (var k = 0; k < this.totalDataList.length; k++) {\n                  this.totalDataList[k].totalPreminum = this.totalDataList[k].totalPreminum\n                }\n              }\n            }\n          } else {\n            this.isData = false\n          }\n        }\n      });\n    }\n    this.cdf.detectChanges();\n  }\n\n  generateReportExcel() {\n    this.productValues = []\n    this.branchDataForExcel = [];\n    let totalValue = [];\n\n    this.productValues.push('No.');\n    this.productValues.push('Branch');\n    for (var i = 0; i < this.productsHeader.length; i++) {\n      this.productValues.push(this.productsHeader[i].name)\n    }\n\n    // Data For Excel\n    for (var i = 0; i < this.dataList.length; i++) {\n      let list = [];\n      list.push(i + 1, this.dataList[i].cluster)\n      for (var j = 0; j < this.dataList[i].productDataList.length; j++) {\n        list.push(this.dataList[i].productDataList[j].totalPreminum || 0.00)\n      }\n      this.branchDataForExcel.push(list)\n    }\n\n    totalValue.push('');\n    totalValue.push('Total');\n    for (var i = 0; i < this.totalDataList.length; i++) {\n      totalValue.push(this.totalDataList[i].totalPreminum || 0.00)\n    }\n\n\n    let fromDate = null;\n    let toDate = null;\n    if (this.createFormGroup.value.fromDate) {\n      fromDate = this.formatDateDDMMYYY(this.createFormGroup.value.fromDate)\n    }\n    if (this.createFormGroup.value.toDate) {\n      toDate = this.formatDateDDMMYYY(this.createFormGroup.value.toDate)\n    }\n\n    let reportData = {\n      title: this.title + ' ' + 'Report',\n      searchValue: [\n        { fromDate: fromDate },\n        { toDate: toDate },\n        { agentName: this.agentName },\n        { companyName: this.companyName },\n        { channelName: this.channelName },\n        { regionName: this.regionName },\n        { clusterName: this.clusterName },\n        { branchName: this.branchName }\n      ],\n      productsHeader: this.productValues,\n      branchDataForExcel: this.branchDataForExcel,\n      totalValue: totalValue,\n    }\n    this.exportService.exportExcel(reportData);\n  }\n\n  cancelReport() {\n    this.createFormGroup.reset();\n    this.loadForm();\n    this.selectOptions.channels = [];\n    this.selectOptions.regions = [];\n    this.selectOptions.cluster = [];\n    this.selectOptions.branches = [];\n    this.selectOptions.agents = [];\n    this.productsHeader = [];\n    this.branchDataList = [];\n    this.dataList = [];\n    this.totalDataList = [];\n    this.agentName = null;\n    this.companyName = null;\n    this.channelName = null;\n    this.regionName = null;\n    this.clusterName = null;\n    this.branchName = null;\n    this.agentName = null;\n    this.isData = false;\n    this.fromMinDate = null;\n    this.fromMaxDate = null;\n    this.cdf.detectChanges();\n  }\n\n  async changeOptions(ev, type) {\n    if (type == 'company') {\n      if (ev) {\n        this.companyName = ev.name\n        await this.exportService.getOfficeHirearchy('', '01').toPromise().then(async (res: any) => {\n          if (res) {\n            this.selectOptions.channels = res\n          }\n        });\n      } else {\n        this.companyName = null;\n        this.selectOptions.channels = [];\n        this.selectOptions.regions = [];\n        this.selectOptions.cluster = [];\n        this.selectOptions.branches = [];\n        this.selectOptions.agents = [];\n        this.createFormGroup.controls['channelId'].setValue('');\n        this.createFormGroup.controls['regionId'].setValue('');\n        this.createFormGroup.controls['clusterId'].setValue('');\n        this.createFormGroup.controls['branchId'].setValue('');\n        this.createFormGroup.controls['agentId'].setValue('');\n      }\n      this.selectOptions.channels = [...this.selectOptions.channels];\n      this.selectOptions.regions = [...this.selectOptions.regions];\n      this.selectOptions.cluster = [...this.selectOptions.cluster];\n      this.selectOptions.branches = [...this.selectOptions.branches];\n    }\n\n    if (type == 'channel') {\n      this.selectOptions.channels = [];\n      this.selectOptions.regions = [];\n      this.selectOptions.cluster = [];\n      this.selectOptions.branches = [];\n      this.selectOptions.agents = [];\n      this.createFormGroup.controls['channelId'].setValue('');\n      this.createFormGroup.controls['regionId'].setValue('');\n      this.createFormGroup.controls['clusterId'].setValue('');\n      this.createFormGroup.controls['branchId'].setValue('');\n      this.createFormGroup.controls['agentId'].setValue('');\n      if (ev) {\n        this.companyName = ev.name;\n        await this.exportService.getOfficeHirearchy(ev.id, '02').toPromise().then(async (res: any) => {\n          if (res) {\n            this.selectOptions.channels = res\n          }\n        });\n      } else {\n        this.companyName = null;\n        this.createFormGroup.value.companyId = '';\n        this.createFormGroup.value.channelId = '';\n        this.createFormGroup.value.regionId = '';\n        this.createFormGroup.value.clusterId = '';\n        this.createFormGroup.value.branchId = '';\n        this.createFormGroup.value.agentId = '';\n      }\n    }\n\n    if (type == 'region') {\n      this.selectOptions.regions = [];\n      this.selectOptions.cluster = [];\n      this.selectOptions.branches = [];\n      this.selectOptions.agents = [];\n      this.createFormGroup.controls['regionId'].setValue('');\n      this.createFormGroup.controls['clusterId'].setValue('');\n      this.createFormGroup.controls['branchId'].setValue('');\n      this.createFormGroup.controls['agentId'].setValue('');\n      if (ev) {\n        this.channelName = ev.name;\n        await this.exportService.getOfficeHirearchy(ev.id, '03').toPromise().then(async (res: any) => {\n          if (res) {\n            this.selectOptions.regions = res\n          }\n        });\n      } else {\n        this.channelName = null\n        this.createFormGroup.value.channelId = '';\n        this.createFormGroup.value.regionId = '';\n        this.createFormGroup.value.clusterId = '';\n        this.createFormGroup.value.branchId = '';\n        this.createFormGroup.value.agentId = '';\n      }\n\n    }\n\n    if (type == 'cluster') {\n      this.selectOptions.cluster = [];\n      this.selectOptions.branches = [];\n      this.selectOptions.agents = [];\n      this.createFormGroup.controls['clusterId'].setValue('');\n      this.createFormGroup.controls['branchId'].setValue('');\n      this.createFormGroup.controls['agentId'].setValue('');\n      if (ev) {\n        this.regionName = ev.name\n        await this.exportService.getOfficeHirearchy(ev.id, '04').toPromise().then(async (res: any) => {\n          if (res) {\n            this.selectOptions.cluster = res\n          }\n        });\n      } else {\n        this.regionName = null\n        this.createFormGroup.value.regionId = '';\n        this.createFormGroup.value.clusterId = '';\n        this.createFormGroup.value.branchId = '';\n        this.createFormGroup.value.agentId = '';\n      }\n    }\n    if (type == 'branch') {\n      this.selectOptions.branches = [];\n      this.selectOptions.agents = [];\n      this.createFormGroup.controls['branchId'].setValue('');\n      this.createFormGroup.controls['agentId'].setValue('');\n      if (ev) {\n        this.clusterName = ev.name;\n        await this.exportService.getOfficeHirearchy(ev.id, '05').toPromise().then(async (res: any) => {\n          if (res) {\n            this.selectOptions.branches = res\n          }\n        });\n      } else {\n        this.clusterName = null;\n        this.createFormGroup.value.clusterId = '';\n        this.createFormGroup.value.branchId = '';\n        this.createFormGroup.value.agentId = '';\n      }\n    }\n\n    if (type == 'agent') {\n      this.selectOptions.agents = [];\n      this.createFormGroup.controls['agentId'].setValue('');\n      if (ev) {\n        this.branchName = ev.name\n        await this.exportService.getAgentOffice(ev.id).toPromise().then(async (res: any) => {\n          if (res) {\n            this.selectOptions.agents = res\n          }\n        });\n      } else {\n        this.branchName = null;\n        this.createFormGroup.value.branchId = '';\n        this.createFormGroup.value.agentId = '';\n      }\n    }\n\n    if (type == 'office') {\n      if (ev) {\n        this.agentName = ev.agentName\n      } else {\n        this.agentName = null\n        this.createFormGroup.value.agentId = '';\n      }\n    }\n    this.getAllReports();\n    this.cdf.detectChanges()\n  }\n\n\n  loadForm() {\n    this.createFormGroup = new FormGroup({\n      \"fromDate\": new FormControl('', [Validators.required, Validators.nullValidator]),\n      \"toDate\": new FormControl('', [Validators.required, Validators.nullValidator]),\n      \"agentId\": new FormControl(''),\n      \"companyId\": new FormControl(''),\n      \"channelId\": new FormControl(''),\n      \"regionId\": new FormControl(''),\n      \"clusterId\": new FormControl(''),\n      \"branchId\": new FormControl('')\n    });\n  }\n\n  isControlValid(controlName: string): boolean {\n    const control = this.createFormGroup.controls[controlName];\n    return control.valid && (control.dirty || control.touched);\n  }\n\n  isControlInvalid(controlName: string): boolean {\n    const control = this.createFormGroup.controls[controlName];\n    return control.invalid && (control.dirty || control.touched);\n  }\n\n  controlHasError(validation, controlName): boolean {\n    const control = this.createFormGroup.controls[controlName];\n    return control.hasError(validation) && (control.dirty || control.touched);\n  }\n\n  isControlTouched(controlName): boolean {\n    const control = this.createFormGroup.controls[controlName];\n    return control.dirty || control.touched;\n  }\n\n  doValid(type) {\n    if (type == 'FromDate') {\n      let fromDateValue = moment(this.createFormGroup.controls['fromDate'].value).format('YYYY-MM-DD');\n      let toDateValue = moment(this.createFormGroup.controls['toDate'].value).format('YYYY-MM-DD');\n      if (toDateValue) {\n        let formDateSplit = fromDateValue.split(\"-\");\n        let toDateSplit = toDateValue.split(\"-\");\n        let diffYear = Number(toDateSplit[0]) - Number(formDateSplit[0]);\n        if (diffYear != 0 && diffYear != 1) {\n          this.createFormGroup.controls['toDate'].setValue('');\n        }      \n\n        if (diffYear == 0) {\n          if (formDateSplit[1] > toDateSplit[1]) {\n            this.createFormGroup.controls['toDate'].setValue('');\n          }\n          if (formDateSplit[1] == toDateSplit[1]) {\n            if (formDateSplit[2] > toDateSplit[2]) {\n              this.createFormGroup.controls['toDate'].setValue('');\n            }\n          }\n        }\n\n      }\n      if (fromDateValue) {\n        var toDate = new Date(fromDateValue);\n        toDate.setFullYear(toDate.getFullYear() + 1);\n        toDate.setDate(toDate.getDate() - 1);\n        this.fromMinDate = new Date(fromDateValue);\n        this.fromMaxDate = toDate;\n      }\n    }\n    if (type == 'ToDate') {\n      let fromDateValue = moment(this.createFormGroup.controls['fromDate'].value).format('YYYY-MM-DD');\n      let toDateValue = moment(this.createFormGroup.controls['toDate'].value).format('YYYY-MM-DD');\n      if (fromDateValue) {\n        let formDateSplit = fromDateValue.split(\"-\");\n        let toDateSplit = toDateValue.split(\"-\");\n        let diffYear = Number(toDateSplit[0]) - Number(formDateSplit[0]);\n        if (diffYear != 0 && diffYear != 1) {\n          this.createFormGroup.controls['fromDate'].setValue('');\n        }\n       \n        if (diffYear == 0) {\n          if (formDateSplit[1] > toDateSplit[1]) {\n            this.createFormGroup.controls['toDate'].setValue('');\n          }\n          if (formDateSplit[1] == toDateSplit[1]) {\n            if (formDateSplit[2] > toDateSplit[2]) {\n              this.createFormGroup.controls['toDate'].setValue('');\n            }\n          }\n        }\n      }\n\n      if (toDateValue) {\n        var fromDate = new Date(toDateValue);\n        fromDate.setFullYear(fromDate.getFullYear() - 1);\n        fromDate.setDate(fromDate.getDate() + 1);\n        this.fromMinDate = fromDate;\n        this.fromMaxDate = new Date(toDateValue);\n      }\n    }\n    this.cdf.detectChanges();\n  }\n  \n  clearDate(type) {\n    this.fromMinDate = null;\n    this.fromMaxDate = null;\n    if (type == 'FromDate') {\n      this.createFormGroup.controls['fromDate'].setValue('');\n    }\n    if (type == 'ToDate') {\n      this.createFormGroup.controls['toDate'].setValue('');\n    }\n    this.isData = false;\n    this.productsHeader = [];\n    this.dataList = []\n\n    this.selectOptions.channels = [];\n    this.selectOptions.regions = [];\n    this.selectOptions.cluster = [];\n    this.selectOptions.branches = [];\n    this.selectOptions.agents = [];\n    this.createFormGroup.controls['companyId'].setValue('');\n    this.createFormGroup.controls['channelId'].setValue('');\n    this.createFormGroup.controls['regionId'].setValue('');\n    this.createFormGroup.controls['clusterId'].setValue('');\n    this.createFormGroup.controls['branchId'].setValue('');\n    this.createFormGroup.controls['agentId'].setValue('');\n  }\n\n  formatDateDDMMYYY(date) {\n    var d = new Date(date),\n      month = '' + (d.getMonth() + 1),\n      day = '' + d.getDate(),\n      year = d.getFullYear();\n    if (month.length < 2)\n      month = '0' + month;\n    if (day.length < 2)\n      day = '0' + day;\n    return [day, month, year].join('/');\n  }\n\n  mathRoundTo(num: number, places: number) {\n    const factor = 10 ** places;\n    return (Math.round(num * factor) / factor).toLocaleString();\n  };\n\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule, DatePipe } from '@angular/common';\nimport { ReportByProductBranchPremiumComponent } from './report-by-product-branch-premium.component';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { NgSelectModule } from '@ng-select/ng-select';\nimport { InlineSVGModule } from 'ng-inline-svg';\nimport { CRUDTableModule } from 'src/app/_metronic/shared/crud-table';\nimport { RouterModule } from '@angular/router';\nimport { NgbDatepickerModule } from '@ng-bootstrap/ng-bootstrap';\nimport { NgApexchartsModule } from 'ng-apexcharts';\nimport { MatDatepickerModule } from '@angular/material/datepicker';\nimport { DateAdapter, MatNativeDateModule, MAT_DATE_FORMATS, MAT_DATE_LOCALE } from '@angular/material/core';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MomentDateAdapter } from '@angular/material-moment-adapter';\nimport { MY_FORMATS } from 'src/app/core/is-json';\n\n\n\n@NgModule({\n  declarations: [ReportByProductBranchPremiumComponent],\n  imports: [\n    CommonModule,\n    FormsModule,\n    NgSelectModule,\n    ReactiveFormsModule,\n    InlineSVGModule,\n    CRUDTableModule,\n    NgbDatepickerModule,\n    NgApexchartsModule,\n    MatDatepickerModule,\n    MatNativeDateModule,\n    MatInputModule,\n    MatFormFieldModule,\n    RouterModule.forChild([\n      {\n        path: '',\n        component: ReportByProductBranchPremiumComponent,\n      },\n    ]),\n  ],\n  providers: [DatePipe,{provide: DateAdapter, useClass: MomentDateAdapter, deps: [MAT_DATE_LOCALE]},\n  {provide: MAT_DATE_FORMATS, useValue: MY_FORMATS}]\n})\nexport class ReportByProductBranchPremiumModule { }\n"],"names":[],"sourceRoot":"webpack:///"}