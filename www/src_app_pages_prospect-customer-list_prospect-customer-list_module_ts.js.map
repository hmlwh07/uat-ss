{"version":3,"file":"src_app_pages_prospect-customer-list_prospect-customer-list_module_ts.js","mappings":"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","sources":["./src/app/pages/prospect-customer-list/prospect-customer-list.component.ts","./src/app/pages/prospect-customer-list/prospect-customer-list.module.ts"],"sourcesContent":["import { ChangeDetectorRef, Component, EventEmitter, Input, OnInit, Output, ViewChild } from '@angular/core';\r\nimport { FormControl, FormGroup } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { CustomerCol, CustomerDisplayCol, IdentityType, Status } from './../customer-list/customer-list.const';\r\nimport { CustomerListService } from './../customer-list/customer-list.service';\r\n\r\nimport { NgbDateAdapter, NgbDateParserFormatter, NgbModal } from '@ng-bootstrap/ng-bootstrap';\r\nimport { CustomAdapter, CustomDateParserFormatter } from '../../_metronic/core';\r\nimport { MAT_DATE_FORMATS, DateAdapter, MAT_DATE_LOCALE } from '@angular/material/core';\r\nimport { MAT_MOMENT_DATE_FORMATS, MomentDateAdapter } from '@angular/material-moment-adapter';\r\nimport { MY_FORMATS } from '../../core/is-json';\r\nimport { MaterialTableViewComponent } from '../../_metronic/shared/crud-table/components/material-table-view/material-table-view.component';\r\n\r\n@Component({\r\n  selector: 'app-prospect-customer-list',\r\n  templateUrl: './prospect-customer-list.component.html',\r\n  styleUrls: ['./../customer-list/customer-list.component.scss'],\r\n  providers: [\r\n    { provide: NgbDateAdapter, useClass: CustomAdapter },\r\n    { provide: NgbDateParserFormatter, useClass: CustomDateParserFormatter },\r\n    // { provide: MAT_DATE_FORMATS, useValue: MY_FORMATS },\r\n    { provide: DateAdapter, useClass: MomentDateAdapter, deps: [MAT_DATE_LOCALE] },\r\n    { provide: MAT_DATE_FORMATS, useValue: MY_FORMATS },\r\n  ]\r\n})\r\nexport class ProspectCustomerListComponent implements OnInit {\r\n  @ViewChild(MaterialTableViewComponent) matTable: MaterialTableViewComponent\r\n\r\n  ELEMENT_COL = JSON.parse(JSON.stringify(CustomerCol))\r\n  displayedColumns = JSON.parse(JSON.stringify(CustomerDisplayCol))\r\n\r\n  customerList: any[] = [];\r\n\r\n  statusOption = Status;\r\n  identityTypeOption = IdentityType;\r\n\r\n  customerForm: FormGroup;\r\n  @Output() selectedUser = new EventEmitter();\r\n  @Input() isPopup: boolean = false\r\n  @Input() party: boolean = false\r\n  @Input() isDynamic: boolean = false\r\n  show: boolean = false\r\n  constructor(private router: Router, private cdf: ChangeDetectorRef, private customerListService: CustomerListService, private modalService: NgbModal) {\r\n    this.loadForm();\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    if (this.isPopup) {\r\n      this.ELEMENT_COL.splice(9, 1)\r\n      this.displayedColumns.splice(9, 1)\r\n    }\r\n    this.ELEMENT_COL.splice(3, 1)\r\n    this.displayedColumns.splice(3, 1)\r\n    this.show = true\r\n  }\r\n  ngAfterViewInit() {\r\n    this.getList();\r\n  }\r\n  loadForm() {\r\n    this.customerForm = new FormGroup({\r\n      \"name\": new FormControl(null),\r\n      \"identityType\": new FormControl(null),\r\n      \"identityNumber\": new FormControl(null),\r\n      \"statusCode\": new FormControl(null),\r\n      \"partyCode\": new FormControl(null),\r\n      \"startDate\": new FormControl(null),\r\n      \"endDate\": new FormControl(null),\r\n    });\r\n  }\r\n\r\n  navigateToDetail(data, id?: string, secondaryId?: string) {\r\n    this.router.navigate([\"/customer/customer-detail\"], { queryParams: { pageStatus: data, pageId: id, pageSecondaryId: secondaryId } })\r\n  }\r\n\r\n  getList() {\r\n    let check = this.isPopup && !this.isDynamic ? true : false\r\n    this.customerListService.getCustomerList(this.customerForm.value, this.party, check).toPromise().then((res: any) => {\r\n      if (res) {\r\n        this.customerList = res\r\n        this.cdf.detectChanges()\r\n        if (this.matTable)\r\n          this.matTable.reChangeData()\r\n      }\r\n    })\r\n  }\r\n\r\n  get selected() {\r\n    let user\r\n    if (this.matTable) {\r\n      user = this.matTable.selection.selected[0]\r\n    }\r\n    return user ? user : { customerId: 0 }\r\n  }\r\n\r\n  rowSelected(event) {\r\n    this.selectedUser.emit(event)\r\n  }\r\n\r\n  cancel() {\r\n    this.customerForm.reset();\r\n    this.getList();\r\n  }\r\n\r\n  actionBtn(event) {\r\n    if (event.cmd == 'edit') {\r\n      this.navigateToDetail('edit', event.data.customerId, event.data.individualId)\r\n    }\r\n  }\r\n\r\n  //for view\r\n  isControlValid(controlName: string): boolean {\r\n    const control = this.customerForm.controls[controlName];\r\n    return control.valid && (control.dirty || control.touched);\r\n  }\r\n\r\n  isControlInvalid(controlName: string): boolean {\r\n    const control = this.customerForm.controls[controlName];\r\n    return control.invalid && (control.dirty || control.touched);\r\n  }\r\n\r\n  controlHasError(validation, controlName): boolean {\r\n    const control = this.customerForm.controls[controlName];\r\n    return control.hasError(validation) && (control.dirty || control.touched);\r\n  }\r\n\r\n  isControlTouched(controlName): boolean {\r\n    const control = this.customerForm.controls[controlName];\r\n    return control.dirty || control.touched;\r\n  }\r\n\r\n  nextProd() {\r\n    if (this.selected.customerId) {\r\n      this.modalService.dismissAll({ data: this.selected, type: \"save\" })\r\n    }\r\n  }\r\n  closeModal() {\r\n    this.modalService.dismissAll()\r\n  }\r\n\r\n}\r\n","import { NgModule, Optional, SkipSelf } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { RouterModule } from '@angular/router';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { InlineSVGModule } from 'ng-inline-svg';\r\nimport { CRUDTableModule } from '../../_metronic/shared/crud-table';\r\nimport { ProspectCustomerListComponent } from './prospect-customer-list.component';\r\nimport { NgSelectModule } from '@ng-select/ng-select';\r\nimport { ShareComponentModule } from '../share-components/share-component.module';\r\nimport { throwIfAlreadyLoaded } from 'src/app/modules/loading-toast/module-import-guard';\r\nimport { LanguageModule } from 'src/app/modules/languages/languages.modules';\r\n\r\n@NgModule({\r\n  declarations:[ProspectCustomerListComponent],\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    InlineSVGModule,\r\n    NgSelectModule,\r\n    CRUDTableModule,\r\n    LanguageModule,\r\n    ShareComponentModule,\r\n    RouterModule.forChild([\r\n      {\r\n        path: '',\r\n        component: ProspectCustomerListComponent,\r\n      },\r\n    ]),\r\n\r\n  ]\r\n})\r\nexport class ProspectCustomerListModule {\r\n  constructor(@Optional() @SkipSelf() parentModule: ProspectCustomerListModule) {\r\n    throwIfAlreadyLoaded(parentModule, 'ProspectCustomerListModule')\r\n  }\r\n }\r\n"],"names":[],"sourceRoot":"webpack:///"}