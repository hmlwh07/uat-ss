{"version":3,"file":"src_app_pages_report-monthly-sales-analysis-by-branch_report-monthly-sales-analysis-by-branch-ce31dc.js","mappings":"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","sources":["./src/app/pages/report-monthly-sales-analysis-by-branch/report-monthly-sales-analysis-by-branch-export.service.ts","./src/app/pages/report-monthly-sales-analysis-by-branch/report-monthly-sales-analysis-by-branch.component.ts","./src/app/pages/report-monthly-sales-analysis-by-branch/report-monthly-sales-analysis-by-branch.module.ts","./src/app/pages/report-monthly-sales-analysis-by-branch/report-monthly-sales-analysis-by-branch.component.html"],"sourcesContent":["import { HttpClient, HttpParams } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Workbook } from 'exceljs';\nimport * as fs from 'file-saver';\nimport { AuthService } from '../../../app/modules/auth';\nimport { BizOperationService } from '../../../app/core/biz.operation.service';\nimport { environment } from '../../../environments/environment';\nimport { Platform } from '@ionic/angular';\nimport { AttachmentDownloadService } from 'src/app/_metronic/core/services/attachment-data.service';\n\nconst API_ADDON_URL = `${environment.apiUrl}/report/monthlySalesAnalysis`;\nconst API_HIREARCHY_URL = `${environment.apiUrl}/officeHirearchy`;\nconst API_AGENT_OFFICE_URL = `${environment.apiUrl}/agentByOffice`;\n\n\nconst alphabet = [\"A\", \"B\", \"C\", \"D\", \"E\", \"F\", \"G\", \"H\", \"I\", \"J\", \"K\", \"L\", \"M\", \"N\", \"O\", \"P\", \"Q\", \"R\", \"S\", \"T\", \"U\", \"V\", \"W\", \"X\", \"Y\", \"Z\",\n  \"AA\", \"AB\", \"AC\", \"AD\", \"AE\", \"AF\", \"AG\", \"AH\", \"AI\", \"AJ\", \"AK\", \"AL\", \"AM\", \"AN\", \"AO\", \"AP\", \"AQ\", \"AR\", \"AS\", \"AT\", \"AU\", \"AV\", \"AW\", \"AX\", \"AY\", \"AZ\",\n  \"BA\", \"BB\", \"BC\", \"BD\", \"BE\", \"BF\", \"BG\", \"BH\", \"BI\", \"BJ\", \"BK\", \"BL\", \"BM\", \"BN\", \"BO\", \"BP\", \"BQ\", \"BR\", \"BS\", \"BT\", \"BU\", \"BV\", \"BW\", \"BX\", \"BY\", \"BZ\",\n  \"CA\", \"CB\", \"CC\", \"CD\", \"CE\", \"CF\", \"CG\", \"CH\", \"CI\", \"CJ\", \"CK\", \"CL\", \"CM\", \"CN\", \"CO\", \"CP\", \"CQ\", \"CR\", \"CS\", \"CT\", \"CU\", \"CV\", \"CW\", \"CX\", \"CY\", \"CZ\",\n  \"DA\", \"DB\", \"DC\", \"DD\", \"DE\", \"DF\", \"DG\", \"DH\", \"DI\", \"DJ\", \"DK\", \"DL\", \"DM\", \"DN\", \"DO\", \"DP\", \"DQ\", \"DR\", \"DS\", \"DT\", \"DU\", \"DV\", \"DW\", \"DX\", \"DY\", \"DZ\",\n  \"EA\", \"EB\", \"EC\", \"ED\", \"EE\", \"EF\", \"EG\", \"EH\", \"EI\", \"EJ\", \"EK\", \"EL\", \"EM\", \"EN\", \"EO\", \"EP\", \"EQ\", \"ER\", \"ES\", \"ET\", \"EU\", \"EV\", \"EW\", \"EX\", \"EY\", \"Z\"];\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ReportMonthlySalesAnalysisBranchExportService extends BizOperationService<any, number>{\n  constructor(protected httpClient: HttpClient, private authService: AuthService,\n    public platform: Platform, private attachmentDownloadService: AttachmentDownloadService) {\n    super(httpClient, API_ADDON_URL);\n  }\n\n  getOfficeHirearchy(parentId, typeCode) {\n    let reqObj = {\n      parentId: parentId,\n      typeCode: typeCode,\n    }\n    const params = new HttpParams({\n      fromObject: reqObj\n    });\n    return this.httpClient.get<any>(API_HIREARCHY_URL, { params: params });\n  }\n\n  getAgentOffice(officeId) {\n    let reqObj = {\n      officeId: officeId,\n    }\n    const params = new HttpParams({\n      fromObject: reqObj\n    });\n    return this.httpClient.get<any>(API_AGENT_OFFICE_URL, { params: params });\n  }\n\n\n  getAllReportData(searchValue) {\n    if (searchValue.fromDate) {\n      searchValue.fromDate = this.formatDateYYYY_MM_DD(searchValue.fromDate);\n    }\n    if (searchValue.toDate) {\n      searchValue.toDate = this.formatDateYYYY_MM_DD(searchValue.toDate);\n    }\n    const params = new HttpParams({\n      fromObject: searchValue\n    });\n    return this.httpClient.get(API_ADDON_URL, { params: params });\n  }\n\n  getAllAboutBRAM(fnaId) {\n    return this.httpClient.get(API_ADDON_URL + '/' + fnaId + '/asset');\n  }\n\n\n  formatDateYYYY_MM_DD(date) {\n    var d = new Date(date),\n      month = '' + (d.getMonth() + 1),\n      day = '' + d.getDate(),\n      year = d.getFullYear();\n    if (month.length < 2)\n      month = '0' + month;\n    if (day.length < 2)\n      day = '0' + day;\n    return [year, month, day].join('-');\n  }\n\n  exportExcel(excelData) {\n    //Title, Header & Data\n    const title = excelData.title;\n    const searchValue = excelData.searchValue\n    const productsHeader = excelData.productsHeader\n    const branchDataForExcel = excelData.data\n\n    //Create a workbook with a worksheet\n    let workbook = new Workbook();\n    let worksheet = workbook.addWorksheet('Sheet1');\n\n    // Freeze\n    worksheet.views = [\n      { state: 'frozen', xSplit: 0, ySplit: 4, activeCell: 'A1' }\n    ];\n\n    //Add Row and formatting\n    worksheet.mergeCells('A1', 'B2');\n    let titleRow = worksheet.getCell('A1');\n    titleRow.value = title\n    titleRow.font = {\n      name: 'Calibri',\n      size: 12,\n      underline: 'single',\n      bold: true,\n      color: { argb: '0085A3' }\n    }\n    titleRow.alignment = { vertical: 'middle', horizontal: 'left' }\n\n    //Reported Date:\n    worksheet.mergeCells('G1', 'G1');\n    let reportDate = worksheet.getCell('G1');\n    reportDate.value = 'Reported Date: ' + this.formatReportedDate(new Date());\n    reportDate.font = {\n      name: 'Calibri',\n      size: 10,\n      bold: true\n    }\n    reportDate.alignment = { vertical: 'middle', horizontal: 'left' }\n\n     //Reported By:\n     worksheet.mergeCells('G2', 'G2');\n     let reportBy = worksheet.getCell('G2');\n     reportBy.value = 'Reported By: ' + this.authService.currentUserValue.firstName + this.authService.currentUserValue.lastName\n     reportBy.font = {\n       name: 'Calibri',\n       size: 10,    \n       bold: true\n     }\n     reportBy.alignment = { vertical: 'middle', horizontal: 'left' }\n   \n\n    // Display search name   \n    if (searchValue.length > 0) {\n      for (var i = 0; i < searchValue.length; i++) {\n        let cellIndex = null;\n        let cellIndexValue = null;\n        if (searchValue[i].fromDate) {\n          cellIndex = 'F1';\n          cellIndexValue = 'From Month/Year: ' + searchValue[i].fromDate;\n        }\n        if (searchValue[i].toDate) {\n          cellIndex = 'F2';\n          cellIndexValue = 'To Month/Year: ' + searchValue[i].toDate;\n        }\n        if (searchValue[i].companyName) {\n          cellIndex = 'L1';\n          cellIndexValue = 'Company: ' + searchValue[i].companyName;\n        }\n        if (searchValue[i].channelName) {\n          cellIndex = 'M1';\n          cellIndexValue = 'Channel: ' + searchValue[i].channelName;\n        }\n        if (searchValue[i].regionName) {\n          cellIndex = 'N1';\n          cellIndexValue = 'Region: ' + searchValue[i].regionName;\n        }\n        if (searchValue[i].clusterName) {\n          cellIndex = 'L2';\n          cellIndexValue = 'Cluster: ' + searchValue[i].clusterName;\n        }\n        if (searchValue[i].branchName) {\n          cellIndex = 'M2';\n          cellIndexValue = 'Branch: ' + searchValue[i].branchName;\n        }\n        if (searchValue[i].agentName) {\n          cellIndex = 'N2';\n          cellIndexValue = 'Agent: ' + searchValue[i].agentName;\n        }\n\n        if (cellIndex != null && cellIndexValue != null) {\n          let searchCell = worksheet.getCell(cellIndex);\n          searchCell.value = cellIndexValue;\n          searchCell.font = {\n            name: 'Calibri',\n            size: 10,\n            bold: true\n          }\n          searchCell.alignment = { vertical: 'middle', horizontal: 'left' }\n        }\n      }\n    }\n\n    worksheet.addRow([]);\n    // Adding Data with Conditional Formatting\n    let startIndex: number = 0;\n    for (var i = 0; i < productsHeader.length; i++) {\n      let start = this.calculateStartPoint(startIndex);\n      startIndex += 1;\n      let fireCell = worksheet.getCell(start);\n      fireCell.value = productsHeader[i];\n      fireCell.font = {\n        name: 'Calibri',\n        size: 12,\n        bold: true\n      }\n      fireCell.alignment = { vertical: 'middle', horizontal: 'center' }\n    }\n\n    branchDataForExcel.forEach(d => {\n      let row = worksheet.addRow(d);\n      let index = 0;\n      d.forEach(a => {\n        index++;\n        let center = row.getCell(index);\n        if (index == 1 || index == 2 || index == 3) {\n          if (center) {\n            center.alignment = { vertical: 'middle', horizontal: 'left' }\n          }\n        } else {\n          center.alignment = { vertical: 'middle', horizontal: 'right' }\n        }\n\n        if (index > 3) {\n          center.numFmt = '#,##0.00_);(#,##0.00)';\n        }\n      });\n    }\n    );\n\n    worksheet.columns.forEach(function (column, i) {\n      var maxLength = 0;\n      column[\"eachCell\"]({ includeEmpty: true }, function (cell) {\n        var columnLength = cell.value ? cell.value.toString().length : 10;\n        if (columnLength > maxLength) {\n          maxLength = columnLength;\n        }\n      });\n      column.width = maxLength < 10 ? 10 : maxLength;\n    });\n\n    worksheet.getColumn(1).width = 25;\n\n    const autoHeight = (worksheet) => {\n      const lineHeight = 12 // height per line is roughly 12\n      worksheet.eachRow((row) => {\n        let maxLine = 1\n        row.eachCell((cell) => {\n          maxLine = Math.max(cell.value.split('\\n').length - 1, maxLine)\n        })\n        row.height = lineHeight * maxLine\n      })\n    }\n\n    //Generate & Save Excel File\n    workbook.xlsx.writeBuffer().then((data) => {\n      let blob = new Blob([data], { type: 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet; charset=utf-8' });\n      if (this.platform.is('android') || this.platform.is('ios')) {\n        this.attachmentDownloadService.mobileDownload(title + '_' + this.formatDateDDMMYYY(new Date()) + '.xlsx', blob);\n      } else {\n        fs.saveAs(blob, title + '_' + this.formatDateDDMMYYY(new Date()) + '.xlsx');\n      }\n    });\n\n  }\n\n  calculateStartPoint(index) {\n    return alphabet[index] + '4'\n  }\n\n  calculateEndPoint(index) {\n    return alphabet[index] + '4'\n  }\n\n  calculateDataPoint(index) {\n    return alphabet[index] + '5'\n  }\n\n  calculatePremiumDataPoint(index) {\n    return alphabet[index] + '6'\n  }\n\n  formatDateDDMMYYY(date) {\n    var d = new Date(date),\n      month = '' + (d.getMonth() + 1),\n      day = '' + d.getDate(),\n      year = d.getFullYear();\n    if (month.length < 2)\n      month = '0' + month;\n    if (day.length < 2)\n      day = '0' + day;\n    return [day, month, year].join('_');\n  }\n\n  mathRoundTo(num: number, places: number) {\n    const factor = 10 ** places;\n    return (Math.round(num * factor) / factor).toLocaleString();\n  };\n\n  formatReportedDate(date) {\n    var d = new Date(date),\n      month = '' + (d.getMonth() + 1),\n      day = '' + d.getDate(),\n      year = d.getFullYear();\n    if (month.length < 2)\n      month = '0' + month;\n    if (day.length < 2)\n      day = '0' + day;\n    return [day, month, year].join('/');\n  }\n\n}\n","import { DatePipe } from '@angular/common';\nimport { ChangeDetectorRef, Component, OnInit } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport * as moment from 'moment';\nimport { validateAllFields } from '../../../app/core/valid-all-feild';\nimport { ReportIdentityType, ReportStatus } from '../report-detail-by-agent/report-detail-by-agent.const';\nimport { ReportMonthlySalesAnalysisBranchExportService } from './report-monthly-sales-analysis-by-branch-export.service';\nimport { CONSTANT_AGENT_REPORT_DATA } from './report-monthly-sales-analysis-by-branch.const';\n\n@Component({\n  selector: 'app-report-monthly-sales-analysis-by-branch',\n  templateUrl: './report-monthly-sales-analysis-by-branch.component.html',\n  styleUrls: ['./report-monthly-sales-analysis-by-branch.component.scss']\n})\nexport class ReportMonthlySalesAnalysisByBranchComponent implements OnInit {\n  createFormGroup: FormGroup;\n  fromMinDate = null;\n  fromMaxDate = null;\n  toMaxDate: { year: number; month: number; day: number; };\n  selectOptions = {\n    companies: [],\n    channels: [],\n    regions: [],\n    cluster: [],\n    branches: [],\n    agents: [],\n  }\n\n  reports = [];\n  products = [];\n  policies = [];\n  productList = [];\n\n  agentName: string = null;\n  companyName: string = null;\n  channelName: string = null;\n  regionName: string = null;\n  clusterName: string = null;\n  branchName: string = null;\n\n  productValues = [];\n  subHeader = [];\n  dataExcel = [];\n  isData: boolean = false;\n  dataList = [];\n  displayList = [];\n  title: string = 'Monthly Activity Analysis';\n\n  constructor(private cdf: ChangeDetectorRef, private datePipe: DatePipe,\n    public exportService: ReportMonthlySalesAnalysisBranchExportService) { }\n\n\n  ngOnInit(): void {\n    this.loadForm();\n    this.getOfficeHirearchy();\n    this.fromMinDate = null;\n    this.fromMaxDate = null;\n  }\n\n  async getOfficeHirearchy() {\n    await this.exportService.getOfficeHirearchy('', '01').toPromise().then(async (res: any) => {\n      if (res) {\n        this.selectOptions.companies = res\n      }\n    });\n  }\n\n  async getAllReports() {\n    this.displayList = [];\n    let activities = [\n      { activityName: 'Daily Lead' },\n      { activityName: 'Appointments (Phone)' },\n      { activityName: 'Appointments (Face to Face)' },\n      { activityName: 'Appointments (Online)' },\n      { activityName: 'Needs (LPP & BRAM complete)' },\n      { activityName: 'Solutions' },\n      { activityName: 'Sales' },\n      { activityName: 'Referrals' }\n    ]\n\n    if (this.createFormGroup.invalid) {\n      validateAllFields(this.createFormGroup);\n    } else {\n      await this.exportService.getAllReportData(this.createFormGroup.value).toPromise().then(async (res: any) => {\n        if (res.monthlydataList.length > 0) {\n          this.isData = true;\n          for (var i = 0; i < res.monthlydataList.length; i++) {\n            for (var j = 0; j < activities.length; j++) {\n              let obj = {\n                agentName: res.monthlydataList[i].agentName,\n                branchName: res.monthlydataList[i].branchName,\n                activityName: activities[j].activityName,\n                monthActualAgainstTarge: this.monthActualAgainstTarge(activities[j].activityName, res.monthlydataList[i]),\n                monthConversionToProspect: this.monthConversionToProspect(activities[j].activityName, res.monthlydataList[i]),\n                monthConversionToPreviousStage: this.monthConversionToPreviousStage(activities[j].activityName, res.monthlydataList[i]),\n                monthExpectedTargetConversion: this.monthExpectedTargetConversion(activities[j].activityName, res.monthlydataList[i]),\n                monthExpectedTargetConversionToProspects: this.monthExpectedTargetConversionToProspects(activities[j].activityName, res.monthlydataList[i])\n              }\n              this.displayList.push(obj)\n            }\n          }\n        } else {\n          this.isData = false\n        }\n      });\n    }\n    this.cdf.detectChanges();\n  }\n\n  monthActualAgainstTarge(activityName, obj) {\n    let calculatedValue: number = 0;\n    if (activityName == 'Daily Lead' && obj.monthlyTargetTotalLead != 0) {\n      calculatedValue = this.calculateDivision(obj.monthlyActualTotalLead, obj.monthlyTargetTotalLead)\n    }\n    if (activityName == 'Appointments (Phone)' && obj.monthlyTargetTotalAppointmentPhone != 0) {\n      calculatedValue = this.calculateDivision(obj.monthlyActualTotalAppointmentPhone, obj.monthlyTargetTotalAppointmentPhone)\n    }\n    if (activityName == 'Appointments (Face to Face)' && obj.monthlyTargetTotalAppointmentFaceToFace != 0) {\n      calculatedValue = this.calculateDivision(obj.monthlyActualTotalAppointmentFaceToFace, obj.monthlyTargetTotalAppointmentFaceToFace)\n    }\n    if (activityName == 'Appointments (Online)' && obj.monthlyTargetTotalAppointmentOnline != 0) {\n      calculatedValue = this.calculateDivision(obj.monthlyActualTotalAppointmentOnline, obj.monthlyTargetTotalAppointmentOnline)\n    }\n    if (activityName == 'Needs (LPP & BRAM complete)' && obj.monthlyTargetTotalNeeds != 0) {\n      calculatedValue = this.calculateDivision(obj.monthlyActualTotalNeeds, obj.monthlyTargetTotalNeeds)\n    }\n    if (activityName == 'Solutions' && obj.monthlyTargetSolutions != 0) {\n      calculatedValue = this.calculateDivision(obj.monthlyActualTotalSolutions, obj.monthlyTargetSolutions)\n    }\n    if (activityName == 'Sales' && obj.monthlyTargetSales != 0) {\n      calculatedValue = this.calculateDivision(obj.monthlyActualTotalSales, obj.monthlyTargetSales)\n    }\n    if (activityName == 'Referrals' && obj.monthlyTargetReferrals != 0) {\n      calculatedValue = this.calculateDivision(obj.monthlyActualTotalReferrals, obj.monthlyTargetReferrals)\n    }\n    return calculatedValue;\n  }\n\n  monthConversionToProspect(activityName, obj) {\n    let calculatedValue: number = 0;\n    if (activityName == 'Daily Lead') {\n      calculatedValue = 0\n    }\n    if (activityName == 'Appointments (Phone)' && obj.monthlyActualTotalLead != 0) {\n      calculatedValue = this.calculateDivision(obj.monthlyActualTotalAppointmentPhone, obj.monthlyActualTotalLead)\n    }\n    if (activityName == 'Appointments (Face to Face)' && obj.monthlyActualTotalLead != 0) {\n      calculatedValue = this.calculateDivision(obj.monthlyActualTotalAppointmentFaceToFace, obj.monthlyActualTotalLead)\n    }\n    if (activityName == 'Appointments (Online)' && obj.monthlyActualTotalLead != 0) {\n      calculatedValue = this.calculateDivision(obj.monthlyActualTotalAppointmentOnline, obj.monthlyActualTotalLead)\n    }\n    if (activityName == 'Needs (LPP & BRAM complete)' && obj.monthlyActualTotalLead != 0) {\n      calculatedValue = this.calculateDivision(obj.monthlyActualTotalNeeds, obj.monthlyActualTotalLead)\n    }\n    if (activityName == 'Solutions' && obj.monthlyActualTotalLead != 0) {\n      calculatedValue = this.calculateDivision(obj.monthlyActualTotalSolutions, obj.monthlyActualTotalLead)\n    }\n    if (activityName == 'Sales' && obj.monthlyActualTotalLead != 0) {\n      calculatedValue = this.calculateDivision(obj.monthlyActualTotalSales, obj.monthlyActualTotalLead)\n    }\n    if (activityName == 'Referrals') {\n      calculatedValue = 0\n    }\n    return calculatedValue;\n  }\n\n  monthConversionToPreviousStage(activityName, obj) {\n    let calculatedValue: number = 0;\n    if (activityName == 'Daily Lead') {\n      calculatedValue = 0\n    }\n    if (activityName == 'Appointments (Phone)' && obj.monthlyActualTotalLead != 0) {\n      calculatedValue = this.calculateDivision(obj.monthlyActualTotalAppointmentPhone, obj.monthlyActualTotalLead)\n    }\n    if (activityName == 'Appointments (Face to Face)' && obj.monthlyActualTotalLead != 0) {\n      calculatedValue = this.calculateDivision(obj.monthlyActualTotalAppointmentFaceToFace, obj.monthlyActualTotalLead)\n    }\n    if (activityName == 'Appointments (Online)' && obj.monthlyActualTotalLead != 0) {\n      calculatedValue = this.calculateDivision(obj.monthlyActualTotalAppointmentOnline, obj.monthlyActualTotalLead)\n    }\n    if (activityName == 'Needs (LPP & BRAM complete)') {\n      calculatedValue = this.calculateDivision(obj.monthlyActualTotalNeeds,\n        obj.monthlyActualTotalAppointmentFaceToFace +\n        obj.monthlyActualTotalAppointmentOnline +\n        obj.monthlyActualTotalAppointmentPhone)\n    }\n    if (activityName == 'Solutions' && obj.monthlyActualTotalNeeds != 0) {\n      calculatedValue = this.calculateDivision(obj.monthlyActualTotalSolutions, obj.monthlyActualTotalNeeds)\n    }\n    if (activityName == 'Sales' && obj.monthlyActualTotalSolutions != 0) {\n      calculatedValue = this.calculateDivision(obj.monthlyActualTotalSales, obj.monthlyActualTotalSolutions)\n    }\n    if (activityName == 'Referrals') {\n      calculatedValue = 0\n    }\n    return calculatedValue;\n  }\n\n  monthExpectedTargetConversion(activityName, obj) {\n    let calculatedValue: number = 0;\n    if (activityName == 'Daily Lead') {\n      calculatedValue = 0\n    }\n    if (activityName == 'Appointments (Phone)' && obj.monthlyTargetTotalLead != 0) {\n      calculatedValue = this.calculateDivision(obj.monthlyActualTotalAppointmentPhone, obj.monthlyTargetTotalLead)\n    }\n    if (activityName == 'Appointments (Face to Face)' && obj.monthlyTargetTotalLead != 0) {\n      calculatedValue = this.calculateDivision(obj.monthlyActualTotalAppointmentFaceToFace, obj.monthlyTargetTotalLead)\n    }\n    if (activityName == 'Appointments (Online)' && obj.monthlyTargetTotalLead != 0) {\n      calculatedValue = this.calculateDivision(obj.monthlyActualTotalAppointmentOnline, obj.monthlyTargetTotalLead)\n    }\n    if (activityName == 'Needs (LPP & BRAM complete)' && obj.monthlyTargetTotalLead != 0) {\n      calculatedValue = this.calculateDivision(obj.monthlyTargetTotalNeeds, obj.monthlyTargetTotalLead)\n    }\n    if (activityName == 'Solutions' && obj.monthlyTargetTotalLead != 0) {\n      calculatedValue = this.calculateDivision(obj.monthlyActualTotalSolutions, obj.monthlyTargetTotalLead)\n    }\n    if (activityName == 'Sales' && obj.monthlyTargetTotalLead != 0) {\n      calculatedValue = this.calculateDivision(obj.monthlyActualTotalSales, obj.monthlyTargetTotalLead)\n    }\n    if (activityName == 'Referrals') {\n      calculatedValue = 0\n    }\n    return calculatedValue;\n  }\n\n  monthExpectedTargetConversionToProspects(activityName, obj) {\n    let calculatedValue: number = 0;\n    if (activityName == 'Daily Lead') {\n      calculatedValue = 0\n    }\n    if (activityName == 'Appointments (Phone)' && obj.monthlyTargetTotalLead != 0) {\n      calculatedValue = this.calculateDivision(obj.monthlyActualTotalAppointmentPhone, obj.monthlyTargetTotalLead)\n    }\n    if (activityName == 'Appointments (Face to Face)' && obj.monthlyTargetTotalLead != 0) {\n      calculatedValue = this.calculateDivision(obj.monthlyTargetTotalAppointmentFaceToFace, obj.monthlyTargetTotalLead)\n    }\n    if (activityName == 'Appointments (Online)' && obj.monthlyTargetTotalLead != 0) {\n      calculatedValue = this.calculateDivision(obj.monthlyTargetTotalAppointmentOnline, obj.monthlyTargetTotalLead)\n    }\n    if (activityName == 'Needs (LPP & BRAM complete)') {\n      calculatedValue = this.calculateDivision(obj.monthlyTargetTotalNeeds,\n        obj.monthlyTargetTotalAppointmentFaceToFace +\n        obj.monthlyTargetTotalAppointmentOnline +\n        obj.monthlyTargetTotalAppointmentPhone)\n    }\n    if (activityName == 'Solutions' && obj.monthlyTargetTotalNeeds != 0) {\n      calculatedValue = this.calculateDivision(obj.monthlyTargetSolutions, obj.monthlyTargetTotalNeeds)\n    }\n    if (activityName == 'Sales' && obj.monthlyTargetSolutions != 0) {\n      calculatedValue = this.calculateDivision(obj.monthlyTargetSales, obj.monthlyTargetSolutions)\n    }\n    if (activityName == 'Referrals') {\n      calculatedValue = 0\n    }\n    return calculatedValue;\n  }\n\n\n  calculateDivision(value, divided) {\n    let returnValue: any;\n    if (divided != 0) {\n      returnValue = value / divided;\n    } else {\n      returnValue = 0;\n    }\n    return returnValue;\n  }\n\n\n\n  generateReportExcel() {\n    this.dataExcel = [];\n    this.productValues = ['Agent Name', 'Branch Name',\n      'Activities', 'Month Actual against Target',\n      'Month Conversion to Prospect', 'Month Conversion to Previous Stage',\n      'Month Expected Target Conversion', 'Month Expected Target Conversion to Prospects']\n\n    // Data\n    for (var i = 0; i < this.displayList.length; i++) {\n      this.dataExcel.push([this.displayList[i].agentName,\n      this.displayList[i].branchName, this.displayList[i].activityName,\n      this.displayList[i].monthActualAgainstTarge || 0.00, this.displayList[i].monthConversionToProspect || 0.00,\n      this.displayList[i].monthConversionToPreviousStage || 0.00, this.displayList[i].monthExpectedTargetConversion || 0.00,\n      this.displayList[i].monthExpectedTargetConversionToProspects || 0.00])\n    }\n\n    let fromDate = null;\n    let toDate = null;\n    if (this.createFormGroup.value.fromDate) {\n      fromDate = this.datePipe.transform(this.createFormGroup.value.fromDate, 'MM/yyyy');\n    }\n    if (this.createFormGroup.value.fromDate) {\n      toDate = this.datePipe.transform(this.createFormGroup.value.toDate, 'MM/yyyy');\n    }\n\n    let reportData = {\n      title: this.title,\n      searchValue: [\n        { fromDate: fromDate },\n        { toDate: toDate },\n        { agentName: this.agentName },\n        { companyName: this.companyName },\n        { channelName: this.channelName },\n        { regionName: this.regionName },\n        { clusterName: this.clusterName },\n        { branchName: this.branchName }\n      ],\n      productsHeader: this.productValues,\n      data: this.dataExcel\n    }\n    this.exportService.exportExcel(reportData);\n  }\n\n  cancelReport() {\n    this.createFormGroup.reset();\n    this.loadForm();\n    this.selectOptions.channels = [];\n    this.selectOptions.regions = [];\n    this.selectOptions.cluster = [];\n    this.selectOptions.branches = [];\n    this.selectOptions.agents = [];\n    this.displayList = [];\n    this.agentName = null;\n    this.companyName = null;\n    this.channelName = null;\n    this.regionName = null;\n    this.clusterName = null;\n    this.branchName = null;\n    this.agentName = null;\n    this.isData = false;\n    this.fromMinDate = null;\n    this.fromMaxDate = null;\n    this.cdf.detectChanges();\n  }\n\n  async changeOptions(ev, type) {\n    if (type == 'company') {\n      if (ev) {\n        this.companyName = ev.name\n        await this.exportService.getOfficeHirearchy('', '01').toPromise().then(async (res: any) => {\n          if (res) {\n            this.selectOptions.channels = res\n          }\n        });\n      } else {\n        this.companyName = null;\n        this.selectOptions.channels = [];\n        this.selectOptions.regions = [];\n        this.selectOptions.cluster = [];\n        this.selectOptions.branches = [];\n        this.selectOptions.agents = [];\n        this.createFormGroup.controls['channelId'].setValue('');\n        this.createFormGroup.controls['regionId'].setValue('');\n        this.createFormGroup.controls['clusterId'].setValue('');\n        this.createFormGroup.controls['branchId'].setValue('');\n        this.createFormGroup.controls['agentId'].setValue('');\n      }\n      this.selectOptions.channels = [...this.selectOptions.channels];\n      this.selectOptions.regions = [...this.selectOptions.regions];\n      this.selectOptions.cluster = [...this.selectOptions.cluster];\n      this.selectOptions.branches = [...this.selectOptions.branches];\n    }\n\n    if (type == 'channel') {\n      this.selectOptions.channels = [];\n      this.selectOptions.regions = [];\n      this.selectOptions.cluster = [];\n      this.selectOptions.branches = [];\n      this.selectOptions.agents = [];\n      this.createFormGroup.controls['channelId'].setValue('');\n      this.createFormGroup.controls['regionId'].setValue('');\n      this.createFormGroup.controls['clusterId'].setValue('');\n      this.createFormGroup.controls['branchId'].setValue('');\n      this.createFormGroup.controls['agentId'].setValue('');\n      if (ev) {\n        this.companyName = ev.name;\n        await this.exportService.getOfficeHirearchy(ev.id, '02').toPromise().then(async (res: any) => {\n          if (res) {\n            this.selectOptions.channels = res\n          }\n        });\n      } else {\n        this.companyName = null;\n        this.createFormGroup.value.companyId = '';\n        this.createFormGroup.value.channelId = '';\n        this.createFormGroup.value.regionId = '';\n        this.createFormGroup.value.clusterId = '';\n        this.createFormGroup.value.branchId = '';\n        this.createFormGroup.value.agentId = '';\n      }\n    }\n\n    if (type == 'region') {\n      this.selectOptions.regions = [];\n      this.selectOptions.cluster = [];\n      this.selectOptions.branches = [];\n      this.selectOptions.agents = [];\n      this.createFormGroup.controls['regionId'].setValue('');\n      this.createFormGroup.controls['clusterId'].setValue('');\n      this.createFormGroup.controls['branchId'].setValue('');\n      this.createFormGroup.controls['agentId'].setValue('');\n      if (ev) {\n        this.channelName = ev.name;\n        await this.exportService.getOfficeHirearchy(ev.id, '03').toPromise().then(async (res: any) => {\n          if (res) {\n            this.selectOptions.regions = res\n          }\n        });\n      } else {\n        this.channelName = null\n        this.createFormGroup.value.channelId = '';\n        this.createFormGroup.value.regionId = '';\n        this.createFormGroup.value.clusterId = '';\n        this.createFormGroup.value.branchId = '';\n        this.createFormGroup.value.agentId = '';\n      }\n\n    }\n\n    if (type == 'cluster') {\n      this.selectOptions.cluster = [];\n      this.selectOptions.branches = [];\n      this.selectOptions.agents = [];\n      this.createFormGroup.controls['clusterId'].setValue('');\n      this.createFormGroup.controls['branchId'].setValue('');\n      this.createFormGroup.controls['agentId'].setValue('');\n      if (ev) {\n        this.regionName = ev.name\n        await this.exportService.getOfficeHirearchy(ev.id, '04').toPromise().then(async (res: any) => {\n          if (res) {\n            this.selectOptions.cluster = res\n          }\n        });\n      } else {\n        this.regionName = null\n        this.createFormGroup.value.regionId = '';\n        this.createFormGroup.value.clusterId = '';\n        this.createFormGroup.value.branchId = '';\n        this.createFormGroup.value.agentId = '';\n      }\n    }\n    if (type == 'branch') {\n      this.selectOptions.branches = [];\n      this.selectOptions.agents = [];\n      this.createFormGroup.controls['branchId'].setValue('');\n      this.createFormGroup.controls['agentId'].setValue('');\n      if (ev) {\n        this.clusterName = ev.name;\n        await this.exportService.getOfficeHirearchy(ev.id, '05').toPromise().then(async (res: any) => {\n          if (res) {\n            this.selectOptions.branches = res\n          }\n        });\n      } else {\n        this.clusterName = null;\n        this.createFormGroup.value.clusterId = '';\n        this.createFormGroup.value.branchId = '';\n        this.createFormGroup.value.agentId = '';\n      }\n    }\n\n    if (type == 'agent') {\n      this.selectOptions.agents = [];\n      this.createFormGroup.controls['agentId'].setValue('');\n      if (ev) {\n        this.branchName = ev.name\n        await this.exportService.getAgentOffice(ev.id).toPromise().then(async (res: any) => {\n          if (res) {\n            this.selectOptions.agents = res\n          }\n        });\n      } else {\n        this.branchName = null;\n        this.createFormGroup.value.branchId = '';\n        this.createFormGroup.value.agentId = '';\n      }\n    }\n\n    if (type == 'office') {\n      if (ev) {\n        this.agentName = ev.agentName\n      } else {\n        this.agentName = null\n        this.createFormGroup.value.agentId = '';\n      }\n    }\n    this.cdf.detectChanges()\n  }\n\n\n  loadForm() {\n    this.createFormGroup = new FormGroup({\n      \"fromDate\": new FormControl('', [Validators.required, Validators.nullValidator]),\n      \"toDate\": new FormControl('', [Validators.required, Validators.nullValidator]),\n      \"agentId\": new FormControl(''),\n      \"companyId\": new FormControl(''),\n      \"channelId\": new FormControl(''),\n      \"regionId\": new FormControl(''),\n      \"clusterId\": new FormControl(''),\n      \"branchId\": new FormControl('')\n    });\n  }\n\n  isControlValid(controlName: string): boolean {\n    const control = this.createFormGroup.controls[controlName];\n    return control.valid && (control.dirty || control.touched);\n  }\n\n  isControlInvalid(controlName: string): boolean {\n    const control = this.createFormGroup.controls[controlName];\n    return control.invalid && (control.dirty || control.touched);\n  }\n\n  controlHasError(validation, controlName): boolean {\n    const control = this.createFormGroup.controls[controlName];\n    return control.hasError(validation) && (control.dirty || control.touched);\n  }\n\n  isControlTouched(controlName): boolean {\n    const control = this.createFormGroup.controls[controlName];\n    return control.dirty || control.touched;\n  }\n\n  doValid(type) { \n    if (type == 'FromDate') {\n      let fromDateValue = moment(this.createFormGroup.controls['fromDate'].value).format('YYYY-MM-DD');\n      let toDateValue = moment(this.createFormGroup.controls['toDate'].value).format('YYYY-MM-DD');\n      if (toDateValue) {\n        let formDateSplit = fromDateValue.split(\"-\");\n        let toDateSplit = toDateValue.split(\"-\");\n        let diffYear = Number(toDateSplit[0]) - Number(formDateSplit[0]);\n        if (diffYear != 0 && diffYear != 1) {\n          this.createFormGroup.controls['toDate'].setValue('');\n        }\n      }\n      if (fromDateValue) {\n        var toDate = new Date(fromDateValue);\n        toDate.setFullYear(toDate.getFullYear() + 1);\n        toDate.setDate(toDate.getDate() - 1);\n        this.fromMinDate = new Date(fromDateValue);\n        this.fromMaxDate = toDate;\n      }\n    }\n    if (type == 'ToDate') {\n      let fromDateValue = moment(this.createFormGroup.controls['fromDate'].value).format('YYYY-MM-DD');\n      let toDateValue = moment(this.createFormGroup.controls['toDate'].value).format('YYYY-MM-DD');\n      if (fromDateValue) {\n        let formDateSplit = fromDateValue.split(\"-\");\n        let toDateSplit = toDateValue.split(\"-\");\n        let diffYear = Number(toDateSplit[0]) - Number(formDateSplit[0]);\n        if (diffYear != 0 && diffYear != 1) {\n          this.createFormGroup.controls['fromDate'].setValue('');\n        }\n      }\n\n      if (toDateValue) {\n        var fromDate = new Date(toDateValue);\n        fromDate.setFullYear(fromDate.getFullYear() - 1);\n        fromDate.setDate(fromDate.getDate() + 1);\n        this.fromMinDate =  fromDate;\n        this.fromMaxDate = new Date(toDateValue);\n      }\n    }\n    this.cdf.detectChanges();\n  }\n\n\n  clearDate(type) {\n    this.fromMinDate = null;\n    this.fromMaxDate = null;\n    if (type == 'FromDate') {\n      this.createFormGroup.controls['fromDate'].setValue('');\n    }\n    if (type == 'ToDate') {\n      this.createFormGroup.controls['toDate'].setValue('');\n    }\n    this.displayList = [];\n\n    this.selectOptions.channels = [];\n    this.selectOptions.regions = [];\n    this.selectOptions.cluster = [];\n    this.selectOptions.branches = [];\n    this.selectOptions.agents = [];\n    this.createFormGroup.controls['companyId'].setValue('');\n    this.createFormGroup.controls['channelId'].setValue('');\n    this.createFormGroup.controls['regionId'].setValue('');\n    this.createFormGroup.controls['clusterId'].setValue('');\n    this.createFormGroup.controls['branchId'].setValue('');\n    this.createFormGroup.controls['agentId'].setValue('');\n  }\n\n  formatDateDDMMYYY(date) {\n    var d = new Date(date),\n      month = '' + (d.getMonth() + 1),\n      day = '' + d.getDate(),\n      year = d.getFullYear();\n    if (month.length < 2)\n      month = '0' + month;\n    if (day.length < 2)\n      day = '0' + day;\n    return [day, month, year].join('/');\n  }\n\n  mathRoundTo(num: number, places: number) {\n    const factor = 10 ** places;\n    return (Math.round(num * factor) / factor).toLocaleString();\n  };\n\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule, DatePipe } from '@angular/common';\nimport { ReportMonthlySalesAnalysisByBranchComponent } from './report-monthly-sales-analysis-by-branch.component';\nimport { RouterModule } from '@angular/router';\nimport { CRUDTableModule } from 'src/app/_metronic/shared/crud-table';\nimport { InlineSVGModule } from 'ng-inline-svg';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { NgSelectModule } from '@ng-select/ng-select';\nimport { NgbDatepickerModule } from '@ng-bootstrap/ng-bootstrap';\nimport { NgApexchartsModule } from 'ng-apexcharts';\nimport { MatDatepickerModule } from '@angular/material/datepicker';\nimport { DateAdapter, MatNativeDateModule, MAT_DATE_FORMATS, MAT_DATE_LOCALE } from '@angular/material/core';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MomentDateAdapter } from '@angular/material-moment-adapter';\nimport { MY_FORMATS, MY_MONTH_YEAR_FORMATS } from 'src/app/core/is-json';\n\n\n\n@NgModule({\n  declarations: [ReportMonthlySalesAnalysisByBranchComponent],\n  imports: [\n    CommonModule,\n    FormsModule,\n    NgSelectModule,\n    ReactiveFormsModule,\n    InlineSVGModule,\n    CRUDTableModule,\n    NgbDatepickerModule,\n    NgApexchartsModule,\n    MatDatepickerModule,\n    MatNativeDateModule,\n    MatInputModule,\n    MatFormFieldModule,\n    RouterModule.forChild([\n      {\n        path: '',\n        component: ReportMonthlySalesAnalysisByBranchComponent,\n      },\n    ]),\n  ],\n  providers: [DatePipe,{provide: DateAdapter, useClass: MomentDateAdapter, deps: [MAT_DATE_LOCALE]},\n  {provide: MAT_DATE_FORMATS, useValue: MY_MONTH_YEAR_FORMATS}]\n})\nexport class ReportMonthlySalesAnalysisByBranchModule { }\n","export default \"<div class=\\\"row\\\">\\n    <div class=\\\"col-12\\\">\\n        <div class=\\\"card card-custom gutter-b\\\">\\n            <div class=\\\"card-header\\\">\\n                <div class=\\\"card-title\\\">\\n                    <h3 class=\\\"card-label left-border-image\\\">{{ title }}</h3>\\n                </div>\\n                <div class=\\\"card-toolbar\\\">\\n                    <button type=\\\"button\\\" class=\\\"btn btn-primary ml-2\\\" style=\\\"min-width: 50px;\\\" (click)=\\\"getAllReports()\\\">\\n                        <span class=\\\"flaticon2-magnifier-tool search-tool\\\"></span>\\n                    </button>\\n                    <button type=\\\"button\\\" [disabled]=\\\"!isData\\\" (click)=\\\"generateReportExcel()\\\" class=\\\"btn btn-primary ml-2\\\" style=\\\"min-width: 50px;\\\">\\n                        <span class=\\\"\\\">Generate</span>\\n                    </button>\\n                    <button type=\\\"button\\\" (click)=\\\"cancelReport()\\\" class=\\\"btn btn-primary ml-2\\\" style=\\\"min-width: 50px;\\\">\\n                        <span class=\\\"\\\">Cancel</span>\\n                    </button>\\n                </div>\\n            </div>\\n            <div class=\\\"card-body px-10 py-3\\\">\\n                <form action=\\\"#\\\" class=\\\"form\\\" [formGroup]=\\\"createFormGroup\\\">\\n                    <div class=\\\"row\\\" style=\\\"align-items: center;\\\">\\n                        <div class=\\\"col-sm-6 from-date\\\">\\n                            <div class=\\\"form-group row\\\">\\n                                <label class=\\\"col-sm-4 col-form-label\\\">From Month/Year</label>\\n                                <div class=\\\"col-sm-6 input-date\\\">\\n                                    <input type=\\\"text\\\" readonly class=\\\"form-control form-control-sm\\\" formControlName=\\\"fromDate\\\" [min]=\\\"fromMinDate\\\" [max]=\\\"fromMaxDate\\\" [matDatepicker]=\\\"picker1\\\" (dateChange)=\\\"doValid('FromDate')\\\" autocomplete=\\\"off\\\">\\n                                    <mat-datepicker-toggle matSuffix [for]=\\\"picker1\\\"></mat-datepicker-toggle>\\n                                    <mat-datepicker #picker1 disabled=\\\"false\\\"></mat-datepicker>\\n                                </div>\\n                                <button type=\\\"button\\\" style=\\\"margin: 0 !important;\\\" (click)=\\\"clearDate('FromDate')\\\" class=\\\"btn btn-primary btn-elevate mx-2\\\">Clear</button>\\n                            </div>\\n                        </div>\\n                        <div class=\\\"col-sm-6 from-date\\\">\\n                            <div class=\\\"form-group row\\\">\\n                                <label class=\\\"col-sm-4 col-form-label\\\">To Month/Year</label>\\n                                <div class=\\\"col-sm-6 input-date\\\">\\n                                    <input type=\\\"text\\\" readonly class=\\\"form-control form-control-sm\\\" formControlName=\\\"toDate\\\" [min]=\\\"fromMinDate\\\" [max]=\\\"fromMaxDate\\\" [matDatepicker]=\\\"picker\\\" (dateChange)=\\\"doValid('ToDate')\\\" autocomplete=\\\"off\\\">\\n                                    <mat-datepicker-toggle matSuffix [for]=\\\"picker\\\"></mat-datepicker-toggle>\\n                                    <mat-datepicker #picker disabled=\\\"false\\\"></mat-datepicker>\\n                                </div>\\n                                <button type=\\\"button\\\" style=\\\"margin: 0 !important;\\\" (click)=\\\"clearDate('ToDate')\\\" class=\\\"btn btn-primary btn-elevate mx-2\\\">Clear</button>\\n                            </div>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"row\\\" style=\\\"align-items: center;\\\" *ngIf=\\\"createFormGroup.value.fromDate != '' && createFormGroup.value.toDate != '' \\\">\\n                        <div class=\\\"col-sm-6\\\" *ngIf=\\\"createFormGroup.value.fromDate != '' && createFormGroup.value.toDate != '' \\\">\\n                            <div class=\\\"form-group row\\\">\\n                                <label class=\\\"col-sm-4 col-form-label\\\">Company</label>\\n                                <div class=\\\"col-sm-8\\\">\\n                                    <ng-select class=\\\"ng-custom-select\\\" placeholder=\\\"Please Select\\\" (change)=\\\"changeOptions($event, 'channel')\\\" [items]=\\\"selectOptions.companies\\\" bindLabel=\\\"name\\\" bindValue=\\\"id\\\" formControlName=\\\"companyId\\\">\\n                                    </ng-select>\\n                                </div>\\n                            </div>\\n                        </div>\\n                        <div class=\\\"col-sm-6\\\">\\n                            <div class=\\\"form-group row\\\">\\n                                <label class=\\\"col-sm-4 col-form-label\\\">Channel</label>\\n                                <div class=\\\"col-sm-8\\\">\\n                                    <ng-select [readonly]=\\\"selectOptions.channels.length == 0 \\\" class=\\\"ng-custom-select\\\" placeholder=\\\"Please Select\\\" (change)=\\\"changeOptions($event, 'region')\\\" [items]=\\\"selectOptions.channels\\\" bindLabel=\\\"name\\\" bindValue=\\\"id\\\" formControlName=\\\"channelId\\\">\\n                                    </ng-select>\\n                                </div>\\n                            </div>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"row\\\" style=\\\"align-items: center;\\\" *ngIf=\\\"createFormGroup.value.fromDate != '' && createFormGroup.value.toDate != '' \\\">\\n                        <div class=\\\"col-sm-6\\\">\\n                            <div class=\\\"form-group row\\\">\\n                                <label class=\\\"col-sm-4 col-form-label\\\">Region</label>\\n                                <div class=\\\"col-sm-8\\\">\\n                                    <ng-select [readonly]=\\\"selectOptions.regions.length == 0 \\\" class=\\\"ng-custom-select\\\" placeholder=\\\"Please Select\\\" (change)=\\\"changeOptions($event, 'cluster')\\\" [items]=\\\"selectOptions.regions\\\" bindLabel=\\\"name\\\" bindValue=\\\"id\\\" formControlName=\\\"regionId\\\">\\n                                    </ng-select>\\n                                </div>\\n                            </div>\\n                        </div>\\n                        <div class=\\\"col-sm-6\\\">\\n                            <div class=\\\"form-group row\\\">\\n                                <label class=\\\"col-sm-4 col-form-label\\\">Cluster</label>\\n                                <div class=\\\"col-sm-8\\\">\\n                                    <ng-select [readonly]=\\\"selectOptions.cluster.length == 0 \\\" class=\\\"ng-custom-select\\\" placeholder=\\\"Please Select\\\" (change)=\\\"changeOptions($event, 'branch')\\\" [items]=\\\"selectOptions.cluster\\\" bindLabel=\\\"name\\\" bindValue=\\\"id\\\" formControlName=\\\"clusterId\\\">\\n                                    </ng-select>\\n                                </div>\\n                            </div>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"row\\\" style=\\\"align-items: center;\\\" *ngIf=\\\"createFormGroup.value.fromDate != '' && createFormGroup.value.toDate != '' \\\">\\n                        <div class=\\\"col-sm-6\\\">\\n                            <div class=\\\"form-group row\\\">\\n                                <label class=\\\"col-sm-4 col-form-label\\\">Branch</label>\\n                                <div class=\\\"col-sm-8\\\">\\n                                    <ng-select [readonly]=\\\"selectOptions.branches.length == 0 \\\" class=\\\"ng-custom-select\\\" placeholder=\\\"Please Select\\\" (change)=\\\"changeOptions($event, 'agent')\\\" [items]=\\\"selectOptions.branches\\\" bindLabel=\\\"name\\\" bindValue=\\\"id\\\" formControlName=\\\"branchId\\\">\\n                                    </ng-select>\\n                                </div>\\n                            </div>\\n                        </div>\\n                        <div class=\\\"col-sm-6\\\">\\n                            <div class=\\\"form-group row\\\">\\n                                <label class=\\\"col-sm-4 col-form-label\\\">Agent Name</label>\\n                                <div class=\\\"col-sm-8\\\">\\n                                    <ng-select [readonly]=\\\"selectOptions.agents.length == 0 \\\" class=\\\"ng-custom-select\\\" placeholder=\\\"Please Select\\\" (change)=\\\"changeOptions($event, 'office')\\\" [items]=\\\"selectOptions.agents\\\" bindLabel=\\\"agentName\\\" bindValue=\\\"agentId\\\" formControlName=\\\"agentId\\\">\\n                                    </ng-select>\\n                                </div>\\n                            </div>\\n                        </div>\\n                    </div>\\n                </form>\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n\\n<div class=\\\"row\\\" *ngIf=\\\"isData\\\">\\n    <div class=\\\"col-12\\\">\\n        <div style=\\\"width: 100%;\\n        overflow: hidden; position: relative;\\\">\\n            <div style=\\\"width: 30%;float: left; position: relative;\\\">\\n                <br *ngIf=\\\"createFormGroup.value.companyId\\\">\\n                <br *ngIf=\\\"createFormGroup.value.clusterId\\\">\\n                <h3 class=\\\"card-label left-border-image\\\" style=\\\"font-size: 1.15rem;\\\">{{ title }}</h3>\\n            </div>\\n            <div style=\\\"width: 30%; float: left; position: relative;\\\">\\n                <br *ngIf=\\\"createFormGroup.value.companyId\\\">\\n                <br *ngIf=\\\"createFormGroup.value.clusterId\\\">\\n                <div class=\\\"date-display\\\">\\n                    <span *ngIf=\\\"createFormGroup.value.fromDate\\\">From Month/Year: {{\\n                        createFormGroup.value.fromDate | date: 'MM/yyyy' }} </span>\\n                    <span *ngIf=\\\"createFormGroup.value.toDate\\\">To Month/Year: {{\\n                        createFormGroup.value.toDate | date: 'MM/yyyy' }}</span>\\n                </div>\\n            </div>\\n            <div class=\\\"search-display\\\">\\n                <div *ngIf=\\\"createFormGroup.value.companyId != '' || \\n                createFormGroup.value.channelId !='' || createFormGroup.value.regionId != '' \\\">\\n                    <span *ngIf=\\\"createFormGroup.value.companyId\\\">Company: {{ companyName }} </span>\\n                    <span *ngIf=\\\"createFormGroup.value.channelId\\\">Channel: {{ channelName }} </span>\\n                    <span *ngIf=\\\"createFormGroup.value.regionId\\\">Region: {{ regionName }} </span>\\n                </div>\\n                <div *ngIf=\\\"createFormGroup.value.clusterId != '' || \\n                createFormGroup.value.branchId !='' || createFormGroup.value.agentId !='' \\\">\\n                    <span *ngIf=\\\"createFormGroup.value.clusterId\\\">Cluster: {{ clusterName }} </span>\\n                    <span *ngIf=\\\"createFormGroup.value.branchId\\\">Branch: {{ branchName }}</span>\\n                    <span *ngIf=\\\"createFormGroup.value.agentId\\\">Agent: {{ agentName }} </span>\\n                </div>\\n            </div>\\n        </div>\\n        <div style=\\\"width: 100%;\\n        overflow-y: scroll;\\n        overflow-x: scroll;\\n        max-height: 500px;\\\">\\n            <table border=\\\"1\\\">\\n                <tr>\\n                    <th>Agent Name</th>\\n                    <th>Branch Name</th>\\n                    <th>Activities</th>\\n                    <th>Month Actual against Target</th>\\n                    <th>Month Conversion to Prospect</th>\\n                    <th>Month Conversion to Previous Stage</th>\\n                    <th>Month Expected Target Conversion</th>\\n                    <th>Month Expected Target Conversion to Prospects</th>\\n                </tr>\\n                <tr *ngFor=\\\"let data of displayList; let i = index\\\">\\n                    <td class=\\\"text-left\\\">{{ data.agentName }}</td>\\n                    <td class=\\\"text-left\\\">{{ data.branchName }}</td>\\n                    <td class=\\\"text-left\\\">{{ data.activityName }}</td>\\n                    <td class=\\\"text-right\\\">{{ (data.monthActualAgainstTarge || 0) | number:'1.2-2' }}</td>\\n                    <td class=\\\"text-right\\\">{{ (data.monthConversionToProspect || 0) | number:'1.2-2' }}</td>\\n                    <td class=\\\"text-right\\\">{{ (data.monthConversionToPreviousStage || 0) | number:'1.2-2' }}</td>\\n                    <td class=\\\"text-right\\\">{{ (data.monthExpectedTargetConversion || 0) | number:'1.2-2' }}</td>\\n                    <td class=\\\"text-right\\\">{{ (data.monthExpectedTargetConversionToProspects || 0) | number:'1.2-2' }}\\n                    </td>\\n                </tr>\\n            </table>\\n        </div>\\n    </div>\\n</div>\\n\\n<div *ngIf=\\\"!isData\\\" style=\\\"color: gray; text-align: center;\\\"> There is no data </div>\";"],"names":[],"sourceRoot":"webpack:///"}