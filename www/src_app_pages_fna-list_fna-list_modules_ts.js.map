{"version":3,"file":"src_app_pages_fna-list_fna-list_modules_ts.js","mappings":"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","sources":["./src/app/pages/fna-list/fna-list-manage.service.ts","./src/app/pages/fna-list/fna-list.component.ts","./src/app/pages/fna-list/fna-list.modules.ts","./src/app/pages/fna-list/fna.list.const.ts"],"sourcesContent":["import { HttpClient } from \"@angular/common/http\";\nimport { Injectable } from \"@angular/core\";\nimport { BizOperationService } from \"src/app/core/biz.operation.service\";\nimport { environment } from \"src/environments/environment\";\n\nconst API_ADDON_URL = `${environment.apiUrl}/fna`;\n@Injectable({\n  providedIn: 'root'\n})\nexport class FANListService extends BizOperationService<any, number>{\n  constructor(protected httpClient: HttpClient) {\n    super(httpClient, API_ADDON_URL);\n  }\n\n  getAll() {\n    return this.httpClient.get(API_ADDON_URL);\n  }\n\n  getFNAAllByLeaId(leadId) {\n    return this.httpClient.get(API_ADDON_URL + '/' + leadId);\n  }\n}","import { ChangeDetectorRef, Component, OnInit, ViewChild } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\nimport { AuthService } from 'src/app/modules/auth';\nimport { AlertService } from 'src/app/modules/loading-toast/alert-model/alert.service';\nimport { MaterialTableViewComponent } from 'src/app/_metronic/shared/crud-table/components/material-table-view/material-table-view.component';\nimport { FANService } from '../fna-detail/fna-manage.service';\nimport { FANListService } from './fna-list-manage.service';\nimport { FnaTypeComponent } from './fna-type/fna-type.component';\nimport { FNAListCol, FNAListDisplayCol } from './fna.list.const';\n\n@Component({\n  selector: 'app-fna-list',\n  templateUrl: './fna-list.component.html',\n  styleUrls: ['./fna-list.component.scss']\n})\nexport class FnaListComponent implements OnInit {\n  @ViewChild(MaterialTableViewComponent) matTable: MaterialTableViewComponent;\n  ELEMENT_COL = FNAListCol;\n  displayedColumns = FNAListDisplayCol;\n  fnaList = [];\n  user: any = {};\n  indexObj: any;\n\n  constructor(private cdf: ChangeDetectorRef, private router: Router, private fnaService: FANService,\n    private fnaListService: FANListService, private authService: AuthService,\n    private modalService: NgbModal, private alertService: AlertService) { }\n\n  ngOnInit(): void {\n    this.user = this.authService.currentUserValue;\n    this.getAllFNA();\n  }\n\n  async actionBtn(event) {\n    this.fnaService.fnaUpdateProducts = [];\n    if (event.cmd == 'edit') {\n      this.indexObj = event.data;\n      this.createOrEdit('edit', event.data.id)\n    } else {\n      this.indexObj = null;\n      await this.delete(event.data.id)\n    }\n  }\n\n  displayFNAType() {\n    const modalRef = this.modalService.open(FnaTypeComponent, { size: 'xl', backdrop: false });\n    modalRef.componentInstance.type = 'modal'\n    modalRef.result.then(() => { }, (res) => {\n      if (res) {\n        if (res.fnaType == \"BPM\") {\n          this.router.navigate([\"/fna/fna-bram\"], { queryParams: { passValue: JSON.stringify({ res }) } })\n        }\n\n        if (res.fnaType == \"LPP\") {\n          this.router.navigate([\"/fna/fna-detail\"], { queryParams: { passValue: JSON.stringify(res) } })\n        }\n      }\n    });\n  }\n\n  async createOrEdit(data, id?: string) {\n    let passValue: any;\n    if (this.indexObj) {\n      passValue = {\n        conductedBy: this.indexObj.conductedBy,\n        createdAt: this.indexObj.createdAt,\n        createdBy: this.indexObj.createdBy,\n        customerId: this.indexObj.customerId,\n        updatedAt: this.indexObj.updatedAt,\n        fnaId: id,\n        type: 'type',\n        pageStatus: data\n      }\n    }\n    if (this.indexObj.fnaType == \"BPM\") {\n      this.router.navigate([\"/fna/fna-bram\"], { queryParams: { passValue: JSON.stringify(passValue) } })\n    } else {\n      this.router.navigate([\"/fna/fna-detail\"], { queryParams: { passValue: JSON.stringify(passValue) } })\n    }\n\n  }\n\n  async getAllFNA() {\n    await this.fnaListService.findAll().toPromise().then((res: any) => {\n      this.fnaList = [];\n      if (res) {\n        this.fnaList = res\n        for (var i = 0; i < this.fnaList.length; i++) {\n          this.fnaList[i].createdAt = this.convertDateFormatMMDDYYY(this.fnaList[i].createdAt);\n          this.fnaList[i].conductedBy = this.user.username;\n        }\n        this.cdf.detectChanges();\n        this.matTable.reChangeData();\n      }\n    })\n  }\n\n  async delete(id) {\n    this.alertService.activate('Are you sure want to delete?', 'Warning Message').then(async result => {\n      if (result) {\n        await this.fnaListService.delete(id).toPromise().then(async (res: any) => {\n          this.fnaList = this.fnaList.filter(data =>\n            data.id !== id);\n          this.cdf.detectChanges();\n          this.matTable.reChangeData();\n          this.alertService.activate('This record was deleted', 'Success Message').then(result => {\n           \n          });\n        });\n      }\n    });\n  }\n\n\n  convertDateFormatMMDDYYY(date) {\n    var today = new Date(date);\n    var dd = String(today.getDate()).padStart(2, '0');\n    var mm = String(today.getMonth() + 1).padStart(2, '0'); //January is 0!\n    var yyyy = today.getFullYear();\n    return mm + '/' + dd + '/' + yyyy;\n  }\n\n  convertDateFormatDDMMYYY(date) {\n    var today = new Date(date);\n    var dd = String(today.getDate()).padStart(2, '0');\n    var mm = String(today.getMonth() + 1).padStart(2, '0'); //January is 0!\n    var yyyy = today.getFullYear();\n    return dd + '/' + mm + '/' + yyyy;\n  }\n\n  isActive = false;\n\n  toggle() {\n    this.isActive = !this.isActive;\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule } from '@angular/router';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { InlineSVGModule } from 'ng-inline-svg';\nimport { CRUDTableModule } from '../../_metronic/shared/crud-table';\nimport { FnaListComponent } from './fna-list.component';\nimport { AuthService } from 'src/app/modules/auth';\nimport { LanguageModule } from 'src/app/modules/languages/languages.modules';\n\n\n\n@NgModule({\n  declarations: [FnaListComponent],\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    InlineSVGModule,\n    CRUDTableModule,\n    LanguageModule,\n    RouterModule.forChild([\n      {\n        path: '',\n        component: FnaListComponent,\n      },\n    ]),\n\n  ],\n  providers: [AuthService]\n})\nexport class FnaListModule { }\n","import { COLTYPE, TableCol } from '../../_metronic/shared/crud-table/components/material-table-view/table-dto'\nexport const FNAListCol: TableCol[] = [\n  {\n    title: \"Date\",\n    type: COLTYPE.FEILD,\n    field: \"createdAt\",\n    // amtFormat?: boolean,\n    // isTitle?: boolean\n    // isDate?: boolen\n  },\n  {\n    title: \"FNA Type\",\n    type: COLTYPE.FEILD,\n    field: \"fnaType\",\n    // amtFormat?: boolean,\n    // isTitle?: boolean\n    // isDate?: boolen\n  },\n  {\n    title: \"Conducted By\",\n    type: COLTYPE.FEILD,\n    field: \"conductedBy\",\n    // amtFormat?: boolean,\n    // isTitle?: boolean\n    // isDate?: boolen\n  },\n  {\n    title: \"Actions\",\n    type: COLTYPE.ACTION,\n    field: \"actions\",\n    btn: {\n      edit: true,\n      delete: true\n    }\n    // amtFormat?: boolean,\n    // isTitle?: boolean\n    // isDate?: boolen\n  },\n]\n\nexport const FNAListDisplayCol: string[] = [\n  \"createdAt\",\n  \"fnaType\",\n  \"conductedBy\",\n  \"actions\",\n]\n\n"],"names":[],"sourceRoot":"webpack:///"}