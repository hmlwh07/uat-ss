{"version":3,"file":"src_app_pages_fna-list_fna-list_modules_ts.js","mappings":"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","sources":["./src/app/pages/fna-list/fna-list.component.ts","./src/app/pages/fna-list/fna-list.modules.ts","./src/app/pages/fna-list/fna.list.const.ts","./src/app/pages/fna-list/fna-list.component.html"],"sourcesContent":["import { ChangeDetectorRef, Component, OnInit, ViewChild } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\r\nimport { AuthService } from 'src/app/modules/auth';\r\nimport { MaterialTableViewComponent } from 'src/app/_metronic/shared/crud-table/components/material-table-view/material-table-view.component';\r\nimport { FANService } from '../fna-detail/fna-manage.service';\r\nimport { FANListService } from './fna-list-manage.service';\r\nimport { FnaTypeComponent } from './fna-type/fna-type.component';\r\nimport { FNAListCol, FNAListDisplayCol } from './fna.list.const';\r\n\r\n@Component({\r\n  selector: 'app-fna-list',\r\n  templateUrl: './fna-list.component.html',\r\n  styleUrls: ['./fna-list.component.scss']\r\n})\r\nexport class FnaListComponent implements OnInit {\r\n  @ViewChild(MaterialTableViewComponent) matTable: MaterialTableViewComponent;\r\n  ELEMENT_COL = FNAListCol;\r\n  displayedColumns = FNAListDisplayCol;\r\n  fnaList = [];\r\n  user: any = {};\r\n  indexObj: any;\r\n\r\n  constructor(private cdf: ChangeDetectorRef, private router: Router, private fnaService: FANService,\r\n    private fnaListService: FANListService, private authService: AuthService, private modalService: NgbModal) { }\r\n\r\n  ngOnInit(): void {\r\n    this.user = this.authService.currentUserValue;\r\n    this.getAllFNA();\r\n  }\r\n\r\n  async actionBtn(event) {   \r\n    this.fnaService.fnaUpdateProducts = [];\r\n    if (event.cmd == 'edit') {\r\n      this.indexObj = event.data;\r\n      this.createOrEdit('edit', event.data.id)\r\n    } else {\r\n      this.indexObj = null;\r\n      await this.delete(event.data.id)\r\n    }\r\n  }\r\n\r\n  displayFNAType() {\r\n    const modalRef = this.modalService.open(FnaTypeComponent, { size: 'xl', backdrop: false });\r\n    modalRef.componentInstance.type = 'modal'\r\n    modalRef.result.then(() => { }, (res) => {\r\n      if (res) {\r\n        if (res.fnaType == \"BRAM\") {\r\n          this.router.navigate([\"/fna/fna-bram\"], { queryParams: { passValue: JSON.stringify({ res }) } })\r\n        }\r\n\r\n        if (res.fnaType == \"LPP\") {         \r\n          this.router.navigate([\"/fna/fna-detail\"], { queryParams: { passValue: JSON.stringify(res) } })\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  async createOrEdit(data, id?: string) {   \r\n    let passValue: any;\r\n    if (this.indexObj) {\r\n      passValue = {\r\n        conductedBy: this.indexObj.conductedBy,\r\n        createdAt: this.indexObj.createdAt,\r\n        createdBy: this.indexObj.createdBy,\r\n        customerId: this.indexObj.customerId,\r\n        updatedAt: this.indexObj.updatedAt,\r\n        fnaId: id,\r\n        type: 'type',\r\n        pageStatus: data\r\n      }\r\n    }\r\n    if(this.indexObj.fnaType == \"BRAM\"){\r\n      this.router.navigate([\"/fna/fna-bram\"], { queryParams: { passValue: JSON.stringify(passValue) } })\r\n    }else{\r\n      this.router.navigate([\"/fna/fna-detail\"], { queryParams: { passValue: JSON.stringify(passValue) } })\r\n    }\r\n  \r\n  }\r\n\r\n  async getAllFNA() {\r\n    await this.fnaListService.findAll().toPromise().then((res: any) => {\r\n      this.fnaList = [];\r\n      if (res) {\r\n        this.fnaList = res\r\n        for (var i = 0; i < this.fnaList.length; i++) {\r\n          this.fnaList[i].createdAt = this.convertDateFormatMMDDYYY(this.fnaList[i].createdAt);\r\n          this.fnaList[i].conductedBy = this.user.username;\r\n        }\r\n        this.cdf.detectChanges();\r\n        this.matTable.reChangeData();\r\n      }\r\n    })\r\n  }\r\n\r\n  async delete(id) {\r\n    await this.fnaListService.delete(id).toPromise().then(async (res: any) => {\r\n      this.fnaList = this.fnaList.filter(data =>\r\n        data.id !== id);\r\n      this.cdf.detectChanges();\r\n      this.matTable.reChangeData();\r\n    });\r\n  }\r\n\r\n\r\n  convertDateFormatMMDDYYY(date) {\r\n    var today = new Date(date);\r\n    var dd = String(today.getDate()).padStart(2, '0');\r\n    var mm = String(today.getMonth() + 1).padStart(2, '0'); //January is 0!\r\n    var yyyy = today.getFullYear();\r\n    return mm + '/' + dd + '/' + yyyy;\r\n  }\r\n\r\n  convertDateFormatDDMMYYY(date) {\r\n    var today = new Date(date);\r\n    var dd = String(today.getDate()).padStart(2, '0');\r\n    var mm = String(today.getMonth() + 1).padStart(2, '0'); //January is 0!\r\n    var yyyy = today.getFullYear();\r\n    return dd + '/' + mm + '/' + yyyy;\r\n  }\r\n\r\n  isActive = false;\r\n\r\n  toggle() {\r\n    this.isActive = !this.isActive;\r\n  }\r\n\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { RouterModule } from '@angular/router';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { InlineSVGModule } from 'ng-inline-svg';\r\nimport { CRUDTableModule } from '../../_metronic/shared/crud-table';\r\nimport { FnaListComponent } from './fna-list.component';\r\nimport { AuthService } from 'src/app/modules/auth';\r\n\r\n\r\n\r\n@NgModule({\r\n  declarations: [FnaListComponent],\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    InlineSVGModule,\r\n    CRUDTableModule,\r\n    RouterModule.forChild([\r\n      {\r\n        path: '',\r\n        component: FnaListComponent,\r\n      },\r\n    ]),\r\n\r\n  ],\r\n  providers: [AuthService]\r\n})\r\nexport class FnaListModule { }\r\n","import { COLTYPE, TableCol } from '../../_metronic/shared/crud-table/components/material-table-view/table-dto'\r\nexport const FNAListCol: TableCol[] = [\r\n  {\r\n    title: \"Date\",\r\n    type: COLTYPE.FEILD,\r\n    field: \"createdAt\",\r\n    // amtFormat?: boolean,\r\n    // isTitle?: boolean\r\n    // isDate?: boolen\r\n  },\r\n  {\r\n    title: \"FNA Type\",\r\n    type: COLTYPE.FEILD,\r\n    field: \"fnaType\",\r\n    // amtFormat?: boolean,\r\n    // isTitle?: boolean\r\n    // isDate?: boolen\r\n  },\r\n  {\r\n    title: \"Conducted By\",\r\n    type: COLTYPE.FEILD,\r\n    field: \"conductedBy\",\r\n    // amtFormat?: boolean,\r\n    // isTitle?: boolean\r\n    // isDate?: boolen\r\n  },\r\n  {\r\n    title: \"Actions\",\r\n    type: COLTYPE.ACTION,\r\n    field: \"actions\",\r\n    btn: {\r\n      edit: true,\r\n      delete: true\r\n    }\r\n    // amtFormat?: boolean,\r\n    // isTitle?: boolean\r\n    // isDate?: boolen\r\n  },\r\n]\r\n\r\nexport const FNAListDisplayCol: string[] = [\r\n  \"createdAt\",\r\n  \"fnaType\",\r\n  \"conductedBy\",\r\n  \"actions\",\r\n]\r\n\r\n","export default \"<div class=\\\"row\\\">\\r\\n    <div class=\\\"col-12\\\">\\r\\n        <div class=\\\"card card-custom gutter-b\\\">\\r\\n            <div class=\\\"card-header\\\">\\r\\n                <div class=\\\"card-title\\\">\\r\\n                    <h3 class=\\\"card-label left-border-image\\\">FNA List</h3>\\r\\n                </div>\\r\\n                <div class=\\\"card-toolbar\\\" style=\\\"position: relative;\\\">\\r\\n                    <button type=\\\"button\\\" class=\\\"btn btn-primary btn-circle\\\" (click)=\\\"displayFNAType()\\\">\\r\\n                        <span class=\\\"flaticon2-plus\\\"></span>\\r\\n                    </button>\\r\\n                    <!-- <div class=\\\"popover\\\" [class.active]=\\\"isActive\\\">\\r\\n                        <div (click)=\\\"displayFNA('LPP')\\\"><label>Create LPP</label></div>\\r\\n                        <div (click)=\\\"displayFNA('BRAM')\\\"><label>Create BRAM</label></div>\\r\\n                    </div> -->\\r\\n                </div>\\r\\n                <!-- (click)=\\\"createOrEdit('')\\\" -->\\r\\n            </div>\\r\\n            <div class=\\\"card-body customer-card-body\\\">\\r\\n                <app-material-table-view [data]=\\\"fnaList\\\" [colum]=\\\"ELEMENT_COL\\\" [displayedColumns]=\\\"displayedColumns\\\"\\r\\n                    (emitter)=\\\"actionBtn($event)\\\">\\r\\n                </app-material-table-view>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\";"],"names":[],"sourceRoot":"webpack:///"}