{"version":3,"file":"src_app_pages_renew-management-list_renew-management-list_module_ts.js","mappings":"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","sources":["./src/app/pages/renew-management-list/renew-manage.const.ts","./src/app/pages/renew-management-list/renew-management-list.component.ts","./src/app/pages/renew-management-list/renew-management-list.module.ts"],"sourcesContent":["import { COLTYPE, TableCol } from '../../_metronic/shared/crud-table/components/material-table-view/table-dto'\nexport const RenewCol: TableCol[] = [\n  {\n    title: \"Policy Number\",\n    type: COLTYPE.FEILD,\n    field: \"policyNumber\",\n    // amtFormat?: boolean,\n    // isTitle?: boolean\n    // isDate?: boolen\n  },\n \n  {\n    title: \"Product Code\",\n    type: COLTYPE.FEILD,\n    field: \"productCode\",\n    // amtFormat?: boolean,\n    // isTitle?: boolean\n    // isDate?: boolen\n  },\n  // {\n  //   title: \"Related Type\",\n  //   type: COLTYPE.FEILD,\n  //   field: \"relatedType\",\n  //   // amtFormat?: boolean,\n  //   isTitle: true\n  //   // isDate?: boolen\n  // },\n\n  {\n    title: \"Agent Name\",\n    type: COLTYPE.FEILD,\n    field: \"agentName\",\n    // amtFormat?: boolean,\n    // isTitle?: boolean\n    // isDate?: boolen\n  },\n  {\n    title: \"Premium\",\n    type: COLTYPE.FEILD,\n    field: \"premium\",\n    // isTitle?: boolean\n    amtFormat: true\n    // isDate?: boolen\n  },\n  {\n    title: \"Currency\",\n    type: COLTYPE.FEILD,\n    field: \"currency\",\n  },\n  {\n    title: \"Policy Inception Date\",\n    type: COLTYPE.FEILD,\n    field: \"policyInceptionDate\",\n  },\n  {\n    title: \"Policy Expiry Date\",\n    type: COLTYPE.FEILD,\n    field: \"policyExpiryDate\",\n  },\n  {\n    title: \"Status\",\n    type: COLTYPE.FEILD,\n    field: \"status\",\n    isRenewStatus: true,\n    // amtFormat?: boolean,\n    // isTitle?: boolean\n  },\n  {\n    title: \"Actions\",\n    type: COLTYPE.ACTION,\n    field: \"actions\",\n    btn: {\n      // edit: true,\n      confirm: true,\n      view: true,\n      download: true\n    }\n    // amtFormat?: boolean,\n    // isTitle?: boolean\n    // isDate?: boolen\n  },\n]\n\nexport const ActivityDisplayCol: string[] = [\n  \"policyNumber\",\n  // \"renewalPolicyNumber\",\n  \"productCode\",\n  \"agentName\",\n  \"premium\",\n  \"currency\",\n  \"policyInceptionDate\",\n  \"policyExpiryDate\",\n  \"status\",\n  \"actions\",\n]","import { ChangeDetectorRef, Component, OnInit, ViewChild } from '@angular/core';\nimport { FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { Capacitor } from '@capacitor/core';\nimport * as moment from 'moment';\nimport { of } from 'rxjs';\nimport { catchError, map, mergeMap } from \"rxjs/operators\";\nimport { LoadingService } from 'src/app/modules/loading-toast/loading/loading.service';\nimport { AttachmentDownloadService } from 'src/app/_metronic/core/services/attachment-data.service';\nimport { AlertService } from '../../modules/loading-toast/alert-model/alert.service';\nimport { MaterialTableViewComponent } from '../../_metronic/shared/crud-table/components/material-table-view/material-table-view.component';\nimport { ActivityStatus } from '../../_metronic/shared/crud-table/components/material-table-view/table-dto';\nimport { ProductDataService } from '../products/services/products-data.service';\nimport { RenewCol, ActivityDisplayCol } from './renew-manage.const';\nimport { RenewManageService } from './renew-manage.service';\n\n\n@Component({\n  selector: 'app-renew-management-list',\n  templateUrl: './renew-management-list.component.html',\n  styleUrls: ['./renew-management-list.component.scss']\n})\nexport class RenewManagementListComponent implements OnInit {\n  @ViewChild(MaterialTableViewComponent) matTable: MaterialTableViewComponent\n  ELEMENT_COL = RenewCol\n  displayedColumns = ActivityDisplayCol\n  renewList = [];\n  actForm: FormGroup;\n  isTeam: boolean = false;\n  activityStatus = ActivityStatus\n  productOption: any = []\n  statusOption:any=[\n    {code:'ACTIVE',value:'ACTIVE'},\n    {code:'CONFIRM',value:'CONFIRM'}\n  ]\n  product: any;\n  private downED = \"/attachment-downloader/tcs/fileName=\"\n  // private fileNameURL = \"attachment-downloader/tcs.htm?fileName=\"\n\n  constructor(private fb: FormBuilder, private router: Router, private cdf: ChangeDetectorRef,\n    private renewService: RenewManageService, private alertService: AlertService,\n    private loadingService: LoadingService,\n    private attachmentDownloadService: AttachmentDownloadService, private prodctService: ProductDataService) {\n    this.loadForm();\n  }\n\n  ngOnInit(): void {\n    this.getProduct()\n  }\n\n  ngAfterViewInit() {\n    this.getList()\n  }\n\n  cancel() {\n    this.actForm.reset();\n    this.getOneMonthAndRefresh();\n    this.getList();\n  }\n\n  loadForm() {\n    this.actForm = new FormGroup({\n      \"policyNumber\": new FormControl(\"\"),\n      \"policyHolder\": new FormControl(\"\"),\n      \"productCode\": new FormControl(\"\"),\n      startDate: new FormControl(\"\"),\n      endDate: new FormControl(\"\"),\n      isTeam: new FormControl(this.isTeam)\n    })\n  }\n\n  getOneMonthAndRefresh() {\n    let date = new Date();\n    let lastMonthDay = new Date(date.setMonth(date.getMonth() - 1))\n    let monthDay = new Date(date.setMonth(date.getMonth() + 1))\n    this.actForm.controls['startDate'].setValue(lastMonthDay.toISOString());\n    this.actForm.controls['endDate'].setValue(monthDay.toISOString());\n    this.actForm.controls.policyNumber.setValue(\"\");\n    this.actForm.controls.policyHolder.setValue(\"\");\n    this.actForm.controls.productCode.setValue(\"\");\n    this.actForm.controls.isTeam.setValue(this.isTeam);\n  }\n\n\n  getList() {\n    let searchValues = {\n      policyNumber: this.actForm.controls.policyNumber.value || \"\",\n      policyHolder: this.actForm.controls.policyHolder.value || \"\",\n      productCode: this.actForm.controls.productCode.value || \"\",\n      fromDate: this.actForm.controls.startDate.value != null ? moment(this.actForm.controls.startDate.value).format(\"YYYY-MM-DD\") : \"\",\n      toDate: this.actForm.controls.endDate.value != null ? moment(this.actForm.controls.endDate.value).format(\"YYYY-MM-DD\") : \"\",\n      isTeam: this.isTeam\n    }\n\n    this.renewService.getRenewList(searchValues).toPromise().then((res: any) => {\n      if (res) {\n\n        this.renewList = res\n\n        this.cdf.detectChanges()\n        this.matTable.reChangeData()\n      }\n    })\n  }\n\n  actionBtn(event) {\n    if (event.cmd == 'edit') {\n      this.navigateToDetail(event.data)\n    }\n    else if (event.cmd == 'view') {\n      this.navigateToDetail(event.data)\n    }\n    else if (event.cmd == \"confirm\") {\n      this.confirmRenew(event.data)\n    } else if (event.cmd == 'download') {\n      this.download(event.data.documentName);\n    }\n\n  }\n\n  // helpers for View\n  isControlValid(controlName: string): boolean {\n    const control = this.actForm.controls[controlName];\n    return control.valid && (control.dirty || control.touched);\n  }\n\n  isControlInvalid(controlName: string): boolean {\n    const control = this.actForm.controls[controlName];\n    return control.invalid && (control.dirty || control.touched);\n  }\n\n  controlHasError(validation, controlName): boolean {\n    const control = this.actForm.controls[controlName];\n    return control.hasError(validation) && (control.dirty || control.touched);\n  }\n\n  isControlTouched(controlName): boolean {\n    const control = this.actForm.controls[controlName];\n    return control.dirty || control.touched;\n  }\n\n  navigateToDetail(data) {\n    this.router.navigate([\"sales/renew-policy/detail\"], { queryParams: { data: JSON.stringify(data) } })\n  }\n\n  confirmRenew(data) {\n    if (data.status != 'confirm') {\n      this.alertService\n        .activate('Are you sure want to confirm?', 'Warning Message')\n        .then(async (result) => {\n          if (result) {\n            this.renewService\n              .confirmRenew(data.policyNumber)\n              .toPromise()\n              .then((res) => {\n                if (res) {\n                  console.log(res);\n\n                  this.alertService.activate(\n                    'This record was updated',\n                    'Success Message'\n                  );\n                  this.navigateToDetail(res);\n                }\n              });\n          }\n        });\n    }\n  }\n\n  async download(fileName: string) {\n    await this.loadingService.activate()\n    this.getFileExt(fileName).pipe(mergeMap((x) => {\n      let ext = x ? x.docExtension : \"pdf\"\n      return this.attachmentDownloadService.getFile(this.downED + fileName + \".\" + ext).pipe(map((x) => {\n        return { data: x, ext: ext }\n      }))\n    })).toPromise().then(async (res: any) => {\n      if (res) {\n        if (Capacitor.isNativePlatform()) {\n          this.attachmentDownloadService.mobileTCSDownload(fileName + \".\" + res.ext, res.data)\n        } else {\n          await this.loadingService.deactivate()\n          this.attachmentDownloadService.downloadTCSFile(res.data, fileName + \".\" + res.ext)\n        }\n      }\n      await this.loadingService.deactivate()\n    }).catch(async (err) => {\n      await this.loadingService.deactivate()\n    })\n  }\n\n  getFileExt(fileName) {\n    return this.attachmentDownloadService.get(this.downED + fileName).pipe(catchError(() => { return of(null) }))\n  }\n\n\n  getProduct() {\n    this.prodctService\n      .getAll('yes')\n      .toPromise()\n      .then((res: any) => {\n        if (res) {\n          this.product = res;\n          this.productOption = res.map((x) => {\n            return { code: x.code, value: x.name, type: x.type };\n          });\n          this.cdf.detectChanges();\n          // this.getProductOption()\n        }\n      });\n  }\n\n  clear(key) {\n    if (key == 'productCode') {\n      this.actForm.controls[key].setValue(null)\n    }\n  }\n\n  changeView(type) {\n    if (type == 'team') {\n      this.isTeam = true\n    }\n    else {\n      this.isTeam = false\n\n    }\n    this.actForm.controls.isTeam.setValue(this.isTeam)\n    this.cdf.detectChanges()\n    this.getList()\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule } from '@angular/router';\nimport { RenewManagementListComponent } from './renew-management-list.component';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { InlineSVGModule } from 'ng-inline-svg';\nimport { CRUDTableModule } from '../../_metronic/shared/crud-table';\nimport { NgSelectModule } from '@ng-select/ng-select';\nimport { LanguageModule } from 'src/app/modules/languages/languages.modules';\n\n\n\n@NgModule({\n  declarations: [RenewManagementListComponent],\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    InlineSVGModule,\n    CRUDTableModule,\n    NgSelectModule,\n    LanguageModule,\n    RouterModule.forChild([\n      {\n        path: '',\n        component: RenewManagementListComponent,\n      },\n    ]),\n\n  ]\n})\nexport class RenewManagementListModule { }\n"],"names":[],"sourceRoot":"webpack:///"}