{"version":3,"file":"src_app_pages_renew-management-list_renew-management-list_module_ts.js","mappings":"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","sources":["./src/app/pages/renew-management-list/renew-manage.const.ts","./src/app/pages/renew-management-list/renew-management-list.component.ts","./src/app/pages/renew-management-list/renew-management-list.module.ts"],"sourcesContent":["import { COLTYPE, TableCol } from '../../_metronic/shared/crud-table/components/material-table-view/table-dto'\r\nexport const RenewCol: TableCol[] = [\r\n  {\r\n    title: \"Policy Number\",\r\n    type: COLTYPE.FEILD,\r\n    field: \"policyNumber\",\r\n    // amtFormat?: boolean,\r\n    // isTitle?: boolean\r\n    // isDate?: boolen\r\n  },\r\n \r\n  {\r\n    title: \"Product Code\",\r\n    type: COLTYPE.FEILD,\r\n    field: \"productCode\",\r\n    // amtFormat?: boolean,\r\n    // isTitle?: boolean\r\n    // isDate?: boolen\r\n  },\r\n  // {\r\n  //   title: \"Related Type\",\r\n  //   type: COLTYPE.FEILD,\r\n  //   field: \"relatedType\",\r\n  //   // amtFormat?: boolean,\r\n  //   isTitle: true\r\n  //   // isDate?: boolen\r\n  // },\r\n\r\n  {\r\n    title: \"Agent Name\",\r\n    type: COLTYPE.FEILD,\r\n    field: \"agentName\",\r\n    // amtFormat?: boolean,\r\n    // isTitle?: boolean\r\n    // isDate?: boolen\r\n  },\r\n  {\r\n    title: \"Premium\",\r\n    type: COLTYPE.FEILD,\r\n    field: \"premium\",\r\n    // isTitle?: boolean\r\n    amtFormat: true\r\n    // isDate?: boolen\r\n  },\r\n  {\r\n    title: \"Currency\",\r\n    type: COLTYPE.FEILD,\r\n    field: \"currency\",\r\n  },\r\n  {\r\n    title: \"Policy Inception Date\",\r\n    type: COLTYPE.FEILD,\r\n    field: \"policyInceptionDate\",\r\n  },\r\n  {\r\n    title: \"Policy Expiry Date\",\r\n    type: COLTYPE.FEILD,\r\n    field: \"policyExpiryDate\",\r\n  },\r\n  {\r\n    title: \"Status\",\r\n    type: COLTYPE.FEILD,\r\n    field: \"status\",\r\n    isRenewStatus: true,\r\n    // amtFormat?: boolean,\r\n    // isTitle?: boolean\r\n  },\r\n  {\r\n    title: \"Actions\",\r\n    type: COLTYPE.ACTION,\r\n    field: \"actions\",\r\n    btn: {\r\n      // edit: true,\r\n      confirm: true,\r\n      view: true,\r\n      download: true\r\n    }\r\n    // amtFormat?: boolean,\r\n    // isTitle?: boolean\r\n    // isDate?: boolen\r\n  },\r\n]\r\n\r\nexport const ActivityDisplayCol: string[] = [\r\n  \"policyNumber\",\r\n  // \"renewalPolicyNumber\",\r\n  \"productCode\",\r\n  \"agentName\",\r\n  \"premium\",\r\n  \"currency\",\r\n  \"policyInceptionDate\",\r\n  \"policyExpiryDate\",\r\n  \"status\",\r\n  \"actions\",\r\n]","import { ChangeDetectorRef, Component, OnInit, ViewChild } from '@angular/core';\r\nimport { FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { Capacitor } from '@capacitor/core';\r\nimport * as moment from 'moment';\r\nimport { of } from 'rxjs';\r\nimport { catchError, map, mergeMap } from \"rxjs/operators\";\r\nimport { LoadingService } from 'src/app/modules/loading-toast/loading/loading.service';\r\nimport { AttachmentDownloadService } from 'src/app/_metronic/core/services/attachment-data.service';\r\nimport { AlertService } from '../../modules/loading-toast/alert-model/alert.service';\r\nimport { MaterialTableViewComponent } from '../../_metronic/shared/crud-table/components/material-table-view/material-table-view.component';\r\nimport { ActivityStatus } from '../../_metronic/shared/crud-table/components/material-table-view/table-dto';\r\nimport { RenewCol, ActivityDisplayCol } from './renew-manage.const';\r\nimport { RenewManageService } from './renew-manage.service';\r\n\r\n\r\n@Component({\r\n  selector: 'app-renew-management-list',\r\n  templateUrl: './renew-management-list.component.html',\r\n  styleUrls: ['./renew-management-list.component.scss']\r\n})\r\nexport class RenewManagementListComponent implements OnInit {\r\n  @ViewChild(MaterialTableViewComponent) matTable: MaterialTableViewComponent\r\n  ELEMENT_COL = RenewCol\r\n  displayedColumns = ActivityDisplayCol\r\n  renewList = [];\r\n  actForm: FormGroup;\r\n  isTeam: boolean = false;\r\n  activityStatus = ActivityStatus\r\n  private downED = \"attachment-downloader/tcs.htm?fileName=\"\r\n  private fileNameURL = \"attachment-downloader/tcs.htm?fileName=\"\r\n\r\n  constructor(private fb: FormBuilder, private router: Router, private cdf: ChangeDetectorRef,\r\n    private renewService: RenewManageService, private alertService: AlertService,\r\n    private loadingService: LoadingService,\r\n    private attachmentDownloadService: AttachmentDownloadService) {\r\n    this.loadForm();\r\n  }\r\n\r\n  ngOnInit(): void {\r\n\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    this.getList()\r\n  }\r\n\r\n  cancel() {\r\n    this.actForm.reset();\r\n    this.getOneMonthAndRefresh();\r\n    this.getList();\r\n  }\r\n\r\n  loadForm() {\r\n    this.actForm = new FormGroup({\r\n      \"policyNumber\": new FormControl(\"\"),\r\n      \"policyHolder\": new FormControl(\"\"),\r\n      \"productCode\": new FormControl(\"\"),\r\n      startDate: new FormControl(\"\"),\r\n      endDate: new FormControl(\"\"),\r\n      isTeam: new FormControl(this.isTeam)\r\n    })\r\n  }\r\n\r\n  getOneMonthAndRefresh() {\r\n    let date = new Date();\r\n    let lastMonthDay = new Date(date.setMonth(date.getMonth() - 1))\r\n    let monthDay = new Date(date.setMonth(date.getMonth() + 1))\r\n    this.actForm.controls['startDate'].setValue(lastMonthDay.toISOString());\r\n    this.actForm.controls['endDate'].setValue(monthDay.toISOString());\r\n    this.actForm.controls.policyNumber.setValue(\"\");\r\n    this.actForm.controls.policyHolder.setValue(\"\");\r\n    this.actForm.controls.productCode.setValue(\"\");\r\n    this.actForm.controls.isTeam.setValue(this.isTeam);\r\n  }\r\n\r\n\r\n  getList() {\r\n    let searchValues = {\r\n      policyNumber: this.actForm.controls.policyNumber.value || \"\",\r\n      policyHolder: this.actForm.controls.policyHolder.value || \"\",\r\n      productCode: this.actForm.controls.productCode.value || \"\",\r\n      fromDate: this.actForm.controls.startDate.value != null ? moment(this.actForm.controls.startDate.value).format(\"YYYY-MM-DD\") : \"\",\r\n      toDate: this.actForm.controls.endDate.value != null ? moment(this.actForm.controls.endDate.value).format(\"YYYY-MM-DD\") : \"\",\r\n      isTeam: this.isTeam\r\n    }\r\n\r\n    this.renewService.getRenewList(searchValues).toPromise().then((res: any) => {\r\n      if (res) {\r\n      \r\n        this.renewList = res\r\n        \r\n        this.cdf.detectChanges()\r\n        this.matTable.reChangeData()\r\n      }\r\n    })\r\n  }\r\n\r\n  actionBtn(event) {\r\n    if (event.cmd == 'edit') {\r\n      this.navigateToDetail(event.data)\r\n    }\r\n    else if (event.cmd == 'view') {\r\n      this.navigateToDetail(event.data)\r\n    }\r\n    else if (event.cmd == \"confirm\") {\r\n      this.confirmRenew(event.data)\r\n    } else if (event.cmd == 'download') {\r\n      this.download(event.data.documentName);\r\n    }\r\n\r\n  }\r\n\r\n  // helpers for View\r\n  isControlValid(controlName: string): boolean {\r\n    const control = this.actForm.controls[controlName];\r\n    return control.valid && (control.dirty || control.touched);\r\n  }\r\n\r\n  isControlInvalid(controlName: string): boolean {\r\n    const control = this.actForm.controls[controlName];\r\n    return control.invalid && (control.dirty || control.touched);\r\n  }\r\n\r\n  controlHasError(validation, controlName): boolean {\r\n    const control = this.actForm.controls[controlName];\r\n    return control.hasError(validation) && (control.dirty || control.touched);\r\n  }\r\n\r\n  isControlTouched(controlName): boolean {\r\n    const control = this.actForm.controls[controlName];\r\n    return control.dirty || control.touched;\r\n  }\r\n\r\n  navigateToDetail(data) {\r\n    this.router.navigate([\"sales/renew-policy/detail\"], { queryParams: { data: JSON.stringify(data) } })\r\n  }\r\n\r\n  confirmRenew(data) {\r\n    if (data.status != 'confirm') {\r\n      this.alertService\r\n        .activate('Are you sure want to confirm?', 'Warning Message')\r\n        .then(async (result) => {\r\n          if (result) {\r\n            this.renewService\r\n              .confirmRenew(data.policyNumber)\r\n              .toPromise()\r\n              .then((res) => {\r\n                if (res) {\r\n                  console.log(res);\r\n\r\n                  this.alertService.activate(\r\n                    'This record was updated',\r\n                    'Success Message'\r\n                  );\r\n                  this.navigateToDetail(res);\r\n                }\r\n              });\r\n          }\r\n        });\r\n    }\r\n  }\r\n\r\n  async download(fileName: string) {\r\n    await this.loadingService.activate()\r\n    this.getFileExt(fileName).pipe(mergeMap((x) => {\r\n      let ext = x ? x.docExtension : \"pdf\"\r\n      return this.attachmentDownloadService.getFile(this.downED + fileName + \".\" + ext).pipe(map((x) => {\r\n        return { data: x, ext: ext }\r\n      }))\r\n    })).toPromise().then(async (res: any) => {\r\n      if (res) {\r\n        if (Capacitor.isNativePlatform()) {\r\n          this.attachmentDownloadService.mobileTCSDownload(fileName + \".\" + res.ext, res.data)\r\n        } else {\r\n          await this.loadingService.deactivate()\r\n          this.attachmentDownloadService.downloadTCSFile(res.data, fileName + \".\" + res.ext)\r\n        }\r\n      }\r\n      await this.loadingService.deactivate()\r\n    }).catch(async (err) => {\r\n      await this.loadingService.deactivate()\r\n    })\r\n  }\r\n\r\n  getFileExt(fileName) {\r\n    return this.attachmentDownloadService.get(this.fileNameURL + fileName).pipe(catchError(() => { return of(null) }))\r\n  }\r\n\r\n  changeView(type) {\r\n    if (type == 'team') {\r\n      this.isTeam = true\r\n    }\r\n    else {\r\n      this.isTeam = false\r\n\r\n    }\r\n    this.actForm.controls.isTeam.setValue(this.isTeam)\r\n    this.cdf.detectChanges()\r\n    this.getList()\r\n  }\r\n\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { RouterModule } from '@angular/router';\r\nimport { RenewManagementListComponent } from './renew-management-list.component';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { InlineSVGModule } from 'ng-inline-svg';\r\nimport { CRUDTableModule } from '../../_metronic/shared/crud-table';\r\nimport { NgSelectModule } from '@ng-select/ng-select';\r\nimport { LanguageModule } from 'src/app/modules/languages/languages.modules';\r\n\r\n\r\n\r\n@NgModule({\r\n  declarations: [RenewManagementListComponent],\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    InlineSVGModule,\r\n    CRUDTableModule,\r\n    NgSelectModule,\r\n    LanguageModule,\r\n    RouterModule.forChild([\r\n      {\r\n        path: '',\r\n        component: RenewManagementListComponent,\r\n      },\r\n    ]),\r\n\r\n  ]\r\n})\r\nexport class RenewManagementListModule { }\r\n"],"names":[],"sourceRoot":"webpack:///"}