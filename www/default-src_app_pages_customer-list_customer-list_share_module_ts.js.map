{"version":3,"file":"default-src_app_pages_customer-list_customer-list_share_module_ts.js","mappings":"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","sources":["./src/app/pages/customer-list/customer-list.component.ts","./src/app/pages/customer-list/customer-list.const.ts","./src/app/pages/customer-list/customer-list.service.ts","./src/app/pages/customer-list/customer-list.share.module.ts"],"sourcesContent":["import { ChangeDetectorRef, Component, EventEmitter, Input, OnInit, Output, ViewChild } from '@angular/core';\nimport { FormControl, FormGroup } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { MaterialTableViewComponent } from 'src/app/_metronic/shared/crud-table/components/material-table-view/material-table-view.component';\nimport { CustomerCol, CustomerDisplayCol, IdentityType, Status } from './customer-list.const';\nimport { CustomerListService } from './customer-list.service';\n\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\nimport { MAT_DATE_FORMATS, DateAdapter, MAT_DATE_LOCALE } from '@angular/material/core';\nimport { MomentDateAdapter } from '@angular/material-moment-adapter';\nimport { MY_FORMATS } from '../../core/is-json';\nimport { CommonList2Component } from '../share-components/common-list/common-list.component';\n\n@Component({\n  selector: 'app-customer-list',\n  templateUrl: './customer-list.component.html',\n  styleUrls: ['./customer-list.component.scss'],\n  providers: [\n    { provide: DateAdapter, useClass: MomentDateAdapter, deps: [MAT_DATE_LOCALE] },\n    { provide: MAT_DATE_FORMATS, useValue: MY_FORMATS },\n  ]\n})\nexport class CustomerListComponent implements OnInit {\n  @ViewChild(CommonList2Component) commonList: CommonList2Component;\n  @ViewChild(MaterialTableViewComponent) matTable: MaterialTableViewComponent\n\n  ELEMENT_COL = JSON.parse(JSON.stringify(CustomerCol))\n  displayedColumns = JSON.parse(JSON.stringify(CustomerDisplayCol))\n\n  customerList: any[] = [];\n\n  statusOption = Status;\n  statusCustomOption=[{\n    code:\"A\",\n    value:\"Active\"\n  }]\n  identityTypeOption = IdentityType;\n\n  customerForm: FormGroup;\n  @Output() selectedUser = new EventEmitter();\n  @Input() isPopup: boolean = false\n  @Input() party: boolean = true\n  @Input() isDynamic: boolean = false\n  @Input() isCustom: boolean = false\n  show: boolean = false\n  constructor(\n    private router: Router,\n    private cdf: ChangeDetectorRef,\n    private customerListService: CustomerListService,\n    private modalService: NgbModal\n  ) {\n    this.loadForm();\n  }\n\n  ngOnInit(): void {\n    if (this.isPopup) {\n      this.ELEMENT_COL.splice(9, 1)\n      this.displayedColumns.splice(9, 1)\n    }\n    this.show = true\n  }\n\n  ngAfterViewInit() {\n\n    this.cancel()\n  }\n\n  loadForm() {\n    this.customerForm = new FormGroup({\n      \"name\": new FormControl(null),\n      \"phoneNo\": new FormControl(null),\n      \"identityType\": new FormControl(null),\n      \"identityNumber\": new FormControl(null),\n      \"statusCode\": new FormControl(null),\n      \"partyCode\": new FormControl(null),\n      \"startDate\": new FormControl(null),\n      \"endDate\": new FormControl(null),\n    });\n  }\n\n  navigateToDetail(data, id?: string, secondaryId?: string) {\n    this.router.navigate([\"/customer/customer-detail\"], {\n      queryParams: {\n        pageStatus: data,\n        pageId: id,\n        pageSecondaryId: secondaryId,\n        page: 'Customer'\n      }\n    })\n  }\n\n  searchCustomer() {\n    if (this.customerForm.controls.startDate.value != null ||\n      this.customerForm.controls.endDate.value != null ||\n      this.customerForm.controls.name.value != null ||\n      this.customerForm.controls.phoneNo.value != null ||\n      this.customerForm.controls.partyCode.value != null ||\n      this.customerForm.controls.statusCode.value != null ||\n      this.customerForm.controls.identityType.value != null ||\n      this.customerForm.controls.identityNumber.value != null) {\n      this.getList()\n    } else {\n      this.cancel()\n    }\n  }\n\n  getList() {\n    let check = this.isPopup && !this.isDynamic ? true : false\n    this.customerListService.getCustomerList(this.customerForm.value, this.party, check, this.isCustom)\n      .toPromise().then((res: any) => {\n        if (res) {\n          this.customerList = res\n          // console.log(\"customerList\", this.customerList);\n          this.cdf.detectChanges()\n          if (this.commonList)\n            this.commonList.detchChange()\n          if (this.matTable)\n            this.matTable.reChangeData()\n        }\n      })\n  }\n\n  get selected() {\n    let user\n    if (this.matTable) {\n      user = this.matTable.selection.selected[0]\n    }\n    return user ? user : { customerId: 0 }\n  }\n\n  rowSelected(event) {\n    this.selectedUser.emit(event)\n  }\n\n  cancel() {\n    this.customerForm.reset();\n    this.customerList = []\n  }\n\n  actionBtn(event) {\n    if (event.cmd == 'edit') {\n      this.navigateToDetail('edit', event.data.customerId, event.data.individualId)\n    }\n  }\n\n  //for view\n  isControlValid(controlName: string): boolean {\n    const control = this.customerForm.controls[controlName];\n    return control.valid && (control.dirty || control.touched);\n  }\n\n  isControlInvalid(controlName: string): boolean {\n    const control = this.customerForm.controls[controlName];\n    return control.invalid && (control.dirty || control.touched);\n  }\n\n  controlHasError(validation, controlName): boolean {\n    const control = this.customerForm.controls[controlName];\n    return control.hasError(validation) && (control.dirty || control.touched);\n  }\n\n  isControlTouched(controlName): boolean {\n    const control = this.customerForm.controls[controlName];\n    return control.dirty || control.touched;\n  }\n\n  nextProd() {\n    if (this.selected.customerId) {\n      this.modalService.dismissAll({ data: this.selected, type: \"save\" })\n    }\n  }\n  closeModal() {\n    this.modalService.dismissAll()\n  }\n\n}\n","import { COLTYPE, TableCol } from '../../_metronic/shared/crud-table/components/material-table-view/table-dto'\nexport const CustomerCol: TableCol[] = [\n  {\n    title: \"First Name\",\n    type: COLTYPE.FEILD,\n    field: \"firstName\"\n  },\n  {\n    title: \"Middle Name\",\n    type: COLTYPE.FEILD,\n    field: \"middleName\"\n  },\n  {\n    title: \"Last Name\",\n    type: COLTYPE.FEILD,\n    field: \"lastName\"\n  },\n\n  {\n    title: \"Party Code\",\n    type: COLTYPE.FEILD,\n    field: \"partyCode\"\n  },\n  {\n    title: \"ID Type\",\n    type: COLTYPE.FEILD,\n    field: \"identityType\",\n  },\n  {\n    title: \"ID No.\",\n    type: COLTYPE.FEILD,\n    field: \"identityNumber\",\n  },\n  {\n    title: \"Date of Birth\",\n    type: COLTYPE.FEILD,\n    field: \"dateOfBirth\",\n    isFromatDate: true\n  },\n  {\n    title: \"Father Name\",\n    type: COLTYPE.FEILD,\n    field: \"fatherName\"\n  },\n  {\n    title: \"Status\",\n    type: COLTYPE.FEILD,\n    field: \"statusCode\",\n    isCustomerStatus: true\n  },\n  {\n    title: \"Actions\",\n    type: COLTYPE.ACTION,\n    field: \"actions\",\n    btn: {\n      edit: true\n    }\n  },\n]\n\nexport const CustomerDisplayCol: string[] = [\n  \"firstName\",\n  \"middleName\",\n  \"lastName\",\n  \"partyCode\",\n  \"identityType\",\n  \"identityNumber\",\n  \"dateOfBirth\",\n  \"fatherName\",\n  \"statusCode\",\n  \"actions\",\n]\n\nexport const Status: any[] = [\n  {\n    code : \"A\",\n    value : \"Active\"\n  },{\n    code : \"I\",\n    value : \"Inactive\"\n  },{\n    code : \"T\",\n    value : \"Terminated\"\n  }\n]\n\nexport const IdentityType: any[] = [\n  {\n    code : \"NRC\",\n    value : \"NRC\"\n  },{\n    code : \"FRC\",\n    value : \"FRC\"\n  },{\n    code : \"PASSPORT\",\n    value : \"Passport\"\n  },{\n    code : \"OTHERS\",\n    value : \"Others\"\n  }\n]","import { HttpClient } from \"@angular/common/http\";\nimport { Injectable } from \"@angular/core\";\nimport * as moment from \"moment\";\nimport { environment } from \"../../../environments/environment\";\n\nconst API_CUSTOMER_URL = `${environment.apiUrl}/customer`;\n@Injectable({\n  providedIn: 'root'\n})\nexport class CustomerListService {\n  constructor(protected httpClient: HttpClient) {\n  }\n\n  getCustomerList(search: any = {}, party: boolean, popup: boolean, isCustom?: boolean) {\n    let url = API_CUSTOMER_URL + \"?\"\n    if (search.name) {\n      url = url + \"name=\" + search.name + \"&\"\n    }\n    if (search.phoneNo) {\n      url = url + \"phoneNo=\" + search.phoneNo + \"&\"\n    }\n    if (search.partyCode) {\n      url = url + \"partyCode=\" + search.partyCode + \"&\"\n    }\n    if (search.startDate) {\n      url = url + \"startDate=\" + moment(search.startDate).format(\"YYYY-MM-DD\") + \"&\"\n    }\n    if (search.endDate) {\n      url = url + \"endDate=\" + moment(search.endDate).format(\"YYYY-MM-DD\") + \"&\"\n    }\n    if (search.statusCode) {\n      url = url + \"statusCode=\" + search.statusCode + \"&\"\n    }\n    if (search.identityType) {\n      url = url + \"identityType=\" + search.identityType + \"&\"\n    }\n    if (search.identityNumber) {\n      url = url + \"identityNumber=\" + search.identityNumber + \"&\"\n    }\n    if (!isCustom) {\n      url = url + \"isPartyCode=\" + party\n    }\n   \n    return this.httpClient.get(url)\n  }\n}","import { NgModule, Optional, SkipSelf } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule } from '@angular/router';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { InlineSVGModule } from 'ng-inline-svg';\nimport { CRUDTableModule } from '../../_metronic/shared/crud-table';\nimport { CustomerListComponent } from './customer-list.component';\nimport { NgSelectModule } from '@ng-select/ng-select';\nimport { LanguageModule } from 'src/app/modules/languages/languages.modules';\n\n\nimport { ShareComponentModule } from '../share-components/share-component.module';\nimport { throwIfAlreadyLoaded } from 'src/app/modules/loading-toast/module-import-guard';\nimport { NgbActiveModal } from '@ng-bootstrap/ng-bootstrap';\n\n@NgModule({\n  declarations: [CustomerListComponent],\n  exports: [CustomerListComponent],\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    InlineSVGModule,\n    CRUDTableModule,\n    NgSelectModule,\n    LanguageModule,\n    ShareComponentModule\n  ],\n  providers: [NgbActiveModal]\n})\nexport class CustomerListShareModule {\n  constructor(@Optional() @SkipSelf() parentModule: CustomerListShareModule) {\n    throwIfAlreadyLoaded(parentModule, 'CustomerListShareModule')\n  }\n}\n"],"names":[],"sourceRoot":"webpack:///"}