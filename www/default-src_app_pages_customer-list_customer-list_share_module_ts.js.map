{"version":3,"file":"default-src_app_pages_customer-list_customer-list_share_module_ts.js","mappings":"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","sources":["./src/app/pages/customer-list/customer-list.component.ts","./src/app/pages/customer-list/customer-list.const.ts","./src/app/pages/customer-list/customer-list.service.ts","./src/app/pages/customer-list/customer-list.share.module.ts","./src/app/pages/customer-list/customer-list.component.html"],"sourcesContent":["import { ChangeDetectorRef, Component, EventEmitter, Input, OnInit, Output, ViewChild } from '@angular/core';\nimport { FormControl, FormGroup } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { MaterialTableViewComponent } from 'src/app/_metronic/shared/crud-table/components/material-table-view/material-table-view.component';\nimport { CustomerCol, CustomerDisplayCol, IdentityType, Status } from './customer-list.const';\nimport { CustomerListService } from './customer-list.service';\n\nimport { NgbDateAdapter, NgbDateParserFormatter, NgbModal } from '@ng-bootstrap/ng-bootstrap';\nimport { CustomAdapter, CustomDateParserFormatter } from '../../_metronic/core';\nimport { MAT_DATE_FORMATS, DateAdapter, MAT_DATE_LOCALE } from '@angular/material/core';\nimport { MAT_MOMENT_DATE_FORMATS, MomentDateAdapter } from '@angular/material-moment-adapter';\nimport { MY_FORMATS } from '../../core/is-json';\n\n@Component({\n  selector: 'app-customer-list',\n  templateUrl: './customer-list.component.html',\n  styleUrls: ['./customer-list.component.scss'],\n  providers: [\n    { provide: NgbDateAdapter, useClass: CustomAdapter },\n    { provide: NgbDateParserFormatter, useClass: CustomDateParserFormatter },\n    // { provide: MAT_DATE_FORMATS, useValue: MY_FORMATS },\n    { provide: DateAdapter, useClass: MomentDateAdapter, deps: [MAT_DATE_LOCALE] },\n    { provide: MAT_DATE_FORMATS, useValue: MY_FORMATS },\n  ]\n})\nexport class CustomerListComponent implements OnInit {\n  @ViewChild(MaterialTableViewComponent) matTable: MaterialTableViewComponent\n\n  ELEMENT_COL = JSON.parse(JSON.stringify(CustomerCol))\n  displayedColumns = JSON.parse(JSON.stringify(CustomerDisplayCol))\n\n  customerList: any[] = [];\n\n  statusOption = Status;\n  identityTypeOption = IdentityType;\n\n  customerForm: FormGroup;\n  @Output() selectedUser = new EventEmitter();\n  @Input() isPopup: boolean = false\n  @Input() party: boolean = false\n  @Input() isDynamic: boolean = false\n  show: boolean = false\n  constructor(private router: Router, private cdf: ChangeDetectorRef, private customerListService: CustomerListService, private modalService: NgbModal) {\n    this.loadForm();\n  }\n\n  ngOnInit(): void {\n    if (this.isPopup) {\n      this.ELEMENT_COL.splice(9, 1)\n      this.displayedColumns.splice(9, 1)\n    }\n    this.show = true\n    this.getList();\n  }\n\n  loadForm() {\n    this.customerForm = new FormGroup({\n      \"name\": new FormControl(null),\n      \"identityType\": new FormControl(null),\n      \"identityNumber\": new FormControl(null),\n      \"statusCode\": new FormControl(null),\n      \"partyCode\": new FormControl(null)\n    });\n  }\n\n  navigateToDetail(data, id?: string, secondaryId?: string) {\n    this.router.navigate([\"/customer/customer-detail\"], { queryParams: { pageStatus: data, pageId: id, pageSecondaryId: secondaryId } })\n  }\n\n  getList() {\n    let check = this.isPopup && !this.isDynamic ? true : false\n    this.customerListService.getCustomerList(this.customerForm.value, this.party, check).toPromise().then((res: any) => {\n      if (res) {\n        this.customerList = res\n        this.cdf.detectChanges()\n        if (this.matTable)\n          this.matTable.reChangeData()\n      }\n    })\n  }\n\n  get selected() {\n    let user\n    if (this.matTable) {\n      user = this.matTable.selection.selected[0]\n    }\n    return user ? user : { customerId: 0 }\n  }\n\n  rowSelected(event) {\n    this.selectedUser.emit(event)\n  }\n\n  cancel() {\n    this.customerForm.reset();\n    this.getList();\n  }\n\n  actionBtn(event) {\n    if (event.cmd == 'edit') {\n      this.navigateToDetail('edit', event.data.customerId, event.data.individualId)\n    }\n  }\n\n  //for view\n  isControlValid(controlName: string): boolean {\n    const control = this.customerForm.controls[controlName];\n    return control.valid && (control.dirty || control.touched);\n  }\n\n  isControlInvalid(controlName: string): boolean {\n    const control = this.customerForm.controls[controlName];\n    return control.invalid && (control.dirty || control.touched);\n  }\n\n  controlHasError(validation, controlName): boolean {\n    const control = this.customerForm.controls[controlName];\n    return control.hasError(validation) && (control.dirty || control.touched);\n  }\n\n  isControlTouched(controlName): boolean {\n    const control = this.customerForm.controls[controlName];\n    return control.dirty || control.touched;\n  }\n\n  nextProd() {\n    if (this.selected.customerId) {\n      this.modalService.dismissAll({ data: this.selected, type: \"save\" })\n    }\n  }\n  closeModal() {\n    this.modalService.dismissAll()\n  }\n\n}\n","import { COLTYPE, TableCol } from '../../_metronic/shared/crud-table/components/material-table-view/table-dto'\nexport const CustomerCol: TableCol[] = [\n  {\n    title: \"First Name\",\n    type: COLTYPE.FEILD,\n    field: \"firstName\"\n  },\n  {\n    title: \"Middle Name\",\n    type: COLTYPE.FEILD,\n    field: \"middleName\"\n  },\n  {\n    title: \"Last Name\",\n    type: COLTYPE.FEILD,\n    field: \"lastName\"\n  },\n\n  {\n    title: \"Party Code\",\n    type: COLTYPE.FEILD,\n    field: \"partyCode\"\n  },\n  {\n    title: \"ID Type\",\n    type: COLTYPE.FEILD,\n    field: \"identityType\",\n  },\n  {\n    title: \"ID No.\",\n    type: COLTYPE.FEILD,\n    field: \"identityNumber\",\n  },\n  {\n    title: \"Date of Birth\",\n    type: COLTYPE.FEILD,\n    field: \"dateOfBirth\",\n    isFromatDate: true\n  },\n  {\n    title: \"Father Name\",\n    type: COLTYPE.FEILD,\n    field: \"fatherName\"\n  },\n  {\n    title: \"Status\",\n    type: COLTYPE.FEILD,\n    field: \"statusCode\",\n    isCustomerStatus: true\n  },\n  {\n    title: \"Actions\",\n    type: COLTYPE.ACTION,\n    field: \"actions\",\n    btn: {\n      edit: true\n    }\n  },\n]\n\nexport const CustomerDisplayCol: string[] = [\n  \"firstName\",\n  \"middleName\",\n  \"lastName\",\n  \"partyCode\",\n  \"identityType\",\n  \"identityNumber\",\n  \"dateOfBirth\",\n  \"fatherName\",\n  \"statusCode\",\n  \"actions\",\n]\n\nexport const Status: any[] = [\n  {\n    code : \"A\",\n    value : \"Active\"\n  },{\n    code : \"I\",\n    value : \"Inactive\"\n  }\n]\n\nexport const IdentityType: any[] = [\n  {\n    code : \"NRC\",\n    value : \"NRC\"\n  },{\n    code : \"FRC\",\n    value : \"FRC\"\n  },{\n    code : \"PASSPORT\",\n    value : \"Passport\"\n  },{\n    code : \"OTHER\",\n    value : \"Other\"\n  }\n]","import { HttpClient } from \"@angular/common/http\";\nimport { Injectable } from \"@angular/core\";\nimport { environment } from \"../../../environments/environment\";\n\nconst API_CUSTOMER_URL = `${environment.apiUrl}/customer`;\n@Injectable({\n  providedIn: 'root'\n})\nexport class CustomerListService {\n  constructor(protected httpClient: HttpClient) {\n  }\n\n  getCustomerList(search: any = {}, party: boolean, popup: boolean) {\n    let url = API_CUSTOMER_URL + \"?\"\n    if (search.name) {\n      url = url + \"name=\" + search.name + \"&\"\n    } if (search.partyCode) {\n      url = url + \"partyCode=\" + search.partyCode + \"&\"\n    } if (search.statusCode) {\n      url = url + \"statusCode=\" + search.statusCode + \"&\"\n    } if (search.identityType) {\n      url = url + \"identityType=\" + search.identityType + \"&\"\n    } if (search.identityNumber) {\n      url = url + \"identityNumber=\" + search.identityNumber + \"&\"\n    }\n    if (popup) {\n      url = url + \"isPartyCode=\" + party\n    }\n    console.log(url);\n    return this.httpClient.get(url)\n  }\n}","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule } from '@angular/router';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { InlineSVGModule } from 'ng-inline-svg';\nimport { CRUDTableModule } from '../../_metronic/shared/crud-table';\nimport { CustomerListComponent } from './customer-list.component';\nimport { NgSelectModule } from '@ng-select/ng-select';\n\n\n\n@NgModule({\n  declarations: [CustomerListComponent],\n  exports: [CustomerListComponent],\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    InlineSVGModule,\n    CRUDTableModule,\n    NgSelectModule,\n  ]\n})\nexport class CustomerListShareModule { }\n","export default \"<div class=\\\"row\\\">\\n    <div class=\\\"col-12\\\">\\n        <div class=\\\"card card-custom gutter-b\\\" [class.remove-p]=\\\"isPopup\\\">\\n            <div class=\\\"card-header\\\">\\n                <div class=\\\"card-title\\\">\\n                    <h3 class=\\\"card-label left-border-image\\\">Customer List</h3>\\n                </div>\\n                <div class=\\\"card-toolbar\\\">\\n                    <button *ngIf=\\\"!isPopup\\\" type=\\\"button\\\" class=\\\"btn btn-primary btn-circle\\\"\\n                        (click)=\\\"navigateToDetail('create')\\\">\\n                        <span class=\\\"flaticon2-plus\\\"></span>\\n                    </button>\\n                    <button type=\\\"button\\\" class=\\\"btn btn-primary ml-2\\\" style=\\\"min-width: 50px;\\\" (click)=\\\"getList()\\\">\\n                        <span class=\\\"flaticon2-magnifier-tool\\\"></span>\\n                    </button>\\n                    <button type=\\\"button\\\" class=\\\"btn btn-primary ml-2\\\" style=\\\"min-width: 50px;\\\" (click)=\\\"cancel()\\\">\\n                        <span class=\\\"\\\">Cancel</span>\\n                    </button>\\n                </div>\\n            </div>\\n            <div class=\\\"card-body px-10 py-3\\\">\\n                <form action=\\\"#\\\" class=\\\"form\\\" [formGroup]=\\\"customerForm\\\">\\n                    <div class=\\\"row\\\" style=\\\"align-items: center;\\\">\\n                        <div class=\\\"col-md-6\\\">\\n                            <div class=\\\"form-group row\\\">\\n                                <label class=\\\"col-sm-4 col-form-label\\\">Name</label>\\n                                <div class=\\\"col-sm-8\\\">\\n                                    <input type=\\\"text\\\" class=\\\"form-control form-control-sm \\\" name=\\\"name\\\"\\n                                        autocomplete=\\\"off\\\" [class.is-invalid]=\\\"isControlInvalid('name')\\\"\\n                                        [class.is-valid]=\\\"isControlValid('name')\\\" formControlName=\\\"name\\\" />\\n                                </div>\\n                            </div>\\n                        </div>\\n                        <div class=\\\"col-md-6\\\">\\n                            <div class=\\\"form-group row\\\">\\n                                <label class=\\\"col-sm-4 col-form-label\\\">Party Code</label>\\n                                <div class=\\\"col-sm-8\\\">\\n                                    <input type=\\\"text\\\" class=\\\"form-control form-control-sm \\\" name=\\\"partyCode\\\"\\n                                        autocomplete=\\\"off\\\" [class.is-invalid]=\\\"isControlInvalid('partyCode')\\\"\\n                                        [class.is-valid]=\\\"isControlValid('partyCode')\\\" formControlName=\\\"partyCode\\\" />\\n                                </div>\\n                            </div>\\n                        </div>\\n                       \\n                    </div>\\n                    <div class=\\\"row\\\" style=\\\"align-items: center;\\\">\\n                        <div class=\\\"col-md-6\\\">\\n                            <div class=\\\"form-group row\\\">\\n                                <label class=\\\"col-sm-4 col-form-label\\\">ID Type</label>\\n                                <div class=\\\"col-sm-8\\\">\\n                                    <ng-select class=\\\"ng-custom-select ng-custom-select-sm\\\"\\n                                        [class.is-invalid]=\\\"isControlInvalid('identityType')\\\"\\n                                        [class.is-valid]=\\\"isControlValid('identityType')\\\" [items]=\\\"identityTypeOption\\\"\\n                                        bindLabel=\\\"value\\\" bindValue=\\\"code\\\" formControlName=\\\"identityType\\\">\\n                                    </ng-select>\\n\\n                                </div>\\n                            </div>\\n                        </div>\\n                        <div class=\\\"col-md-6\\\">\\n                            <div class=\\\"form-group row\\\">\\n                                <label class=\\\"col-sm-4 col-form-label\\\">ID No.</label>\\n                                <div class=\\\"col-sm-8\\\">\\n                                    <input type=\\\"text\\\" class=\\\"form-control form-control-sm \\\" name=\\\"identityNumber\\\"\\n                                        autocomplete=\\\"off\\\" [class.is-invalid]=\\\"isControlInvalid('identityNumber')\\\"\\n                                        [class.is-valid]=\\\"isControlValid('identityNumber')\\\"\\n                                        formControlName=\\\"identityNumber\\\" />\\n                                </div>\\n                            </div>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"row\\\">\\n                        <div class=\\\"col-md-6\\\">\\n                            <div class=\\\"form-group row\\\">\\n                                <label class=\\\"col-sm-4 col-form-label\\\">Status</label>\\n                                <div class=\\\"col-sm-8\\\">\\n                                    <ng-select class=\\\"ng-custom-select ng-custom-select-sm\\\"\\n                                        [class.is-invalid]=\\\"isControlInvalid('statusCode')\\\"\\n                                        [class.is-valid]=\\\"isControlValid('statusCode')\\\" [items]=\\\"statusOption\\\"\\n                                        bindLabel=\\\"value\\\" bindValue=\\\"code\\\" formControlName=\\\"statusCode\\\">\\n                                    </ng-select>\\n                                </div>\\n                            </div>\\n                        </div>\\n                    </div>\\n                </form>\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n\\n<div class=\\\"row\\\">\\n    <div class=\\\"col-12\\\">\\n        <div class=\\\"card card-custom gutter-b\\\" [class.remove-p]=\\\"isPopup\\\">\\n            <div class=\\\"card-body customer-card-body\\\" *ngIf=\\\"show\\\">\\n                <app-material-table-view [data]=\\\"customerList\\\" [colum]=\\\"ELEMENT_COL\\\"\\n                    [displayedColumns]=\\\"displayedColumns\\\" (emitter)=\\\"actionBtn($event)\\\"\\n                    (rowselect)=\\\"rowSelected($event)\\\" [selectable]=\\\"isPopup\\\">\\n                </app-material-table-view>\\n            </div>\\n            <ng-container *ngIf=\\\"isPopup && !isDynamic\\\">\\n                <div class=\\\"card-footer\\\">\\n                    <button type=\\\"button\\\" class=\\\"btn btn-light btn-elevate mr-2\\\" (click)=\\\"closeModal()\\\">Cancel</button>\\n                    <button type=\\\"button\\\" class=\\\"btn btn-primary btn-elevate\\\" (click)=\\\"nextProd()\\\"\\n                        [disabled]=\\\"!selected.customerId\\\">Next</button>\\n                </div>\\n            </ng-container>\\n        </div>\\n    </div>\\n</div>\";"],"names":[],"sourceRoot":"webpack:///"}