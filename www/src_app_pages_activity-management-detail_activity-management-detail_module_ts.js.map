{"version":3,"file":"src_app_pages_activity-management-detail_activity-management-detail_module_ts.js","mappings":"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","sources":["./src/app/core/valid-all-feild.ts","./src/app/pages/activity-management-detail/activity-management-detail.component.ts","./src/app/pages/activity-management-detail/activity-management-detail.module.ts","./src/app/pages/activity-management-detail/customer-list.service.ts","./src/app/pages/activity-management-detail/employee-list.service.ts","./src/app/pages/activity-management-detail/pop-up-modal/col-data.const.ts","./src/app/pages/activity-management-detail/pop-up-modal/related-modal.component.ts"],"sourcesContent":["import { FormControl, FormGroup } from \"@angular/forms\";\n\nexport function validateAllFields(formGroup: FormGroup) {\n  Object.keys(formGroup.controls).forEach(field => {\n    const control = formGroup.get(field);\n    if (control instanceof FormControl) {\n      control.markAsTouched({ onlySelf: true });\n    } else if (control instanceof FormGroup) {\n      this.validateAllFields(control);\n    }\n  });\n}","import { Location } from '@angular/common';\nimport { ChangeDetectorRef, Component, NgZone, OnInit } from '@angular/core';\nimport { FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { NgbDateAdapter, NgbDateParserFormatter, NgbModal } from '@ng-bootstrap/ng-bootstrap';\nimport { CustomAdapter, CustomAdapter2, CustomDateParserFormatter } from '../../_metronic/core';\nimport { ActivityManageService } from '../activity-management-list/activity-manage.service';\nimport { RelatedModalCompoent } from './pop-up-modal/related-modal.component';\nimport * as moment from 'moment'\nimport { validateAllFields } from '../../core/valid-all-feild';\nimport { CustomerListComponent } from '../customer-list/customer-list.component';\nimport { DateAdapter, MAT_DATE_FORMATS, MAT_DATE_LOCALE } from '@angular/material/core';\nimport { MAT_MOMENT_DATE_FORMATS, MomentDateAdapter } from '@angular/material-moment-adapter';\nimport { MY_FORMATS } from '../../core/is-json';\nimport { AlertService } from 'src/app/modules/loading-toast/alert-model/alert.service';\nimport { MenuDataService } from '../../core/menu-data.service';\n@Component({\n  selector: 'app-activity-management-detail',\n  templateUrl: './activity-management-detail.component.html',\n  styleUrls: ['./activity-management-detail.component.scss'],\n  providers: [\n    { provide: DateAdapter, useClass: MomentDateAdapter, deps: [MAT_DATE_LOCALE] },\n    { provide: MAT_DATE_FORMATS, useValue: MY_FORMATS },\n  ]\n})\nexport class ActivityManagementDetailComponent implements OnInit {\n  actForm: FormGroup;\n  pageStatus: any;\n  isLead: boolean = false\n  oldId: any\n  activityStatus = {\n    \"01\": \"Open\",\n    \"02\": \"Complete\",\n    \"03\": \"Cancel\",\n  }\n  activityType: string[] = [\n    \"Face to Face\",\n    \"Online\",\n    \"Phone Call\"\n  ]\n  relatedType: string\n  oldData: any\n  leadId: any\n  dataAccess = {\n    view: true,\n    create: true,\n    edit: true,\n    delete: true\n  }\n  constructor(\n    private route: ActivatedRoute,\n    private modalService: NgbModal,\n    private activityManageService: ActivityManageService,\n    private location: Location,\n    private cdf: ChangeDetectorRef,\n    private alertService: AlertService,\n    private menuService: MenuDataService,\n    private ngZone:NgZone\n  ) {\n\n  }\n\n  ngOnInit(): void {\n    // this.loadForm();\n    this.checkPremission()\n    this.route.queryParams\n      .subscribe(params => {\n        this.pageStatus = params.pageStatus;\n        if (this.pageStatus != 'create') {\n          this.oldId = params.pageId;\n          this.getOld()\n        } else {\n          this.loadForm();\n          // console.log(\"PARMA\", params)\n          this.actForm.controls.assignTo.setValue(params.assignTo)\n          this.actForm.controls.assignName.setValue(params.assignToName)\n          this.actForm.controls.customerId.setValue(params.customerId)\n          this.actForm.controls.customerName.setValue(params.name)\n          if (params.leadId) {\n            //  this.actForm.controls.relatedTo.setValue(params.leadId)\n            //  this.relatedType ='lead'\n            this.leadId = params.leadId\n            this.isLead = params.isLead\n          }\n        }\n      }\n      );\n  }\n\n  checkPremission() {\n    this.menuService.dataAccess.subscribe((res) => {\n      if (res) {\n        this.dataAccess = res['activity']\n        if (!this.dataAccess.view) {\n          this.location.back()\n        }\n      }\n    })\n  }\n\n  ngAfterViewInit() {\n\n  }\n  clearDate(key){\n    this.actForm.controls[key].setValue(null)\n  }\n\n  getOld() {\n    this.activityManageService.findOne(this.oldId).toPromise().then((res) => {\n      if (res) {\n        this.oldData = res\n        this.leadId = res.leadId\n        this.isLead = res.leadId ? true : false\n        this.loadForm(res)\n        this.cdf.detectChanges()\n      }\n    })\n  }\n\n  loadForm(oldData?) {\n    // if(oldData)\n    // console.log(moment(oldData.dueDate).format('DD/MM/YYYY'));\n    // console.log(oldData);\n    this.actForm = new FormGroup({\n      \"activityNo\": new FormControl({ value: oldData ? oldData.activityNo : null, disabled: true }),\n      \"activityType\": new FormControl(oldData ? oldData.activityType : '', Validators.required),\n      \"activityTitle\": new FormControl(oldData ? oldData.activityTitle : null, Validators.required),\n      \"activityDescription\": new FormControl(oldData ? oldData.activityDescription : null, Validators.required),\n      \"planDateStr\": new FormControl(oldData && oldData.planDate ? moment(oldData.planDate) : null),\n      \"actualDateStr\": new FormControl(oldData && oldData.actualDate ? moment(oldData.actualDate) : null),\n      \"dueDateStr\": new FormControl(oldData && oldData.dueDate ? moment(oldData.dueDate) : null),\n      \"relatedTo\": new FormControl({ value: oldData ? oldData.relatedTo : null, disabled: true }),\n      \"customerId\": new FormControl(oldData ? oldData.customerId : null, Validators.required),\n      \"customerName\": new FormControl({ value: oldData ? oldData.customerName : null, disabled: true }),\n      \"assignTo\": new FormControl(oldData ? oldData.assignTo : null, Validators.required),\n      \"assignName\": new FormControl({ value: oldData ? oldData.assignName : null, disabled: true }),\n      \"status\": new FormControl({ value: oldData ? oldData.status : \"01\", disabled: oldData ? false : true }),\n    })\n    this.relatedType = oldData ? oldData.relatedType : \"\"\n\n    this.cdf.detectChanges()\n\n  }\n\n  openModal(type) {\n    let controlInp;\n    if (type == \"quotation\") controlInp = this.actForm.controls['relatedTo']\n    // if(!this.isLead){\n    const modalRef = this.modalService.open(RelatedModalCompoent, { size: 'xl', backdrop: false });\n    modalRef.componentInstance.type = type\n    modalRef.componentInstance.selecteditem = controlInp.value\n    modalRef.result.then(() => { }, (res) => {\n      if (res) {\n        if (res.type == 'save') {\n          this.relatedType = (res.data + \"\").includes(\"QUO\") ? 'quotation' : 'policy'\n          // console.log(' this.relatedType', this.relatedType)\n          controlInp.setValue(res.data)\n\n        }\n      }\n    })\n    // }\n  }\n  viewAgent(type) {\n    if (!this.isLead) {\n      let controlInp;\n      if (type == \"agent\") controlInp = this.actForm.controls['assignTo']\n      // console.log(type, this.isLead)\n\n      const modalRef = this.modalService.open(RelatedModalCompoent, { size: 'xl', backdrop: false });\n      modalRef.componentInstance.type = type\n      modalRef.componentInstance.selecteditem = controlInp.value\n      modalRef.result.then(() => { }, (res) => {\n        if (res) {\n          if (res.type == 'save') {\n            if (type == \"agent\") {\n              // console.log('onDidDismiss =====> ', res);\n              this.actForm.controls['assignTo'].setValue(res.data)\n              this.actForm.controls['assignName'].setValue(res.dataName)\n            }\n          }\n        }\n      })\n    }\n  }\n\n  viewCustomer() {\n    if (!this.isLead) {\n      let modalRef;\n      modalRef = this.modalService.open(CustomerListComponent, { size: 'xl', backdrop: false });\n      modalRef.componentInstance.isPopup = true\n      modalRef.result.then(() => { }, (res) => {\n        if (res) {\n          if (res.type == \"save\") {\n            let customer = res.data\n            // console.log('onDidDismiss =====> ', customer);\n            let name = (customer.firstName || \"\") + \" \" + (customer.middleName || \"\") + \" \" + (customer.lastName || \"\")\n            this.actForm.controls.customerId.setValue(customer.customerId)\n            this.actForm.controls.customerName.setValue(name)\n          }\n        }\n      })\n    }\n\n  }\n\n  // helpers for View\n  isControlValid(controlName: string): boolean {\n    const control = this.actForm.controls[controlName];\n    return control.valid && (control.dirty || control.touched);\n  }\n\n  isControlInvalid(controlName: string): boolean {\n    const control = this.actForm.controls[controlName];\n    return control.invalid && (control.dirty || control.touched);\n  }\n\n  controlHasError(validation, controlName): boolean {\n    const control = this.actForm.controls[controlName];\n    return control.hasError(validation) && (control.dirty || control.touched);\n  }\n\n  isControlTouched(controlName): boolean {\n    const control = this.actForm.controls[controlName];\n    return control.dirty || control.touched;\n  }\n\n  doActivity() {\n    if (this.actForm.invalid) {\n      validateAllFields(this.actForm)\n      return true\n    } else {\n      let postData = this.actForm.getRawValue()\n      postData['dueDate'] = postData['dueDateStr']\n      postData['actualDate'] = postData['actualDateStr']\n      postData['planDate'] = postData['planDateStr']\n      postData['dueDateStr'] = moment(postData['dueDate']).format(\"YYYY-MM-DD\")\n      postData['actualDateStr'] = moment(postData['actualDate']).format(\"YYYY-MM-DD\")\n      postData['planDateStr'] = moment(postData['planDate']).format(\"YYYY-MM-DD\")\n      if (this.pageStatus == 'create') {\n        this.create(postData)\n      } else {\n        this.edit(postData)\n      }\n    }\n  }\n\n  create(postData) {\n    let data = { ...postData, relatedType: this.relatedType || null, status: '01' }\n    if (this.isLead) {\n      data = { ...postData, relatedType: this.relatedType || null, status: '01', leadId: this.leadId }\n    }\n    this.activityManageService.save(data).toPromise().then((res) => {\n      if (res) {\n        this.alertService.activate('This record was created', 'Success Message');\n        this.location.back()\n      }\n    })\n  }\n\n  edit(postData) {\n    let data = { ...postData, activityNo: this.oldId, relatedType: this.relatedType || null }\n    if (this.isLead) {\n      data = { ...postData, relatedType: this.relatedType || null, leadId: this.leadId }\n    }\n    this.activityManageService.updateNoID(data).toPromise().then((res) => {\n      if (res) {\n        this.alertService.activate('This record was updated', 'Success Message');\n        this.location.back()\n      }\n    })\n  }\n\n  backLocation() {\n    if (this.isLead) {\n      this.ngZone.run(() => {\n        this.location.back()\n      })\n    } else {\n      this.loadForm(this.oldData)\n    }\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule } from '@angular/router';\nimport { ActivityManagementDetailComponent } from './activity-management-detail.component';\nimport { NgbDatepickerModule, NgbModalModule } from '@ng-bootstrap/ng-bootstrap';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { RelatedModalCompoent } from './pop-up-modal/related-modal.component';\nimport { CRUDTableModule } from '../../_metronic/shared/crud-table';\nimport { OverlayModule } from '@angular/cdk/overlay';\nimport { CustomerListShareModule } from '../customer-list/customer-list.share.module';\nimport { NgSelectModule } from '@ng-select/ng-select';\nimport { MatDatepickerModule } from '@angular/material/datepicker';\nimport { MatInputModule } from '@angular/material/input';\nimport { LanguageModule } from 'src/app/modules/languages/languages.modules';\n\n\n@NgModule({\n  declarations: [ActivityManagementDetailComponent,RelatedModalCompoent],\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    OverlayModule,\n    CRUDTableModule,\n    NgbDatepickerModule,\n    MatDatepickerModule,\n    MatInputModule,\n    NgSelectModule,\n    NgbModalModule,\n    CustomerListShareModule,\n    LanguageModule,\n    RouterModule.forChild([\n      {\n        path: '',\n        component: ActivityManagementDetailComponent,\n      },\n    ]),\n  ],\n})\nexport class ActivityManagementDetailModule { }\n","import { HttpClient } from \"@angular/common/http\";\nimport { Injectable } from \"@angular/core\";\nimport { environment } from \"../../../environments/environment\";\nimport { BizOperationService } from \"../../core/biz.operation.service\";\n\nconst API_CUST_URL = `${environment.apiUrl}/customer`\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CustomerListService extends BizOperationService<any, number>{\n\n  constructor(protected httpClient: HttpClient) {\n    super(httpClient, API_CUST_URL);\n  }\n\n}","import { HttpClient } from \"@angular/common/http\";\nimport { Injectable } from \"@angular/core\";\nimport { environment } from \"../../../environments/environment\";\nimport { BizOperationService } from \"../../core/biz.operation.service\";\n\nconst API_EMP_URL = `${environment.apiUrl}/employee`\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class EmployeeListService extends BizOperationService<any, number>{\n\n  constructor(protected httpClient: HttpClient) {\n    super(httpClient, API_EMP_URL);\n  }\n\n}","import { COLTYPE } from \"../../../_metronic/shared/crud-table/components/material-table-view/table-dto\"\n\nexport const TableColData = {\n  quotation: {\n    ELEMENT_COL: [\n      {\n        title: \"Quotation ID\",\n        type: COLTYPE.FEILD,\n        field: \"id\",\n      },\n      {\n        title: \"Product Name\",\n        type: COLTYPE.FEILD,\n        field: \"productName\",\n      },\n      {\n        title: \"Product Code\",\n        type: COLTYPE.FEILD,\n        field: \"productCode\",\n      },\n      {\n        title: \"Agent Name\",\n        type: COLTYPE.FEILD,\n        field: \"agentFirstName\",\n      },\n      {\n        title: \"Premium\",\n        type: COLTYPE.FEILD,\n        field: \"premium\",\n        amtFormat: true,\n      },\n      {\n        title: \"Status\",\n        type: COLTYPE.FEILD,\n        field: \"status\",\n        isTitle: true\n      },\n    ],\n    displayedColumns: [\n      \"id\",\n      \"productName\",\n      \"productCode\",\n      \"agentFirstName\",\n      \"premium\",\n      \"status\",\n    ]\n  },\n  policy: {\n    ELEMENT_COL: [\n      {\n        title: \"Quotation ID\",\n        type: COLTYPE.FEILD,\n        field: \"id\",\n      },\n      {\n        title: \"Product Name\",\n        type: COLTYPE.FEILD,\n        field: \"productName\",\n      },\n      {\n        title: \"Product Code\",\n        type: COLTYPE.FEILD,\n        field: \"productCode\",\n      },\n      {\n        title: \"Agent Name\",\n        type: COLTYPE.FEILD,\n        field: \"agentFirstName\",\n      },\n      {\n        title: \"Premium\",\n        type: COLTYPE.FEILD,\n        field: \"premium\",\n        amtFormat: true,\n      },\n      {\n        title: \"Status\",\n        type: COLTYPE.FEILD,\n        field: \"status\",\n        isTitle: true\n      },\n    ],\n    displayedColumns: [\n      \"id\",\n      \"productName\",\n      \"productCode\",\n      \"agentFirstName\",\n      \"premium\",\n      \"status\",\n    ]\n  },\n  customer: {\n    ELEMENT_COL:[\n      {\n        title: \"ID\",\n        type: COLTYPE.FEILD,\n        field: \"id\",\n        // prefix: \"CUS_\"\n      },\n      {\n        title: \"Title\",\n        type: COLTYPE.FEILD,\n        field: \"title\",\n      },\n      {\n        title: \"First Name\",\n        type: COLTYPE.FEILD,\n        field: \"firstName\",\n      },\n      {\n        title: \"Last Name\",\n        type: COLTYPE.FEILD,\n        field: \"lastName\",\n      },\n      {\n        title: \"Identity Type\",\n        type: COLTYPE.FEILD,\n        field: \"identityType\",\n      },\n      {\n        title: \"Identity Number\",\n        type: COLTYPE.FEILD,\n        field: \"identityNumber\",\n      },\n      {\n        title: \"Gender\",\n        type: COLTYPE.FEILD,\n        field: \"gender\",\n      },\n    ],\n    displayedColumns:[\n      \"id\",\n      \"title\",\n      \"firstName\",\n      \"lastName\",\n      \"identityType\",\n      \"identityNumber\",\n      \"gender\",\n    ]\n  },\n  agent: {\n    ELEMENT_COL:[\n      {\n        title: \"Emp No\",\n        type: COLTYPE.FEILD,\n        field: \"empNo\",\n      },\n      {\n        title: \"Email\",\n        type: COLTYPE.FEILD,\n        field: \"email\",\n      },\n      {\n        title: \"First Name\",\n        type: COLTYPE.FEILD,\n        field: \"firstName\",\n      },\n      {\n        title: \"Last Name\",\n        type: COLTYPE.FEILD,\n        field: \"lastName\",\n      },\n      {\n        title: \"Mobile No\",\n        type: COLTYPE.FEILD,\n        field: \"mobileNo\",\n      },\n    ],\n    displayedColumns:[\n      \"empNo\",\n      \"email\",\n      \"firstName\",\n      \"lastName\",\n      \"mobileNo\",\n    ]\n  },\n}\n\nexport const OldTableColData = {\n \n  agent: [\n    {\n      col: \"Emp No\",\n      key: \"empNo\",\n    },\n    {\n      col: \"Email\",\n      key: \"email\"\n    },\n    {\n      col: \"Name\",\n      key: \"firstName\"\n    },\n    {\n      col: \"Mobile No\",\n      key: \"mobileNo\"\n    },\n  ],\n}","import { ChangeDetectorRef, Component, OnInit, ViewChild } from \"@angular/core\";\nimport { NgbActiveModal } from \"@ng-bootstrap/ng-bootstrap\";\nimport { map } from \"rxjs/operators\";\nimport { AlertService } from \"src/app/modules/loading-toast/alert-model/alert.service\";\nimport { MaterialTableViewComponent } from \"../../../_metronic/shared/crud-table/components/material-table-view/material-table-view.component\";\nimport { PolicyService } from \"../../policy/policy.service\";\nimport { QuotationService } from \"../../quotations/quotation.service\";\nimport { CustomerListService } from \"../customer-list.service\";\nimport { EmployeeListService } from \"../employee-list.service\";\nimport { TableColData } from \"./col-data.const\"\ninterface TableKey {\n  col: string,\n  key: string,\n  prefix?: string\n}\n\n@Component({\n  selector: \"app-related-to\",\n  templateUrl: \"./related-modal.component.html\"\n})\nexport class RelatedModalCompoent implements OnInit {\n  @ViewChild(MaterialTableViewComponent) matTable: MaterialTableViewComponent\n\n  selecteditem: any\n  tableData = TableColData\n  types: string[] = [\n    \"quotation\", \"policy\"\n  ]\n  // \"customer\"agent\n  type: string = \"customer\"\n  dataList: any[] = []\n  selectedName: string\n  constructor(public modal: NgbActiveModal, private quotService: QuotationService, \n    private policyService: PolicyService, private customerService: CustomerListService, \n    private employeeService: EmployeeListService,private cdf: ChangeDetectorRef, private alertService: AlertService) {\n  }\n\n  ngOnInit() {\n    if (this.selected && this.type == 'quotation') {\n      this.type = (this.selected + \"\").includes(\"QUO\") ? 'quotation' : 'policy'\n    }\n    this.getDatalist()\n  }\n\n  selectedProd(id, index) {\n    if (this.selecteditem == id) this.selecteditem = null\n    this.selecteditem = id\n    this.selectedName = this.type == \"customer\" ? this.dataList[index].name : this.dataList[index].firstName || \"\"\n  }\n\n  getDatalist() {\n    if (this.type == 'customer') {\n      this.getCustomerList()\n    } else {\n      let service: any;\n      if (this.type == 'quotation')\n        service = this.quotService\n      else if (this.type == 'policy')\n        service = this.policyService\n      else\n        service = this.employeeService\n\n      service.findAll().toPromise().then((res: any) => {\n        // console.log(res);\n        \n        if (res){\n          this.dataList = res\n          this.cdf.detectChanges()\n          this.matTable.reChangeData()\n        }\n      })\n    }\n  }\n\n  getCustomerList() {\n    this.customerService.findAll().pipe(map(x => {\n      return x.map(x => x.individualCustomer)\n    })).toPromise().then((res: any) => {\n      if (res)\n        this.dataList = res\n        // console.log(\"customer\",  this.dataList)\n        this.cdf.detectChanges()\n        this.matTable.reChangeData()\n      })\n  }\n  get selected() {\n    let item\n    if(this.matTable){\n      item = this.matTable.selection.selected[0]\n    }\n    return item ? item : { id: 0 }\n  }\n  save() {\n    this.selectedName = this.type == \"customer\" ? this.selected.name : this.selected.firstName || \"\"\n    let name = (this.selected.firstName || \"\") + \" \" + (this.selected.middleName || \"\") + \" \" + (this.selected.lastName || \"\")\n    this.selectedName = this.type == \"agent\" ? name :  \"\"\n   \n    this.modal.dismiss({ data: this.selected.id || this.selected.empId, type: 'save', dataName: this.selectedName })\n  }\n\n  actionBtn(event){\n\n  }\n\n  deleteEditModal() {\n    this.alertService.activate('Are you sure want to delete?', 'Warning Message').then(result => {\n      if (result) {\n        this.modal.dismiss({ type: 'delete' });\n      }\n    });\n  }\n\n\n\n}"],"names":[],"sourceRoot":"webpack:///"}