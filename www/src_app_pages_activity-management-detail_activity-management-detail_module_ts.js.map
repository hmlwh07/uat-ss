{"version":3,"file":"src_app_pages_activity-management-detail_activity-management-detail_module_ts.js","mappings":"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","sources":["./src/app/pages/activity-management-detail/activity-management-detail.component.ts","./src/app/pages/activity-management-detail/activity-management-detail.module.ts","./src/app/pages/activity-management-detail/customer-list.service.ts","./src/app/pages/activity-management-detail/employee-list.service.ts","./src/app/pages/activity-management-detail/pop-up-modal/col-data.const.ts","./src/app/pages/activity-management-detail/pop-up-modal/related-modal.component.ts","./src/app/pages/activity-management-detail/activity-management-detail.component.html","./src/app/pages/activity-management-detail/pop-up-modal/related-modal.component.html"],"sourcesContent":["import { Location } from '@angular/common';\r\nimport { ChangeDetectorRef, Component, NgZone, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { NgbDateAdapter, NgbDateParserFormatter, NgbModal } from '@ng-bootstrap/ng-bootstrap';\r\nimport { CustomAdapter, CustomAdapter2, CustomDateParserFormatter } from '../../_metronic/core';\r\nimport { ActivityManageService } from '../activity-management-list/activity-manage.service';\r\nimport { RelatedModalCompoent } from './pop-up-modal/related-modal.component';\r\nimport * as moment from 'moment'\r\nimport { validateAllFields } from '../../core/valid-all-feild';\r\nimport { CustomerListComponent } from '../customer-list/customer-list.component';\r\nimport { DateAdapter, MAT_DATE_FORMATS, MAT_DATE_LOCALE } from '@angular/material/core';\r\nimport { MAT_MOMENT_DATE_FORMATS, MomentDateAdapter } from '@angular/material-moment-adapter';\r\nimport { MY_FORMATS } from '../../core/is-json';\r\nimport { AlertService } from 'src/app/modules/loading-toast/alert-model/alert.service';\r\nimport { MenuDataService } from '../../core/menu-data.service';\r\n@Component({\r\n  selector: 'app-activity-management-detail',\r\n  templateUrl: './activity-management-detail.component.html',\r\n  styleUrls: ['./activity-management-detail.component.scss'],\r\n  providers: [\r\n    { provide: DateAdapter, useClass: MomentDateAdapter, deps: [MAT_DATE_LOCALE] },\r\n    { provide: MAT_DATE_FORMATS, useValue: MY_FORMATS },\r\n  ]\r\n})\r\nexport class ActivityManagementDetailComponent implements OnInit {\r\n  actForm: FormGroup;\r\n  pageStatus: any;\r\n  isLead: boolean = false\r\n  oldId: any\r\n  activityStatus = {\r\n    \"01\": \"Open\",\r\n    \"02\": \"Complete\",\r\n    \"03\": \"Cancel\",\r\n  }\r\n  activityType: string[] = [\r\n    \"Face to Face\",\r\n    \"Online\",\r\n    \"Phone Call\"\r\n  ]\r\n  relatedType: string\r\n  oldData: any\r\n  leadId: any\r\n  dataAccess = {\r\n    view: true,\r\n    create: true,\r\n    edit: true,\r\n    delete: true\r\n  }\r\n  constructor(\r\n    private route: ActivatedRoute,\r\n    private modalService: NgbModal,\r\n    private activityManageService: ActivityManageService,\r\n    private location: Location,\r\n    private cdf: ChangeDetectorRef,\r\n    private alertService: AlertService,\r\n    private menuService: MenuDataService,\r\n    private ngZone:NgZone\r\n  ) {\r\n\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    // this.loadForm();\r\n    this.checkPremission()\r\n    this.route.queryParams\r\n      .subscribe(params => {\r\n        this.pageStatus = params.pageStatus;\r\n        if (this.pageStatus != 'create') {\r\n          this.oldId = params.pageId;\r\n          this.getOld()\r\n        } else {\r\n          this.loadForm();\r\n          console.log(\"PARMA\", params)\r\n          this.actForm.controls.assignTo.setValue(params.assignTo)\r\n          this.actForm.controls.assignName.setValue(params.assignToName)\r\n          this.actForm.controls.customerId.setValue(params.customerId)\r\n          this.actForm.controls.customerName.setValue(params.name)\r\n          if (params.leadId) {\r\n            //  this.actForm.controls.relatedTo.setValue(params.leadId)\r\n            //  this.relatedType ='lead'\r\n            this.leadId = params.leadId\r\n            this.isLead = params.isLead\r\n          }\r\n        }\r\n      }\r\n      );\r\n  }\r\n\r\n  checkPremission() {\r\n    this.menuService.dataAccess.subscribe((res) => {\r\n      if (res) {\r\n        this.dataAccess = res['activity']\r\n        if (!this.dataAccess.view) {\r\n          this.location.back()\r\n        }\r\n      }\r\n    })\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n\r\n  }\r\n\r\n  getOld() {\r\n    this.activityManageService.findOne(this.oldId).toPromise().then((res) => {\r\n      if (res) {\r\n        this.oldData = res\r\n        this.leadId = res.leadId\r\n        this.isLead = res.leadId ? true : false\r\n        this.loadForm(res)\r\n        this.cdf.detectChanges()\r\n      }\r\n    })\r\n  }\r\n\r\n  loadForm(oldData?) {\r\n    // if(oldData)\r\n    // console.log(moment(oldData.dueDate).format('DD/MM/YYYY'));\r\n    // console.log(oldData);\r\n    this.actForm = new FormGroup({\r\n      \"activityNo\": new FormControl({ value: oldData ? oldData.activityNo : null, disabled: true }),\r\n      \"activityType\": new FormControl(oldData ? oldData.activityType : '', Validators.required),\r\n      \"activityTitle\": new FormControl(oldData ? oldData.activityTitle : null, Validators.required),\r\n      \"activityDescription\": new FormControl(oldData ? oldData.activityDescription : null, Validators.required),\r\n      \"planDateStr\": new FormControl(oldData && oldData.planDate ? moment(oldData.planDate) : null),\r\n      \"actualDateStr\": new FormControl(oldData && oldData.actualDate ? moment(oldData.actualDate) : null),\r\n      \"dueDateStr\": new FormControl(oldData && oldData.dueDate ? moment(oldData.dueDate) : null),\r\n      \"relatedTo\": new FormControl({ value: oldData ? oldData.relatedTo : null, disabled: true }),\r\n      \"customerId\": new FormControl(oldData ? oldData.customerId : null, Validators.required),\r\n      \"customerName\": new FormControl({ value: oldData ? oldData.customerName : null, disabled: true }),\r\n      \"assignTo\": new FormControl(oldData ? oldData.assignTo : null, Validators.required),\r\n      \"assignName\": new FormControl({ value: oldData ? oldData.assignName : null, disabled: true }),\r\n      \"status\": new FormControl({ value: oldData ? oldData.status : \"01\", disabled: oldData ? false : true }),\r\n    })\r\n    this.relatedType = oldData ? oldData.relatedType : \"\"\r\n\r\n    this.cdf.detectChanges()\r\n\r\n  }\r\n\r\n  openModal(type) {\r\n    let controlInp;\r\n    if (type == \"quotation\") controlInp = this.actForm.controls['relatedTo']\r\n    // if(!this.isLead){\r\n    const modalRef = this.modalService.open(RelatedModalCompoent, { size: 'xl', backdrop: false });\r\n    modalRef.componentInstance.type = type\r\n    modalRef.componentInstance.selecteditem = controlInp.value\r\n    modalRef.result.then(() => { }, (res) => {\r\n      if (res) {\r\n        if (res.type == 'save') {\r\n          this.relatedType = (res.data + \"\").includes(\"QUO\") ? 'quotation' : 'policy'\r\n          console.log(' this.relatedType', this.relatedType)\r\n          controlInp.setValue(res.data)\r\n\r\n        }\r\n      }\r\n    })\r\n    // }\r\n  }\r\n  viewAgent(type) {\r\n    if (!this.isLead) {\r\n      let controlInp;\r\n      if (type == \"agent\") controlInp = this.actForm.controls['assignTo']\r\n      console.log(type, this.isLead)\r\n\r\n      const modalRef = this.modalService.open(RelatedModalCompoent, { size: 'xl', backdrop: false });\r\n      modalRef.componentInstance.type = type\r\n      modalRef.componentInstance.selecteditem = controlInp.value\r\n      modalRef.result.then(() => { }, (res) => {\r\n        if (res) {\r\n          if (res.type == 'save') {\r\n            if (type == \"agent\") {\r\n              console.log('onDidDismiss =====> ', res);\r\n              this.actForm.controls['assignTo'].setValue(res.data)\r\n              this.actForm.controls['assignName'].setValue(res.dataName)\r\n            }\r\n          }\r\n        }\r\n      })\r\n    }\r\n  }\r\n\r\n  viewCustomer() {\r\n    if (!this.isLead) {\r\n      let modalRef;\r\n      modalRef = this.modalService.open(CustomerListComponent, { size: 'xl', backdrop: false });\r\n      modalRef.componentInstance.isPopup = true\r\n      modalRef.result.then(() => { }, (res) => {\r\n        if (res) {\r\n          if (res.type == \"save\") {\r\n            let customer = res.data\r\n            console.log('onDidDismiss =====> ', customer);\r\n            let name = (customer.firstName || \"\") + \" \" + (customer.middleName || \"\") + \" \" + (customer.lastName || \"\")\r\n            this.actForm.controls.customerId.setValue(customer.customerId)\r\n            this.actForm.controls.customerName.setValue(name)\r\n          }\r\n        }\r\n      })\r\n    }\r\n\r\n  }\r\n\r\n  // helpers for View\r\n  isControlValid(controlName: string): boolean {\r\n    const control = this.actForm.controls[controlName];\r\n    return control.valid && (control.dirty || control.touched);\r\n  }\r\n\r\n  isControlInvalid(controlName: string): boolean {\r\n    const control = this.actForm.controls[controlName];\r\n    return control.invalid && (control.dirty || control.touched);\r\n  }\r\n\r\n  controlHasError(validation, controlName): boolean {\r\n    const control = this.actForm.controls[controlName];\r\n    return control.hasError(validation) && (control.dirty || control.touched);\r\n  }\r\n\r\n  isControlTouched(controlName): boolean {\r\n    const control = this.actForm.controls[controlName];\r\n    return control.dirty || control.touched;\r\n  }\r\n\r\n  doActivity() {\r\n    if (this.actForm.invalid) {\r\n      validateAllFields(this.actForm)\r\n      return true\r\n    } else {\r\n      let postData = this.actForm.getRawValue()\r\n      postData['dueDate'] = postData['dueDateStr']\r\n      postData['actualDate'] = postData['actualDateStr']\r\n      postData['planDate'] = postData['planDateStr']\r\n      postData['dueDateStr'] = moment(postData['dueDate']).format(\"YYYY-MM-DD\")\r\n      postData['actualDateStr'] = moment(postData['actualDate']).format(\"YYYY-MM-DD\")\r\n      postData['planDateStr'] = moment(postData['planDate']).format(\"YYYY-MM-DD\")\r\n      if (this.pageStatus == 'create') {\r\n        this.create(postData)\r\n      } else {\r\n        this.edit(postData)\r\n      }\r\n    }\r\n  }\r\n\r\n  create(postData) {\r\n    let data = { ...postData, relatedType: this.relatedType || null, status: '01' }\r\n    if (this.isLead) {\r\n      data = { ...postData, relatedType: this.relatedType || null, status: '01', leadId: this.leadId }\r\n    }\r\n    this.activityManageService.save(data).toPromise().then((res) => {\r\n      if (res) {\r\n        this.alertService.activate('This record was created', 'Success Message');\r\n        this.location.back()\r\n      }\r\n    })\r\n  }\r\n\r\n  edit(postData) {\r\n    let data = { ...postData, activityNo: this.oldId, relatedType: this.relatedType || null }\r\n    if (this.isLead) {\r\n      data = { ...postData, relatedType: this.relatedType || null, leadId: this.leadId }\r\n    }\r\n    this.activityManageService.updateNoID(data).toPromise().then((res) => {\r\n      if (res) {\r\n        this.alertService.activate('This record was updated', 'Success Message');\r\n        this.location.back()\r\n      }\r\n    })\r\n  }\r\n\r\n  backLocation() {\r\n    if (this.isLead) {\r\n      this.ngZone.run(() => {\r\n        this.location.back()\r\n      })\r\n    } else {\r\n      this.loadForm(this.oldData)\r\n    }\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { RouterModule } from '@angular/router';\r\nimport { ActivityManagementDetailComponent } from './activity-management-detail.component';\r\nimport { NgbDatepickerModule, NgbModalModule } from '@ng-bootstrap/ng-bootstrap';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { RelatedModalCompoent } from './pop-up-modal/related-modal.component';\r\nimport { CRUDTableModule } from '../../_metronic/shared/crud-table';\r\nimport { OverlayModule } from '@angular/cdk/overlay';\r\nimport { CustomerListShareModule } from '../customer-list/customer-list.share.module';\r\nimport { NgSelectModule } from '@ng-select/ng-select';\r\nimport { MatDatepickerModule } from '@angular/material/datepicker';\r\nimport { MatInputModule } from '@angular/material/input';\r\n\r\n\r\n@NgModule({\r\n  declarations: [ActivityManagementDetailComponent,RelatedModalCompoent],\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    OverlayModule,\r\n    CRUDTableModule,\r\n    NgbDatepickerModule,\r\n    MatDatepickerModule,\r\n    MatInputModule,\r\n    NgSelectModule,\r\n    NgbModalModule,\r\n    CustomerListShareModule,\r\n    RouterModule.forChild([\r\n      {\r\n        path: '',\r\n        component: ActivityManagementDetailComponent,\r\n      },\r\n    ]),\r\n  ],\r\n})\r\nexport class ActivityManagementDetailModule { }\r\n","import { HttpClient } from \"@angular/common/http\";\r\nimport { Injectable } from \"@angular/core\";\r\nimport { environment } from \"../../../environments/environment\";\r\nimport { BizOperationService } from \"../../core/biz.operation.service\";\r\n\r\nconst API_CUST_URL = `${environment.apiUrl}/customer`\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class CustomerListService extends BizOperationService<any, number>{\r\n\r\n  constructor(protected httpClient: HttpClient) {\r\n    super(httpClient, API_CUST_URL);\r\n  }\r\n\r\n}","import { HttpClient } from \"@angular/common/http\";\r\nimport { Injectable } from \"@angular/core\";\r\nimport { environment } from \"../../../environments/environment\";\r\nimport { BizOperationService } from \"../../core/biz.operation.service\";\r\n\r\nconst API_EMP_URL = `${environment.apiUrl}/employee`\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class EmployeeListService extends BizOperationService<any, number>{\r\n\r\n  constructor(protected httpClient: HttpClient) {\r\n    super(httpClient, API_EMP_URL);\r\n  }\r\n\r\n}","import { COLTYPE } from \"../../../_metronic/shared/crud-table/components/material-table-view/table-dto\"\r\n\r\nexport const TableColData = {\r\n  quotation: {\r\n    ELEMENT_COL: [\r\n      {\r\n        title: \"Quotation ID\",\r\n        type: COLTYPE.FEILD,\r\n        field: \"id\",\r\n      },\r\n      {\r\n        title: \"Product Name\",\r\n        type: COLTYPE.FEILD,\r\n        field: \"productName\",\r\n      },\r\n      {\r\n        title: \"Product Code\",\r\n        type: COLTYPE.FEILD,\r\n        field: \"productCode\",\r\n      },\r\n      {\r\n        title: \"Agent Name\",\r\n        type: COLTYPE.FEILD,\r\n        field: \"agentFirstName\",\r\n      },\r\n      {\r\n        title: \"Premium\",\r\n        type: COLTYPE.FEILD,\r\n        field: \"premium\",\r\n        amtFormat: true,\r\n      },\r\n      {\r\n        title: \"Status\",\r\n        type: COLTYPE.FEILD,\r\n        field: \"status\",\r\n        isTitle: true\r\n      },\r\n    ],\r\n    displayedColumns: [\r\n      \"id\",\r\n      \"productName\",\r\n      \"productCode\",\r\n      \"agentFirstName\",\r\n      \"premium\",\r\n      \"status\",\r\n    ]\r\n  },\r\n  policy: {\r\n    ELEMENT_COL: [\r\n      {\r\n        title: \"Quotation ID\",\r\n        type: COLTYPE.FEILD,\r\n        field: \"id\",\r\n      },\r\n      {\r\n        title: \"Product Name\",\r\n        type: COLTYPE.FEILD,\r\n        field: \"productName\",\r\n      },\r\n      {\r\n        title: \"Product Code\",\r\n        type: COLTYPE.FEILD,\r\n        field: \"productCode\",\r\n      },\r\n      {\r\n        title: \"Agent Name\",\r\n        type: COLTYPE.FEILD,\r\n        field: \"agentFirstName\",\r\n      },\r\n      {\r\n        title: \"Premium\",\r\n        type: COLTYPE.FEILD,\r\n        field: \"premium\",\r\n        amtFormat: true,\r\n      },\r\n      {\r\n        title: \"Status\",\r\n        type: COLTYPE.FEILD,\r\n        field: \"status\",\r\n        isTitle: true\r\n      },\r\n    ],\r\n    displayedColumns: [\r\n      \"id\",\r\n      \"productName\",\r\n      \"productCode\",\r\n      \"agentFirstName\",\r\n      \"premium\",\r\n      \"status\",\r\n    ]\r\n  },\r\n  customer: {\r\n    ELEMENT_COL:[\r\n      {\r\n        title: \"ID\",\r\n        type: COLTYPE.FEILD,\r\n        field: \"id\",\r\n        // prefix: \"CUS_\"\r\n      },\r\n      {\r\n        title: \"Title\",\r\n        type: COLTYPE.FEILD,\r\n        field: \"title\",\r\n      },\r\n      {\r\n        title: \"First Name\",\r\n        type: COLTYPE.FEILD,\r\n        field: \"firstName\",\r\n      },\r\n      {\r\n        title: \"Last Name\",\r\n        type: COLTYPE.FEILD,\r\n        field: \"lastName\",\r\n      },\r\n      {\r\n        title: \"Identity Type\",\r\n        type: COLTYPE.FEILD,\r\n        field: \"identityType\",\r\n      },\r\n      {\r\n        title: \"Identity Number\",\r\n        type: COLTYPE.FEILD,\r\n        field: \"identityNumber\",\r\n      },\r\n      {\r\n        title: \"Gender\",\r\n        type: COLTYPE.FEILD,\r\n        field: \"gender\",\r\n      },\r\n    ],\r\n    displayedColumns:[\r\n      \"id\",\r\n      \"title\",\r\n      \"firstName\",\r\n      \"lastName\",\r\n      \"identityType\",\r\n      \"identityNumber\",\r\n      \"gender\",\r\n    ]\r\n  },\r\n  agent: {\r\n    ELEMENT_COL:[\r\n      {\r\n        title: \"Emp No\",\r\n        type: COLTYPE.FEILD,\r\n        field: \"empNo\",\r\n      },\r\n      {\r\n        title: \"Email\",\r\n        type: COLTYPE.FEILD,\r\n        field: \"email\",\r\n      },\r\n      {\r\n        title: \"First Name\",\r\n        type: COLTYPE.FEILD,\r\n        field: \"firstName\",\r\n      },\r\n      {\r\n        title: \"Last Name\",\r\n        type: COLTYPE.FEILD,\r\n        field: \"lastName\",\r\n      },\r\n      {\r\n        title: \"Mobile No\",\r\n        type: COLTYPE.FEILD,\r\n        field: \"mobileNo\",\r\n      },\r\n    ],\r\n    displayedColumns:[\r\n      \"empNo\",\r\n      \"email\",\r\n      \"firstName\",\r\n      \"lastName\",\r\n      \"mobileNo\",\r\n    ]\r\n  },\r\n}\r\n\r\nexport const OldTableColData = {\r\n \r\n  agent: [\r\n    {\r\n      col: \"Emp No\",\r\n      key: \"empNo\",\r\n    },\r\n    {\r\n      col: \"Email\",\r\n      key: \"email\"\r\n    },\r\n    {\r\n      col: \"Name\",\r\n      key: \"firstName\"\r\n    },\r\n    {\r\n      col: \"Mobile No\",\r\n      key: \"mobileNo\"\r\n    },\r\n  ],\r\n}","import { ChangeDetectorRef, Component, OnInit, ViewChild } from \"@angular/core\";\r\nimport { NgbActiveModal } from \"@ng-bootstrap/ng-bootstrap\";\r\nimport { map } from \"rxjs/operators\";\r\nimport { AlertService } from \"src/app/modules/loading-toast/alert-model/alert.service\";\r\nimport { MaterialTableViewComponent } from \"../../../_metronic/shared/crud-table/components/material-table-view/material-table-view.component\";\r\nimport { PolicyService } from \"../../policy/policy.service\";\r\nimport { QuotationService } from \"../../quotations/quotation.service\";\r\nimport { CustomerListService } from \"../customer-list.service\";\r\nimport { EmployeeListService } from \"../employee-list.service\";\r\nimport { TableColData } from \"./col-data.const\"\r\ninterface TableKey {\r\n  col: string,\r\n  key: string,\r\n  prefix?: string\r\n}\r\n\r\n@Component({\r\n  selector: \"app-related-to\",\r\n  templateUrl: \"./related-modal.component.html\"\r\n})\r\nexport class RelatedModalCompoent implements OnInit {\r\n  @ViewChild(MaterialTableViewComponent) matTable: MaterialTableViewComponent\r\n\r\n  selecteditem: any\r\n  tableData = TableColData\r\n  types: string[] = [\r\n    \"quotation\", \"policy\"\r\n  ]\r\n  // \"customer\"agent\r\n  type: string = \"customer\"\r\n  dataList: any[] = []\r\n  selectedName: string\r\n  constructor(public modal: NgbActiveModal, private quotService: QuotationService, \r\n    private policyService: PolicyService, private customerService: CustomerListService, \r\n    private employeeService: EmployeeListService,private cdf: ChangeDetectorRef, private alertService: AlertService) {\r\n  }\r\n\r\n  ngOnInit() {\r\n    if (this.selected && this.type == 'quotation') {\r\n      this.type = (this.selected + \"\").includes(\"QUO\") ? 'quotation' : 'policy'\r\n    }\r\n    this.getDatalist()\r\n  }\r\n\r\n  selectedProd(id, index) {\r\n    if (this.selecteditem == id) this.selecteditem = null\r\n    this.selecteditem = id\r\n    this.selectedName = this.type == \"customer\" ? this.dataList[index].name : this.dataList[index].firstName || \"\"\r\n  }\r\n\r\n  getDatalist() {\r\n    if (this.type == 'customer') {\r\n      this.getCustomerList()\r\n    } else {\r\n      let service: any;\r\n      if (this.type == 'quotation')\r\n        service = this.quotService\r\n      else if (this.type == 'policy')\r\n        service = this.policyService\r\n      else\r\n        service = this.employeeService\r\n\r\n      service.findAll().toPromise().then((res: any) => {\r\n        // console.log(res);\r\n        \r\n        if (res){\r\n          this.dataList = res\r\n          this.cdf.detectChanges()\r\n          this.matTable.reChangeData()\r\n        }\r\n      })\r\n    }\r\n  }\r\n\r\n  getCustomerList() {\r\n    this.customerService.findAll().pipe(map(x => {\r\n      return x.map(x => x.individualCustomer)\r\n    })).toPromise().then((res: any) => {\r\n      if (res)\r\n        this.dataList = res\r\n        console.log(\"customer\",  this.dataList)\r\n        this.cdf.detectChanges()\r\n        this.matTable.reChangeData()\r\n      })\r\n  }\r\n  get selected() {\r\n    let item\r\n    if(this.matTable){\r\n      item = this.matTable.selection.selected[0]\r\n    }\r\n    return item ? item : { id: 0 }\r\n  }\r\n  save() {\r\n    this.selectedName = this.type == \"customer\" ? this.selected.name : this.selected.firstName || \"\"\r\n    let name = (this.selected.firstName || \"\") + \" \" + (this.selected.middleName || \"\") + \" \" + (this.selected.lastName || \"\")\r\n    this.selectedName = this.type == \"agent\" ? name :  \"\"\r\n   \r\n    this.modal.dismiss({ data: this.selected.id || this.selected.empId, type: 'save', dataName: this.selectedName })\r\n  }\r\n\r\n  actionBtn(event){\r\n\r\n  }\r\n\r\n  deleteEditModal() {\r\n    this.alertService.activate('Are you sure you want to delete?', 'Warning Message').then(result => {\r\n      if (result) {\r\n        this.modal.dismiss({ type: 'delete' });\r\n      }\r\n    });\r\n  }\r\n\r\n\r\n\r\n}","export default \"<div class=\\\"row\\\" *ngIf=\\\"pageStatus == 'edit'\\\">\\r\\n    <div class=\\\"col-12\\\" *ngIf=\\\"actForm\\\">\\r\\n        <div class=\\\"card card-custom gutter-b\\\">\\r\\n            <div class=\\\"card-body\\\">\\r\\n                <!-- begin:Table -->\\r\\n                <div class=\\\"table-responsive angular-bootstrap-table\\\">\\r\\n                    <div class=\\\"container\\\">\\r\\n                        <div class=\\\"row\\\">\\r\\n                            <div class=\\\"col-sm\\\">\\r\\n                                Related to <br>\\r\\n                                {{actForm.controls.relatedTo.value}}\\r\\n                            </div>\\r\\n                            <div class=\\\"col-sm\\\">\\r\\n                                Owner <br>\\r\\n                                {{actForm.controls.assignName.value}}\\r\\n                            </div>\\r\\n                            <div class=\\\"col-sm\\\">\\r\\n                                Status <br>\\r\\n                                {{activityStatus[actForm.controls.status.value]}}\\r\\n                            </div>\\r\\n                            <div class=\\\"col-sm\\\">\\r\\n                                Date <br>\\r\\n                                <ng-container *ngIf=\\\"actForm.controls.planDateStr.value\\\">\\r\\n                                    {{actForm.controls.planDateStr.value | date: \\\"dd-MM-YYYY\\\"}}\\r\\n                                </ng-container>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                       \\r\\n                    </div>\\r\\n                </div>\\r\\n                <!-- end: Table -->\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n\\r\\n<div class=\\\"row\\\" *ngIf=\\\"actForm\\\">\\r\\n    <div class=\\\"col-12\\\">\\r\\n        <div class=\\\"card card-custom gutter-b\\\">\\r\\n            <div class=\\\"card-body\\\">\\r\\n                <form action=\\\"#\\\" class=\\\"form\\\" [formGroup]=\\\"actForm\\\" (ngSubmit)=\\\"doActivity()\\\">\\r\\n                    <div class=\\\"row\\\">\\r\\n\\r\\n                        <div class=\\\"col-sm-12\\\" *ngIf=\\\"pageStatus == 'edit'\\\">\\r\\n                            <div class=\\\"form-group\\\">\\r\\n                                <label class=\\\"form-label\\\">Activity No.</label>\\r\\n                                <input type=\\\"text\\\" class=\\\"form-control form-control-sm\\\" name=\\\"activityNo\\\"\\r\\n                                    autocomplete=\\\"off\\\" [class.is-invalid]=\\\"isControlInvalid('activityNo')\\\"\\r\\n                                    [class.is-valid]=\\\"isControlValid('activityNo')\\\" formControlName=\\\"activityNo\\\" />\\r\\n                            </div>\\r\\n                        </div>\\r\\n\\r\\n                        <div class=\\\"col-sm-6\\\">\\r\\n                            <div class=\\\"form-group\\\">\\r\\n                                <label class=\\\"form-label\\\">Activity Type</label>\\r\\n                                <select class=\\\"form-control form-control-sm\\\" name=\\\"actType\\\" autocomplete=\\\"off\\\"\\r\\n                                    [class.is-invalid]=\\\"isControlInvalid('activityType')\\\"\\r\\n                                    [class.is-valid]=\\\"isControlValid('activityType')\\\" formControlName=\\\"activityType\\\">\\r\\n                                    <option value=\\\"\\\">Select Activity Type</option>\\r\\n                                    <option value=\\\"{{item}}\\\" *ngFor=\\\"let item of activityType\\\">{{item}}</option>\\r\\n                                </select>\\r\\n                                <!-- <input type=\\\"text\\\" class=\\\"form-control form-control-sm\\\" name=\\\"actType\\\" autocomplete=\\\"off\\\"\\r\\n                  [class.is-invalid]=\\\"isControlInvalid('activityType')\\\"\\r\\n                  [class.is-valid]=\\\"isControlValid('activityType')\\\" formControlName=\\\"activityType\\\" /> -->\\r\\n                            </div>\\r\\n                        </div>\\r\\n\\r\\n                        <div class=\\\"col-sm-6\\\">\\r\\n                            <div class=\\\"form-group\\\">\\r\\n                                <label class=\\\"form-label\\\">Activity Title</label>\\r\\n                                <input type=\\\"text\\\" class=\\\"form-control form-control-sm\\\" name=\\\"actTitle\\\"\\r\\n                                    autocomplete=\\\"off\\\" [class.is-invalid]=\\\"isControlInvalid('activityTitle')\\\"\\r\\n                                    [class.is-valid]=\\\"isControlValid('activityTitle')\\\"\\r\\n                                    formControlName=\\\"activityTitle\\\" />\\r\\n                            </div>\\r\\n                        </div>\\r\\n\\r\\n                        <div class=\\\"col-sm-12\\\">\\r\\n                            <div class=\\\"form-group\\\">\\r\\n                                <label class=\\\"form-label\\\">Activity Description</label>\\r\\n                                <textarea name=\\\"\\\" rows=\\\"4\\\" class=\\\"form-control form-control-sm\\\" name=\\\"actDesc\\\"\\r\\n                                    autocomplete=\\\"off\\\" [class.is-invalid]=\\\"isControlInvalid('activityDescription')\\\"\\r\\n                                    [class.is-valid]=\\\"isControlValid('activityDescription')\\\"\\r\\n                                    formControlName=\\\"activityDescription\\\" style=\\\"resize: false;\\\"></textarea>\\r\\n                            </div>\\r\\n                        </div>\\r\\n\\r\\n                        <div class=\\\"col-sm-4\\\">\\r\\n                            <div class=\\\"form-group \\\">\\r\\n                                <label class=\\\"form-label\\\">Planned Date </label>\\r\\n                                <div class=\\\"input-group \\\">\\r\\n\\r\\n                                    <input matInput class=\\\"form-control-sm date-input\\\" style=\\\"width: 100%;\\\"\\r\\n                                        formControlName=\\\"planDateStr\\\" [matDatepicker]=\\\"planDateStr\\\" readonly>\\r\\n                                    <mat-datepicker-toggle matSuffix [for]=\\\"planDateStr\\\"></mat-datepicker-toggle>\\r\\n                                    <mat-datepicker #planDateStr disabled=\\\"false\\\"></mat-datepicker>\\r\\n\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n\\r\\n                        <div class=\\\"col-sm-4\\\">\\r\\n                            <div class=\\\"form-group\\\">\\r\\n                                <label class=\\\"form-label\\\">Actual Date</label>\\r\\n                                <div class=\\\"input-group \\\">\\r\\n                                    <input matInput class=\\\"form-control-sm date-input\\\" style=\\\"width: 100%;\\\"\\r\\n                                        formControlName=\\\"actualDateStr\\\" [matDatepicker]=\\\"actualDateStr\\\" readonly>\\r\\n                                    <mat-datepicker-toggle matSuffix [for]=\\\"actualDateStr\\\"></mat-datepicker-toggle>\\r\\n                                    <mat-datepicker #actualDateStr disabled=\\\"false\\\"></mat-datepicker>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n\\r\\n                        <div class=\\\"col-sm-4\\\">\\r\\n                            <div class=\\\"form-group\\\">\\r\\n                                <label class=\\\"form-label\\\">Due Date</label>\\r\\n                                <div class=\\\"input-group \\\">\\r\\n                                    <input matInput class=\\\"form-control-sm date-input\\\" style=\\\"width: 100%;\\\"\\r\\n                                        formControlName=\\\"dueDateStr\\\" [matDatepicker]=\\\"dueDateStr\\\" readonly>\\r\\n                                    <mat-datepicker-toggle matSuffix [for]=\\\"dueDateStr\\\"></mat-datepicker-toggle>\\r\\n                                    <mat-datepicker #dueDateStr disabled=\\\"false\\\"></mat-datepicker>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n\\r\\n                        <div class=\\\"col-sm-4\\\">\\r\\n                            <div class=\\\"form-group\\\" (click)=\\\"openModal('quotation')\\\">\\r\\n                                <label class=\\\"form-label\\\">Related To</label>\\r\\n                                <input type=\\\"text\\\" class=\\\"form-control form-control-sm\\\" name=\\\"relatedTo\\\"\\r\\n                                    autocomplete=\\\"off\\\" formControlName=\\\"relatedTo\\\" />\\r\\n                            </div>\\r\\n                        </div>\\r\\n\\r\\n                        <div class=\\\"col-sm-4\\\">\\r\\n                            <div class=\\\"form-group\\\" (click)=\\\"viewCustomer()\\\">\\r\\n                                <label class=\\\"form-label\\\">Customer Name</label>\\r\\n                                <input type=\\\"text\\\" class=\\\"form-control form-control-sm\\\" name=\\\"customerName\\\"\\r\\n                                    autocomplete=\\\"off\\\" [class.is-invalid]=\\\"isControlInvalid('customerId')\\\"\\r\\n                                    [class.is-valid]=\\\"isControlValid('customerId')\\\" formControlName=\\\"customerName\\\" />\\r\\n                            </div>\\r\\n                        </div>\\r\\n\\r\\n                        <div class=\\\"col-sm-4\\\">\\r\\n                            <div class=\\\"form-group\\\" (click)=\\\"viewAgent('agent')\\\">\\r\\n                                <label class=\\\"form-label\\\">Assign To</label>\\r\\n                                <input type=\\\"text\\\" class=\\\"form-control form-control-sm\\\" name=\\\"assignName\\\"\\r\\n                                    autocomplete=\\\"off\\\" [class.is-invalid]=\\\"isControlInvalid('assignTo')\\\"\\r\\n                                    [class.is-valid]=\\\"isControlValid('assignTo')\\\" formControlName=\\\"assignName\\\" />\\r\\n                            </div>\\r\\n                        </div>\\r\\n\\r\\n                        <div class=\\\"col-sm-12\\\">\\r\\n                            <div class=\\\"form-group\\\">\\r\\n                                <label class=\\\"form-label\\\">Status</label>\\r\\n                                <select class=\\\"form-control form-control-sm\\\" name=\\\"status\\\" autocomplete=\\\"off\\\"\\r\\n                                    [class.is-invalid]=\\\"isControlInvalid('status')\\\"\\r\\n                                    [class.is-valid]=\\\"isControlValid('status')\\\" formControlName=\\\"status\\\">\\r\\n                                    <option value=\\\"01\\\">Open</option>\\r\\n                                    <option value=\\\"02\\\">Complete</option>\\r\\n                                    <option value=\\\"03\\\">Cancel</option>\\r\\n                                </select>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <button type=\\\"button\\\" class=\\\"btn btn-default btn-elevate\\\" (click)=\\\"backLocation()\\\">Cancel</button>\\r\\n                    <button type=\\\"submit\\\" class=\\\"btn btn-primary btn-elevate mx-2\\\" *ngIf=\\\"dataAccess.edit\\\">Save</button>\\r\\n                </form>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\";","export default \"<div class=\\\"modal-content\\\">\\r\\n  <div class=\\\"modal-header\\\">\\r\\n    <div class=\\\"modal-title h4 left-border-image\\\" id=\\\"example-modal-sizes-title-lg\\\">\\r\\n      Select ( {{type | titlecase }} ) in list\\r\\n    </div>\\r\\n\\r\\n  </div>\\r\\n  <div class=\\\"overlay overlay-block cursor-default modal-body\\\">\\r\\n    <!-- <form class=\\\"form\\\">  -->\\r\\n    <div class=\\\"form-group\\\" *ngIf=\\\"type == 'quotation' || type == 'policy'\\\">\\r\\n      <select class=\\\"form-control form-control-sm\\\" [(ngModel)]=\\\"type\\\" (change)=\\\"getDatalist()\\\">\\r\\n        <option *ngFor=\\\"let item of types\\\" value=\\\"{{item}}\\\">{{item | titlecase}}</option>\\r\\n      </select>\\r\\n    </div>\\r\\n      <app-material-table-view [selectable]=\\\"true\\\" [data]=\\\"dataList\\\" [colum]=\\\"tableData[type].ELEMENT_COL\\\"\\r\\n        [displayedColumns]=\\\"tableData[type].displayedColumns\\\" (emitter)=\\\"actionBtn($event)\\\">\\r\\n      </app-material-table-view>\\r\\n    <!-- <div class=\\\"table-responsive angular-bootstrap-table\\\">\\r\\n      <table class=\\\"table table-head-custom table-vertical-center\\\">\\r\\n        <thead>\\r\\n          <ng-container *ngFor=\\\"let item of tableData[type]\\\">\\r\\n            <th>\\r\\n              {{item.col}}\\r\\n            </th>\\r\\n          </ng-container>\\r\\n        </thead>\\r\\n        <tbody>\\r\\n          <ng-container *ngFor=\\\"let prod of dataList;let i = index\\\">\\r\\n            <tr (click)=\\\"selectedProd(prod.id || prod.empId,i)\\\" class=\\\"{{ (prod.id || prod.empId) == selected ? 'bg-primary text-white' : '' }}\\\"\\r\\n              [ngClass]=\\\"{'pointer': type != 'page'}\\\">\\r\\n              <ng-container *ngFor=\\\"let item of tableData[type]\\\">\\r\\n                <td>\\r\\n                  {{prod[item.key]}}\\r\\n                </td>\\r\\n              </ng-container>\\r\\n            </tr>\\r\\n          </ng-container>\\r\\n        </tbody>\\r\\n       </table>\\r\\n       </div> -->\\r\\n  </div>\\r\\n  <div class=\\\"modal-footer\\\">\\r\\n    <!-- <button type=\\\"button\\\" *ngIf=\\\"id\\\" class=\\\"btn btn-danger btn-elevate mr-2\\\"\\r\\n      (click)=\\\"deleteEditModal()\\\">Delete</button> -->\\r\\n    <button type=\\\"button\\\" class=\\\"btn btn-light btn-elevate mr-2\\\" (click)=\\\"modal.dismiss()\\\">Cancel</button>\\r\\n    <button type=\\\"submit\\\" class=\\\"btn btn-primary btn-elevate\\\" (click)=\\\"save()\\\" [disabled]=\\\"!selected.id && !selected.empId\\\">Save</button>\\r\\n  </div>\\r\\n</div>\";"],"names":[],"sourceRoot":"webpack:///"}