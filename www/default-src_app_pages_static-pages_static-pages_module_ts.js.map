{"version":3,"file":"default-src_app_pages_static-pages_static-pages_module_ts.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;AAAyD;AACkL;AACnG;AACvF;AACa;AAC+B;AAChB;;AAE7E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACwC;AACI;AACK;AACA;;AAEjD;AACA;AACA;AACA,0BAA0B,SAAS;AACnC;AACA,6CAA6C,yDAAc;AAC3D;AACA,sBAAsB,2BAA2B;AACjD,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,6DAAiB;AAC9B,iBAAiB,yDAAU;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC,qEAAa,CAAC,kEAAU,CAAC,0EAAkB,CAAC,qEAAa;AAC1F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6CAA6C,eAAe;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B,uDAAY;AACtC;AACA;AACA;AACA;AACA;AACA,gCAAgC,uDAAY;AAC5C;AACA;AACA;AACA,qBAAqB;AACrB,0BAA0B,iBAAiB,4EAAqB;AAChE;AACA,oBAAoB;AACpB;AACA,wBAAwB,4EAAqB;AAC7C;AACA;AACA;AACA,oBAAoB,UAAU,0BAA0B;AACxiCAAiC,+DAAwB,CAAC,qDAAiB,GAAG,+DAAwB,CAAC,2DAAmB,GAAG,+DAAwB,CAAC,4DAAwB,GAAG,+DAAwB,cAAc,+DAAwB,oCAAoC,+DAAwB,CAAC,uFAAqB;AAC5X,oCAAoC,+DAAwB,GAAG,6GAA6G;AAC5K,QAAQ,yDAAkB;AAC1B,QAAQ,yDAAkB;AAC1B,QAAQ,yDAAkB;AAC1B,MAAM;AACN;AACA,QAAQ,4DAAqB,MAAM,yDAAkB;AACrD,QAAQ,4DAAqB,MAAM,yDAAkB;AACrD,QAAQ,4DAAqB,MAAM,yDAAkB;AACrD,OAAO,kHAAkH;AACzH,QAAQ,4DAAqB;AAC7B,QAAQ,yDAAkB;AAC1B,QAAQ,yDAAkB;AAC1B,OAAO,YAAY,6RAA6R,aAAa,gDAAgD,2CAA2C,gEAAyB,qCAAqC,wEAAiC,g0BAAg0B;AACvzC,QAAQ,6DAAsB;AAC9B,QAAQ,4DAAqB;AAC7B,QAAQ,4DAAqB;AAC7B,QAAQ,4DAAqB;AAC7B,QAAQ,wDAAiB,8EAA8E,oCAAoC,6EAA6E,mCAAmC;AAC3P,QAAQ,0DAAmB;AAC3B,QAAQ,4DAAqB;AAC7B,QAAQ,uDAAgB;AACxB,QAAQ,4DAAqB;AAC7B,QAAQ,uDAAgB;AACxB,QAAQ,0DAAmB;AAC3B,QAAQ,0DAAmB;AAC3B,QAAQ,0DAAmB;AAC3B,QAAQ,4DAAqB;AAC7B,QAAQ,wDAAiB,8FAA8F,kCAAkC;AACzJ,QAAQ,4DAAqB;AAC7B,QAAQ,oDAAa;AACrB,QAAQ,0DAAmB;AAC3B,QAAQ,0DAAmB;AAC3B,QAAQ,0DAAmB;AAC3B,QAAQ,0DAAmB;AAC3B,MAAM;AACN,oBAAoB,yDAAkB;AACtC,oBAAoB,yDAAkB;AACtC,QAAQ,yDAAkB;AAC1B,QAAQ,uDAAgB;AACxB,QAAQ,yDAAkB;AAC1B,QAAQ,uDAAgB;AACxB,QAAQ,wDAAiB;AACzB,QAAQ,yDAAkB;AAC1B,QAAQ,uDAAgB;AACxB,QAAQ,wDAAiB,0JAA0J,6DAAsB;AACzM,OAAO,eAAe,6DAAgB,EAAE,qEAAwB,+BAA+B,qBAAqB,YAAY,eAAe,iBAAiB,mBAAmB,aAAa,wCAAwC,gEAAgE,kCAAkC,0EAA0E,mCAAmC,+BAA+B,YAAY,wHAAwH,eAAe,wBAAwB,aAAa,OAAO,mBAAmB,mBAAmB,eAAe,eAAe,0BAA0B,mBAAmB,gBAAgB,uBAAuB,uDAAuD,QAAQ,qDAAqD,QAAQ,qFAAqF,iBAAiB,cAAc,qFAAqF,gBAAgB,eAAe,qCAAqC,cAAc,eAAe,kCAAkC,kBAAkB,UAAU,WAAW,YAAY,SAAS,OAAO,+BAA+B,2BAA2B,8BAA8B,2DAA2D,gBAAgB,4CAA4C,UAAU,QAAQ,wBAAwB,YAAY,WAAW,kBAAkB,sBAAsB,kBAAkB,WAAW,YAAY,cAAc,kBAAkB,wBAAwB,SAAS,UAAU,kCAAkC,UAAU,WAAW,8CAA8C,2BAA2B,qCAAqC,sBAAsB,gGAAgG,gBAAgB,2CAA2C,kBAAkB,qBAAqB,sBAAsB,YAAY,WAAW,UAAU,oBAAoB,wGAAwG,YAAY,oCAAoC,WAAW,YAAY,eAAe,gEAAgE,YAAY,8FAA8F,YAAY,mIAAmI,UAAU,oBAAoB,gEAAgE,cAAc,kGAAkG,iBAAiB,uFAAuF,mBAAmB,mBAAmB,4CAA4C;AAC3iG;AACA,MAAM,MAAM,qDAAU,EAAE;AACxB,MAAM,MAAM,2DAAY,EAAE;AAC1B,MAAM,MAAM,4DAAiB,EAAE;AAC/B,MAAM,6BAA6B,MAAM,oDAAS,uBAAuB,GAAG;AAC5E,MAAM,gCAAgC,MAAM,iDAAM,6CAA6C,GAAG;AAClG,MAAM,6BAA6B,MAAM,mDAAQ,EAAE,IAAI,MAAM,iDAAM,SAAS,uFAAqB,IAAI;AACrG;AACA;AACA,iBAAiB,MAAM,oDAAS,6BAA6B;AAC7D,oBAAoB,MAAM,oDAAS,wBAAwB;AAC3D,aAAa,MAAM,gDAAK,EAAE;AAC1B,WAAW,MAAM,gDAAK,EAAE;AACxB,sBAAsB,MAAM,gDAAK,EAAE;AACnC,kBAAkB,MAAM,gDAAK,yBAAyB;AACtD,uBAAuB,MAAM,gDAAK,8BAA8B;AAChE,iBAAiB,MAAM,gDAAK,EAAE;AAC9B,gBAAgB,MAAM,gDAAK,EAAE;AAC7B,eAAe,MAAM,iDAAM,EAAE;AAC7B,qBAAqB,MAAM,iDAAM,EAAE;AACnC,sBAAsB,MAAM,oDAAS,oBAAoB;AACzD;AACA,eAAe,mDAAmD,+DAAwB;AAC1F,cAAc,oDAAS;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,yuCAAyuC,mBAAmB,kVAAkV;AAC9kD;AACA;AACA,+BAA+B,iEAAsB;AACrD,iCAAiC,yEAA8B;AAC/D,4CAA4C,qBAAqB,YAAY,eAAe,iBAAiB,mBAAmB,aAAa,wCAAwC,gEAAgE,kCAAkC,0EAA0E,mCAAmC,+BAA+B,YAAY,wHAAwH,eAAe,wBAAwB,aAAa,OAAO,mBAAmB,mBAAmB,eAAe,eAAe,0BAA0B,mBAAmB,gBAAgB,uBAAuB,uDAAuD,QAAQ,qDAAqD,QAAQ,qFAAqF,iBAAiB,cAAc,qFAAqF,gBAAgB,eAAe,qCAAqC,cAAc,eAAe,kCAAkC,kBAAkB,UAAU,WAAW,YAAY,SAAS,OAAO,+BAA+B,2BAA2B,8BAA8B,2DAA2D,gBAAgB,4CAA4C,UAAU,QAAQ,wBAAwB,YAAY,WAAW,kBAAkB,sBAAsB,kBAAkB,WAAW,YAAY,cAAc,kBAAkB,wBAAwB,SAAS,UAAU,kCAAkC,UAAU,WAAW,8CAA8C,2BAA2B,qCAAqC,sBAAsB,gGAAgG,gBAAgB,2CAA2C,kBAAkB,qBAAqB,sBAAsB,YAAY,WAAW,UAAU,oBAAoB,wGAAwG,YAAY,oCAAoC,WAAW,YAAY,eAAe,gEAAgE,YAAY,8FAA8F,YAAY,mIAAmI,UAAU,oBAAoB,gEAAgE,cAAc,kGAAkG,iBAAiB,uFAAuF,mBAAmB,mBAAmB;AAC58F,aAAa;AACb,KAAK,iBAAiB,UAAU,MAAM,qDAAiB,EAAE,IAAI,MAAM,2DAAmB,EAAE,IAAI,MAAM,4DAAwB,EAAE,IAAI;AAChI,sBAAsB,oDAAS;AAC/B;AACA,aAAa,GAAG,IAAI;AACpB,sBAAsB,iDAAM;AAC5B;AACA,aAAa,GAAG,IAAI;AACpB,sBAAsB,mDAAQ;AAC9B,aAAa;AACb,sBAAsB,iDAAM;AAC5B,uBAAuB,uFAAqB;AAC5C,aAAa,GAAG,IAAI,IAAI;AACxB,kBAAkB,gDAAK;AACvB,SAAS;AACT,kBAAkB,gDAAK;AACvB,SAAS;AACT,kBAAkB,gDAAK;AACvB,SAAS;AACT,kBAAkB,gDAAK;AACvB;AACA,SAAS;AACT,kBAAkB,gDAAK;AACvB;AACA,SAAS;AACT,kBAAkB,iDAAM;AACxB,SAAS;AACT,kBAAkB,iDAAM;AACxB,SAAS;AACT,kBAAkB,gDAAK;AACvB,SAAS;AACT,kBAAkB,gDAAK;AACvB,SAAS;AACT,kBAAkB,oDAAS;AAC3B;AACA,SAAS;AACT,kBAAkB,oDAAS;AAC3B;AACA,SAAS;AACT,kBAAkB,oDAAS;AAC3B;AACA,SAAS,GAAG,IAAI;;AAEhB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,yDAAa;AAC1B,iBAAiB,yDAAU;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8CAA8C,qEAAyB;AACvE;AACA,mEAAmE,kDAAkD,6DAA6D,wGAAwG,mEAA4B,+EAA+E;AACrY,qDAAqD,+DAAwB,GAAG,0OAA0O,gEAAyB,yCAAyC,wEAAiC,GAAG;AACha,eAAe,mDAAmD,+DAAwB;AAC1F,cAAc,oDAAS;AACvB;AACA;AACA;AACA;AACA,aAAa;AACb,KAAK,iBAAiB;;AAEtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2GAA2G;AAC3G,4DAA4D,8DAAuB,GAAG,8CAA8C;AACpI,4DAA4D,8DAAuB,GAAG;AACtF,eAAe,mDAAmD,+DAAwB;AAC1F,cAAc,mDAAQ;AACtB;AACA;AACA;AACA,aAAa;AACb,KAAK,iBAAiB;AACtB,eAAe,mDAAmD,gEAAyB,2CAA2C,6FAA6F,IAAI;AACvO;AACA;AACA,uEAAuE;AACvE,0CAA0C,8DAAuB,GAAG,4BAA4B;AAChG,0CAA0C,8DAAuB,GAAG;AACpE;AACA,YAAY,mEAAe;AAC3B,YAAY,mEAAe;AAC3B,YAAY,mEAAe;AAC3B,mDAAmD,mEAAe,GAAG;AACrE,eAAe,mDAAmD,+DAAwB;AAC1F,cAAc,mDAAQ;AACtB;AACA;AACA;AACA,oBAAoB,mEAAe;AACnC,oBAAoB,mEAAe;AACnC,oBAAoB,mEAAe;AACnC;AACA;AACA;AACA;AACA,oBAAoB,mEAAe;AACnC;AACA;AACA,aAAa;AACb,KAAK,iBAAiB;AACtB,eAAe,mDAAmD,gEAAyB,yBAAyB,4BAA4B,0BAA0B,yBAAyB,gDAAgD,mEAAe;AAClQ,QAAQ,mEAAe;AACvB,QAAQ,mEAAe,IAAI,yBAAyB,gEAAgE,mEAAe,MAAM,IAAI;;AAE7I;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEuP;;;;;;;;;;;;;;;;;;;AC7bvM;AACD;AAIxC,SAAS,cAAc,CAAC,YAA+B,EAAE,QAAa,EAAE,MAAqB,EAAE,UAAmB,KAAK;IAE5H,IAAI,KAAK,CAAC,OAAO,CAAC,QAAQ,CAAC,IAAI,QAAQ,CAAC,MAAM,GAAG,CAAC,EAAE;QAClD,OAAO,wCAAE,CAAC,QAAQ,CAAC,CAAC,IAAI,CAAC,mDAAG,CAAC,CAAC,MAAa,EAAE,EAAE;YAC7C,IAAI,UAAU,GAAG,EAAE;YACnB,IAAI,QAAQ,GAAG,MAAM,CAAC,GAAG,CAAC,CAAC,GAAG,EAAE,EAAE;gBAChC,IAAI,SAAS,GAAI,GAAG,CAAC,IAAc,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,KAAK,GAAG,EAAa,EAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,KAAK,GAAG,EAAa,EAAC,UAAU,CAAC,KAAK,CAAC,CAAC;gBACxI,IAAI,SAAS,CAAC,MAAM,GAAG,CAAC,EAAE;oBACxB,IAAI,QAAQ,GAAG,SAAS,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE;wBAC/B,IAAI,UAAU,GAAG,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,IAAI,IAAI,CAAC,CAAC,MAAM,CAAC;wBACzD,IAAI,UAAU,CAAC,UAAU,EAAE;4BACzB,OAAO;gCACL,QAAQ,EAAE,CAAC,CAAC,KAAK;gCACjB,UAAU,EAAE,UAAU,CAAC,UAAU;gCACjC,QAAQ,EAAE,IAAI;6BACf;yBACF;oBACH,CAAC,CAAC;oBACF,UAAU,CAAC,IAAI,CAAC,GAAG,QAAQ,CAAC;iBAC7B;YACH,CAAC,CAAC;YAEF,OAAO,EAAE,MAAM,EAAE,UAAU,EAAE;QAC/B,CAAC,CAAC,EAAE,wDAAQ,CAAC,CAAC,MAAW,EAAE,EAAE;YAE3B,IAAI,MAAM,CAAC,UAAU,CAAC,MAAM,GAAG,CAAC,EAAE;gBAChC,IAAI,QAAQ,GAAG;oBACb,iBAAiB,EAAE,MAAM,CAAC,UAAU;iBACrC;gBACD,OAAO,YAAY,CAAC,cAAc,CAAC,QAAQ,CAAC,CAAC,IAAI,CAAC,mDAAG,CAAC,CAAC,YAAiB,EAAE,EAAE;oBAC1E,OAAO,MAAM,CAAC,MAAM,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE;wBAC9B,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE;4BAChC,IAAI,CAAC,CAAC,CAAC,KAAK,GAAG,EAAE,CAAC,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,KAAK,GAAG,EAAE,CAAC,CAAC,UAAU,CAAC,KAAK,CAAC,EAAE;gCACvE,IAAI,UAAU,GAAG,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,IAAI,IAAI,CAAC,CAAC,MAAM,CAAC;gCACzD,IAAI,KAAK,GAAG,YAAY,CAAC,SAAS,CAAC,MAAM,CAAC,EAAE,CAAC,MAAM,CAAC,MAAM,IAAI,CAAC,CAAC,KAAK,IAAI,UAAU,CAAC,UAAU,IAAI,MAAM,CAAC,QAAQ,CAAC;gCAClH,IAAI,KAAK,IAAI,CAAC,EAAE;oCACd,IAAI,OAAO,EAAE;wCACX,OAAO,CAAC,CAAC,EAAE,EAAE,MAAM,EAAE,CAAC,CAAC,MAAM,GAAG,OAAO,EAAE,KAAK,EAAE,YAAY,CAAC,KAAK,CAAC,CAAC,QAAQ,EAAE,CAAC;qCAChF;yCAAM;wCACL,CAAC,CAAC,KAAK,GAAG,YAAY,CAAC,KAAK,CAAC,CAAC,QAAQ;qCACvC;iCACF;6BACF;4BACD,OAAO,CAAC;wBACV,CAAC,CAAC;wBACF,OAAO,IAAI;oBACb,CAAC,CAAC;oBACF,gBAAgB;gBAClB,CAAC,CAAC,CAAC;aACJ;YACD,OAAO,wCAAE,CAAC,MAAM,CAAC,MAAM,CAAC;QAC1B,CAAC,CAAC,CAAC;KACJ;IACD,OAAO,wCAAE,CAAC,QAAQ,CAAC;AAErB,CAAC;AAED,sEAAsE;AACtE,8BAA8B;AAC9B,yEAAyE;AACzE,+CAA+C;AAC/C,6BAA6B;AAC7B,OAAO;AACP,2BAA2B;AAE3B,8FAA8F;AAC9F,0CAA0C;AAE1C,iDAAiD;AACjD,KAAK;AACL,IAAI;AACJ,2HAA2H;AAC3H,2BAA2B;AAE3B,0DAA0D;AAC1D,6DAA6D;AAC7D,8CAA8C;AAC9C,mGAAmG;AAEnG,sCAAsC;AACtC,6BAA6B;AAC7B,oCAAoC;AACpC,cAAc;AACd,4DAA4D;AAC5D,wEAAwE;AACxE,2CAA2C;AAC3C,yBAAyB;AACzB,qCAAqC;AACrC,qDAAqD;AACrD,iCAAiC;AACjC,kBAAkB;AAClB,gBAAgB;AAEhB,eAAe;AAEf,gFAAgF;AAChF,wCAAwC;AACxC,mFAAmF;AACnF,yDAAyD;AACzD,uCAAuC;AACvC,iBAAiB;AACjB,qCAAqC;AAErC,wGAAwG;AACxG,oDAAoD;AAEpD,2DAA2D;AAC3D,eAAe;AACf,cAAc;AACd,YAAY;AACZ,yBAAyB;AACzB,iCAAiC;AACjC,uDAAuD;AAEvD,iBAAiB;AACjB,gBAAgB;AAChB,YAAY;AACZ,UAAU;AACV,4BAA4B;AAC5B,wBAAwB;AACxB,YAAY;AACZ,MAAM;AACN,wBAAwB;AAExB,IAAI;;;;;;;;;;;;;;;;;;;;;;;;;ACjI8C;AACP;AACL;AACwB;AACE;AACO;AACX;AACsB;AAGlF,MAAM,gBAAgB,GAAG,GAAG,yEAAkB,WAAW,CAAC;IAG7C,eAAe,SAAf,eAAgB,SAAQ,4EAAgC;IAEnE,YAAsB,UAAsB,EAAU,UAA6B;QACjF,KAAK,CAAC,UAAU,EAAE,gBAAgB,CAAC,CAAC;QADhB,eAAU,GAAV,UAAU,CAAY;QAAU,eAAU,GAAV,UAAU,CAAmB;IAEnF,CAAC;IAED,SAAS,CAAC,KAAU,EAAE,UAAe,EAAE,EAAO,EAAE,OAAgB,KAAK,EAAE,SAAwB,EAAE,EAAE,UAAmB,KAAK;QACzH,OAAO,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,gBAAgB,GAAG,GAAG,GAAG,KAAK,GAAG,GAAG,GAAG,UAAU,GAAG,GAAG,GAAG,EAAE,CAAC,CAAC,IAAI,CAAC,wDAAQ,CAAC,CAAC,GAAQ,EAAE,EAAE;YAClH,IAAI,IAAI,EAAE;gBACR,OAAO,qEAAc,CAAC,IAAI,CAAC,UAAU,EAAE,GAAG,EAAE,MAAM,EAAE,OAAO,CAAC;aAC7D;YACD,OAAO,wCAAE,CAAC,GAAG,CAAC;QAChB,CAAC,CAAC,CAAC;IACL,CAAC;IAED,UAAU,CAAC,KAAK,EAAE,KAAK,EAAE,EAAE;QACzB,OAAO,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,gBAAgB,GAAG,GAAG,GAAG,KAAK,GAAG,GAAG,GAAG,KAAK,GAAG,GAAG,GAAG,EAAE,CAAC;IACxF,CAAC;IAED,cAAc,CAAC,QAAa;QAC1B,OAAO,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,gBAAgB,GAAG,WAAW,EAAE,QAAQ,CAAC;IACtE,CAAC;CAKF;;YAvCQ,4DAAU;YAOV,uFAAiB;;AAMb,eAAe;IAD3B,yDAAU,CAAC,EAAE,UAAU,EAAE,MAAM,EAAE,CAAC;GACtB,eAAe,CA0B3B;AA1B2B;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACbkB;AACoD;AAEzB;AAGI;AAEM;AAEJ;AACT;AACjB;AACmC;AAC1B;IAMjD,kBAAkB,SAAlB,kBAAkB;IAoD7B,YAAoB,eAAgC,EAAU,SAAgC,EAAU,KAAwB,EAAU,WAA+B,EAAU,UAAuB,EAAU,eAAgC,EAAU,cAA8B;QAAxQ,oBAAe,GAAf,eAAe,CAAiB;QAAU,cAAS,GAAT,SAAS,CAAuB;QAAU,UAAK,GAAL,KAAK,CAAmB;QAAU,gBAAW,GAAX,WAAW,CAAoB;QAAU,eAAU,GAAV,UAAU,CAAa;QAAU,oBAAe,GAAf,eAAe,CAAiB;QAAU,mBAAc,GAAd,cAAc,CAAgB;QAhDlR,gBAAW,GAAG,IAAI,wDAAY,EAAoB,CAAC;QAC7D,WAAM,GAAG;YACP,KAAK,EAAE,KAAK;YACZ,MAAM,EAAE,KAAK;YACb,SAAS,EAAE,KAAK;SACjB;QAED,eAAU,GAAQ,EAAE;QACpB,gBAAW,GAAmB,EAAE;QACvB,eAAU,GAAW,EAAE;QAEhC,eAAU,GAAQ,EAAE;QACpB,cAAS,GAAG,IAAI;QAChB,kBAAa,GAAG;YACd,SAAS,EAAE,GAAG;YACd,SAAS,EAAE,GAAG;YACd,eAAe,EAAE,IAAI;YACrB,eAAe,EAAE,GAAG;YACpB,eAAe,EAAE,IAAI;YACrB,eAAe,EAAE,CAAC;YAClB,eAAe,EAAE,GAAG;YACpB,eAAe,EAAE,GAAG;YACpB,eAAe,EAAE,GAAG;YACpB,eAAe,EAAE,GAAG;YACpB,eAAe,EAAE,IAAI;YACrB,SAAS,EAAE,GAAG;YACd,SAAS,EAAE,GAAG;YACd,SAAS,EAAE,GAAG;YACd,SAAS,EAAE,GAAG;YACd,SAAS,EAAE,IAAI;YACf,SAAS,EAAE,IAAI;YACf,SAAS,EAAE,GAAG;SACf;QACD,mBAAc,GAAG;YACf,SAAS,EAAE;gBACT,EAAE,MAAM,EAAE,OAAO,EAAE,OAAO,EAAE,UAAU,EAAE;gBACxC,EAAE,MAAM,EAAE,OAAO,EAAE,OAAO,EAAE,WAAW,EAAE;gBACzC,EAAE,MAAM,EAAE,OAAO,EAAE,OAAO,EAAE,SAAS,EAAE;gBACvC,EAAE,MAAM,EAAE,OAAO,EAAE,OAAO,EAAE,cAAc,EAAE;gBAC5C,EAAE,MAAM,EAAE,OAAO,EAAE,OAAO,EAAE,+BAA+B,EAAE;aAC9D;YACD,SAAS,EAAE;gBACT,EAAE,MAAM,EAAE,OAAO,EAAE,OAAO,EAAE,sBAAsB,EAAE;gBACpD,EAAE,MAAM,EAAE,OAAO,EAAE,OAAO,EAAE,uBAAuB,EAAE;gBACrD,EAAE,MAAM,EAAE,OAAO,EAAE,OAAO,EAAE,sBAAsB,EAAE;gBACpD,EAAE,MAAM,EAAE,OAAO,EAAE,OAAO,EAAE,uBAAuB,EAAE;aACtD;SACF;IAC+R,CAAC;IAE3R,QAAQ;;YACZ,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,WAAW,CAAC,WAAW;YACzC,IAAI,IAAI,CAAC,OAAO,CAAC,IAAI,IAAI,QAAQ,EAAE;gBACjC,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,SAAS,EAAE;aACnC;YACD,IAAI,IAAI,CAAC,OAAO,CAAC,MAAM,IAAI,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,MAAM,GAAG,CAAC,EAAE;gBACzD,MAAM,IAAI,CAAC,cAAc,CAAC,QAAQ,EAAE;gBACpC,IAAI,CAAC,MAAM,GAAG;oBACZ,KAAK,EAAE,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,UAAU;oBACxC,MAAM,EAAE,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,IAAI;oBACnC,SAAS,EAAE,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,OAAO;iBAC1C;gBACD,IAAI,SAAS,GAAG,IAAI;gBACpB,IAAI,QAAQ,GAAG;oBACb,WAAW,EAAE,IAAI,CAAC,WAAW;oBAC7B,QAAQ,EAAE,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,GAAG,OAAO,CAAC,CAAC,EAAE,EAAC,CAAC,CAAC;iBACxD;gBACD,IAAI,OAAO,GAAQ,MAAM,IAAI,CAAC,eAAe,CAAC,UAAU,CAAC,QAAQ,CAAC,CAAC,SAAS,EAAE;gBAC9E,IAAI,OAAO,CAAC,MAAM,IAAI,CAAC,EAAE;oBACvB,QAAQ,CAAC,WAAW,GAAG,IAAI,CAAC,KAAK;oBACjC,OAAO,GAAG,MAAM,IAAI,CAAC,eAAe,CAAC,UAAU,CAAC,QAAQ,CAAC,CAAC,SAAS,EAAE;iBACtE;gBACD,KAAK,MAAM,IAAI,IAAI,IAAI,CAAC,OAAO,CAAC,MAAM,EAAE;oBACtC,IAAI,CAAC,MAAM,CAAC,GAAG,IAAI;oBACnB,IAAI,IAAI,CAAC,aAAa,EAAE;wBACtB,IAAI,CAAC,MAAM,CAAC,GAAG,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,IAAI;qBAC/G;oBACD,IAAI,IAAI,CAAC,OAAO,CAAC,IAAI,IAAI,QAAQ,EAAE;wBACjC,IAAI,CAAC,eAAe,CAAC,GAAG,GAAG;wBAC3B,IAAI,CAAC,SAAS,CAAC,GAAG,GAAG;wBACrB,IAAI,CAAC,YAAY,CAAC,GAAG,GAAG;qBACzB;oBACD,IAAI,QAAQ,GAAG,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,OAAO,IAAI,IAAI,CAAC,EAAE,CAAC;oBACtD,sBAAsB;oBACtB,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,EAAE,CAAC,GAAG;wBACzB,OAAO,EAAE,QAAQ,IAAI,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,KAAK;wBAChD,GAAG,EAAE,QAAQ,CAAC,CAAC,CAAC,QAAQ,CAAC,UAAU,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;wBAC5C,IAAI,EAAE,QAAQ,CAAC,CAAC,CAAC,QAAQ,CAAC,IAAI,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;wBACvC,OAAO,EAAE,QAAQ,CAAC,CAAC,CAAC,QAAQ,CAAC,OAAO,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;wBAC7C,MAAM,EAAE,QAAQ,CAAC,CAAC,CAAC,QAAQ,CAAC,MAAM,IAAI,OAAO,CAAC,CAAC,CAAC,OAAO;qBACxD;oBAED,IAAI,IAAI,CAAC,UAAU,EAAE;wBACnB,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,aAAa,EAAE,YAAY,EAAE,IAAI,CAAC,EAAE,EAAE,KAAK,EAAE,IAAI,CAAC;qBAC1E;oBACD,IAAI,IAAI,CAAC,IAAI,EAAE;wBACb,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,OAAO,EAAE,YAAY,EAAE,IAAI,CAAC,EAAE,EAAE,MAAM,EAAE,IAAI,CAAC;qBACrE;oBACD,IAAI,IAAI,CAAC,OAAO,EAAE;wBAChB,IAAI,IAAI,CAAC,IAAI,IAAI,aAAa,IAAI,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,OAAO,EAAE;yBAEnE;6BAAM;4BACL,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,UAAU,EAAE,YAAY,EAAE,IAAI,CAAC,EAAE,EAAE,SAAS,EAAE,IAAI,CAAC;yBAC3E;qBACF;oBACD,IAAI;iBACL;gBACD,kDAAkD;gBAClD,8CAA8C;gBAC9C,gCAAgC;gBAChC,YAAY;gBACZ,sFAAsF;gBACtF,wBAAwB;gBACxB,wBAAwB;gBACxB,QAAQ;gBACR,mCAAmC;gBACnC,0CAA0C;gBAC1C,sDAAsD;gBACtD,iDAAiD;gBACjD,sDAAsD;gBACtD,QAAQ;gBACR,MAAM;gBACN,IAAI;gBACJ,IAAI,CAAC,SAAS,GAAG,KAAK;gBACtB,MAAM,IAAI,CAAC,cAAc,CAAC,UAAU,EAAE;gBACtC,IAAI,CAAC,KAAK,CAAC,aAAa,EAAE,CAAC;aAE5B;iBAAM;gBACL,IAAI,CAAC,SAAS,GAAG,KAAK;aACvB;QACH,CAAC;KAAA;IAED,YAAY,CAAC,OAAe,EAAE,OAAe,EAAE,OAAO,EAAE,MAAc,EAAE,KAAU;QAEhF,IAAI,IAAI,CAAC,OAAO,CAAC,IAAI,IAAI,QAAQ,IAAI,MAAM,IAAI,SAAS,EAAE;YACxD,IAAI,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,EAAE;gBAC3B,IAAI,cAAc,GAAG,KAAK,CAAC,IAAI,IAAI,YAAY,CAAC,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,UAAU;gBAClG,IAAI,KAAK,GAAG,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,CAAC,cAAc,CAAC,CAAC,SAAS,CAAC,CAAC,GAAG,EAAE,EAAE;oBACpE,IAAI,CAAC,OAAO,CAAC,CAAC,OAAO,CAAC,CAAC,MAAM,CAAC,GAAG,GAAG;oBACpC,IAAI,CAAC,KAAK,CAAC,aAAa,EAAE,CAAC;gBAC7B,CAAC,CAAC;gBACF,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,KAAK,CAAC;aAC7B;iBAAM;gBACL,IAAI,OAAO,EAAE;oBACX,6FAA6F;oBAC7F,8DAA8D;oBAC9D,SAAS;oBACT,IAAI,CAAC,OAAO,CAAC,CAAC,OAAO,CAAC,CAAC,MAAM,CAAC,GAAG,OAAO;oBACxC,IAAI;iBACL;aACF;SACF;aAAM,IAAI,IAAI,CAAC,OAAO,CAAC,IAAI,IAAI,QAAQ,IAAI,MAAM,IAAI,SAAS,EAAE;YAC/D,IAAI,CAAC,OAAO,CAAC,CAAC,OAAO,CAAC,CAAC,MAAM,CAAC,GAAG,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC;SACzD;aACI;YACH,IAAI,IAAI,CAAC,SAAS,CAAC,OAAO,GAAG,QAAQ,CAAC,EAAE;gBACtC,IAAI,KAAK,GAAG,IAAI,CAAC,SAAS,CAAC,OAAO,GAAG,QAAQ,CAAC,CAAC,SAAS,CAAC,CAAC,GAAG,EAAE,EAAE;oBAC/D,IAAI,CAAC,OAAO,CAAC,CAAC,OAAO,CAAC,CAAC,MAAM,CAAC,GAAG,GAAG;oBACpC,IAAI,CAAC,KAAK,CAAC,aAAa,EAAE,CAAC;gBAC7B,CAAC,CAAC;gBACF,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,KAAK,CAAC;aAC7B;iBAAM;gBACL,IAAI,OAAO;oBACT,IAAI,CAAC,OAAO,CAAC,CAAC,OAAO,CAAC,CAAC,MAAM,CAAC,GAAG,OAAO;aAC3C;SACF;IACH,CAAC;IAEK,QAAQ;;YACZ,MAAM,UAAU,GAAG,IAAI,CAAC,eAAe;YACvC,MAAM,YAAY,GAAG,IAAI,CAAC,UAAU;YACpC,MAAM,UAAU,CAAC,SAAS,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,SAAS,EAAE;YACxD,KAAK,IAAI,KAAK,IAAI,IAAI,CAAC,OAAO,CAAC,MAAM,EAAE;gBACrC,IAAI,YAAY,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC,OAAO,EAAE;oBAClC,IAAI,GAAG,GAAG,YAAY,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,YAAY,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC,GAAG,GAAG,EAAE,CAAC,CAAC,CAAC,EAAE;oBAC3E,IAAI,IAAI,GAAG,YAAY,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,YAAY,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC,IAAI,GAAG,EAAE,CAAC,CAAC,CAAC,EAAE;oBAC9E,IAAI,OAAO,GAAG,YAAY,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,YAAY,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC,OAAO,GAAG,EAAE,CAAC,CAAC,CAAC,EAAE;oBACvF,IAAI,MAAM,GAAG,YAAY,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,YAAY,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC,MAAM,GAAG,EAAE,CAAC,CAAC,CAAC,EAAE;oBACpF,IAAI;wBACF,IAAI,QAAQ,GAAG;4BACb,OAAO,EAAE,KAAK,CAAC,EAAE;4BACjB,WAAW,EAAE,IAAI,CAAC,WAAW;4BAC7B,MAAM,EAAE,MAAM;4BACd,UAAU,EAAE,CAAC,GAAG,CAAC,CAAC,OAAO,CAAC,GAAG,EAAE,EAAE,CAAC,CAAC,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC,CAAC,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC;4BACxE,IAAI,EAAE,CAAC,IAAI,CAAC,CAAC,OAAO,CAAC,GAAG,EAAE,EAAE,CAAC,CAAC,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC,CAAC,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC;4BACnE,OAAO,EAAE,CAAC,OAAO,CAAC,CAAC,OAAO,CAAC,GAAG,EAAE,EAAE,CAAC,CAAC,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC,CAAC,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC;yBAC1E;wBACD,IAAI,GAAG,GAAG,MAAM,UAAU,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,SAAS,EAAE;qBACtD;oBAAC,OAAO,KAAK,EAAE;wBACd,sBAAsB;qBAEvB;iBACF;aAEF;YACD,IAAI,IAAI,CAAC,OAAO,CAAC,IAAI,IAAI,QAAQ,EAAE;gBACjC,MAAM,IAAI,CAAC,YAAY,EAAE,CAAC,SAAS,EAAE;aACtC;YACD,IAAI,IAAI,CAAC,OAAO,CAAC,IAAI,IAAI,QAAQ,EAAE;gBACjC,MAAM,IAAI,CAAC,gBAAgB,EAAE,CAAC,SAAS,EAAE;aAC1C;YACD,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;YAEnB,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,EAAE,IAAI,EAAE,0EAAqB,EAAE,CAAC;QACxD,CAAC;KAAA;IAED,QAAQ;QACN,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,EAAE,IAAI,EAAE,0EAAqB,EAAE,CAAC;IACxD,CAAC;IAED,YAAY;IAEZ,CAAC;IAED,YAAY,CAAC,KAAY;QACvB,IAAI,KAAK,CAAC,IAAI,IAAI,aAAa,IAAI,IAAI,CAAC,OAAO,CAAC,IAAI,IAAI,QAAQ,EAAE;YAChE,IAAI,KAAK,GAAG,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,IAAI,IAAI,aAAa,CAAC;YAClE,IAAI,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC,OAAO,EAAE;gBACrC,IAAI,OAAO,GAAG,IAAI,CAAC,UAAU,EAAE;gBAC/B,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC,SAAS,CAAC,GAAG,OAAO,GAAG,IAAI;aACtD;SACF;aAAM,IAAI,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC,OAAO,IAAI,KAAK,CAAC,IAAI,IAAI,aAAa,EAAE;YAC3E,IAAI,OAAO,GAAG,IAAI,CAAC,UAAU,EAAE;YAC/B,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC,SAAS,CAAC,GAAG,OAAO,GAAG,IAAI;SACtD;aACI,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC,OAAO,IAAI,KAAK,CAAC,IAAI,IAAI,aAAa,EAAE;YAC1E,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC,SAAS,CAAC,GAAG,CAAC;SACzC;IACH,CAAC;IAED,cAAc,CAAC,KAAK;QAClB,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC,OAAO,GAAG,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC;IAC7D,CAAC;IAED,UAAU;QACR,IAAI,OAAO,GAAG,CAAC;QACf,KAAK,IAAI,KAAK,IAAI,IAAI,CAAC,OAAO,CAAC,MAAM,EAAE;YACrC,IAAI,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC,OAAO,IAAI,KAAK,CAAC,IAAI,IAAI,aAAa,EAAE;gBACpE,OAAO,IAAI,IAAI,CAAC,SAAS,CAAC,gBAAgB,CAAC,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC,OAAO,IAAI,CAAC,CAAC;aACnF;SACF;QACD,IAAI,YAAY,GAAG,IAAI,CAAC,SAAS,CAAC,YAAY,CAAC,wBAAwB,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC,YAAY,CAAC,wBAAwB,CAAC,CAAC,CAAC,CAAC,EAAE;QACrI,KAAK,IAAI,GAAG,IAAI,YAAY,EAAE;YAC5B,OAAO,IAAI,IAAI,CAAC,SAAS,CAAC,gBAAgB,CAAC,GAAG,CAAC,OAAO,IAAI,CAAC,CAAC;SAC7D;QACD,gCAAgC;QAChC,IAAI,QAAQ,GAAW,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,CAAC,CAAC,KAAK;QACzE,IAAI,SAAS,GAAG,CAAC;QACjB,IAAI,IAAI,CAAC,UAAU,EAAE;YACnB,IAAI,MAAM,GAAG,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC;YACtC,IAAI,MAAM,IAAI,OAAO,IAAI,QAAQ,IAAI,KAAK,EAAE;gBAC1C,SAAS,GAAG,KAAK;aAClB;iBAAM,IAAI,MAAM,IAAI,OAAO,EAAE;gBAC5B,SAAS,GAAG,EAAE;aACf;SACF;QAED,OAAO,OAAO,GAAG,SAAS;IAC5B,CAAC;IAED,iBAAiB;QACf,IAAI,OAAO,GAAG,CAAC;QACf,KAAK,IAAI,KAAK,IAAI,IAAI,CAAC,OAAO,CAAC,MAAM,EAAE;YACrC,IAAI,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC,OAAO,EAAE;gBACrC,OAAO,IAAI,IAAI,CAAC,SAAS,CAAC,gBAAgB,CAAC,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC,OAAO,IAAI,CAAC,CAAC;aACnF;SACF;QACD,IAAI,YAAY,GAAG,IAAI,CAAC,SAAS,CAAC,YAAY,CAAC,wBAAwB,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC,YAAY,CAAC,wBAAwB,CAAC,CAAC,CAAC,CAAC,EAAE;QACrI,KAAK,IAAI,GAAG,IAAI,YAAY,EAAE;YAC5B,OAAO,IAAI,IAAI,CAAC,SAAS,CAAC,gBAAgB,CAAC,GAAG,CAAC,OAAO,IAAI,CAAC,CAAC;SAC7D;QACD,IAAI,QAAQ,GAAW,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,CAAC,CAAC,KAAK;QACzE,IAAI,QAAQ,GAAG,CAAC;QAChB,IAAI,IAAI,CAAC,UAAU,EAAE;YACnB,IAAI,MAAM,GAAG,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC;YACtC,IAAI,eAAe,GAAG,IAAI,CAAC,UAAU,CAAC,iBAAiB,CAAC;YACxD,IAAI,MAAM,IAAI,OAAO,IAAI,QAAQ,IAAI,KAAK,EAAE;gBAC1C,QAAQ,GAAG,CAAC,KAAK;aAClB;iBAAM,IAAI,MAAM,IAAI,OAAO,EAAE;gBAC5B,QAAQ,GAAG,CAAC,EAAE;aACf;iBAAM,IAAI,MAAM,IAAI,OAAO,IAAI,QAAQ,IAAI,KAAK,EAAE;gBACjD,IAAI,eAAe,IAAI,OAAO,EAAE;oBAC9B,QAAQ,GAAG,KAAK;iBACjB;qBAAM,IAAI,eAAe,IAAI,OAAO,EAAE;oBACrC,QAAQ,GAAG,KAAK;iBACjB;qBAAM,IAAI,eAAe,IAAI,OAAO,EAAE;oBACrC,QAAQ,GAAG,MAAM;iBAClB;aACF;SACF;QACD,IAAI,KAAK,GAAG,QAAQ,IAAI,KAAK,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;QACvC,IAAI,MAAM,GAAG,CAAC,OAAO,GAAG,QAAQ,CAAC,GAAG,KAAK;QACzC,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,UAAU,CAAC,SAAS,CAAC,MAAM,CAAC,GAAG,GAAG,GAAG,QAAQ,CAAC,WAAW,EAAE;QAClF,IAAI,CAAC,SAAS,CAAC,eAAe,CAAC,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC;QACpD,OAAO,MAAM;IACf,CAAC;IAED,gBAAgB;QACd,IAAI,WAAW,GAAG,IAAI,CAAC,SAAS,CAAC,YAAY,CAAC,0DAAU,CAAC;QACzD,IAAI,WAAW,GAAG,IAAI,CAAC,SAAS,CAAC,YAAY,CAAC,0DAAU,CAAC;QACzD,IAAI,OAAO,GAAG,WAAW,CAAC,UAAU,IAAI,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI;QAC1D,IAAI,YAAY,GAAG,CAAC;QACpB,KAAK,IAAI,OAAO,IAAI,WAAW,EAAE;YAC/B,YAAY,IAAI,IAAI,CAAC,SAAS,CAAC,gBAAgB,CAAC,OAAO,CAAC,OAAO,CAAC;SAEjE;QACD,mCAAmC;QACnC,gDAAgD;QAChD,MAAM;QACN,MAAM,YAAY,GAAG,IAAI,CAAC,UAAU;QACpC,IAAI,QAAQ,GAAG,CAAC;QAChB,KAAK,IAAI,KAAK,IAAI,IAAI,CAAC,OAAO,CAAC,MAAM,EAAE;YACrC,IAAI,YAAY,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC,OAAO,EAAE;gBAClC,QAAQ,IAAI,IAAI,CAAC,SAAS,CAAC,gBAAgB,CAAC,YAAY,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC,SAAS,CAAC,CAAC;aAC/E;SACF;QACD,IAAI,QAAQ,GAAG,CAAC,YAAY,GAAG,QAAQ,CAAC,GAAG,OAAO;QAClD,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,UAAU,CAAC,SAAS,CAAC,QAAQ,CAAC,GAAG,MAAM;QAC9D,IAAI,CAAC,SAAS,CAAC,eAAe,CAAC,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC;QACpD,OAAO,QAAQ;IACjB,CAAC;IAED,YAAY;QACV,IAAI,UAAU,GAAG,IAAI,CAAC,iBAAiB,EAAE;QACzC,IAAI,QAAQ,GAAG;YACb,SAAS,EAAE,CAAC,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,CAAC,GAAG,EAAE;YAChF,aAAa,EAAE,IAAI,CAAC,UAAU;YAC9B,YAAY,EAAE,IAAI,CAAC,WAAW;YAC9B,MAAM,EAAE,IAAI,CAAC,WAAW,CAAC,QAAQ;SAClC;QACD,OAAO,IAAI,CAAC,eAAe,CAAC,cAAc,CAAC,QAAQ,CAAC;IACtD,CAAC;IAED,gBAAgB;QACd,IAAI,UAAU,GAAG,IAAI,CAAC,gBAAgB,EAAE;QACxC,IAAI,QAAQ,GAAG;YACb,SAAS,EAAE,CAAC,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,CAAC,GAAG,EAAE;YAChF,aAAa,EAAE,IAAI,CAAC,UAAU;YAC9B,YAAY,EAAE,IAAI,CAAC,WAAW;YAC9B,MAAM,EAAE,IAAI,CAAC,WAAW,CAAC,QAAQ;SAClC;QACD,OAAO,IAAI,CAAC,eAAe,CAAC,cAAc,CAAC,QAAQ,CAAC;IACtD,CAAC;IAED,SAAS,CAAC,YAAoB,UAAU;QACtC,IAAI,2DAAY,CAAC,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,EAAE;YACrC,IAAI,MAAM,GAAiB,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;YAC3D,IAAI,SAAS,GAAG,IAAI,CAAC,WAAW,CAAC,IAAI,IAAI,WAAW,CAAC,CAAC,CAAC,MAAM,CAAC,WAAW,IAAI,EAAE,CAAC,CAAC,CAAC,MAAM,CAAC,SAAS,IAAI,EAAE;YACxG,IAAI,MAAM,GAAG,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,SAAS,IAAI,SAAS,CAAC;YAChE,IAAI,MAAM,EAAE;gBACV,OAAO,IAAI,CAAC,SAAS,CAAC,YAAY,CAAC,MAAM,CAAC,SAAS,GAAG,MAAM,CAAC,EAAE,CAAC,IAAI,IAAI;aACzE;YACD,OAAO,IAAI;SACZ;QACD,OAAO,IAAI;IACb,CAAC;IAED,WAAW,CAAC,KAAU;QACpB,IAAI,IAAI,GAAG,CAAC;QACZ,IAAI,KAAK,CAAC,IAAI,IAAI,SAAS,IAAI,KAAK,CAAC,IAAI,IAAI,SAAS,EAAE;YACtD,IAAI,KAAK,GAAG,KAAK,CAAC,IAAI,GAAG,GAAG,GAAG,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC,MAAM;YAC/D,IAAI,GAAG,IAAI,CAAC,aAAa,CAAC,KAAK,CAAC,IAAI,CAAC;SACtC;aAAM;YACL,IAAI,GAAG,IAAI,CAAC,aAAa,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC;SAC3C;QACD,IAAI,UAAU,GAAG,IAAI,CAAC,SAAS,CAAC,YAAY,CAAC,0DAAU,CAAC;QACxD,OAAO,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC;QAExB,IAAI,SAAS,GAAG,CAAC;QACjB,IAAI,UAAU,EAAE;YACd,UAAU,CAAC,OAAO,CAAC,OAAO,CAAC,EAAE;gBAC3B,SAAS,IAAI,UAAU,CAAC,OAAO,CAAC,MAAM,CAAC;YACzC,CAAC,CAAC,CAAC;SACJ;QACD,IAAI,IAAI,GAAG,CAAC,IAAI,SAAS,GAAG,CAAC,EAAE;YAC7B,IAAI,GAAG,GAAG,SAAS,GAAG,CAAC,IAAI,GAAG,GAAG,CAAC;YAClC,IAAI,KAAK,CAAC,IAAI,IAAI,SAAS,EAAE;gBAC3B,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG;gBACnB,GAAG,GAAG,GAAG,GAAG,GAAG;aAChB;YACD,OAAO,GAAG;SACX;QACD,OAAO,CAAC;IACV,CAAC;CAEF;;YAnZQ,kFAAe;YAHf,2EAAqB;YAFrB,6DAAiB;YAOjB,wFAAkB;YARlB,yDAAW;YAWX,4EAAe;YAEf,0FAAc;;;sBAQpB,iDAAK;uBACL,iDAAK;0BACL,iDAAK;0BACL,kDAAM;yBASN,iDAAK;;AAbK,kBAAkB;IAL9B,yDAAS,CAAC;QACT,QAAQ,EAAE,gBAAgB;QAC1B,0KAA0C;;KAE3C,CAAC;GACW,kBAAkB,CAqY9B;AArY8B;;;;;;;;;;;;;;;;;;;;;;;;ACpB6C;AACR;AACE;IAOzD,8BAA8B,SAA9B,8BAA8B;IAOzC,YAAoB,KAAqB,EAAS,GAAqB;QAAnD,UAAK,GAAL,KAAK,CAAgB;QAAS,QAAG,GAAH,GAAG,CAAkB;QAN9D,SAAI,GAAG,wBAAwB;QAC/B,aAAQ,GAAC,KAAK;QAEd,WAAM,GAAQ,CAAC;QACf,YAAO,GAAY,KAAK;IAE0C,CAAC;IAE5E,QAAQ;QACN,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC;QACxB,IAAI,CAAC,YAAY,EAAE;IACrB,CAAC;IACD,MAAM;QACJ,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,EAAE,IAAI,EAAE,IAAI,CAAC,sBAAsB,CAAC,KAAK,EAAE,IAAI,EAAE,MAAM,EAAE,CAAC;IAC/E,CAAC;IACD,QAAQ,CAAC,OAAQ;QACf,IAAI,CAAC,sBAAsB,GAAG,IAAI,qDAAS,CAAC;YAC1C,gBAAgB,EAAE,IAAI,uDAAW,CAAC,OAAO,CAAC,CAAC,CAAC,OAAO,CAAC,gBAAgB,CAAC,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC;YACnF,EAAE,EAAE,IAAI,uDAAW,CAAC,OAAO,CAAC,CAAC,CAAC,OAAO,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC;YAC9C,eAAe,EAAE,IAAI,uDAAW,CAAC,OAAO,CAAC,CAAC,CAAC,OAAO,CAAC,eAAe,IAAI,OAAO,CAAC,WAAW,CAAC,CAAC,CAAC,EAAE,CAAC;YAC/F,QAAQ,EAAE,IAAI,uDAAW,CAAC,OAAO,CAAC,CAAC,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,CAAC,EAAE,CAAC;YAC1D,QAAQ,EAAE,IAAI,uDAAW,CAAC,OAAO,CAAC,CAAC,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,CAAC,EAAE,CAAC;YAC1D,UAAU,EAAE,IAAI,uDAAW,CAAC,OAAO,CAAC,CAAC,CAAC,OAAO,CAAC,UAAU,CAAC,CAAC,CAAC,EAAE,CAAC;YAC9D,SAAS,EAAE,IAAI,uDAAW,CAAC,OAAO,CAAC,CAAC,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,CAAC;YAC5D,gBAAgB,EAAE,IAAI,uDAAW,CAAC,OAAO,CAAC,CAAC,CAAC,OAAO,CAAC,gBAAgB,CAAC,CAAC,CAAC,EAAE,CAAC;YAC1E,KAAK,EAAE,IAAI,uDAAW,CAAC,OAAO,CAAC,CAAC,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,CAAC;YACpD,MAAM,EAAE,IAAI,uDAAW,CAAC,OAAO,CAAC,CAAC,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC;YACtD,UAAU,EAAE,IAAI,uDAAW,CAAC,OAAO,CAAC,CAAC,CAAC,OAAO,CAAC,UAAU,CAAC,CAAC,CAAC,EAAE,CAAC;YAC9D,QAAQ,EAAE,IAAI,uDAAW,CAAC,OAAO,CAAC,CAAC,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,CAAC,EAAE,CAAC;SAC3D,CAAC;IACJ,CAAC;IACD,YAAY;QACV,IAAG,IAAI,CAAC,IAAI,IAAE,wBAAwB,IAAI,IAAI,CAAC,IAAI,IAAE,qBAAqB,EAAC;YACzE,IAAI,CAAC,sBAAsB,CAAC,QAAQ,CAAC,iBAAiB,CAAC,CAAC,aAAa,CAAC,CAAC,+DAAmB,CAAC,CAAC;YAC5F,IAAI,CAAC,sBAAsB,CAAC,QAAQ,CAAC,iBAAiB,CAAC,CAAC,sBAAsB,EAAE;YAChF,IAAI,CAAC,sBAAsB,CAAC,QAAQ,CAAC,UAAU,CAAC,CAAC,aAAa,CAAC,CAAC,+DAAmB,CAAC,CAAC;YACrF,IAAI,CAAC,sBAAsB,CAAC,QAAQ,CAAC,UAAU,CAAC,CAAC,sBAAsB,EAAE;YACzE,IAAI,CAAC,sBAAsB,CAAC,QAAQ,CAAC,UAAU,CAAC,CAAC,aAAa,CAAC,CAAC,+DAAmB,CAAC,CAAC;YACrF,IAAI,CAAC,sBAAsB,CAAC,QAAQ,CAAC,UAAU,CAAC,CAAC,sBAAsB,EAAE;YACzE,IAAI,CAAC,sBAAsB,CAAC,QAAQ,CAAC,kBAAkB,CAAC,CAAC,aAAa,CAAC,CAAC,+DAAmB,CAAC,CAAC;YAC7F,IAAI,CAAC,sBAAsB,CAAC,QAAQ,CAAC,kBAAkB,CAAC,CAAC,sBAAsB,EAAE;YACjF,IAAI,CAAC,sBAAsB,CAAC,QAAQ,CAAC,YAAY,CAAC,CAAC,aAAa,CAAC,CAAC,+DAAmB,CAAC,CAAC;YACvF,IAAI,CAAC,sBAAsB,CAAC,QAAQ,CAAC,YAAY,CAAC,CAAC,sBAAsB,EAAE;SAC5E;QACD,IAAG,IAAI,CAAC,IAAI,IAAE,OAAO,EAAC;YACpB,IAAI,CAAC,sBAAsB,CAAC,QAAQ,CAAC,iBAAiB,CAAC,CAAC,aAAa,CAAC,CAAC,+DAAmB,CAAC,CAAC;YAC5F,IAAI,CAAC,sBAAsB,CAAC,QAAQ,CAAC,iBAAiB,CAAC,CAAC,sBAAsB,EAAE;YAChF,IAAI,CAAC,sBAAsB,CAAC,QAAQ,CAAC,YAAY,CAAC,CAAC,aAAa,CAAC,CAAC,+DAAmB,CAAC,CAAC;YACvF,IAAI,CAAC,sBAAsB,CAAC,QAAQ,CAAC,YAAY,CAAC,CAAC,sBAAsB,EAAE;YAC3E,IAAI,CAAC,sBAAsB,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC,aAAa,CAAC,CAAC,+DAAmB,CAAC,CAAC;YAClF,IAAI,CAAC,sBAAsB,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC,sBAAsB,EAAE;YACtE,IAAI,CAAC,sBAAsB,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC,aAAa,CAAC,CAAC,+DAAmB,CAAC,CAAC;YACnF,IAAI,CAAC,sBAAsB,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC,sBAAsB,EAAE;YACvE,IAAI,CAAC,sBAAsB,CAAC,QAAQ,CAAC,UAAU,CAAC,CAAC,aAAa,CAAC,CAAC,+DAAmB,CAAC,CAAC;YACrF,IAAI,CAAC,sBAAsB,CAAC,QAAQ,CAAC,UAAU,CAAC,CAAC,sBAAsB,EAAE;SAC1E;IAEH,CAAC;IAED,mBAAmB;QACjB,IAAI,CAAC,GAAG,CAAC,aAAa,EAAE;QACxB,IAAI,QAAQ,GAAG,IAAI,CAAC,sBAAsB,CAAC,KAAK,CAAC,QAAQ;QACzD,IAAI,KAAK,GAAG,IAAI,CAAC,sBAAsB,CAAC,KAAK,CAAC,gBAAgB;QAC9D,OAAO,CAAC,GAAG,CAAC,gBAAgB,EAAC,QAAQ,EAAC,KAAK,CAAC;QAC5C,IAAI,QAAQ,IAAI,KAAK;YACnB,IAAI,CAAC,sBAAsB,CAAC,QAAQ,CAAC,UAAU,CAAC,QAAQ,CAAC,QAAQ,GAAG,KAAK,CAAC;IAC9E,CAAC;IACD,YAAY;QACV,IAAI,CAAC,KAAK,CAAC,OAAO,EAAE;IACtB,CAAC;IACD,cAAc,CAAC,WAAmB;QAChC,MAAM,OAAO,GAAG,IAAI,CAAC,sBAAsB,CAAC,QAAQ,CAAC,WAAW,CAAC,CAAC;QAClE,OAAO,OAAO,CAAC,KAAK,IAAI,CAAC,OAAO,CAAC,KAAK,IAAI,OAAO,CAAC,OAAO,CAAC,CAAC;IAC7D,CAAC;IAED,gBAAgB,CAAC,WAAmB;QAClC,MAAM,OAAO,GAAG,IAAI,CAAC,sBAAsB,CAAC,QAAQ,CAAC,WAAW,CAAC,CAAC;QAClE,OAAO,OAAO,CAAC,OAAO,IAAI,CAAC,OAAO,CAAC,KAAK,IAAI,OAAO,CAAC,OAAO,CAAC,CAAC;IAC/D,CAAC;IAED,eAAe,CAAC,UAAU,EAAE,WAAW;QACrC,MAAM,OAAO,GAAG,IAAI,CAAC,sBAAsB,CAAC,QAAQ,CAAC,WAAW,CAAC,CAAC;QAClE,OAAO,OAAO,CAAC,QAAQ,CAAC,UAAU,CAAC,IAAI,CAAC,OAAO,CAAC,KAAK,IAAI,OAAO,CAAC,OAAO,CAAC,CAAC;IAC5E,CAAC;IAED,gBAAgB,CAAC,WAAW;QAC1B,MAAM,OAAO,GAAG,IAAI,CAAC,sBAAsB,CAAC,QAAQ,CAAC,WAAW,CAAC,CAAC;QAClE,OAAO,OAAO,CAAC,KAAK,IAAI,OAAO,CAAC,OAAO,CAAC;IAC1C,CAAC;CACF;;YAjGQ,sEAAc;YAFd,4DAAiB;;;mBAUvB,gDAAK;uBACL,gDAAK;mBACL,gDAAK;qBACL,gDAAK;sBACL,gDAAK;;AALK,8BAA8B;IAL1C,wDAAS,CAAC;QACT,QAAQ,EAAE,6BAA6B;QACvC,uLAAuD;;KAExD,CAAC;GACW,8BAA8B,CA0F1C;AA1F0C;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACTuD;AAC5C;AACH;AACsB;AACQ;AAC/B;AAC2D;AACG;IAOnG,2BAA2B,SAA3B,2BAA2B;IAiBtC,YAAoB,kBAAsC,EAAU,gBAAkC,EAAU,gBAAkC,EAAU,KAAe,EAAU,IAAiB,EAAU,GAAsB,EAAU,aAAoC,EAAU,WAA4B;QAAtS,uBAAkB,GAAlB,kBAAkB,CAAoB;QAAU,qBAAgB,GAAhB,gBAAgB,CAAkB;QAAU,qBAAgB,GAAhB,gBAAgB,CAAkB;QAAU,UAAK,GAAL,KAAK,CAAU;QAAU,SAAI,GAAJ,IAAI,CAAa;QAAU,QAAG,GAAH,GAAG,CAAmB;QAAU,kBAAa,GAAb,aAAa,CAAuB;QAAU,gBAAW,GAAX,WAAW,CAAiB;QAhB1T,eAAU,GAAY,KAAK;QAC3B,YAAO,GAAY,KAAK;QACxB,YAAO,GAAY,KAAK;QACf,YAAO,GAAW,CAAC;QAC5B,YAAO,GAAG,SAAS;QACnB,iBAAY,GAAW,CAAC;QACxB,eAAU,GAAW,CAAC;QACtB,eAAU,GAAW,CAAC;QACtB,cAAS,GAAQ,EAAE;QACnB,iBAAY,GAAQ,EAAE;QACtB,cAAS,GAAQ,EAAE;QACnB,cAAS,GAAQ,EAAE;QACnB,YAAO,GAAW,CAAC;QACnB,kBAAa,GAAQ,EAAE;QACd,WAAM,GAAG,CAAC;QACT,eAAU,GAAG,IAAI,uDAAY,EAAU;IAC6Q,CAAC;IAE/T,QAAQ;QACN,IAAI,CAAC,cAAc,EAAE;QACrB,IAAI,CAAC,YAAY,EAAE;QACnB,IAAI,CAAC,YAAY,EAAE;QACnB,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,aAAa,CAAC,YAAY,CAAC,0DAAU,CAAC,IAAI,EAAE;IACxE,CAAC;IACD,SAAS,CAAC,KAAK;QACb,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC;QAClB,IAAI,KAAK,CAAC,GAAG,IAAI,QAAQ,EAAE;YACzB,IAAI,KAAK,CAAC,MAAM,IAAI,SAAS,EAAE;gBAC7B,IAAI,CAAC,iBAAiB,CAAC,KAAK,CAAC,IAAI,CAAC,EAAE,CAAC;aACtC;YACD,IAAI,KAAK,CAAC,MAAM,IAAI,OAAO,EAAE;gBAC3B,IAAI,CAAC,eAAe,CAAC,KAAK,CAAC,IAAI,CAAC,EAAE,CAAC;aACpC;YACD,IAAI,KAAK,CAAC,MAAM,IAAI,OAAO,EAAE;gBAC3B,IAAI,CAAC,eAAe,CAAC,KAAK,CAAC,IAAI,CAAC,EAAE,CAAC;aACpC;SACF;QACD,IAAI,KAAK,CAAC,GAAG,IAAI,MAAM,EAAE;YACvB,IAAI,KAAK,CAAC,MAAM,IAAI,SAAS,EAAE;gBAC7B,IAAI,CAAC,GAAG,CAAC,UAAU,EAAE,KAAK,CAAC,IAAI,EAAC,MAAM,CAAC;aACxC;YACD,IAAI,KAAK,CAAC,MAAM,IAAI,OAAO,EAAE;gBAC3B,IAAI,CAAC,GAAG,CAAC,QAAQ,EAAE,KAAK,CAAC,IAAI,EAAC,MAAM,CAAC;aACtC;YACD,IAAI,KAAK,CAAC,MAAM,IAAI,OAAO,EAAE;gBAC3B,IAAI,CAAC,GAAG,CAAC,OAAO,EAAE,KAAK,CAAC,IAAI,EAAC,MAAM,CAAC;aACrC;SACF;IAEH,CAAC;IACD,GAAG,CAAC,IAAI,EAAE,IAAK,EAAC,QAAS;QACvB,IAAI,IAAI,IAAI,UAAU,EAAE;YACtB,IAAI,QAAQ,CAAC;YACb,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,sHAA8B,EAAE,EAAE,IAAI,EAAE,IAAI,EAAE,QAAQ,EAAE,KAAK,EAAE,CAAC,CAAC;YAC5F,QAAQ,CAAC,iBAAiB,CAAC,IAAI,GAAG,wBAAwB;YAC1D,QAAQ,CAAC,iBAAiB,CAAC,QAAQ,GAAC,QAAQ;YAC5C,QAAQ,CAAC,iBAAiB,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM;YAC/C,QAAQ,CAAC,iBAAiB,CAAC,IAAI,GAAG,IAAI;YACtC,QAAQ,CAAC,MAAM,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,EAAE,CAAC,GAAG,EAAE,EAAE;gBACtC,IAAI,GAAG,EAAE;oBACP,OAAO,CAAC,GAAG,CAAC,QAAQ,EAAE,GAAG,CAAC;oBAC1B,IAAI,GAAG,CAAC,IAAI,IAAI,MAAM,EAAE;wBACtB,IAAI,QAAQ,mCAAQ,GAAG,CAAC,IAAI,KAAE,SAAS,EAAE,IAAI,CAAC,IAAI,CAAC,gBAAgB,CAAC,EAAE,GAAE;wBACxE,OAAO,CAAC,GAAG,CAAC,UAAU,EAAE,QAAQ,CAAC;wBACjC,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,SAAS,EAAE,CAAC,IAAI,CAAC,CAAC,GAAQ,EAAE,EAAE;4BACnE,IAAI,GAAG,EAAE;gCACP,OAAO,CAAC,GAAG,CAAC,sBAAsB,EAAE,GAAG,CAAC;gCACxC,IAAI,CAAC,cAAc,EAAE;gCACrB,IAAI,CAAC,YAAY,CAAC,IAAI,iCAAM,QAAQ,KAAE,EAAE,EAAE,GAAG,IAAG;gCAChD,IAAI,CAAC,GAAG,CAAC,aAAa,EAAE;6BACzB;wBACH,CAAC,CAAC;qBACH;iBACF;YACH,CAAC,CAAC;SACH;QACD,IAAI,IAAI,IAAI,QAAQ,EAAE;YACpB,IAAI,QAAQ,CAAC;YACb,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,sHAA8B,EAAE,EAAE,IAAI,EAAE,IAAI,EAAE,QAAQ,EAAE,KAAK,EAAE,CAAC,CAAC;YAC5F,QAAQ,CAAC,iBAAiB,CAAC,IAAI,GAAG,qBAAqB;YACvD,QAAQ,CAAC,iBAAiB,CAAC,QAAQ,GAAC,QAAQ;YAC5C,QAAQ,CAAC,iBAAiB,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM;YAC/C,QAAQ,CAAC,iBAAiB,CAAC,IAAI,GAAG,IAAI;YACtC,QAAQ,CAAC,MAAM,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,EAAE,CAAC,GAAG,EAAE,EAAE;gBACtC,IAAI,GAAG,EAAE;oBACP,OAAO,CAAC,GAAG,CAAC,QAAQ,EAAE,GAAG,CAAC;oBAC1B,IAAI,GAAG,CAAC,IAAI,IAAI,MAAM,EAAE;wBACtB,IAAI,QAAQ,mCAAQ,GAAG,CAAC,IAAI,KAAE,SAAS,EAAE,IAAI,CAAC,IAAI,CAAC,gBAAgB,CAAC,EAAE,GAAE;wBACxE,OAAO,CAAC,GAAG,CAAC,UAAU,EAAE,QAAQ,CAAC;wBACjC,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,SAAS,EAAE,CAAC,IAAI,CAAC,CAAC,GAAQ,EAAE,EAAE;4BACjE,IAAI,GAAG,EAAE;gCACP,OAAO,CAAC,GAAG,CAAC,oBAAoB,EAAE,GAAG,CAAC;gCACtC,IAAI,CAAC,YAAY,EAAE;gCACnB,IAAI,CAAC,SAAS,CAAC,IAAI,iCAAM,QAAQ,KAAE,EAAE,EAAE,GAAG,IAAG;gCAC7C,IAAI,CAAC,GAAG,CAAC,aAAa,EAAE;6BACzB;wBACH,CAAC,CAAC;qBACH;iBACF;YACH,CAAC,CAAC;SACH;QACD,IAAI,IAAI,IAAI,OAAO,EAAE;YACnB,IAAI,QAAQ,CAAC;YACb,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,sHAA8B,EAAE,EAAE,IAAI,EAAE,IAAI,EAAE,QAAQ,EAAE,KAAK,EAAE,CAAC,CAAC;YAC5F,QAAQ,CAAC,iBAAiB,CAAC,IAAI,GAAG,OAAO;YACzC,QAAQ,CAAC,iBAAiB,CAAC,QAAQ,GAAC,QAAQ;YAC5C,QAAQ,CAAC,iBAAiB,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM;YAC/C,QAAQ,CAAC,iBAAiB,CAAC,IAAI,GAAG,IAAI;YACtC,QAAQ,CAAC,iBAAiB,CAAC,OAAO,GAAG,IAAI;YACzC,QAAQ,CAAC,MAAM,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,EAAE,CAAC,GAAG,EAAE,EAAE;gBACtC,IAAI,GAAG,EAAE;oBACP,OAAO,CAAC,GAAG,CAAC,QAAQ,EAAE,GAAG,CAAC;oBAC1B,IAAI,GAAG,CAAC,IAAI,IAAI,MAAM,EAAE;wBACtB,IAAI,QAAQ,mCAAQ,GAAG,CAAC,IAAI,KAAE,SAAS,EAAE,IAAI,CAAC,IAAI,CAAC,gBAAgB,CAAC,EAAE,EAAC,WAAW,EAAC,GAAG,CAAC,IAAI,CAAC,eAAe,GAAE;wBAC7G,OAAO,CAAC,GAAG,CAAC,UAAU,EAAE,QAAQ,CAAC;wBACjC,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,SAAS,EAAE,CAAC,IAAI,CAAC,CAAC,GAAQ,EAAE,EAAE;4BACjE,IAAI,GAAG,EAAE;gCACP,OAAO,CAAC,GAAG,CAAC,oBAAoB,EAAE,GAAG,CAAC;gCACtC,IAAI,CAAC,YAAY,EAAE;gCACnB,IAAI,CAAC,SAAS,CAAC,IAAI,iCAAM,QAAQ,KAAE,EAAE,EAAE,GAAG,IAAG;gCAC7C,IAAI,CAAC,GAAG,CAAC,aAAa,EAAE;6BACzB;wBACH,CAAC,CAAC;qBACH;iBACF;YACH,CAAC,CAAC;SACH;IACH,CAAC;IAED,cAAc;QACZ,IAAI,CAAC,WAAW,CAAC,UAAU,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,SAAS,EAAE,CAAC,IAAI,CAAC,CAAC,GAAQ,EAAE,EAAE;YACrE,OAAO,CAAC,GAAG,CAAC,sBAAsB,EAAE,GAAG,CAAC;YACxC,IAAI,GAAG,EAAE;gBACP,IAAI,CAAC,YAAY,GAAG,GAAG;gBAEvB,IAAI,IAAI,CAAC,YAAY,CAAC,MAAM,GAAG,CAAC,EAAE;oBAChC,IAAI,CAAC,UAAU,GAAG,IAAI;oBACtB,IAAI,CAAC,YAAY,GAAG,CAAC;oBACrB,KAAK,IAAI,IAAI,IAAI,IAAI,CAAC,YAAY,EAAE;wBAClC,OAAO,CAAC,GAAG,CAAC,MAAM,EAAE,IAAI,CAAC,YAAY,CAAC,CAAC;wBAEvC,IAAI,CAAC,YAAY,IAAI,QAAQ,CAAC,IAAI,CAAC,UAAU,CAAC;qBAC/C;iBACF;gBACD,IAAI,CAAC,qBAAqB,EAAE;gBAC5B,IAAI,CAAC,GAAG,CAAC,aAAa,EAAE;aACzB;QACH,CAAC,CAAC;IACJ,CAAC;IACD,YAAY;QACV,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,SAAS,EAAE,CAAC,IAAI,CAAC,CAAC,GAAQ,EAAE,EAAE;YACnE,IAAI,GAAG,EAAE;gBACP,OAAO,CAAC,GAAG,CAAC,oBAAoB,EAAE,GAAG,CAAC;gBACtC,IAAI,CAAC,SAAS,GAAG,GAAG;gBACpB,IAAI,IAAI,CAAC,SAAS,CAAC,MAAM,GAAG,CAAC,EAAE;oBAC7B,IAAI,CAAC,OAAO,GAAG,IAAI;oBACnB,IAAI,CAAC,UAAU,GAAG,CAAC;oBACnB,KAAK,IAAI,IAAI,IAAI,IAAI,CAAC,SAAS,EAAE;wBAC/B,IAAI,CAAC,UAAU,IAAI,QAAQ,CAAC,IAAI,CAAC,UAAU,CAAC;qBAE7C;iBACF;gBACD,IAAI,CAAC,qBAAqB,EAAE;gBAC5B,IAAI,CAAC,GAAG,CAAC,aAAa,EAAE;aACzB;QACH,CAAC,CAAC;IAEJ,CAAC;IACD,YAAY;QACV,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,SAAS,EAAE,CAAC,IAAI,CAAC,CAAC,GAAQ,EAAE,EAAE;YACnE,IAAI,GAAG,EAAE;gBACP,OAAO,CAAC,GAAG,CAAC,oBAAoB,EAAE,GAAG,CAAC;gBACtC,IAAI,CAAC,SAAS,GAAG,GAAG;gBACpB,IAAI,IAAI,CAAC,SAAS,CAAC,MAAM,GAAG,CAAC,EAAE;oBAC7B,IAAI,CAAC,OAAO,GAAG,IAAI;oBACnB,IAAI,CAAC,UAAU,GAAE,CAAC;oBAClB,KAAK,IAAI,IAAI,IAAI,IAAI,CAAC,SAAS,EAAE;wBAC/B,IAAI,CAAC,UAAU,IAAI,QAAQ,CAAC,IAAI,CAAC,UAAU,CAAC;qBAC7C;oBACD,IAAI,CAAC,qBAAqB,EAAE;iBAC7B;gBACD,IAAI,CAAC,GAAG,CAAC,aAAa,EAAE;aACzB;QACH,CAAC,CAAC;IAEJ,CAAC;IACD,qBAAqB;QACnB,IAAI,CAAC,OAAO,GAAG,CAAC,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,UAAU,CAAC;QACtE,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC;IACpC,CAAC;IAED,iBAAiB,CAAC,EAAE;QAClB,IAAI,CAAC,kBAAkB,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC,SAAS,EAAE,CAAC,IAAI,CAAC,CAAC,GAAQ,EAAE,EAAE;YAC/D,IAAI,GAAG,EAAE;gBACP,IAAI,CAAC,cAAc,EAAE;aACtB;QACH,CAAC,CAAC;IACJ,CAAC;IACD,eAAe,CAAC,EAAE;QAChB,IAAI,CAAC,gBAAgB,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC,SAAS,EAAE,CAAC,IAAI,CAAC,CAAC,GAAQ,EAAE,EAAE;YAC7D,IAAI,GAAG,EAAE;gBACP,IAAI,CAAC,YAAY,EAAE;aACpB;QACH,CAAC,CAAC;IACJ,CAAC;IACD,eAAe,CAAC,EAAE;QAChB,IAAI,CAAC,gBAAgB,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC,SAAS,EAAE,CAAC,IAAI,CAAC,CAAC,GAAQ,EAAE,EAAE;YAC7D,IAAI,GAAG,EAAE;gBACP,IAAI,CAAC,YAAY,EAAE;aACpB;QACH,CAAC,CAAC;IACJ,CAAC;IACD,YAAY,CAAC,IAAI;QACf,IAAI,IAAI,IAAI,UAAU,EAAE;YACtB,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,UAAU;YACjC,IAAI,CAAC,IAAI,CAAC,UAAU,IAAI,IAAI,CAAC,YAAY,CAAC,MAAM,GAAG,CAAC,EAAE;gBACpD,KAAK,IAAI,IAAI,IAAI,IAAI,CAAC,YAAY,EAAE;oBAClC,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,EAAE,CAAC;iBAChC;aACF;SACF;QACD,IAAI,IAAI,IAAI,QAAQ,EAAE;YACpB,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,OAAO;YAC3B,IAAI,CAAC,IAAI,CAAC,OAAO,IAAI,IAAI,CAAC,SAAS,CAAC,MAAM,GAAG,CAAC,EAAE;gBAC9C,KAAK,IAAI,IAAI,IAAI,IAAI,CAAC,SAAS,EAAE;oBAC/B,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,EAAE,CAAC;iBAC9B;aACF;SACF;QACD,IAAI,IAAI,IAAI,OAAO,EAAE;YACnB,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,OAAO;YAC3B,IAAI,CAAC,IAAI,CAAC,OAAO,IAAI,IAAI,CAAC,SAAS,CAAC,MAAM,GAAG,CAAC,EAAE;gBAC9C,KAAK,IAAI,IAAI,IAAI,IAAI,CAAC,SAAS,EAAE;oBAC/B,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,EAAE,CAAC;iBAC9B;aACF;SACF;IACH,CAAC;CACF;;YAtPQ,qFAAkB;YAAE,mFAAgB;YAAE,mFAAgB;YANtD,gEAAQ;YACR,6DAAW;YAFX,4DAAiB;YAGjB,2EAAqB;YACrB,yFAAe;;;sBAcrB,gDAAK;qBAWL,gDAAK;yBACL,iDAAM;;AAhBI,2BAA2B;IALvC,wDAAS,CAAC;QACT,QAAQ,EAAE,yBAAyB;QACnC,mLAAmD;;KAEpD,CAAC;GACW,2BAA2B,CA+OvC;AA/OuC;;;;;;;;;;;;;;;;;;;;;;;ACdU;AACP;AAC2B;AACO;AAG7E,MAAM,gBAAgB,GAAG,GAAG,yEAAkB,sBAAsB,CAAC;AACrE,MAAM,cAAc,GAAG,GAAG,yEAAkB,8BAA8B,CAAC;AAC3E,MAAM,cAAc,GAAG,GAAG,yEAAkB,oBAAoB,CAAC;AACjE,wEAAwE;AACxE,gBAAgB;IAIH,kBAAkB,SAAlB,kBAAmB,SAAQ,4EAAkD;IACxF,YAAsB,UAAsB;QAC1C,KAAK,CAAC,UAAU,EAAE,gBAAgB,CAAC,CAAC;QADhB,eAAU,GAAV,UAAU,CAAY;IAE5C,CAAC;CACF;;YAlBQ,4DAAU;;AAcN,kBAAkB;IAH9B,yDAAU,CAAC;QACV,UAAU,EAAE,MAAM;KACnB,CAAC;GACW,kBAAkB,CAI9B;AAJ8B;IASlB,gBAAgB,SAAhB,gBAAiB,SAAQ,4EAAgC;IACpE,YAAsB,UAAsB;QAC1C,KAAK,CAAC,UAAU,EAAE,cAAc,CAAC,CAAC;QADd,eAAU,GAAV,UAAU,CAAY;IAE5C,CAAC;CACF;;YA3BQ,4DAAU;;AAuBN,gBAAgB;IAH5B,yDAAU,CAAC;QACV,UAAU,EAAE,MAAM;KACnB,CAAC;GACW,gBAAgB,CAI5B;AAJ4B;IAShB,gBAAgB,SAAhB,gBAAiB,SAAQ,4EAAgC;IACpE,YAAsB,UAAsB;QAC1C,KAAK,CAAC,UAAU,EAAE,cAAc,CAAC,CAAC;QADd,eAAU,GAAV,UAAU,CAAY;IAE5C,CAAC;CACF;;YApCQ,4DAAU;;AAgCN,gBAAgB;IAH5B,yDAAU,CAAC;QACV,UAAU,EAAE,MAAM;KACnB,CAAC;GACW,gBAAgB,CAI5B;AAJ4B;;;;;;;;;;;;;;;;;;;;;;;;;;;;AChCqE;AAEzB;AACpB;AACmC;AAGN;AACC;AAEJ;IAOlE,qBAAqB,SAArB,qBAAqB;IAgBhC,YAAoB,kBAAsC,EAAU,SAAgC,EAAU,KAAwB,EAAU,WAA+B,EAAU,cAA8B;QAAnM,uBAAkB,GAAlB,kBAAkB,CAAoB;QAAU,cAAS,GAAT,SAAS,CAAuB;QAAU,UAAK,GAAL,KAAK,CAAmB;QAAU,gBAAW,GAAX,WAAW,CAAoB;QAAU,mBAAc,GAAd,cAAc,CAAgB;QAX7M,gBAAW,GAAG,IAAI,uDAAY,EAAoB,CAAC;QAC7D,aAAQ,GAAG;YACT,KAAK,EAAE,KAAK;YACZ,MAAM,EAAE,KAAK;YACb,SAAS,EAAE,KAAK;SACjB;QAED,iBAAY,GAAQ,EAAE;QACtB,gBAAW,GAAmB,EAAE;QAChC,eAAU,GAAQ,EAAE;QACpB,cAAS,GAAG,IAAI;IAC2M,CAAC;IAEtN,QAAQ;;YACZ,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,WAAW,CAAC,WAAW;YACzC,IAAI,IAAI,CAAC,OAAO,CAAC,IAAI,IAAI,QAAQ,EAAE;gBACjC,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,SAAS,EAAE;aACnC;YACD,IAAI,IAAI,CAAC,OAAO,CAAC,SAAS,IAAI,IAAI,CAAC,OAAO,CAAC,SAAS,CAAC,MAAM,GAAG,CAAC,EAAE;gBAC/D,MAAM,IAAI,CAAC,cAAc,CAAC,QAAQ,EAAE;gBACpC,IAAI,CAAC,QAAQ,GAAG;oBACd,KAAK,EAAE,IAAI,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,UAAU;oBAC3C,MAAM,EAAE,IAAI,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,IAAI;oBACtC,SAAS,EAAE,IAAI,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,OAAO;iBAC7C;gBACD,IAAI,QAAQ,GAAG;oBACb,WAAW,EAAE,IAAI,CAAC,QAAQ,CAAC,EAAE;oBAC7B,WAAW,EAAE,IAAI,CAAC,OAAO,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,GAAG,OAAO,CAAC,CAAC,EAAE,EAAC,CAAC,CAAC;iBAC9D;gBACD,IAAI,OAAO,GAAQ,MAAM,IAAI,CAAC,kBAAkB,CAAC,UAAU,CAAC,QAAQ,CAAC,CAAC,SAAS,EAAE;gBACjF,IAAI,OAAO,CAAC,MAAM,IAAI,CAAC,EAAE;oBACvB,QAAQ,CAAC,WAAW,GAAG,IAAI,CAAC,KAAK;oBACjC,OAAO,GAAG,MAAM,IAAI,CAAC,kBAAkB,CAAC,UAAU,CAAC,QAAQ,CAAC,CAAC,SAAS,EAAE;iBACzE;gBACD,KAAK,MAAM,IAAI,IAAI,IAAI,CAAC,OAAO,CAAC,SAAS,EAAE;oBACzC,IAAI,CAAC,MAAM,CAAC,GAAG,IAAI;oBACnB,IAAI,IAAI,CAAC,aAAa,EAAE;wBACtB,IAAI,CAAC,MAAM,CAAC,GAAG,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,IAAI;qBAC/G;oBACD,IAAI,QAAQ,GAAG,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,UAAU,IAAI,IAAI,CAAC,EAAE,CAAC;oBACzD,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,EAAE,CAAC,GAAG;wBAC3B,GAAG,EAAE,QAAQ,CAAC,CAAC,CAAC,QAAQ,CAAC,UAAU,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;wBAC5C,IAAI,EAAE,QAAQ,CAAC,CAAC,CAAC,QAAQ,CAAC,IAAI,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;wBACvC,OAAO,EAAE,QAAQ,CAAC,CAAC,CAAC,QAAQ,CAAC,OAAO,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;qBAC9C;oBAED,IAAI,IAAI,CAAC,UAAU,EAAE;wBACnB,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,aAAa,EAAE,cAAc,EAAE,IAAI,CAAC,EAAE,EAAE,KAAK,CAAC;qBACtE;oBACD,IAAI,IAAI,CAAC,IAAI,EAAE;wBACb,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,OAAO,EAAE,cAAc,EAAE,IAAI,CAAC,EAAE,EAAE,MAAM,CAAC;qBACjE;oBACD,IAAI,IAAI,CAAC,OAAO,EAAE;wBAChB,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,UAAU,EAAE,cAAc,EAAE,IAAI,CAAC,EAAE,EAAE,SAAS,CAAC;qBACvE;oBACD,IAAI;iBACL;gBACD,IAAI,CAAC,SAAS,GAAG,KAAK;gBACtB,MAAM,IAAI,CAAC,cAAc,CAAC,UAAU,EAAE;gBACtC,IAAI,CAAC,KAAK,CAAC,aAAa,EAAE,CAAC;aAE5B;iBAAM;gBACL,IAAI,CAAC,SAAS,GAAG,KAAK;aAEvB;QACH,CAAC;KAAA;IAED,YAAY,CAAC,OAAe,EAAE,OAAe,EAAE,OAAO,EAAE,MAAc;QACpE,IAAI,IAAI,CAAC,OAAO,CAAC,IAAI,IAAI,QAAQ,IAAI,MAAM,IAAI,SAAS,EAAE;YACxD,IAAI,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,EAAE;gBAC3B,IAAI,KAAK,GAAG,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,SAAS,CAAC,CAAC,GAAG,EAAE,EAAE;oBACrE,IAAI,CAAC,OAAO,CAAC,CAAC,OAAO,CAAC,CAAC,MAAM,CAAC,GAAG,GAAG;oBACpC,IAAI,CAAC,KAAK,CAAC,aAAa,EAAE,CAAC;gBAC7B,CAAC,CAAC;gBACF,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,KAAK,CAAC;aAC7B;iBAAM;gBACL,IAAI,OAAO;oBACT,IAAI,CAAC,OAAO,CAAC,CAAC,OAAO,CAAC,CAAC,MAAM,CAAC,GAAG,OAAO;aAC3C;SACF;aAAM;YAEL,IAAI,IAAI,CAAC,SAAS,CAAC,OAAO,GAAG,QAAQ,CAAC,EAAE;gBACtC,IAAI,KAAK,GAAG,IAAI,CAAC,SAAS,CAAC,OAAO,GAAG,QAAQ,CAAC,CAAC,SAAS,CAAC,CAAC,GAAG,EAAE,EAAE;oBAC/D,IAAI,CAAC,OAAO,CAAC,CAAC,OAAO,CAAC,CAAC,MAAM,CAAC,GAAG,GAAG;oBACpC,IAAI,CAAC,KAAK,CAAC,aAAa,EAAE,CAAC;gBAC7B,CAAC,CAAC;gBACF,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,KAAK,CAAC;aAC7B;iBAAM;gBACL,IAAI,OAAO;oBACT,IAAI,CAAC,OAAO,CAAC,CAAC,OAAO,CAAC,CAAC,MAAM,CAAC,GAAG,OAAO;aAC3C;SACF;IACH,CAAC;IAEK,QAAQ;;YACZ,MAAM,UAAU,GAAG,IAAI,CAAC,kBAAkB;YAC1C,MAAM,YAAY,GAAG,IAAI,CAAC,YAAY;YACtC,uCAAuC;YACvC,yCAAyC;YAEzC,IAAI;YACJ,IAAI,CAAC,SAAS,CAAC,YAAY,CAAC,wBAAwB,CAAC,GAAG,EAAE;YAC1D,KAAK,IAAI,GAAG,IAAI,IAAI,CAAC,OAAO,CAAC,SAAS,EAAE;gBACtC,IAAI;oBACF,IAAI,QAAQ,GAAG;wBACb,UAAU,EAAE,GAAG,CAAC,EAAE;wBAClB,WAAW,EAAE,IAAI,CAAC,WAAW;wBAC7B,UAAU,EAAE,CAAC,CAAC,YAAY,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,GAAG,IAAI,EAAE,CAAC,GAAG,EAAE,CAAC,CAAC,OAAO,CAAC,GAAG,EAAE,EAAE,CAAC,CAAC,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC,CAAC,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC;wBAC1G,IAAI,EAAE,CAAC,CAAC,YAAY,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,IAAI,IAAI,EAAE,CAAC,GAAG,EAAE,CAAC,CAAC,OAAO,CAAC,GAAG,EAAE,EAAE,CAAC,CAAC,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC,CAAC,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC;wBACrG,OAAO,EAAE,CAAC,CAAC,YAAY,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,OAAO,IAAI,EAAE,CAAC,GAAG,EAAE,CAAC,CAAC,OAAO,CAAC,GAAG,EAAE,EAAE,CAAC,CAAC,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC,CAAC,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC;qBAC5G;oBACD,IAAI,CAAC,SAAS,CAAC,YAAY,CAAC,wBAAwB,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC;oBACpE,IAAI,GAAG,GAAG,MAAM,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,SAAS,EAAE,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;iBACjF;gBAAC,OAAO,KAAK,EAAE;oBACd,sBAAsB;iBAEvB;aAEF;YACD,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,EAAE,IAAI,EAAE,0EAAqB,EAAE,CAAC;QACxD,CAAC;KAAA;IAED,QAAQ;QACN,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,EAAE,IAAI,EAAE,0EAAqB,EAAE,CAAC;IACxD,CAAC;IAED,SAAS;QACP,IAAI,2DAAY,CAAC,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,EAAE;YACrC,IAAI,MAAM,GAAiB,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;YAC3D,IAAI,SAAS,GAAG,IAAI,CAAC,WAAW,CAAC,IAAI,IAAI,WAAW,CAAC,CAAC,CAAC,MAAM,CAAC,WAAW,IAAI,EAAE,CAAC,CAAC,CAAC,MAAM,CAAC,SAAS,IAAI,EAAE;YACxG,IAAI,MAAM,GAAG,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,SAAS,IAAI,UAAU,CAAC;YACjE,IAAI,MAAM,EAAE;gBACV,OAAO,IAAI,CAAC,SAAS,CAAC,YAAY,CAAC,MAAM,CAAC,SAAS,GAAG,MAAM,CAAC,EAAE,CAAC,IAAI,IAAI;aACzE;YACD,OAAO,IAAI;SACZ;QACD,OAAO,IAAI;IACb,CAAC;CAEF;;YA1JQ,uFAAkB;YALlB,2EAAqB;YAFrB,4DAAiB;YAQjB,wFAAkB;YAJlB,0FAAc;;;sBAepB,gDAAK;uBACL,gDAAK;0BACL,gDAAK;0BACL,iDAAM;;AALI,qBAAqB;IALjC,wDAAS,CAAC;QACT,QAAQ,EAAE,mBAAmB;QAC7B,6KAA6C;;KAE9C,CAAC;GACW,qBAAqB,CAgJjC;AAhJiC;;;;;;;;;;;;;;;;;;;;;;;;;;ACjBwD;AAIX;AAYS;AACf;AAClB;IAiB1C,0BAA0B,SAA1B,0BAA0B;IAUrC,YAAoB,YAA0B,EAAU,SAAgC;QAApE,iBAAY,GAAZ,YAAY,CAAc;QAAU,cAAS,GAAT,SAAS,CAAuB;QAN9E,gBAAW,GAAG,IAAI,uDAAY,EAAoB,CAAC;QAK7D,cAAS,GAAU,EAAE;QAEnB,IAAI,CAAC,YAAY,GAAG;YAClB,MAAM,EAAE;gBACN;oBACE,IAAI,EAAE,gBAAgB;oBACtB,IAAI,EAAE,EAAE;oBACR,KAAK,EAAE,SAAS;iBACjB;aACF;YACD,KAAK,EAAE;gBACL,MAAM,EAAE,GAAG;gBACX,IAAI,EAAE,MAAM;gBACZ,OAAO,EAAE;oBACP,IAAI,EAAE,KAAK;iBACZ;aACF;YACD,KAAK,EAAE;gBACL,IAAI,EAAE,4BAA4B;gBAClC,OAAO,EAAE,CAAC;gBACV,OAAO,EAAE,EAAE;gBACX,QAAQ,EAAE,KAAK;gBACf,KAAK,EAAE;oBACL,QAAQ,EAAE,QAAQ;oBAClB,UAAU,EAAE,QAAQ;iBACrB;aAEF;YACD,KAAK,EAAE;gBACL,IAAI,EAAE,UAAU;gBAChB,UAAU,EAAE,CAAC,GAAG,EAAE,QAAQ,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,CAAC;gBAC/K,MAAM,EAAE;oBACN,KAAK,EAAE;wBACL,QAAQ,EAAE,MAAM;wBAChB,UAAU,EAAE,QAAQ;qBACrB;iBACF;aACF;YACD,KAAK,EAAE;gBACL,GAAG,EAAE,CAAC;gBACN,GAAG,EAAE,OAAO;gBACZ,UAAU,EAAE,CAAC;gBACb,MAAM,EAAE;oBACN,KAAK,EAAE;wBACL,QAAQ,EAAE,MAAM;wBAChB,UAAU,EAAE,QAAQ;qBACrB;iBACF;aACF;YACD,MAAM,EAAE;gBACN,QAAQ,EAAE,KAAK;gBACf,eAAe,EAAE,OAAO;gBACxB,QAAQ,EAAE,IAAI;gBACd,OAAO,EAAE,CAAC,EAAE;gBACZ,OAAO,EAAE,CAAC,CAAC;aACZ;YACD,UAAU,EAAE;gBACV,OAAO,EAAE,IAAI;gBACb,UAAU,EAAE,QAAQ;gBACpB,OAAO,EAAE,CAAC,EAAE;gBACZ,OAAO,EAAE,CAAC,CAAC;gBACX,eAAe,EAAE,CAAC,CAAC,CAAC;aACrB;YACD,OAAO,EAAE;gBACP,IAAI,EAAE,CAAC,CAAC,EAAC,CAAC,EAAC,CAAC,CAAC;aAEd;SACF,CAAC;IACJ,CAAC;IACD,QAAQ;QAEN,qCAAqC;QACrC,IAAI,CAAC,IAAI,CAAC,UAAU,EAAE;YACpB,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,mJAAmJ,EAAE,SAAS,CAAC;SAC3L;aAAM;YACL,IAAI,OAAO,GAAU,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,EAAE;gBAE7C,IAAI,CAAC,CAAC,WAAW;oBACf,OAAO,CAAC,CAAC,WAAW,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC,IAAI;;oBAC5C,OAAO,IAAI;YAClB,CAAC,CAAC;YACF,OAAO,CAAC,OAAO,CAAC,IAAI,CAAC;YACrB,IAAI,IAAI,CAAC,UAAU,CAAC,MAAM,GAAG,CAAC,EAAE;gBAC9B,IAAI,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,WAAW,IAAI,KAAK,EAAE;oBAC3C,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,IAAI,GAAG,6BAA6B;oBAC5D,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,GAAG,GAAG,OAAO,GAAG,CAAC;oBACzC,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC,CAAC,CAAC,GAAG;wBAC5B,IAAI,EAAE,EAAE;wBACR,IAAI,EAAE,MAAM;qBACb;oBACD,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC,CAAC,CAAC,GAAG;wBAC5B,IAAI,EAAE,EAAE;wBACR,IAAI,EAAE,SAAS;qBAChB;oBACD,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,IAAI,GAAG,CAAC,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAC,OAAO,CAAC;oBACzK,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,IAAI,GAAG,CAAC,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAC,QAAQ,CAAC;iBACzL;aACF;YAED,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,IAAI,GAAG,OAAO;YAC1C,kEAAkE;SACnE;IACH,CAAC;IAGD,SAAS;QACP,OAAO,IAAI,CAAC,SAAS,CAAC,YAAY,CAAC,+DAAe,CAAC;IACrD,CAAC;IACD,QAAQ;QACN,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,EAAE,IAAI,EAAE,0EAAqB,EAAE,CAAC;IAExD,CAAC;IACD,QAAQ;QACN,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,EAAE,IAAI,EAAE,0EAAqB,EAAE,CAAC;IACxD,CAAC;CAEF;;YAhJQ,0FAAY;YACZ,2EAAqB;;;sBAmB3B,gDAAK;uBACL,gDAAK;0BACL,gDAAK;0BACL,iDAAM;oBACN,oDAAS,SAAC,OAAO;yBAGjB,gDAAK;;AARK,0BAA0B;IALtC,wDAAS,CAAC;QACT,QAAQ,EAAE,yBAAyB;QACnC,oLAAoD;;KAErD,CAAC;GACW,0BAA0B,CA6HtC;AA7HsC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACnCO;AACoD;AACjE;AACe;AACiB;AACQ;AACpB;AACD;AACoC;AAGL;AAEJ;AACxB;AACgD;AAC1B;IAOhE,sBAAsB,SAAtB,sBAAsB;IA4BjC,YACU,SAAgC,EAChC,YAA0B,EAC1B,WAA+B,EAC/B,aAAiC,EACjC,cAAkC,EAClC,UAA6B,EAC7B,GAAsB,EACtB,IAAiB,EACjB,UAAuB;QARvB,cAAS,GAAT,SAAS,CAAuB;QAChC,iBAAY,GAAZ,YAAY,CAAc;QAC1B,gBAAW,GAAX,WAAW,CAAoB;QAC/B,kBAAa,GAAb,aAAa,CAAoB;QACjC,mBAAc,GAAd,cAAc,CAAoB;QAClC,eAAU,GAAV,UAAU,CAAmB;QAC7B,QAAG,GAAH,GAAG,CAAmB;QACtB,SAAI,GAAJ,IAAI,CAAa;QACjB,eAAU,GAAV,UAAU,CAAa;QAjCvB,gBAAW,GAAG,IAAI,wDAAY,EAAoB,CAAC;QAE7D,gBAAW,GAAG;YACZ,MAAM,EAAE,CAAC;YACT,OAAO,EAAE,CAAC;YACV,OAAO,EAAE,EAAE;SACZ;QACD,cAAS,GAAG;YACV,OAAO,EAAE,CAAC;YACV,SAAS,EAAE,CAAC;YACZ,aAAa,EAAE,CAAC;YAChB,QAAQ,EAAE,EAAE;SACb;QACD,UAAK,GAAa,EAAE;QAOpB,gBAAW,GAAU,EAAE;QACvB,gBAAW,GAAU,EAAE;QACvB,cAAS,GAAU,EAAE;IAYjB,CAAC;IAEL,QAAQ;QACN,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,SAAS,EAAE;QAClC,IAAI,CAAC,IAAI,CAAC,UAAU,EAAE;YACpB,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,mJAAmJ,EAAE,SAAS,CAAC;SAC3L;aAAM;YAEL,IAAI,CAAC,YAAY,EAAE,CAAC,IAAI,CAAC,0DAAS,CAAC,CAAC,GAAG,EAAE,EAAE;gBACzC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC;oBAAE,MAAM,GAAG;gBACjC,OAAO,yCAAE,CAAC,EAAE,OAAO,EAAE,GAAG,CAAC,CAAC,CAAC,EAAE,OAAO,EAAE,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC;YACjD,CAAC,CAAC,CAAC,CAAC,SAAS,EAAE,CAAC,IAAI,CAAC,CAAC,GAAG,EAAE,EAAE;gBAE3B,IAAI,GAAG,EAAE;oBACP,IAAI,CAAC,WAAW,GAAG,GAAG,CAAC,OAAO;oBAC9B,IAAI,CAAC,WAAW,GAAG,GAAG,CAAC,OAAO;oBAC9B,IAAI,CAAC,cAAc,EAAE;iBACtB;YACH,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE;gBACX,OAAO,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;YACjB,CAAC,CAAC;YACF,uCAAuC;YACvC,gEAAgE;YAChE,2BAA2B;SAC5B;IACH,CAAC;IAED,cAAc;QAEZ,IAAI,CAAC,gBAAgB,EAAE;QACvB,IAAI,CAAC,SAAS,GAAG,EAAE;QACnB,0DAA0D;QAC1D,IAAI,IAAI,GAAG,IAAI,CAAC,IAAI,IAAI,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QACrC,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE;YAC1B,IAAI,OAAO,GAAG;gBACZ,UAAU,EAAE,IAAI,CAAC,WAAW;gBAC5B,eAAe,EAAE,CAAC;gBAClB,GAAG,EAAE,IAAI,CAAC,UAAU,GAAG,CAAC;gBACxB,WAAW,EAAE,IAAI,CAAC,IAAI;gBACtB,WAAW,EAAE,IAAI,CAAC,cAAc,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,UAAU,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;gBACrF,YAAY,EAAE,IAAI,CAAC,UAAU,GAAG,IAAI;gBACpC,cAAc,EAAE,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC;gBACpC,eAAe,EAAE,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,GAAG,GAAG;aAC5C;YACD,IAAI;YACJ,cAAc;YACd,6BAA6B;YAC7B,uBAAuB;YACvB,aAAa;YACb,0BAA0B;YAC1B,sBAAsB;YACtB,4BAA4B;YAC5B,wBAAwB;YACxB,IAAI;YACJ,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,OAAO,CAAC;YAC5B,IAAI,CAAC,GAAG,CAAC,IAAI,IAAI,CAAC,KAAK,CAAC,MAAM,EAAE;gBAC9B,IAAI,CAAC,GAAG,CAAC,aAAa,EAAE;aACzB;QACH,CAAC,CAAC;IAEJ,CAAC;IAED,gBAAgB;QACd,IAAI,UAAU,GAAQ,IAAI,CAAC,SAAS,CAAC,wBAAwB,CAAC,KAAK;QACnE,IAAI,eAAe,GAAG,UAAU,CAAC,eAAe;QAChD,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,WAAW,CAAC,eAAe,GAAG,KAAK,CAAC;QAC/D,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,UAAU,CAAC,aAAa,CAAC;QACpD,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,UAAU,CAAC,aAAa,CAAC;QAChD,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,UAAU,CAAC,cAAc,CAAC;QAC3C,IAAI,GAAG,GAAG,IAAI,CAAC,UAAU,CAAC,eAAe,CAAC;QAC1C,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,IAAI,CAAC,mCAAM,EAAE,CAAC,IAAI,CAAC,GAAG,EAAE,OAAO,EAAE,IAAI,CAAC,CAAC,CAAC;QAC/D,IAAI,gBAAgB,GAAG,IAAI,CAAC,UAAU,CAAC,mBAAmB,CAAC;QAC3D,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,SAAS,CAAC,gBAAgB,CAAC;QACtD,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC,IAAI,CAAC,EAAE,MAAM,EAAE,eAAe,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,GAAG,CAAC,CAAC;QACrE,OAAO,IAAI;IACb,CAAC;IAED,SAAS;QACP,IAAI,2DAAY,CAAC,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,EAAE;YACrC,IAAI,MAAM,GAAiB,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;YAC3D,IAAI,SAAS,GAAG,IAAI,CAAC,WAAW,CAAC,IAAI,IAAI,WAAW,CAAC,CAAC,CAAC,MAAM,CAAC,WAAW,IAAI,EAAE,CAAC,CAAC,CAAC,MAAM,CAAC,SAAS,IAAI,EAAE;YACxG,IAAI,MAAM,GAAG,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,SAAS,IAAI,WAAW,CAAC;YAClE,IAAI,MAAM,EAAE;gBACV,OAAO,IAAI,CAAC,SAAS,CAAC,YAAY,CAAC,MAAM,CAAC,SAAS,GAAG,MAAM,CAAC,EAAE,CAAC,IAAI,IAAI;aACzE;YACD,OAAO,IAAI;SACZ;QACD,OAAO,IAAI;IACb,CAAC;IAED,YAAY,CAAC,GAAW,EAAE,IAAY;QACpC,iBAAiB;QACjB,IAAI,QAAQ,GAAG,IAAI;QACnB,IAAI,IAAI,GAAG,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,IAAI,GAAG,CAAC;QACnD,IAAI,IAAI,EAAE;YACR,QAAQ,GAAG,IAAI,CAAC,IAAI;SACrB;QACD,sBAAsB;QACtB,IAAI,OAAO,GAAG,CAAC,CAAC,QAAQ,GAAG,IAAI,CAAC,GAAG,IAAI,CAAC,UAAU,CAAC;QACnD,IAAI,IAAI,IAAI,CAAC,EAAE;YACb,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC;YACjC,IAAI,OAAO,GAAG,CAAC,IAAI,CAAC,SAAS,CAAC,gBAAgB,CAAC,OAAO,GAAG,IAAI,CAAC,cAAc,CAAC,GAAG,IAAI,CAAC;YACrF,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,UAAU,CAAC,SAAS,CAAC,OAAO,CAAC,GAAG,SAAS,GAAG,IAAI,CAAC,UAAU,CAAC,mBAAmB,CAAC;YACvG,IAAI,CAAC,SAAS,CAAC,eAAe,CAAC,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC;SACrD;QACD,OAAO,IAAI,CAAC,SAAS,CAAC,gBAAgB,CAAC,OAAO,GAAG,EAAE,CAAC,GAAG,IAAI;IAC7D,CAAC;IAED,YAAY,CAAC,IAAY;QACvB,IAAI,QAAQ,GAAG,EAAE;QACjB,IAAI,IAAI,GAAG,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,IAAI,IAAI,IAAI,CAAC;QACrD,IAAI,IAAI,EAAE;YACR,QAAQ,GAAG,IAAI,CAAC,IAAI;YACpB,IAAI,OAAO,GAAG,CAAC,QAAQ,GAAG,GAAG,CAAC,GAAG,IAAI,CAAC,UAAU;YAChD,OAAO,OAAO;SACf;QACD,OAAO,CAAC;IACV,CAAC;IAED,YAAY;QACV,OAAO,+CAAQ,CAAC,CAAC,IAAI,CAAC,QAAQ,EAAE,EAAE,IAAI,CAAC,UAAU,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,oDAAG,CAAC,CAAC,GAAG,EAAE,EAAE;YACrE,OAAO,GAAG;QACZ,CAAC,CAAC,CAAC;IACL,CAAC;IAED,QAAQ;QACN,OAAO,IAAI,CAAC,aAAa,CAAC,OAAO,CAAC,IAAI,CAAC,UAAU,CAAC,cAAc,CAAC,EAAE,IAAI,CAAC,UAAU,CAAC,aAAa,CAAC,CAAC;IACpG,CAAC;IAED,UAAU;QACR,OAAO,IAAI,CAAC,cAAc,CAAC,OAAO,CAAC,IAAI,CAAC,UAAU,CAAC,aAAa,CAAC,CAAC;IACpE,CAAC;IACD,QAAQ;QACN,IAAI,IAAI,CAAC,SAAS,CAAC,MAAM,GAAG,CAAC,EAAE;YAC7B,IAAI,CAAC,UAAU,CAAC,UAAU,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,IAAI,CAAC,yDAAQ,CAAC,CAAC,GAAQ,EAAE,EAAE;gBACtE,IAAI,QAAQ,GAAG;oBACb,SAAS,EAAE,IAAI,CAAC,SAAS;oBACzB,iBAAiB,EAAE;wBACjB,SAAS,EAAE,IAAI,CAAC,IAAI,CAAC,gBAAgB,CAAC,EAAE,IAAI,CAAC;wBAC7C,YAAY,EAAE,IAAI,CAAC,WAAW,CAAC,gBAAgB,CAAC,UAAU,IAAI,CAAC;wBAC/D,cAAc,EAAE,IAAI;wBACpB,SAAS,EAAE,CAAC,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,CAAC,GAAG,EAAE;wBAChF,aAAa,EAAE,IAAI,CAAC,UAAU;wBAC9B,WAAW,EAAE,IAAI,CAAC,OAAO,CAAC,EAAE;wBAC5B,aAAa,EAAE,IAAI,CAAC,WAAW,CAAC,WAAW;wBAC3C,MAAM,EAAE,IAAI,CAAC,WAAW,CAAC,IAAI;qBAC9B;oBACD,YAAY,EAAE,IAAI,CAAC,WAAW;iBAC/B;gBACD,OAAO,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,QAAQ,CAAC;YAC3C,CAAC,CAAC,CAAC,CAAC,SAAS,EAAE,CAAC,IAAI,CAAC,CAAC,GAAG,EAAE,EAAE;gBAC3B,IAAI,GAAG,EAAE;oBACP,IAAI,CAAC,SAAS,CAAC,YAAY,CAAC,+DAAe,CAAC,GAAG,IAAI,CAAC,SAAS;oBAC7D,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,EAAE,IAAI,EAAE,0EAAqB,EAAE,CAAC;iBACvD;YACH,CAAC,CAAC;SACH;IAEH,CAAC;IACD,QAAQ;QACN,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,EAAE,IAAI,EAAE,0EAAqB,EAAE,CAAC;IACxD,CAAC;CAEF;;YA3NQ,2EAAqB;YAGrB,0FAAY;YAGZ,wFAAkB;YAIlB,6FAAkB;YAAE,6FAAkB;YACtC,uFAAiB;YAfjB,6DAAiB;YAMjB,sDAAW;YAPX,yDAAW;;;sBAwBjB,iDAAK;uBACL,iDAAK;0BACL,iDAAK;0BACL,kDAAM;;AAJI,sBAAsB;IALlC,yDAAS,CAAC;QACT,QAAQ,EAAE,oBAAoB;QAC9B,8KAA8C;;KAE/C,CAAC;GACW,sBAAsB,CAyMlC;AAzMkC;;;;;;;;;;;;;;;;;;;;;;ACvBe;AACP;AAC2B;AACO;AAG7E,MAAM,kBAAkB,GAAG,GAAG,yEAAkB,0BAA0B,CAAC;IAK9D,kBAAkB,SAAlB,kBAAmB,SAAQ,4EAAuC;IAC7E,YAAsB,UAAsB;QAC1C,KAAK,CAAC,UAAU,EAAE,kBAAkB,CAAC,CAAC;QADlB,eAAU,GAAV,UAAU,CAAY;IAE5C,CAAC;IAED,OAAO,CAAC,IAAY,EAAE,IAAY;QAChC,OAAO,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,kBAAkB,GAAG,eAAe,GAAG,IAAI,GAAG,cAAc,GAAG,IAAI,CAAC;IACjG,CAAC;CACF;;YAnBQ,4DAAU;;AAWN,kBAAkB;IAH9B,yDAAU,CAAC;QACV,UAAU,EAAE,MAAM;KACnB,CAAC;GACW,kBAAkB,CAQ9B;AAR8B;AAU/B,MAAM,kBAAkB,GAAG,GAAG,yEAAkB,6BAA6B,CAAC;IAKjE,kBAAkB,SAAlB,kBAAmB,SAAQ,4EAAuC;IAC7E,YAAsB,UAAsB;QAC1C,KAAK,CAAC,UAAU,EAAE,kBAAkB,CAAC,CAAC;QADlB,eAAU,GAAV,UAAU,CAAY;IAE5C,CAAC;IAED,OAAO,CAAC,IAAY;QAClB,OAAO,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,kBAAkB,GAAG,cAAc,GAAG,IAAI,CAAC;IACxE,CAAC;CACF;;YAlCQ,4DAAU;;AA0BN,kBAAkB;IAH9B,yDAAU,CAAC;QACV,UAAU,EAAE,MAAM;KACnB,CAAC;GACW,kBAAkB,CAQ9B;AAR8B;;;;;;;;;;;;;;;;;;;;;AC1BmB;AACP;AAC2B;AACO;AAG7E,MAAM,gBAAgB,GAAG,GAAG,yEAAkB,yBAAyB,CAAC;IAK3D,iBAAiB,SAAjB,iBAAkB,SAAQ,4EAA0C;IAC/E,YAAsB,UAAsB;QAC1C,KAAK,CAAC,UAAU,EAAE,gBAAgB,CAAC,CAAC;QADhB,eAAU,GAAV,UAAU,CAAY;IAE5C,CAAC;IAED,UAAU,CAAC,KAAa;QACtB,wDAAwD;QACxD,OAAO,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,gBAAgB,GAAG,YAAY,GAAG,KAAK,CAAC;IACxE,CAAC;IACD,OAAO,CAAC,KAAa;QACnB,wDAAwD;QACxD,OAAO,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,gBAAgB,GAAG,YAAY,GAAG,KAAK,CAAC;IACrE,CAAC;IAED,QAAQ,CAAC,IAAS;QAChB,OAAO,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,gBAAgB,GAAG,GAAG,EAAE,IAAI,CAAC;IAC3D,CAAC;CACF;;YA5BQ,4DAAU;;AAWN,iBAAiB;IAH7B,yDAAU,CAAC;QACV,UAAU,EAAE,MAAM;KACnB,CAAC;GACW,iBAAiB,CAiB7B;AAjB6B;;;;;;;;;;;;;;;;;;;;;;;;;;ACX4D;AAIX;AAYS;AACf;AACtB;IAiBtC,iBAAiB,SAAjB,iBAAiB;IAU5B,YAAoB,YAA0B,EAAU,SAAgC;QAApE,iBAAY,GAAZ,YAAY,CAAc;QAAU,cAAS,GAAT,SAAS,CAAuB;QAN9E,gBAAW,GAAG,IAAI,uDAAY,EAAoB,CAAC;QAK7D,cAAS,GAAU,EAAE;QAEnB,IAAI,CAAC,YAAY,GAAG;YAClB,MAAM,EAAE;gBACN;oBACE,IAAI,EAAE,gBAAgB;oBACtB,IAAI,EAAE,EAAE;oBACR,KAAK,EAAE,SAAS;iBACjB;aACF;YACD,KAAK,EAAE;gBACL,MAAM,EAAE,GAAG;gBACX,IAAI,EAAE,MAAM;gBACZ,OAAO,EAAE;oBACP,IAAI,EAAE,KAAK;iBACZ;aACF;YACD,KAAK,EAAE;gBACL,IAAI,EAAE,4BAA4B;gBAClC,OAAO,EAAE,CAAC;gBACV,OAAO,EAAE,EAAE;gBACX,QAAQ,EAAE,KAAK;gBACf,KAAK,EAAE;oBACL,QAAQ,EAAE,QAAQ;oBAClB,UAAU,EAAE,QAAQ;iBACrB;aAEF;YACD,KAAK,EAAE;gBACL,IAAI,EAAE,UAAU;gBAChB,UAAU,EAAE,CAAC,GAAG,EAAE,QAAQ,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,CAAC;gBAC/K,MAAM,EAAE;oBACN,KAAK,EAAE;wBACL,QAAQ,EAAE,MAAM;wBAChB,UAAU,EAAE,QAAQ;qBACrB;iBACF;aACF;YACD,KAAK,EAAE;gBACL,GAAG,EAAE,CAAC;gBACN,GAAG,EAAE,OAAO;gBACZ,UAAU,EAAE,CAAC;gBACb,MAAM,EAAE;oBACN,KAAK,EAAE;wBACL,QAAQ,EAAE,MAAM;wBAChB,UAAU,EAAE,QAAQ;qBACrB;iBACF;aACF;YACD,MAAM,EAAE;gBACN,QAAQ,EAAE,KAAK;gBACf,eAAe,EAAE,OAAO;gBACxB,QAAQ,EAAE,IAAI;gBACd,OAAO,EAAE,CAAC,EAAE;gBACZ,OAAO,EAAE,CAAC,CAAC;aACZ;YACD,UAAU,EAAE;gBACV,OAAO,EAAE,IAAI;gBACb,UAAU,EAAE,QAAQ;gBACpB,OAAO,EAAE,CAAC,EAAE;gBACZ,OAAO,EAAE,CAAC,CAAC;gBACX,eAAe,EAAE,CAAC,CAAC,CAAC;aACrB;YACD,OAAO,EAAE;gBACP,IAAI,EAAE,CAAC,CAAC,EAAC,CAAC,EAAC,CAAC,CAAC;aAEd;SACF,CAAC;IACJ,CAAC;IACD,QAAQ;QAEN,qCAAqC;QACrC,IAAI,CAAC,IAAI,CAAC,UAAU,EAAE;YACpB,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,mJAAmJ,EAAE,SAAS,CAAC;SAC3L;aAAM;YACL,IAAI,OAAO,GAAU,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,EAAE;gBAE7C,IAAI,CAAC,CAAC,WAAW;oBACf,OAAO,CAAC,CAAC,WAAW,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC,IAAI;;oBAC5C,OAAO,IAAI;YAClB,CAAC,CAAC;YACF,OAAO,CAAC,OAAO,CAAC,IAAI,CAAC;YACrB,oCAAoC;YAClC,iDAAiD;YACjD,iEAAiE;YACjE,8CAA8C;YAC9C,oCAAoC;YACpC,gBAAgB;YAChB,mBAAmB;YACnB,MAAM;YACN,oCAAoC;YACpC,gBAAgB;YAChB,sBAAsB;YACtB,MAAM;YACN,8KAA8K;YAC9K,6LAA6L;YAC7L,IAAI;YACN,IAAI;YAEJ,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,IAAI,GAAG,OAAO;YAC1C,kEAAkE;SACnE;IACH,CAAC;IAGD,SAAS;QACP,OAAO,IAAI,CAAC,SAAS,CAAC,YAAY,CAAC,2DAAW,CAAC;IACjD,CAAC;IACD,QAAQ;QACN,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,EAAE,IAAI,EAAE,0EAAqB,EAAE,CAAC;IAExD,CAAC;IACD,QAAQ;QACN,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,EAAE,IAAI,EAAE,0EAAqB,EAAE,CAAC;IACxD,CAAC;CAEF;;YAhJQ,0FAAY;YACZ,2EAAqB;;;sBAmB3B,gDAAK;uBACL,gDAAK;0BACL,gDAAK;0BACL,iDAAM;oBACN,oDAAS,SAAC,OAAO;yBAGjB,gDAAK;;AARK,iBAAiB;IAL7B,wDAAS,CAAC;QACT,QAAQ,EAAE,eAAe;QACzB,0KAA0C;;KAE3C,CAAC;GACW,iBAAiB,CA6H7B;AA7H6B;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACnCgB;AACoD;AACjE;AACe;AACiB;AACQ;AACpB;AACD;AACoC;AAGL;AAEJ;AAC5B;AACwC;AAC9B;IAOhD,aAAa,SAAb,aAAa;IA2BxB,YACU,SAAgC,EAChC,YAA0B,EAC1B,WAA+B,EAC/B,aAA8B,EAC9B,cAAmC,EACnC,UAAuB,EACvB,GAAsB,EACtB,IAAiB,EACjB,UAAuB;QARvB,cAAS,GAAT,SAAS,CAAuB;QAChC,iBAAY,GAAZ,YAAY,CAAc;QAC1B,gBAAW,GAAX,WAAW,CAAoB;QAC/B,kBAAa,GAAb,aAAa,CAAiB;QAC9B,mBAAc,GAAd,cAAc,CAAqB;QACnC,eAAU,GAAV,UAAU,CAAa;QACvB,QAAG,GAAH,GAAG,CAAmB;QACtB,SAAI,GAAJ,IAAI,CAAa;QACjB,eAAU,GAAV,UAAU,CAAa;QAhCvB,gBAAW,GAAG,IAAI,wDAAY,EAAoB,CAAC;QAE7D,gBAAW,GAAG;YACZ,MAAM,EAAE,CAAC;YACT,OAAO,EAAE,CAAC;YACV,OAAO,EAAE,EAAE;SACZ;QACD,cAAS,GAAG;YACV,OAAO,EAAE,CAAC;YACV,SAAS,EAAE,CAAC;YACZ,aAAa,EAAE,CAAC;YAChB,QAAQ,EAAE,EAAE;SACb;QACD,UAAK,GAAa,EAAE;QAMpB,gBAAW,GAAU,EAAE;QACvB,gBAAW,GAAU,EAAE;QACvB,cAAS,GAAU,EAAE;IAYjB,CAAC;IAEL,QAAQ;QACN,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,SAAS,EAAE;QAClC,IAAI,CAAC,IAAI,CAAC,UAAU,EAAE;YACpB,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,0IAA0I,EAAE,SAAS,CAAC;SAClL;aAAM;YAEL,IAAI,CAAC,YAAY,EAAE,CAAC,IAAI,CAAC,0DAAS,CAAC,CAAC,GAAG,EAAE,EAAE;gBACzC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC;oBAAE,MAAM,GAAG;gBACjC,OAAO,yCAAE,CAAC,EAAE,OAAO,EAAE,GAAG,CAAC,CAAC,CAAC,EAAE,OAAO,EAAE,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC;YACjD,CAAC,CAAC,CAAC,CAAC,SAAS,EAAE,CAAC,IAAI,CAAC,CAAC,GAAG,EAAE,EAAE;gBAE3B,IAAI,GAAG,EAAE;oBACP,IAAI,CAAC,WAAW,GAAG,GAAG,CAAC,OAAO;oBAC9B,IAAI,CAAC,WAAW,GAAG,GAAG,CAAC,OAAO;oBAC9B,IAAI,CAAC,cAAc,EAAE;iBACtB;YACH,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE;gBACX,OAAO,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;YACjB,CAAC,CAAC;YACF,uCAAuC;YACvC,gEAAgE;YAChE,2BAA2B;SAC5B;IACH,CAAC;IAED,cAAc;QAEZ,IAAI,CAAC,gBAAgB,EAAE;QACvB,IAAI,CAAC,SAAS,GAAG,EAAE;QACnB,0DAA0D;QAC1D,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE;YAC1B,IAAI,OAAO,GAAG;gBACZ,UAAU,EAAE,IAAI,CAAC,WAAW;gBAC5B,eAAe,EAAE,CAAC;gBAClB,GAAG,EAAE,IAAI,CAAC,UAAU,GAAG,CAAC;gBACxB,WAAW,EAAE,IAAI,CAAC,cAAc,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,UAAU,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;gBACrF,OAAO,EAAE,IAAI,CAAC,UAAU;gBACxB,cAAc,EAAE,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC;gBACpC,UAAU,EAAE,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,GAAG,GAAG;aACvC;YACD,IAAI;YACJ,cAAc;YACd,6BAA6B;YAC7B,uBAAuB;YACvB,aAAa;YACb,0BAA0B;YAC1B,sBAAsB;YACtB,4BAA4B;YAC5B,wBAAwB;YACxB,IAAI;YACJ,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,OAAO,CAAC;YAC5B,IAAI,CAAC,GAAG,CAAC,IAAI,IAAI,CAAC,KAAK,CAAC,MAAM,EAAE;gBAC9B,IAAI,CAAC,GAAG,CAAC,aAAa,EAAE;aACzB;QACH,CAAC,CAAC;IAEJ,CAAC;IAED,gBAAgB;QACd,IAAI,UAAU,GAAQ,IAAI,CAAC,SAAS,CAAC,wBAAwB,CAAC,KAAK;QACnE,IAAI,eAAe,GAAG,UAAU,CAAC,eAAe;QAChD,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,WAAW,CAAC,eAAe,GAAG,KAAK,CAAC;QAC/D,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,UAAU,CAAC,aAAa,CAAC;QACpD,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,UAAU,CAAC,aAAa,CAAC;QAChD,IAAI,GAAG,GAAG,IAAI,CAAC,UAAU,CAAC,eAAe,CAAC;QAC1C,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,IAAI,CAAC,mCAAM,EAAE,CAAC,IAAI,CAAC,GAAG,EAAE,OAAO,EAAE,IAAI,CAAC,CAAC,CAAC;QAC/D,IAAI,gBAAgB,GAAG,IAAI,CAAC,UAAU,CAAC,mBAAmB,CAAC;QAC3D,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,SAAS,CAAC,gBAAgB,CAAC;QACtD,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC,IAAI,CAAC,EAAE,MAAM,EAAE,eAAe,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,GAAG,CAAC,CAAC;QACrE,OAAO,IAAI;IACb,CAAC;IAED,SAAS;QACP,IAAI,2DAAY,CAAC,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,EAAE;YACrC,IAAI,MAAM,GAAiB,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;YAC3D,gCAAgC;YAChC,IAAI,SAAS,GAAG,IAAI,CAAC,WAAW,CAAC,IAAI,IAAI,WAAW,CAAC,CAAC,CAAC,MAAM,CAAC,WAAW,IAAI,EAAE,CAAC,CAAC,CAAC,MAAM,CAAC,SAAS,IAAI,EAAE;YACxG,IAAI,MAAM,GAAG,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,SAAS,IAAI,aAAa,CAAC;YACpE,IAAI,MAAM,EAAE;gBACV,OAAO,IAAI,CAAC,SAAS,CAAC,YAAY,CAAC,MAAM,CAAC,SAAS,GAAG,MAAM,CAAC,EAAE,CAAC,IAAI,IAAI;aACzE;YACD,OAAO,IAAI;SACZ;QACD,OAAO,IAAI;IACb,CAAC;IAED,YAAY,CAAC,GAAW,EAAE,IAAY;QACpC,iBAAiB;QACjB,IAAI,QAAQ,GAAG,IAAI;QACnB,IAAI,IAAI,GAAG,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,IAAI,GAAG,CAAC;QACnD,IAAI,IAAI,EAAE;YACR,QAAQ,GAAG,IAAI,CAAC,IAAI;SACrB;QACD,sBAAsB;QACtB,IAAI,OAAO,GAAG,CAAC,CAAC,QAAQ,GAAG,IAAI,CAAC,GAAG,IAAI,CAAC,UAAU,CAAC;QACnD,IAAI,IAAI,IAAI,CAAC,EAAE;YACb,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC;YACjC,IAAI,OAAO,GAAG,CAAC,IAAI,CAAC,SAAS,CAAC,gBAAgB,CAAC,OAAO,GAAG,IAAI,CAAC,cAAc,CAAC,GAAG,IAAI,CAAC;YACrF,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,UAAU,CAAC,SAAS,CAAC,OAAO,CAAC,GAAG,SAAS,GAAG,IAAI,CAAC,UAAU,CAAC,mBAAmB,CAAC;YACvG,IAAI,CAAC,SAAS,CAAC,eAAe,CAAC,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC;SACrD;QACD,OAAO,IAAI,CAAC,SAAS,CAAC,gBAAgB,CAAC,OAAO,GAAG,EAAE,CAAC,GAAG,IAAI;IAC7D,CAAC;IAED,YAAY,CAAC,IAAY;QACvB,IAAI,QAAQ,GAAG,EAAE;QACjB,IAAI,IAAI,GAAG,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,IAAI,IAAI,IAAI,CAAC;QACrD,IAAI,IAAI,EAAE;YACR,QAAQ,GAAG,IAAI,CAAC,IAAI;YACpB,IAAI,OAAO,GAAG,CAAC,QAAQ,GAAG,GAAG,CAAC,GAAG,IAAI,CAAC,UAAU;YAChD,OAAO,OAAO;SACf;QACD,OAAO,CAAC;IACV,CAAC;IAED,YAAY;QACV,OAAO,+CAAQ,CAAC,CAAC,IAAI,CAAC,QAAQ,EAAE,EAAE,IAAI,CAAC,UAAU,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,oDAAG,CAAC,CAAC,GAAG,EAAE,EAAE;YACrE,OAAO,GAAG;QACZ,CAAC,CAAC,CAAC;IACL,CAAC;IAED,QAAQ;QACN,OAAO,IAAI,CAAC,aAAa,CAAC,OAAO,CAAC,IAAI,CAAC,UAAU,CAAC,aAAa,CAAC,CAAC;IACnE,CAAC;IAED,UAAU;QACR,OAAO,IAAI,CAAC,cAAc,CAAC,OAAO,CAAC,IAAI,CAAC,UAAU,CAAC,aAAa,CAAC,CAAC;IACpE,CAAC;IACD,QAAQ;QACN,IAAI,IAAI,CAAC,SAAS,CAAC,MAAM,GAAG,CAAC,EAAE;YAC7B,IAAI,CAAC,UAAU,CAAC,UAAU,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,IAAI,CAAC,yDAAQ,CAAC,CAAC,GAAQ,EAAE,EAAE;gBACtE,IAAI,QAAQ,GAAG;oBACb,SAAS,EAAE,IAAI,CAAC,SAAS;oBACzB,iBAAiB,EAAE;wBACjB,SAAS,EAAE,IAAI,CAAC,IAAI,CAAC,gBAAgB,CAAC,EAAE,IAAI,CAAC;wBAC7C,YAAY,EAAE,IAAI,CAAC,WAAW,CAAC,gBAAgB,CAAC,UAAU,IAAI,CAAC;wBAC/D,cAAc,EAAE,IAAI;wBACpB,SAAS,EAAE,CAAC,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,CAAC,GAAG,EAAE;wBAChF,aAAa,EAAE,IAAI,CAAC,UAAU;wBAC9B,WAAW,EAAE,IAAI,CAAC,OAAO,CAAC,EAAE;wBAC5B,aAAa,EAAE,IAAI,CAAC,WAAW,CAAC,WAAW;wBAC3C,MAAM,EAAE,IAAI,CAAC,WAAW,CAAC,IAAI;qBAC9B;oBACD,YAAY,EAAE,IAAI,CAAC,WAAW;iBAC/B;gBACD,OAAO,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,QAAQ,CAAC;YAC3C,CAAC,CAAC,CAAC,CAAC,SAAS,EAAE,CAAC,IAAI,CAAC,CAAC,GAAG,EAAE,EAAE;gBAC3B,IAAI,GAAG,EAAE;oBACP,IAAI,CAAC,SAAS,CAAC,YAAY,CAAC,2DAAW,CAAC,GAAG,IAAI,CAAC,SAAS;oBACzD,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,EAAE,IAAI,EAAE,0EAAqB,EAAE,CAAC;iBACvD;YACH,CAAC,CAAC;SACH;IAEH,CAAC;IACD,QAAQ;QACN,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,EAAE,IAAI,EAAE,0EAAqB,EAAE,CAAC;IACxD,CAAC;CAEF;;YAxNQ,2EAAqB;YAGrB,0FAAY;YAGZ,wFAAkB;YAIlB,gFAAe;YAAE,oFAAmB;YACpC,uEAAW;YAfX,6DAAiB;YAMjB,sDAAW;YAPX,yDAAW;;;sBAwBjB,iDAAK;uBACL,iDAAK;0BACL,iDAAK;0BACL,kDAAM;;AAJI,aAAa;IALzB,yDAAS,CAAC;QACT,QAAQ,EAAE,UAAU;QACpB,oKAAoC;;KAErC,CAAC;GACW,aAAa,CAsMzB;AAtMyB;;;;;;;;;;;;;;;;;;;;;;ACvBwB;AACP;AAC2B;AACO;AAE7E,MAAM,iBAAiB,GAAG,GAAG,yEAAkB,iBAAiB,CAAC;IAKpD,eAAe,SAAf,eAAgB,SAAQ,4EAAgC;IACnE,YAAsB,UAAsB;QAC1C,KAAK,CAAC,UAAU,EAAE,iBAAiB,CAAC,CAAC;QADjB,eAAU,GAAV,UAAU,CAAY;IAE5C,CAAC;IAED,OAAO,CAAC,IAAY;QAClB,OAAO,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,iBAAiB,GAAG,cAAc,GAAG,IAAI,CAAC;IACvE,CAAC;CACF;;YAlBQ,4DAAU;;AAUN,eAAe;IAH3B,yDAAU,CAAC;QACV,UAAU,EAAE,MAAM;KACnB,CAAC;GACW,eAAe,CAQ3B;AAR2B;AAU5B,MAAM,mBAAmB,GAAG,GAAG,yEAAkB,2BAA2B,CAAC;IAKhE,mBAAmB,SAAnB,mBAAoB,SAAQ,4EAAgC;IACvE,YAAsB,UAAsB;QAC1C,KAAK,CAAC,UAAU,EAAE,mBAAmB,CAAC,CAAC;QADnB,eAAU,GAAV,UAAU,CAAY;IAE5C,CAAC;IAED,OAAO,CAAC,IAAY;QAClB,OAAO,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,mBAAmB,GAAG,cAAc,GAAG,IAAI,CAAC;IACzE,CAAC;CACF;;YAjCQ,4DAAU;;AAyBN,mBAAmB;IAH/B,yDAAU,CAAC;QACV,UAAU,EAAE,MAAM;KACnB,CAAC;GACW,mBAAmB,CAQ/B;AAR+B;;;;;;;;;;;;;;;;;;;;;ACzBkB;AACP;AAC2B;AACO;AAE7E,MAAM,gBAAgB,GAAG,GAAG,yEAAkB,YAAY,CAAC;IAK9C,WAAW,SAAX,WAAY,SAAQ,4EAAgC;IAC/D,YAAsB,UAAsB;QAC1C,KAAK,CAAC,UAAU,EAAE,gBAAgB,CAAC,CAAC;QADhB,eAAU,GAAV,UAAU,CAAY;IAE5C,CAAC;IAED,UAAU,CAAC,KAAa;QACtB,wDAAwD;QACxD,OAAO,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,gBAAgB,GAAG,YAAY,GAAG,KAAK,CAAC;IACxE,CAAC;IACD,OAAO,CAAC,KAAa;QACnB,wDAAwD;QACxD,OAAO,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,gBAAgB,GAAG,YAAY,GAAG,KAAK,CAAC;IACrE,CAAC;IAED,QAAQ,CAAC,IAAS;QAChB,OAAO,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,gBAAgB,GAAG,GAAG,EAAE,IAAI,CAAC;IAC3D,CAAC;CACF;;YA3BQ,4DAAU;;AAUN,WAAW;IAHvB,yDAAU,CAAC;QACV,UAAU,EAAE,MAAM;KACnB,CAAC;GACW,WAAW,CAiBvB;AAjBuB;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACT0E;AAC5C;AACmB;AAIM;AAC7B;AACoB;AACI;IAO7D,iBAAiB,SAAjB,iBAAiB;IAO5B,YACU,SAAgC,EAChC,eAAgC,EAChC,YAAsB,EACtB,GAAsB;QAHtB,cAAS,GAAT,SAAS,CAAuB;QAChC,oBAAe,GAAf,eAAe,CAAiB;QAChC,iBAAY,GAAZ,YAAY,CAAU;QACtB,QAAG,GAAH,GAAG,CAAmB;QAPtB,gBAAW,GAAG,IAAI,uDAAY,EAAoB,CAAC;QAC7D,eAAU,GAAW,EAAE;QACvB,aAAQ,GAAU,EAAE;IAMhB,CAAC;IAEL,QAAQ;QACN,IAAI,CAAC,WAAW,EAAE;IACpB,CAAC;IACD,QAAQ;QACN,IAAI,CAAC,SAAS,CAAC,YAAY,CAAC,0DAAU,CAAC,GAAG,IAAI,CAAC,QAAQ;QACvD,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,EAAE,IAAI,EAAE,0EAAqB,EAAE,CAAC;IACxD,CAAC;IACD,QAAQ;QACN,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,EAAE,IAAI,EAAE,0EAAqB,EAAE,CAAC;IACxD,CAAC;IAED,WAAW;QACT,IAAI,CAAC,eAAe,CAAC,OAAO,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,SAAS,EAAE,CAAC,IAAI,CAAC,CAAC,GAAQ,EAAE,EAAE;YAC3E,IAAI,GAAG,EAAE;gBACP,IAAI,CAAC,SAAS,CAAC,YAAY,CAAC,0DAAU,CAAC,GAAG,GAAG;gBAC7C,IAAI,CAAC,QAAQ,GAAG,GAAG,IAAI,EAAE;gBACzB,IAAI,CAAC,GAAG,CAAC,aAAa,EAAE;aACzB;QACH,CAAC,CAAC;IACJ,CAAC;IAED,OAAO,CAAC,IAAY,EAAE,MAAY;QAChC,IAAI,QAAQ,CAAC;QACb,QAAQ,GAAG,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,mFAAmB,EAAE,EAAE,IAAI,EAAE,IAAI,EAAE,QAAQ,EAAE,KAAK,EAAE,CAAC,CAAC;QACxF,QAAQ,CAAC,iBAAiB,CAAC,IAAI,GAAG,IAAI;QACtC,QAAQ,CAAC,iBAAiB,CAAC,MAAM,GAAG,MAAM,CAAC,CAAC,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE;QAC/D,QAAQ,CAAC,iBAAiB,CAAC,OAAO,GAAG,MAAM,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE;QACzD,QAAQ,CAAC,iBAAiB,CAAC,WAAW,GAAG,IAAI,CAAC,WAAW;QACzD,QAAQ,CAAC,iBAAiB,CAAC,UAAU,GAAG,IAAI,CAAC,UAAU;QACvD,QAAQ,CAAC,MAAM,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,EAAE,CAAC,GAAG,EAAE,EAAE;YACtC,IAAI,GAAG,EAAE;gBACP,OAAO,CAAC,GAAG,CAAC,QAAQ,EAAE,GAAG,CAAC;gBAC1B,IAAI,GAAG,CAAC,IAAI,IAAI,MAAM,EAAE;oBACtB,4BAA4B;oBAC5B,IAAI,MAAM,EAAE;wBACV,IAAI,KAAK,GAAG,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAC,GAAE,CAAC,CAAC,CAAC,EAAE,IAAI,MAAM,CAAC,EAAE,CAAC;wBAC1D,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,GAAG,GAAG,CAAC,IAAI;qBAChC;yBAAM;wBACL,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC;qBAC7B;oBACD,IAAI,CAAC,GAAG,CAAC,aAAa,EAAE;iBACzB;aACF;QACH,CAAC,CAAC;IACJ,CAAC;IAED,MAAM,CAAC,IAAI;QACT,IAAI,CAAC,eAAe,CAAC,MAAM,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,SAAS,EAAE;aAC7C,IAAI,CAAC,CAAC,GAAG,EAAE,EAAE;YACZ,IAAI,GAAG,EAAE;gBACP,IAAI,KAAK,GAAG,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,IAAI,IAAI,CAAC,EAAE,CAAC;gBACzD,IAAI,KAAK,IAAI,CAAC,EAAE;oBACd,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC,CAAC;oBAC9B,IAAI,CAAC,GAAG,CAAC,aAAa,EAAE;iBACzB;aACF;QACH,CAAC,CAAC,CAAC;IACP,CAAC;CAEF;;YAvFQ,2EAAqB;YAMrB,+EAAe;YAPf,gEAAQ;YADR,4DAAiB;;;sBAiBvB,gDAAK;uBACL,gDAAK;0BACL,gDAAK;0BACL,iDAAM;;AAJI,iBAAiB;IAL7B,wDAAS,CAAC;QACT,QAAQ,EAAE,eAAe;QACzB,yKAAyC;;KAE1C,CAAC;GACW,iBAAiB,CAyE7B;AAzE6B;;;;;;;;;;;;;;;;;;;;;ACjBoB;AACP;AAC2B;AACO;AAE7E,MAAM,iBAAiB,GAAG,GAAG,yEAAkB,kBAAkB,CAAC;IAKrD,mBAAmB,SAAnB,mBAAoB,SAAQ,4EAAgC;IACvE,YAAsB,UAAsB;QAC1C,KAAK,CAAC,UAAU,EAAE,iBAAiB,CAAC,CAAC;QADjB,eAAU,GAAV,UAAU,CAAY;IAE5C,CAAC;IAED,OAAO,CAAC,IAAI;QACV,OAAO,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,iBAAiB,EAAE,IAAI,CAAC;IACtD,CAAC;CACF;;YAlBQ,4DAAU;;AAUN,mBAAmB;IAH/B,yDAAU,CAAC;QACV,UAAU,EAAE,MAAM;KACnB,CAAC;GACW,mBAAmB,CAQ/B;AAR+B;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACV4C;AACR;AACE;AACjC;AACc;AACiC;AACR;AACP;AACiB;AACjC;AACgD;AACgB;AACrC;AACT;IAO1D,mBAAmB,SAAnB,mBAAmB;IAuB9B,YAAoB,YAAsB,EAAS,KAAqB,EAAU,iBAAoC,EAAU,GAAsB,EAAU,eAAgC,EAAU,IAAiB,EAAU,kBAAsC,EAAU,WAA+B,EAAU,aAAoC,EAAU,YAAiC,EAAU,mBAA+C;QAAlb,iBAAY,GAAZ,YAAY,CAAU;QAAS,UAAK,GAAL,KAAK,CAAgB;QAAU,sBAAiB,GAAjB,iBAAiB,CAAmB;QAAU,QAAG,GAAH,GAAG,CAAmB;QAAU,oBAAe,GAAf,eAAe,CAAiB;QAAU,SAAI,GAAJ,IAAI,CAAa;QAAU,uBAAkB,GAAlB,kBAAkB,CAAoB;QAAU,gBAAW,GAAX,WAAW,CAAoB;QAAU,kBAAa,GAAb,aAAa,CAAuB;QAAU,iBAAY,GAAZ,YAAY,CAAqB;QAAU,wBAAmB,GAAnB,mBAAmB,CAA4B;QArBtc,yBAAoB,GAAQ,EAAE;QAC9B,+BAA0B,GAAU,EAAE;QACtC,gCAA2B,GAAU,EAAE;QACvC,wBAAmB,GAAQ,EAAE;QAC7B,eAAU,GAAQ,EAAE;QACpB,eAAU,GAAQ,EAAE;QACpB,qBAAgB,GAAQ,EAAE;QAC1B,sBAAiB,GAAQ,EAAE;QAC3B,SAAI,GAAW,QAAQ;QACvB,gBAAW,GAAW,EAAE;QACf,YAAO,GAAQ,EAAE;QAC1B,eAAU,GAAW,EAAE;QACvB,aAAQ,GAAG,MAAM;QACjB,eAAU,GAAW,CAAC;QACtB,WAAM,GAAW,CAAC;QAClB,YAAO,GAAW,CAAC;QACnB,aAAQ,GAAW,CAAC;QACpB,kBAAa,GAAQ,EAAE;QACvB,kBAAa,GAAW,CAAC;QACzB,eAAU,GAAW,CAAC;QACtB,gBAAW,GAAW,CAAC;IACmb,CAAC;IAE3c,QAAQ;QACN,IAAI,CAAC,QAAQ,EAAE;QACf,IAAI,CAAC,gBAAgB,EAAE;QACvB,IAAI,CAAC,eAAe,EAAE;QACtB,IAAI,CAAC,qBAAqB,EAAE;QAC5B,IAAI,CAAC,OAAO,EAAE;QACd,IAAI,CAAC,OAAO,EAAE;QACd,IAAI,CAAC,QAAQ,EAAE;QACf,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,aAAa,CAAC,YAAY,CAAC,0DAAU,CAAC,IAAI,EAAE;QACtE,IAAI,IAAI,CAAC,IAAI,IAAI,QAAQ,EAAE;YACzB,IAAI,CAAC,QAAQ,EAAE;SAChB;aAAM;YACL,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,OAAO,CAAC;YAC3B,IAAG,IAAI,CAAC,OAAO,CAAC,EAAE,EAAC;gBACjB,IAAI,CAAC,YAAY,EAAE;gBACnB,IAAI,CAAC,YAAY,EAAE;gBACnB,IAAI,CAAC,cAAc,EAAE;aACtB;SACF;IAEH,CAAC;IACD,gBAAgB;QACd,IAAI,CAAC,iBAAiB;aACnB,aAAa,CAAC,gBAAgB,CAAC,CAAC,IAAI,CAAC,oDAAG,CAAC,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,CAAC;aACpE,SAAS,EAAE;aACX,IAAI,CAAC,CAAC,GAAQ,EAAE,EAAE;YACjB,IAAI,GAAG,EAAE;gBACP,IAAI,CAAC,mBAAmB,GAAG,GAAG;gBAC9B,IAAI,CAAC,GAAG,CAAC,aAAa,EAAE,CAAC;aAC1B;QACH,CAAC,CAAC,CAAC;IACP,CAAC;IAED,eAAe;QACb,IAAI,CAAC,iBAAiB;aACnB,aAAa,CAAC,eAAe,CAAC,CAAC,IAAI,CAAC,oDAAG,CAAC,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,CAAC;aACnE,SAAS,EAAE;aACX,IAAI,CAAC,CAAC,GAAQ,EAAE,EAAE;YACjB,IAAI,GAAG,EAAE;gBACP,IAAI,CAAC,oBAAoB,GAAG,GAAG;gBAC/B,IAAI,CAAC,GAAG,CAAC,aAAa,EAAE,CAAC;aAC1B;QACH,CAAC,CAAC,CAAC;IACP,CAAC;IAED,OAAO;QACL,IAAI,CAAC,iBAAiB;aACnB,aAAa,CAAC,mBAAmB,CAAC,CAAC,IAAI,CAAC,oDAAG,CAAC,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,CAAC;aACvE,SAAS,EAAE;aACX,IAAI,CAAC,CAAC,GAAQ,EAAE,EAAE;YACjB,IAAI,GAAG,EAAE;gBACP,IAAI,CAAC,UAAU,GAAG,GAAG;gBACrB,IAAI,CAAC,GAAG,CAAC,aAAa,EAAE,CAAC;aAC1B;QACH,CAAC,CAAC,CAAC;IACP,CAAC;IAED,OAAO;QACL,IAAI,CAAC,iBAAiB;aACnB,aAAa,CAAC,mBAAmB,CAAC,CAAC,IAAI,CAAC,oDAAG,CAAC,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,CAAC;aACvE,SAAS,EAAE;aACX,IAAI,CAAC,CAAC,GAAQ,EAAE,EAAE;YACjB,IAAI,GAAG,EAAE;gBACP,IAAI,CAAC,UAAU,GAAG,GAAG;gBACrB,IAAI,CAAC,GAAG,CAAC,aAAa,EAAE,CAAC;aAC1B;QACH,CAAC,CAAC,CAAC;IACP,CAAC;IAED,QAAQ;QACN,IAAI,CAAC,iBAAiB;aACnB,aAAa,CAAC,oBAAoB,CAAC,CAAC,IAAI,CAAC,oDAAG,CAAC,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,CAAC;aACxE,SAAS,EAAE;aACX,IAAI,CAAC,CAAC,GAAQ,EAAE,EAAE;YACjB,IAAI,GAAG,EAAE;gBACP,IAAI,CAAC,gBAAgB,GAAG,GAAG;gBAC3B,IAAI,CAAC,GAAG,CAAC,aAAa,EAAE,CAAC;aAC1B;QACH,CAAC,CAAC,CAAC;IACP,CAAC;IAED,qBAAqB;QACnB,IAAI,CAAC,iBAAiB;aACnB,aAAa,CAAC,qBAAqB,CAAC,CAAC,IAAI,CAAC,oDAAG,CAAC,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,CAAC;aACzE,SAAS,EAAE;aACX,IAAI,CAAC,CAAC,GAAQ,EAAE,EAAE;YACjB,IAAI,GAAG,EAAE;gBACP,IAAI,CAAC,2BAA2B,GAAG,GAAG;gBACtC,IAAI,oBAAoB,GAAG,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,oBAAoB;gBACvE,IAAI,cAAc,GAAG,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,cAAc;gBAC3D,IAAI,oBAAoB,IAAI,cAAc,EAAE;oBAC1C,IAAI,CAAC,0BAA0B,GAAG,IAAI,CAAC,2BAA2B,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,MAAM,IAAI,cAAc,CAAC;oBAC1G,IAAI,KAAK,GAAG,IAAI,CAAC,0BAA0B,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,IAAI,IAAI,oBAAoB,CAAC;oBAC1F,IAAI,KAAK,GAAG,CAAC,EAAE;wBACb,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,oBAAoB,CAAC,QAAQ,CAAC,IAAI,CAAC;qBAC/D;iBACF;gBACD,IAAI,CAAC,GAAG,CAAC,aAAa,EAAE,CAAC;aAC1B;QACH,CAAC,CAAC,CAAC;IACP,CAAC;IAED,YAAY,CAAC,GAAG;QACd,OAAO,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE;YACjB,OAAO,EAAE,MAAM,EAAE,CAAC,CAAC,MAAM,EAAE,OAAO,EAAE,CAAC,CAAC,QAAQ,IAAI,CAAC,CAAC,SAAS,EAAE,QAAQ,EAAE,CAAC,CAAC,QAAQ,EAAE;QACvF,CAAC,CAAC;IACJ,CAAC;IAED,SAAS,CAAC,IAAa;QACrB,IAAI,aAAa,GAAG,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,aAAa;QACzD,IAAI,oBAAoB,GAAG,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,oBAAoB;QACvE,IAAI,cAAc,GAAG,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,cAAc;QAC3D,IAAI,IAAI,IAAI,OAAO,EAAE;YACnB,IAAI,CAAC,0BAA0B,GAAG,IAAI,CAAC,2BAA2B,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,MAAM,IAAI,cAAc,CAAC;YAC1G,IAAI,KAAK,GAAG,IAAI,CAAC,0BAA0B,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,IAAI,IAAI,oBAAoB,CAAC;YAC1F,IAAI,KAAK,GAAG,CAAC,EAAE;gBACb,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,oBAAoB,CAAC,QAAQ,CAAC,IAAI,CAAC;aAC/D;SACF;QACD,IAAI,aAAa,IAAI,oBAAoB,IAAI,cAAc,EAAE;YAC3D,IAAI,CAAC,cAAc,EAAE;SACtB;IACH,CAAC;IAED,cAAc;QACZ,IAAI,aAAa,GAAG,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,aAAa;QACzD,IAAI,oBAAoB,GAAG,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,oBAAoB;QACvE,IAAI,cAAc,GAAG,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,cAAc;QAC3D,IAAI,CAAC,kBAAkB,CAAC,cAAc,CAAC,aAAa,EAAE,oBAAoB,EAAE,cAAc,CAAC,CAAC,SAAS,EAAE,CAAC,IAAI,CAAC,CAAC,GAAQ,EAAE,EAAE;YACxH,IAAI,GAAG,EAAE;gBACP,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,WAAW,CAAC;aAC1D;QACH,CAAC,CAAC;IACJ,CAAC;IAED,QAAQ,CAAC,OAAQ;QACf,0BAA0B;QAC1B,sBAAsB;QACtB,sBAAsB;QACtB,IAAI,CAAC,YAAY,GAAG,IAAI,sDAAS,CAAC;YAChC,aAAa,EAAE,IAAI,wDAAW,CAAC,OAAO,CAAC,CAAC,CAAC,OAAO,CAAC,aAAa,CAAC,CAAC,CAAC,EAAE,EAAE,gEAAmB,CAAC;YACzF,mBAAmB,EAAE,IAAI,wDAAW,CAAC,OAAO,CAAC,CAAC,CAAC,OAAO,CAAC,mBAAmB,CAAC,CAAC,CAAC,EAAE,CAAC;YAChF,kDAAkD;YAClD,oBAAoB,EAAE,IAAI,wDAAW,CAAC,OAAO,CAAC,CAAC,CAAC,OAAO,CAAC,oBAAoB,CAAC,CAAC,CAAC,EAAE,EAAE,gEAAmB,CAAC;YACvG,cAAc,EAAE,IAAI,wDAAW,CAAC,OAAO,CAAC,CAAC,CAAC,OAAO,CAAC,cAAc,CAAC,CAAC,CAAC,EAAE,EAAE,gEAAmB,CAAC;YAC3F,mBAAmB,EAAE,IAAI,wDAAW,CAAC,OAAO,CAAC,CAAC,CAAC,OAAO,CAAC,mBAAmB,CAAC,CAAC,CAAC,EAAE,CAAE;YACjF,kBAAkB,EAAE,IAAI,wDAAW,CAAC,OAAO,CAAC,CAAC,CAAC,OAAO,CAAC,kBAAkB,CAAC,CAAC,CAAC,EAAE,CAAE;YAC/E,kBAAkB,EAAE,IAAI,wDAAW,CAAC,OAAO,CAAC,CAAC,CAAC,OAAO,CAAC,kBAAkB,CAAC,CAAC,CAAC,EAAE,CAAE;YAC/E,MAAM,EAAE,IAAI,wDAAW,CAAC,OAAO,CAAC,CAAC,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC;YACtD,MAAM,EAAE,IAAI,wDAAW,CAAC,OAAO,CAAC,CAAC,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC;YACtD,KAAK,EAAE,IAAI,wDAAW,CAAC,OAAO,CAAC,CAAC,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,CAAC;YACpD,IAAI,EAAE,IAAI,wDAAW,CAAC,OAAO,CAAC,CAAC,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC;YAClD,iBAAiB,EAAE,IAAI,wDAAW,CAAC,OAAO,CAAC,CAAC,CAAC,OAAO,CAAC,iBAAiB,CAAC,CAAC,CAAC,EAAE,CAAC;YAC5E,eAAe,EAAE,IAAI,wDAAW,CAAC,OAAO,CAAC,CAAC,CAAC,OAAO,CAAC,eAAe,CAAC,CAAC,CAAC,EAAE,CAAC;YACxE,SAAS,EAAE,IAAI,wDAAW,CAAC,OAAO,CAAC,CAAC,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,CAAC;YAC5D,eAAe,EAAE,IAAI,wDAAW,CAAC,OAAO,CAAC,CAAC,CAAC,OAAO,CAAC,eAAe,CAAC,CAAC,CAAC,EAAE,CAAC;YACxE,kBAAkB,EAAE,IAAI,wDAAW,CAAC,OAAO,CAAC,CAAC,CAAC,OAAO,CAAC,kBAAkB,CAAC,CAAC,CAAC,EAAE,CAAC;YAC9E,iBAAiB,EAAE,IAAI,wDAAW,CAAC,OAAO,CAAC,CAAC,CAAC,OAAO,CAAC,iBAAiB,CAAC,CAAC,CAAC,CAAC,CAAC;YAC3E,UAAU,EAAE,IAAI,wDAAW,CAAC,OAAO,CAAC,CAAC,CAAC,OAAO,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,CAAC;YAC7D,MAAM,EAAE,IAAI,wDAAW,CAAC,OAAO,CAAC,CAAC,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC;SACtD,CAAC;QACF,IAAI,CAAC,MAAM,GAAG,OAAO,CAAC,CAAC,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;QAC1C,IAAI,CAAC,UAAU,GAAG,OAAO,CAAC,CAAC,CAAC,OAAO,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC;QAClD,IAAI,oBAAoB,GAAG,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,oBAAoB;QACvE,IAAI,cAAc,GAAG,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,cAAc;QAC3D,IAAI,oBAAoB,IAAI,cAAc,IAAI,IAAI,CAAC,2BAA2B,CAAC,MAAM,GAAG,CAAC,EAAE;YACzF,IAAI,CAAC,0BAA0B,GAAG,IAAI,CAAC,2BAA2B,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,MAAM,IAAI,cAAc,CAAC;YAC1G,IAAI,KAAK,GAAG,IAAI,CAAC,0BAA0B,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,IAAI,IAAI,oBAAoB,CAAC;YAC1F,IAAI,KAAK,GAAG,CAAC,EAAE;gBACb,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,oBAAoB,CAAC,QAAQ,CAAC,IAAI,CAAC;aAC/D;SACF;IACH,CAAC;IAED,UAAU,CAAC,UAAoB;QAC7B,IAAI,IAAI,CAAC,YAAY,CAAC,OAAO,EAAE;YAC7B,wEAAiB,CAAC,IAAI,CAAC,YAAY,CAAC;YACpC,OAAO,IAAI;SACZ;QACD,IAAI,IAAI,GAAG,IAAI,CAAC,YAAY,CAAC,WAAW,EAAE,CAAC;QAC3C,uBAAuB;QACvB,IAAI,QAAQ,iDACP,IAAI,CAAC,OAAO,GACZ,IAAI,KACP,EAAE,EAAC,IAAI,CAAC,OAAO,CAAC,EAAE,EAClB,UAAU,EAAE,IAAI,CAAC,UAAU,EAC3B,MAAM,EAAE,IAAI,CAAC,MAAM,EACnB,YAAY,EAAE;gBACZ,OAAO,EAAE,IAAI,CAAC,IAAI,CAAC,gBAAgB,CAAC,EAAE,IAAI,CAAC;gBAC3C,UAAU,EAAE,IAAI,CAAC,WAAW,CAAC,gBAAgB,CAAC,UAAU,IAAI,CAAC;gBAC7D,YAAY,EAAE,IAAI;gBAClB,OAAO,EAAE,CAAC,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,CAAC,GAAG,EAAE;gBAC9E,WAAW,EAAE,IAAI,CAAC,UAAU;gBAC5B,SAAS,EAAE,IAAI,CAAC,WAAW,CAAC,aAAa,CAAC,EAAE;gBAC5C,WAAW,EAAE,IAAI,CAAC,WAAW,CAAC,WAAW;gBACzC,MAAM,EAAE,IAAI,CAAC,WAAW,CAAC,cAAc,IAAI,IAAI;gBAC/C,UAAU,EAAE,IAAI,CAAC,WAAW;gBAC5B,IAAI,EAAE,IAAI,CAAC,WAAW,CAAC,IAAI;aAC5B,EACD,UAAU,EAAE,IAAI,CAAC,WAAW,GAC7B;QAED,+BAA+B;QAC/B,IAAI,QAAQ,CAAC,EAAE,EAAE;YACf,IAAI,CAAC,eAAe,CAAC,UAAU,CAAC,QAAQ,CAAC;iBACtC,SAAS,EAAE;iBACX,IAAI,CAAC,CAAC,GAAG,EAAE,EAAE;gBACZ,IAAI,GAAG,EAAE;oBACP,IAAI,CAAC,OAAO,qBAAQ,QAAQ,CAAE;oBAC9B,IAAI,CAAC,QAAQ,GAAG,OAAO;oBACvB,IAAI,UAAU;wBACZ,IAAI,CAAC,YAAY,CAAC,UAAU,CAAC,EAAE,IAAI,EAAE,QAAQ,EAAE,IAAI,EAAE,MAAM,EAAE,CAAC;iBACjE;YACH,CAAC,CAAC,CAAC;SACN;aAAM;YACL,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,QAAQ,CAAC;iBAChC,SAAS,EAAE;iBACX,IAAI,CAAC,CAAC,GAAG,EAAE,EAAE;gBACZ,IAAI,GAAG,EAAE;oBACP,QAAQ,CAAC,EAAE,GAAG,GAAG;oBACjB,IAAI,CAAC,OAAO,qBAAQ,QAAQ,CAAE;oBAC9B,IAAI,CAAC,QAAQ,GAAG,OAAO;oBACvB,IAAI,UAAU;wBACZ,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,EAAE,IAAI,EAAE,QAAQ,EAAE,IAAI,EAAE,MAAM,EAAE,CAAC;iBACvD;YACH,CAAC,CAAC,CAAC;SACN;IACH,CAAC;IACD,SAAS,CAAC,IAAY;QACpB,IAAI,IAAI,CAAC,QAAQ,IAAI,IAAI;YACvB,IAAI,CAAC,QAAQ,GAAG,IAAI;IACxB,CAAC;IAED,YAAY;QACV,IAAI,CAAC,KAAK,CAAC,OAAO,EAAE;IACtB,CAAC;IAED,cAAc,CAAC,WAAmB;QAChC,MAAM,OAAO,GAAG,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,WAAW,CAAC,CAAC;QACxD,OAAO,OAAO,CAAC,KAAK,IAAI,CAAC,OAAO,CAAC,KAAK,IAAI,OAAO,CAAC,OAAO,CAAC,CAAC;IAC7D,CAAC;IAED,gBAAgB,CAAC,WAAmB;QAClC,MAAM,OAAO,GAAG,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,WAAW,CAAC,CAAC;QACxD,OAAO,OAAO,CAAC,OAAO,IAAI,CAAC,OAAO,CAAC,KAAK,IAAI,OAAO,CAAC,OAAO,CAAC,CAAC;IAC/D,CAAC;IAED,eAAe,CAAC,UAAU,EAAE,WAAW;QACrC,MAAM,OAAO,GAAG,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,WAAW,CAAC,CAAC;QACxD,OAAO,OAAO,CAAC,QAAQ,CAAC,UAAU,CAAC,IAAI,CAAC,OAAO,CAAC,KAAK,IAAI,OAAO,CAAC,OAAO,CAAC,CAAC;IAC5E,CAAC;IAED,gBAAgB,CAAC,WAAW;QAC1B,MAAM,OAAO,GAAG,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,WAAW,CAAC,CAAC;QACxD,OAAO,OAAO,CAAC,KAAK,IAAI,OAAO,CAAC,OAAO,CAAC;IAC1C,CAAC;IAED,WAAW;QACT,IAAI,KAAK,GAAG,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC,KAAK;QACrD,IAAI,MAAM,GAAG,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC,KAAK;QACvD,IAAI,KAAK,GAAG,MAAM,EAAE;YAClB,IAAI,MAAM,GAAG,KAAK,GAAG,MAAM;YAC3B,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,iBAAiB,CAAC,CAAC,QAAQ,CAAC,MAAM,CAAC;SAC/D;IACH,CAAC;IACK,aAAa;;YACjB,IAAI,CAAC,UAAU,GAAG,CAAC;YACnB,IAAI,GAAG,GAAG,IAAI,CAAC,OAAO,CAAC,SAAS,GAAG,IAAI,CAAC,OAAO,CAAC,eAAe;YAC/D,IAAI,QAAQ,GAAG;gBACb,SAAS,EAAE,IAAI,CAAC,OAAO,CAAC,aAAa;gBACrC,SAAS,EAAE,IAAI,CAAC,OAAO,CAAC,mBAAmB;gBAC3C,QAAQ,EAAE,IAAI,CAAC,OAAO,CAAC,kBAAkB;gBACzC,QAAQ,EAAE,IAAI,CAAC,OAAO,CAAC,kBAAkB;gBACzC,MAAM,EAAE,IAAI,CAAC,OAAO,CAAC,kBAAkB;aACxC;YACD,IAAI,IAAI,GAAQ,MAAM,IAAI,CAAC,YAAY,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,SAAS,EAAE;YACrE,IAAI,KAAK,GAAG,GAAG;YACf,IAAI,IAAI,EAAE;gBACR,IAAI,IAAI,GAAG,IAAI,CAAC,UAAU;gBAC1B,KAAK,GAAG,GAAG,GAAG,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,GAAG;aAChC;YAED,IAAI,CAAC,UAAU,GAAG,KAAK,GAAG,IAAI,CAAC,OAAO,CAAC,eAAe;YACtD,IAAI,IAAI,CAAC,OAAO,IAAI,CAAC,EAAE;gBACrB,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,WAAW;aACvE;YACD,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,UAAU;YAE5C,IAAI,IAAI,CAAC,OAAO,EAAE;gBAChB,IAAI,CAAC,OAAO,CAAC,UAAU,GAAG,IAAI,CAAC,UAAU;gBACzC,IAAI,CAAC,OAAO,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM;aAClC;QAEH,CAAC;KAAA;IAED,WAAW,CAAC,KAAK;QACf,IAAI,CAAC,OAAO,GAAG,CAAC;QAChB,IAAI,CAAC,OAAO,GAAG,KAAK;IACtB,CAAC;IAEK,WAAW;;YACf,OAAO,CAAC,GAAG,CAAC,uBAAuB,EAAC,IAAI,CAAC,OAAO,CAAC,CAAC;YAClD,IAAI,IAAI,CAAC,OAAO,CAAC,EAAE,EAAE;gBACnB,IAAI,IAAI,CAAC,aAAa,CAAC,UAAU,IAAI,OAAO,EAAE;oBAC5C,MAAM,IAAI,CAAC,aAAa,EAAE;iBAC3B;qBAAM;oBACL,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,OAAO,CAAC,iBAAiB;oBAC5C,IAAI,CAAC,OAAO,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM;iBAClC;gBACD,IAAI,QAAQ,GAAG,CAAC;gBAChB,IAAI,KAAK,GAAG,IAAI,CAAC,OAAO,CAAC,IAAI;gBAC7B,IAAI,QAAQ,GAAQ,MAAM,IAAI,CAAC,mBAAmB,CAAC,UAAU,CAAC,IAAI,CAAC,OAAO,CAAC,EAAE,CAAC,CAAC,SAAS,EAAE;gBAC1F,IAAI,KAAK,GAAG,QAAQ,CAAC,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;gBACxC,IAAI,IAAI,CAAC,OAAO,CAAC,iBAAiB,EAAE;oBAClC,IAAI,CAAC,KAAK,GAAG,GAAG,CAAC,GAAG,KAAK,EAAE;wBACzB,QAAQ,GAAG,KAAK,GAAG,GAAG;qBACvB;yBAAM;wBACL,QAAQ,GAAG,CAAC,CAAC,KAAK,GAAG,GAAG,CAAC,GAAG,KAAK,CAAC,GAAG,CAAC;qBACvC;iBACF;qBAAM;oBACL,IAAI,KAAK,GAAG,KAAK,EAAE;wBACjB,QAAQ,GAAG,KAAK;qBACjB;yBAAM;wBACL,QAAQ,GAAG,CAAC,KAAK,GAAG,KAAK,CAAC,GAAG,CAAC;qBAC/B;iBACF;gBACD,IAAI,CAAC,OAAO,CAAC,OAAO,GAAG,IAAI,CAAC,aAAa,CAAC,gBAAgB,CAAC,IAAI,CAAC,OAAO,CAAC,MAAM,GAAG,CAAC,QAAQ,GAAG,GAAG,CAAC,CAAC;gBAClG,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC;aACtB;iBAAM;gBACL,IAAI,CAAC,KAAK,CAAC,OAAO,EAAE;aACrB;QACH,CAAC;KAAA;IACD,cAAc;QACZ,IAAI,CAAC,eAAe,CAAC,UAAU,CAAC,IAAI,CAAC,OAAO,CAAC,EAAE,CAAC,CAAC,SAAS,EAAE,CAAC,IAAI,CAAC,CAAC,GAAQ,EAAE,EAAE;YAC7E,IAAI,GAAG,EAAE;gBACP,IAAI,CAAC,aAAa,GAAG,CAAC;gBACtB,GAAG,CAAC,OAAO,CAAC,OAAO,CAAC,EAAE;oBACpB,IAAI,CAAC,aAAa,IAAI,UAAU,CAAC,OAAO,CAAC,UAAU,CAAC;gBACtD,CAAC,CAAC,CAAC;aACJ;QACH,CAAC,CAAC;IACJ,CAAC;IACD,YAAY;QACV,IAAI,CAAC,eAAe,CAAC,QAAQ,CAAC,IAAI,CAAC,OAAO,CAAC,EAAE,CAAC,CAAC,SAAS,EAAE,CAAC,IAAI,CAAC,CAAC,GAAQ,EAAE,EAAE;YAC3E,IAAI,GAAG,EAAE;gBACP,IAAI,CAAC,UAAU,GAAG,CAAC;gBACnB,GAAG,CAAC,OAAO,CAAC,OAAO,CAAC,EAAE;oBACpB,IAAI,CAAC,UAAU,IAAI,UAAU,CAAC,OAAO,CAAC,UAAU,CAAC;gBACnD,CAAC,CAAC,CAAC;aACJ;QACH,CAAC,CAAC;IAEJ,CAAC;IACD,YAAY;QACV,IAAI,CAAC,eAAe,CAAC,QAAQ,CAAC,IAAI,CAAC,OAAO,CAAC,EAAE,CAAC,CAAC,SAAS,EAAE,CAAC,IAAI,CAAC,CAAC,GAAQ,EAAE,EAAE;YAC3E,IAAI,GAAG,EAAE;gBACP,IAAI,CAAC,WAAW,GAAG,CAAC;gBACpB,GAAG,CAAC,OAAO,CAAC,OAAO,CAAC,EAAE;oBACpB,IAAI,CAAC,WAAW,IAAI,UAAU,CAAC,OAAO,CAAC,UAAU,CAAC;gBACpD,CAAC,CAAC,CAAC;aACJ;QACH,CAAC,CAAC;IAEJ,CAAC;CAGF;;YAzZwB,iEAAQ;YAAxB,uEAAc;YAGd,8FAAiB;YALjB,6DAAiB;YAajB,gFAAe;YATf,6DAAW;YAMX,0GAAkB;YAFlB,wFAAkB;YAFlB,2EAAqB;YAMrB,yFAAmB;YADnB,0HAA0B;;;sBAqBhC,iDAAK;;AAZK,mBAAmB;IAL/B,yDAAS,CAAC;QACT,QAAQ,EAAE,iBAAiB;QAC3B,2KAA2C;;KAE5C,CAAC;GACW,mBAAmB,CAuY/B;AAvY+B;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACpBkE;AAC9B;AACgB;AACnD;AAEwC;AACP;AACd;AAC+B;AAGN;AACM;AAEJ;AACH;AACM;AAEhC;AACsC;AACA;AACnB;AAClB;IAYtC,iBAAiB,SAAjB,iBAAiB;IAsB5B,YACU,EAAe,EACf,WAA+B,EAC/B,IAAiB,EACjB,WAA+B,EAC/B,SAAgC,EAChC,eAAgC,EAChC,kBAAsC,EACtC,YAA0B,EAC1B,GAAsB;QARtB,OAAE,GAAF,EAAE,CAAa;QACf,gBAAW,GAAX,WAAW,CAAoB;QAC/B,SAAI,GAAJ,IAAI,CAAa;QACjB,gBAAW,GAAX,WAAW,CAAoB;QAC/B,cAAS,GAAT,SAAS,CAAuB;QAChC,oBAAe,GAAf,eAAe,CAAiB;QAChC,uBAAkB,GAAlB,kBAAkB,CAAoB;QACtC,iBAAY,GAAZ,YAAY,CAAc;QAC1B,QAAG,GAAH,GAAG,CAAmB;QAzBtB,gBAAW,GAAG,IAAI,wDAAY,EAAoB,CAAC;QAE7D,cAAS,GAAG,IAAI;QAChB,gBAAW,GAAG,IAAI;QAClB,cAAS,GAAG,IAAI;QAChB,gBAAW,GAAG,IAAI;QAClB,eAAU,GAAG,IAAI;QACjB,eAAU,GAAG,IAAI;QACjB,YAAO,GAAU,EAAE;QACnB,aAAQ,GAAU,EAAE;QACpB,WAAM,GAAQ,EAAE;QAChB,aAAQ,GAAU,EAAE;QAEpB,aAAQ,GAAU,EAAE;QAclB,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC;YAC9B,SAAS,EAAE,CAAC,IAAI,EAAE,+DAAkB,CAAC,CAAC,gEAAmB,CAAC,CAAC,CAAC;YAC5D,OAAO,EAAE,CAAC,IAAI,EAAE,+DAAkB,CAAC,CAAC,gEAAmB,CAAC,CAAC,CAAC;YAC1D,UAAU,EAAE,CAAC,OAAO,EAAE,+DAAkB,CAAC,CAAC,gEAAmB,CAAC,CAAC,CAAC;YAChE,cAAc,EAAE,CAAC,IAAI,EAAE,+DAAkB,CAAC,CAAC,gEAAmB,EAAE,2DAAc,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;YACtF,QAAQ,EAAE,CAAC,OAAO,EAAE,+DAAkB,CAAC,CAAC,gEAAmB,CAAC,CAAC,CAAC;SAC/D,CAAC;QACF,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC,IAAI,CAAC,EAAE,MAAM,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,GAAG,CAAC,CAAC;IAC7D,CAAC;IAEK,QAAQ;;YAEZ,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC,SAAS;YACrC,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,OAAO,CAAC,MAAM;YACnC,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,WAAW,CAAC,WAAW;YACzC,IAAI,MAAM,GAAG,mCAAM,EAAE,CAAC,QAAQ,CAAC,CAAC,EAAE,MAAM,CAAC;YACzC,IAAI,CAAC,WAAW,GAAG,MAAM,CAAC,MAAM,CAAC,YAAY,CAAC;YAC9C,wIAAwI;YACxI,IAAI,CAAC,SAAS,GAAG,MAAM,CAAC,MAAM,CAAC,YAAY,CAAC;YAC5C,sIAAsI;YACtI,IAAI,UAAU,GAAG,mCAAM,EAAE,CAAC,QAAQ,CAAC,CAAC,EAAE,OAAO,CAAC;YAC9C,IAAI,CAAC,UAAU,GAAG,UAAU,CAAC,MAAM,CAAC,YAAY,CAAC;YACjD,mJAAmJ;YACnJ,IAAI,UAAU,GAAG,mCAAM,EAAE,CAAC,QAAQ,CAAC,EAAE,EAAE,OAAO,CAAC;YAC/C,IAAI,CAAC,UAAU,GAAG,UAAU,CAAC,MAAM,CAAC,YAAY,CAAC;YACjD,mJAAmJ;YACnJ,+CAA+C;YAC/C,IAAI,CAAC,UAAU,EAAE;YACjB,kBAAkB;YAClB,4CAA4C;YAC5C,8BAA8B;YAC9B,UAAU;YACV,2BAA2B;YAC3B,4FAA4F;YAC5F,QAAQ;YACR,sBAAsB;YACtB,sBAAsB;YACtB,MAAM;YACN,2EAA2E;YAC3E,IAAI;QACN,CAAC;KAAA;IAGD,OAAO;QACL,IAAI,KAAK,GAAG,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,WAAW,CAAC,CAAC,KAAK;QACvD,IAAI,QAAQ,GAAG,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,gBAAgB,CAAC,CAAC,KAAK;QAC/D,IAAI,KAAK,IAAI,QAAQ,EAAE;YACrB,IAAI,MAAM,GAAG,mCAAM,CAAC,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,WAAW,CAAC,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,QAAQ,EAAE,MAAM,CAAC;YACtF,IAAI,CAAC,SAAS,GAAG,EAAE,IAAI,EAAE,QAAQ,CAAC,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,EAAE,KAAK,EAAE,QAAQ,CAAC,MAAM,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,EAAE,GAAG,EAAE,QAAQ,CAAC,MAAM,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC;YACnI,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAC,QAAQ,CAAC,MAAM,CAAC;SACrD;IACH,CAAC;IAED,UAAU;QACR,IAAI,SAAS,GAAG,mCAAM,CAAC,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,WAAW,CAAC,CAAC,KAAK,CAAC;QACnE,IAAI,OAAO,GAAG,mCAAM,CAAC,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAC,KAAK,CAAC;QAC/D,IAAI,QAAQ,GAAG,SAAS,CAAC,IAAI,CAAC,OAAO,EAAE,MAAM,CAAC,GAAG,CAAC;QAClD,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,gBAAgB,CAAC,CAAC,QAAQ,CAAC,QAAQ,CAAC;IAC/D,CAAC;IAED,IAAI,QAAQ;QACV,OAAO,IAAI,CAAC,UAAU,CAAC,QAAQ;IACjC,CAAC;IAED,mBAAmB;IACnB,cAAc,CAAC,WAAmB,EAAE,KAAgB;QAClD,MAAM,OAAO,GAAG,KAAK,CAAC,QAAQ,CAAC,WAAW,CAAC,CAAC;QAC5C,OAAO,OAAO,CAAC,KAAK,IAAI,CAAC,OAAO,CAAC,KAAK,IAAI,OAAO,CAAC,OAAO,CAAC,CAAC;IAC7D,CAAC;IAED,gBAAgB,CAAC,WAAmB,EAAE,KAAgB;QACpD,MAAM,OAAO,GAAG,KAAK,CAAC,QAAQ,CAAC,WAAW,CAAC,CAAC;QAC5C,OAAO,OAAO,CAAC,OAAO,IAAI,CAAC,OAAO,CAAC,KAAK,IAAI,OAAO,CAAC,OAAO,CAAC,CAAC;IAC/D,CAAC;IAED,eAAe,CAAC,UAAU,EAAE,WAAW,EAAE,KAAgB;QACvD,MAAM,OAAO,GAAG,KAAK,CAAC,QAAQ,CAAC,WAAW,CAAC,CAAC;QAC5C,OAAO,OAAO,CAAC,QAAQ,CAAC,UAAU,CAAC,IAAI,CAAC,OAAO,CAAC,KAAK,IAAI,OAAO,CAAC,OAAO,CAAC,CAAC;IAC5E,CAAC;IAED,gBAAgB,CAAC,WAAW,EAAE,KAAgB;QAC5C,MAAM,OAAO,GAAG,KAAK,CAAC,QAAQ,CAAC,WAAW,CAAC,CAAC;QAC5C,OAAO,OAAO,CAAC,KAAK,IAAI,OAAO,CAAC,OAAO,CAAC;IAC1C,CAAC;IACD,QAAQ;QACN,IAAI,IAAI,CAAC,UAAU,CAAC,OAAO,EAAE;YAC3B,wEAAiB,CAAC,IAAI,CAAC,UAAU,CAAC;YAClC,OAAO,IAAI;SACZ;aAAM;YACL,IAAI,IAAI,CAAC,MAAM,EAAE;gBACf,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,MAAM,CAAC;aAC3B;iBAAM;gBACL,IAAI,CAAC,QAAQ,EAAE;aAChB;SACF;IACH,CAAC;IAED,QAAQ;QACN,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,EAAE,IAAI,EAAE,0EAAqB,EAAE,CAAC;IACxD,CAAC;IAED,QAAQ,CAAC,EAAG;QACV,MAAM,SAAS,GAAG,IAAI,CAAC,UAAU,CAAC,KAAK;QACvC,IAAI,QAAQ,GAAG;YACb,EAAE,EAAE,EAAE,IAAI,IAAI;YACd,OAAO,EAAE,mCAAM,CAAC,SAAS,CAAC,OAAO,CAAC,CAAC,MAAM,CAAC,YAAY,CAAC;YACvD,SAAS,EAAE,mCAAM,CAAC,SAAS,CAAC,SAAS,CAAC,CAAC,MAAM,CAAC,YAAY,CAAC;YAC3D,UAAU,EAAE,SAAS,CAAC,UAAU;YAChC,cAAc,EAAE,SAAS,CAAC,cAAc;YACxC,QAAQ,EAAE,SAAS,CAAC,QAAQ;YAC5B,YAAY,EAAE;gBACZ,OAAO,EAAE,IAAI,CAAC,IAAI,CAAC,gBAAgB,CAAC,EAAE,IAAI,CAAC;gBAC3C,UAAU,EAAE,IAAI,CAAC,WAAW,CAAC,gBAAgB,CAAC,UAAU,IAAI,CAAC;gBAC7D,YAAY,EAAE,IAAI;gBAClB,OAAO,EAAE,CAAC,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,CAAC,GAAG,EAAE;gBAC9E,WAAW,EAAE,IAAI,CAAC,UAAU;gBAC5B,SAAS,EAAE,IAAI,CAAC,WAAW,CAAC,aAAa,CAAC,EAAE;gBAC5C,WAAW,EAAE,IAAI,CAAC,WAAW,CAAC,WAAW;gBACzC,MAAM,EAAE,IAAI,CAAC,WAAW,CAAC,cAAc,IAAI,IAAI;gBAC/C,YAAY;gBACZ,IAAI,EAAE,IAAI,CAAC,WAAW,CAAC,IAAI;aAC5B;YACD,UAAU,EAAE,IAAI,CAAC,WAAW;SAC7B;QACD,yBAAyB;QACzB,IAAI,CAAC,EAAE,EAAE;YACP,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,SAAS,EAAE,CAAC,IAAI,CAAC,CAAC,GAAQ,EAAE,EAAE;gBAC5D,IAAI,GAAG,EAAE;oBACP,IAAI,CAAC,MAAM,GAAG,GAAG,CAAC,EAAE;oBACpB,IAAI,CAAC,WAAW,GAAG,GAAG,CAAC,UAAU;oBACjC,IAAI,CAAC,SAAS,CAAC,YAAY,CAAC,2DAAU,CAAC,mBAAK,EAAE,EAAE,GAAG,CAAC,EAAE,IAAK,QAAQ,CAAE;oBACrE,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,EAAE,IAAI,EAAE,0EAAqB,EAAE,IAAI,oBAAO,GAAG,CAAE,EAAE,CAAC;iBACzE;YACH,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;SACnB;aAAM;YACL,IAAI,CAAC,WAAW,CAAC,UAAU,CAAC,QAAQ,CAAC,CAAC,SAAS,EAAE,CAAC,IAAI,CAAC,CAAC,GAAQ,EAAE,EAAE;gBAClE,IAAI,GAAG,EAAE;oBACP,IAAI,CAAC,MAAM,GAAG,GAAG,CAAC,EAAE;oBACpB,IAAI,CAAC,SAAS,CAAC,YAAY,CAAC,2DAAU,CAAC,mBAAK,EAAE,EAAE,GAAG,CAAC,EAAE,IAAK,QAAQ,CAAE;oBACrE,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,EAAE,IAAI,EAAE,0EAAqB,EAAE,IAAI,oBAAO,GAAG,CAAE,EAAE,CAAC;iBACzE;YACH,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;SACnB;IAEH,CAAC;IAED,gCAAgC;IAChC,qBAAqB;IACrB,MAAM;IACN,UAAU,CAAC,UAAmB,KAAK;QACjC,sBAAsB;QACtB,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;QAE9B,IAAI,IAAI,CAAC,WAAW,IAAI,IAAI,CAAC,KAAK,EAAE;YAClC,IAAI,KAAK,GAAG,OAAO,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,WAAW,IAAI,IAAI,CAAC,KAAK,CAAC;YACnE,IAAI,CAAC,KAAK;gBAAE,OAAO,KAAK;YACxB,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,SAAS,EAAE,CAAC,IAAI,CAAC,CAAC,GAAQ,EAAE,EAAE;gBAC3D,iBAAiB;gBACjB,IAAI,GAAG,EAAE;oBACP,IAAI,CAAC,OAAO,mCAAQ,GAAG,KAAE,EAAE,EAAE,IAAI,GAAE;oBACnC,IAAI,CAAC,MAAM,GAAG,KAAK,IAAI,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC,IAAI;oBACvD,IAAI,CAAC,kBAAkB,EAAE;iBAC1B;qBAAM;oBACL,IAAI,CAAC,OAAO,IAAI,KAAK,IAAI,IAAI,CAAC,KAAK,EAAE;wBACnC,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC;qBACtB;iBACF;YACH,CAAC,CAAC;SACH;IACH,CAAC;IAED,kBAAkB;QAChB,IAAI,CAAC,UAAU,CAAC,UAAU,CAAC;YACzB,SAAS,EAAE,mCAAM,CAAC,IAAI,CAAC,OAAO,CAAC,SAAS,CAAC;YACzC,OAAO,EAAE,mCAAM,CAAC,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC;YACrC,UAAU,EAAE,IAAI,CAAC,OAAO,CAAC,UAAU;YACnC,cAAc,EAAE,IAAI,CAAC,OAAO,CAAC,cAAc;YAC3C,QAAQ,EAAE,IAAI,CAAC,OAAO,CAAC,QAAQ;SAChC,CAAC;QACF,IAAI,CAAC,GAAG,CAAC,aAAa,EAAE;IAC1B,CAAC;CAEF;;YAxPQ,wDAAW;YAWX,wFAAkB;YALlB,sDAAW;YAQX,sFAAkB;YAVlB,2EAAqB;YAMrB,kFAAe;YAKf,wFAAkB;YAGlB,2FAAY;YAnBZ,6DAAiB;;;sBAoCvB,iDAAK;uBACL,iDAAK;0BACL,iDAAK;yBACL,iDAAK;0BACL,kDAAM;;AANI,iBAAiB;IAX7B,yDAAS,CAAC;QACT,QAAQ,EAAE,sBAAsB;QAChC,gLAAgD;QAEhD,SAAS,EAAE;YACT,EAAE,OAAO,EAAE,uEAAc,EAAE,QAAQ,EAAE,yDAAa,EAAE;YACpD,EAAE,OAAO,EAAE,+EAAsB,EAAE,QAAQ,EAAE,qEAAyB,EAAE;YACxE,EAAE,OAAO,EAAE,gEAAW,EAAE,QAAQ,EAAE,gFAAiB,EAAE,IAAI,EAAE,CAAC,oEAAe,CAAC,EAAE;YAC9E,EAAE,OAAO,EAAE,qEAAgB,EAAE,QAAQ,EAAE,sDAAU,EAAE;SACpD;;KACF,CAAC;GACW,iBAAiB,CAuN7B;AAvN6B;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AClCgB;AACoD;AACjE;AAES;AAC+B;AACrB;AACoC;AAGL;AAEJ;AAC3B;AAC4B;AACN;IAO7D,kBAAkB,SAAlB,kBAAkB;IAY7B,YAAoB,SAAgC,EAAU,YAA0B,EAAU,iBAAoC,EAAU,gBAAsC,EAAU,GAAsB,EAAU,IAAiB,EAAU,WAA+B,EAAU,UAAuB;QAAvS,cAAS,GAAT,SAAS,CAAuB;QAAU,iBAAY,GAAZ,YAAY,CAAc;QAAU,sBAAiB,GAAjB,iBAAiB,CAAmB;QAAU,qBAAgB,GAAhB,gBAAgB,CAAsB;QAAU,QAAG,GAAH,GAAG,CAAmB;QAAU,SAAI,GAAJ,IAAI,CAAa;QAAU,gBAAW,GAAX,WAAW,CAAoB;QAAU,eAAU,GAAV,UAAU,CAAa;QARjT,gBAAW,GAAG,IAAI,wDAAY,EAAoB,CAAC;QAE7D,aAAQ,GAAQ,EAAE;QAClB,aAAQ,GAAQ,EAAE;QAClB,iBAAY,GAAQ,EAAE;QAEtB,WAAM,GAAW,CAAC;QAClB,WAAM,GAAW,CAAC;IAC6S,CAAC;IAEhU,QAAQ;QACN,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,SAAS,CAAC,YAAY,CAAC,4DAAY,CAAC;QAC3D,IAAI,CAAC,IAAI,CAAC,UAAU,EAAE;YACpB,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,oIAAoI,EAAE,SAAS,CAAC;SAC5K;aAAM;YACL,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,EAAE,OAAO,EAAE,IAAI,CAAC,UAAU,CAAC,YAAY,EAAE,KAAK,EAAE,IAAI,CAAC,UAAU,CAAC,mBAAmB,EAAE,CAAC;YACzG,2CAA2C;YAC3C,IAAI;YACJ,IAAI,IAAI,CAAC,UAAU,CAAC,MAAM,IAAI,IAAI,CAAC,UAAU,CAAC,YAAY,IAAI,kBAAkB,EAAE;gBAChF,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,OAAO,CAAC,KAAK,CAAC,EAAE;oBAClC,IAAI,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,KAAK,CAAC,EAAE,GAAG,KAAK,CAAC,EAAE;wBAC5C,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,EAAE,OAAO,EAAE,KAAK,CAAC,WAAW,EAAE,KAAK,EAAE,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,KAAK,CAAC,EAAE,GAAG,OAAO,CAAC,EAAE,CAAC;qBACtG;gBACH,CAAC,CAAC;aACH;YACD,IAAI,CAAC,iBAAiB,EAAE;SACzB;IACH,CAAC;IAED,iBAAiB;QACf,MAAM;QACN,WAAW;QACX,wCAAwC;QACxC,IAAI,CAAC,MAAM,GAAG,CAAC;QACf,IAAI,CAAC,MAAM,GAAG,CAAC;QACf,IAAI,cAAc,GAAG,GAAG;QACxB,IAAI,OAAO,GAAG,IAAI,CAAC,UAAU,CAAC,gBAAgB,IAAI,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QAChE,IAAI,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,mCAAM,EAAE,CAAC,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,WAAW,EAAE,OAAO,EAAE,IAAI,CAAC,CAAC,CAAC;QAC/E,IAAI,CAAC,iBAAiB,CAAC,MAAM,CAAC,GAAG,EAAE,IAAI,CAAC,UAAU,CAAC,YAAY,CAAC,CAAC,SAAS,EAAE,CAAC,IAAI,CAAC,CAAC,GAAQ,EAAE,EAAE;YAE7F,IAAI,GAAG,EAAE;gBACP,IAAI,IAAI,CAAC,UAAU,CAAC,gBAAgB,IAAI,MAAM,EAAE;oBAC9C,IAAI,GAAG,GAAG,GAAG,CAAC,OAAO,GAAG,IAAI,CAAC,UAAU,CAAC,mBAAmB;oBAC3D,IAAI,IAAI,GAAG,cAAc,GAAG,IAAI,CAAC,UAAU,CAAC,mBAAmB;oBAC/D,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,GAAG,GAAG;oBAC/B,IAAI,CAAC,MAAM,GAAG,IAAI;oBAClB,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,EAAE,OAAO,EAAE,GAAG,EAAE,QAAQ,EAAE,IAAI,CAAC,UAAU,CAAC,YAAY,EAAE,UAAU,EAAE,IAAI,CAAC,UAAU,CAAC,mBAAmB,EAAE,IAAI,EAAE,IAAI,EAAE,CAAC;oBACzI,cAAc,GAAG,CAAC;iBACnB;qBAAM;oBACL,IAAI,GAAG,GAAG,GAAG,CAAC,UAAU,GAAG,IAAI,CAAC,UAAU,CAAC,mBAAmB;oBAC9D,IAAI,IAAI,GAAG,cAAc,GAAG,IAAI,CAAC,UAAU,CAAC,mBAAmB;oBAC/D,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,GAAG,GAAG;oBAC/B,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,GAAG,GAAG;oBAC/B,IAAI,CAAC,MAAM,GAAG,IAAI;oBAClB,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,EAAE,OAAO,EAAE,GAAG,EAAE,QAAQ,EAAE,IAAI,CAAC,UAAU,CAAC,YAAY,EAAE,UAAU,EAAE,IAAI,CAAC,UAAU,CAAC,mBAAmB,EAAE,IAAI,EAAE,IAAI,EAAE,CAAC;oBACzI,cAAc,GAAG,CAAC;oBAClB,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,EAAE,OAAO,EAAE,GAAG,EAAE,QAAQ,EAAE,IAAI,CAAC,UAAU,CAAC,YAAY,EAAE,UAAU,EAAE,IAAI,CAAC,UAAU,CAAC,mBAAmB,EAAE,IAAI,EAAE,CAAC,EAAE,CAAC;iBACvI;gBACD,IAAI,OAAO,GAAG,IAAI,CAAC,SAAS,CAAC,gBAAgB,CAAC,IAAI,CAAC,MAAM,GAAG,EAAE,CAAC,GAAG,IAAI,CAAC,MAAM;gBAC7E,IAAI,IAAI,CAAC,QAAQ,CAAC,MAAM,GAAG,CAAC,EAAE;oBAC5B,IAAI,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,WAAW,IAAI,MAAM,EAAE;wBAC1C,IAAI,CAAC,YAAY,GAAG;4BAClB,EAAE,OAAO,EAAE,IAAI,CAAC,MAAM,EAAE,IAAI,EAAE,IAAI,CAAC,MAAM,EAAE,KAAK,EAAE,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,EAAE;yBAC9E;qBACF;yBAAM;wBACL,IAAI,SAAS,GAAG,IAAI,CAAC,MAAM,GAAG,CAAC;wBAC/B,IAAI,CAAC,YAAY,GAAG;4BAClB,EAAE,OAAO,EAAE,SAAS,EAAE,IAAI,EAAE,IAAI,CAAC,MAAM,EAAE,KAAK,EAAE,SAAS,GAAG,IAAI,CAAC,MAAM,EAAE;4BACzE,EAAE,OAAO,EAAE,SAAS,EAAE,IAAI,EAAE,CAAC,EAAE,KAAK,EAAE,SAAS,EAAE;yBAClD;qBACF;iBACF;gBACD,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,UAAU,CAAC,SAAS,CAAC,OAAO,CAAC,GAAG,cAAc;gBACrE,IAAI,CAAC,SAAS,CAAC,eAAe,CAAC,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC;gBACpD,IAAI,IAAI,CAAC,UAAU,CAAC,YAAY,IAAI,kBAAkB,EAAE;oBACtD,IAAI,CAAC,GAAG,CAAC,aAAa,EAAE;iBACzB;;oBAEC,IAAI,CAAC,sBAAsB,CAAC,GAAG,CAAC;aACnC;QAEH,CAAC,CAAC;QACF,yDAAyD;QACzD,+BAA+B;QAE/B,MAAM;QACN,KAAK;IACP,CAAC;IAED,sBAAsB,CAAC,GAAW;QAChC,IAAI,CAAC,GAAG,CAAC;QACT,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,OAAO,CAAC,KAAK,CAAC,EAAE;YAClC,IAAI,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,KAAK,CAAC,EAAE,GAAG,KAAK,CAAC,EAAE;gBAC5C,IAAI,KAAK,GAAG,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,KAAK,CAAC,EAAE,GAAG,OAAO,CAAC;gBACtD,CAAC,IAAI,CAAC;gBACN,IAAI,CAAC,iBAAiB,CAAC,MAAM,CAAC,GAAG,EAAE,KAAK,CAAC,WAAW,CAAC,CAAC,SAAS,EAAE,CAAC,IAAI,CAAC,CAAC,GAAQ,EAAE,EAAE;oBAClF,oBAAoB;oBAEpB,IAAI,GAAG,EAAE;wBACP,IAAI,IAAI,CAAC,UAAU,CAAC,gBAAgB,IAAI,MAAM,EAAE;4BAC9C,IAAI,GAAG,GAAG,GAAG,CAAC,OAAO,GAAG,KAAK;4BAC7B,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,GAAG,GAAG;4BAC/B,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,EAAE,OAAO,EAAE,GAAG,EAAE,QAAQ,EAAE,KAAK,CAAC,WAAW,EAAE,UAAU,EAAE,KAAK,EAAE,IAAI,EAAE,CAAC,EAAE,CAAC;yBAC9F;6BAAM;4BACL,IAAI,GAAG,GAAG,GAAG,CAAC,UAAU,GAAG,KAAK;4BAChC,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,GAAG,GAAG;4BAC/B,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,GAAG,GAAG;4BAC/B,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,EAAE,OAAO,EAAE,GAAG,EAAE,QAAQ,EAAE,KAAK,CAAC,WAAW,EAAE,UAAU,EAAE,KAAK,EAAE,IAAI,EAAE,CAAC,EAAE,CAAC;4BAC7F,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,EAAE,OAAO,EAAE,GAAG,EAAE,QAAQ,EAAE,KAAK,CAAC,WAAW,EAAE,UAAU,EAAE,KAAK,EAAE,IAAI,EAAE,CAAC,EAAE,CAAC;yBAC9F;qBACF;oBACD,IAAI,CAAC,IAAI,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,MAAM,EAAE;wBACnC,IAAI,OAAO,GAAG,IAAI,CAAC,SAAS,CAAC,gBAAgB,CAAC,IAAI,CAAC,MAAM,GAAG,EAAE,CAAC,GAAG,IAAI,CAAC,MAAM;wBAC7E,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,UAAU,CAAC,SAAS,CAAC,OAAO,CAAC,GAAG,cAAc;wBACrE,IAAI,CAAC,SAAS,CAAC,eAAe,CAAC,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC;wBACpD,IAAI,CAAC,GAAG,CAAC,aAAa,EAAE;qBACzB;gBACH,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE;oBACX,IAAI,CAAC,IAAI,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,MAAM;wBAAE,IAAI,CAAC,GAAG,CAAC,aAAa,EAAE;gBAC/D,CAAC,CAAC;aACH;QACH,CAAC,CAAC;IACJ,CAAC;IAEK,QAAQ;;YACZ,IAAI,OAAO,GAAG,IAAI,CAAC,SAAS,CAAC,gBAAgB,CAAC,IAAI,CAAC,MAAM,GAAG,EAAE,CAAC,GAAG,IAAI,CAAC,MAAM;YAC7E,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,UAAU,CAAC,SAAS,CAAC,OAAO,CAAC,GAAG,cAAc;YACrE,IAAI,CAAC,SAAS,CAAC,eAAe,CAAC,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC;YACpD,IAAI,CAAC,gBAAgB,CAAC,UAAU,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,IAAI,CAAC,yDAAQ,CAAC,CAAC,IAAI,EAAE,EAAE;gBACxE,IAAI,QAAQ,GAAG;oBACb,cAAc,EAAE;wBACd,SAAS,EAAE,IAAI,CAAC,IAAI,CAAC,gBAAgB,CAAC,EAAE,IAAI,CAAC;wBAC7C,YAAY,EAAE,IAAI,CAAC,WAAW,CAAC,gBAAgB,CAAC,UAAU,IAAI,CAAC;wBAC/D,cAAc,EAAE,IAAI;wBACpB,SAAS,EAAE,CAAC,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,CAAC,GAAG,EAAE;wBAChF,aAAa,EAAE,IAAI,CAAC,UAAU;wBAC9B,WAAW,EAAE,IAAI,CAAC,OAAO,CAAC,EAAE;wBAC5B,aAAa,EAAE,IAAI,CAAC,WAAW,CAAC,WAAW;wBAC3C,MAAM,EAAE,IAAI,CAAC,WAAW,CAAC,IAAI;qBAC9B;oBACD,YAAY,EAAE,IAAI,CAAC,WAAW;oBAC9B,UAAU,EAAE,EAAE;iBACf;gBACD,QAAQ,CAAC,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,EAAE;oBAC1C,OAAO;wBACL,aAAa,EAAE,IAAI,CAAC,UAAU,CAAC,gBAAgB;wBAC/C,MAAM,EAAE,IAAI,CAAC,UAAU,CAAC,YAAY;wBACpC,SAAS,EAAE,CAAC,CAAC,OAAO;wBACpB,MAAM,EAAE,CAAC,CAAC,IAAI;wBACd,UAAU,EAAE,CAAC,CAAC,QAAQ;wBACtB,YAAY,EAAE,CAAC,CAAC,UAAU;wBAC1B,YAAY,EAAE,IAAI,CAAC,WAAW;wBAC9B,OAAO,EAAE,CAAC,CAAC,IAAI,GAAG,CAAC,CAAC,OAAO;qBAC5B;gBACH,CAAC,CAAC;gBACF,OAAO,IAAI,CAAC,gBAAgB,CAAC,OAAO,CAAC,QAAQ,CAAC;YAChD,CAAC,CAAC,CAAC,CAAC,SAAS,EAAE,CAAC,IAAI,CAAC,CAAC,GAAG,EAAE,EAAE;gBAC3B,IAAI,GAAG,EAAE;oBACP,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,EAAE,IAAI,EAAE,0EAAqB,EAAE,CAAC;iBAEvD;YACH,CAAC,CAAC;QACJ,CAAC;KAAA;IAED,QAAQ;QACN,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,EAAE,IAAI,EAAE,0EAAqB,EAAE,CAAC;IACxD,CAAC;CAGF;;YA9LQ,2EAAqB;YAErB,0FAAY;YAQZ,oFAAiB;YADjB,yFAAoB;YAbpB,6DAAiB;YAKjB,sDAAW;YAIX,wFAAkB;YAVlB,yDAAW;;;sBAuBjB,iDAAK;uBACL,iDAAK;0BACL,iDAAK;0BACL,kDAAM;yBACN,iDAAK;;AALK,kBAAkB;IAL9B,yDAAS,CAAC;QACT,QAAQ,EAAE,gBAAgB;QAC1B,0KAA0C;;KAE3C,CAAC;GACW,kBAAkB,CA6K9B;AA7K8B;;;;;;;;;;;;;;;;;;;;;ACtBmB;AACP;AAC2B;AACO;AAG7E,MAAM,kBAAkB,GAAG,GAAG,yEAAkB,0BAA0B,CAAC;IAK9D,oBAAoB,SAApB,oBAAqB,SAAQ,4EAA6C;IACrF,YAAsB,UAAsB;QAC1C,KAAK,CAAC,UAAU,EAAE,kBAAkB,CAAC,CAAC;QADlB,eAAU,GAAV,UAAU,CAAY;IAE5C,CAAC;IAED,UAAU,CAAC,KAAa;QACtB,wDAAwD;QACxD,OAAO,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,kBAAkB,GAAG,YAAY,GAAG,KAAK,CAAC;IAC1E,CAAC;IACD,OAAO,CAAC,KAAa;QACnB,wDAAwD;QACxD,OAAO,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,kBAAkB,GAAG,YAAY,GAAG,KAAK,CAAC;IACvE,CAAC;IAED,OAAO,CAAC,QAAa;QACnB,OAAO,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,kBAAkB,GAAG,GAAG,EAAE,QAAQ,CAAC;IACjE,CAAC;CACF;;YA5BQ,4DAAU;;AAWN,oBAAoB;IAHhC,yDAAU,CAAC;QACV,UAAU,EAAE,MAAM;KACnB,CAAC;GACW,oBAAoB,CAiBhC;AAjBgC;;;;;;;;;;;;;;;;;;;;;ACXiB;AACP;AAC2B;AACO;AAG7E,MAAM,mBAAmB,GAAG,GAAG,yEAAkB,uBAAuB,CAAC;IAK5D,iBAAiB,SAAjB,iBAAkB,SAAQ,4EAA0C;IAC/E,YAAsB,UAAsB;QAC1C,KAAK,CAAC,UAAU,EAAE,mBAAmB,CAAC,CAAC;QADnB,eAAU,GAAV,UAAU,CAAY;IAE5C,CAAC;IAED,MAAM,CAAC,GAAW,EAAE,KAAa;QAC/B,OAAO,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,mBAAmB,GAAG,OAAO,GAAG,GAAG,GAAG,SAAS,GAAG,KAAK,CAAC;IACrF,CAAC;CACF;;YAnBQ,4DAAU;;AAWN,iBAAiB;IAH7B,yDAAU,CAAC;QACV,UAAU,EAAE,MAAM;KACnB,CAAC;GACW,iBAAiB,CAQ7B;AAR6B;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACXoE;AAC9B;AACgB;AACnD;AACwC;AACrB;AAC+B;AAGN;AACM;AAEJ;AACG;AACM;AACK;AACD;AACxC;AACJ;AACK;AACP;AAC0C;AACM;AAC3C;IAYtC,yBAAyB,SAAzB,yBAAyB;IAmCpC,YACU,EAAe,EACf,WAA+B,EAC/B,aAAmC,EACnC,YAA0B,EAC1B,gBAAsC,EACtC,IAAiB,EACjB,SAAgC,EAChC,kBAAsC,EACtC,eAAgC,EAChC,UAAuB,EACvB,GAAsB;QAVtB,OAAE,GAAF,EAAE,CAAa;QACf,gBAAW,GAAX,WAAW,CAAoB;QAC/B,kBAAa,GAAb,aAAa,CAAsB;QACnC,iBAAY,GAAZ,YAAY,CAAc;QAC1B,qBAAgB,GAAhB,gBAAgB,CAAsB;QACtC,SAAI,GAAJ,IAAI,CAAa;QACjB,cAAS,GAAT,SAAS,CAAuB;QAChC,uBAAkB,GAAlB,kBAAkB,CAAoB;QACtC,oBAAe,GAAf,eAAe,CAAiB;QAChC,eAAU,GAAV,UAAU,CAAa;QACvB,QAAG,GAAH,GAAG,CAAmB;QAxCtB,gBAAW,GAAG,IAAI,wDAAY,EAAoB,CAAC;QAE7D,cAAS,GAAG,IAAI;QAChB,gBAAW,GAAG,IAAI;QAClB,cAAS,GAAG,IAAI;QAChB,gBAAW,GAAG,IAAI;QAClB,eAAU,GAAG,IAAI;QACjB,eAAU,GAAG,IAAI;QACjB,YAAO,GAAU,EAAE;QACnB,aAAQ,GAAU,EAAE;QACpB,WAAM,GAAQ,EAAE;QAChB,aAAQ,GAAU,EAAE;QAEpB,aAAQ,GAAU,EAAE;QAGpB,gBAAW,GAAU,EAAE;QACvB,cAAS,GAAU,EAAE;QACrB,gBAAW,GAAG;YACZ,IAAI,EAAE,CAAC;YACP,OAAO,EAAE,CAAC;SACX;QACD,eAAU,GAAG;YACX,MAAM,EAAE,UAAU;YAClB,eAAe,EAAE,eAAe;SACjC;QAED,WAAM,GAAW,CAAC;QAClB,WAAM,GAAW,CAAC;QAchB,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC;YAC9B,kBAAkB,EAAE,CAAC,EAAE,KAAK,EAAE,IAAI,EAAE,QAAQ,EAAE,IAAI,EAAE,EAAE,+DAAkB,CAAC,CAAC,gEAAmB,CAAC,CAAC,CAAC;YAChG,gBAAgB,EAAE,CAAC,EAAE,KAAK,EAAE,IAAI,EAAE,QAAQ,EAAE,IAAI,EAAE,EAAE,+DAAkB,CAAC,CAAC,gEAAmB,CAAC,CAAC,CAAC;YAC9F,WAAW,EAAE,CAAC,EAAE,KAAK,EAAE,IAAI,EAAE,QAAQ,EAAE,IAAI,EAAE,EAAE,+DAAkB,CAAC,CAAC,gEAAmB,CAAC,CAAC,CAAC;YACzF,YAAY,EAAE,CAAC,EAAE,KAAK,EAAE,kBAAkB,EAAE,QAAQ,EAAE,IAAI,EAAE,EAAE,+DAAkB,CAAC,CAAC,gEAAmB,CAAC,CAAC,CAAC;YACxG,gBAAgB,EAAE,CAAC,EAAE,KAAK,EAAE,IAAI,EAAE,QAAQ,EAAE,IAAI,EAAE,EAAE,+DAAkB,CAAC,CAAC,gEAAmB,CAAC,CAAC,CAAC;YAC9F,mBAAmB,EAAE,CAAC,EAAE,KAAK,EAAE,IAAI,EAAE,QAAQ,EAAE,IAAI,EAAE,EAAE,+DAAkB,CAAC,CAAC,gEAAmB,CAAC,CAAC,CAAC;YACjG,aAAa,EAAE,CAAC,EAAE,KAAK,EAAE,IAAI,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC;SACjD,CAAC;QACF,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC,IAAI,CAAC,EAAE,MAAM,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,GAAG,CAAC,CAAC;IAC7D,CAAC;IAEK,QAAQ;;YACZ,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,WAAW,CAAC,WAAW;YACzC,IAAI,CAAC,IAAI,CAAC,KAAK,EAAE;gBACf,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,oFAAoF,EAAE,SAAS,CAAC;aAC5H;YACD,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC,SAAS;YACrC,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,OAAO,CAAC,MAAM;YACnC,IAAI,MAAM,GAAG,mCAAM,EAAE,CAAC,QAAQ,CAAC,CAAC,EAAE,MAAM,CAAC;YACzC,IAAI,CAAC,WAAW,GAAG,EAAE,IAAI,EAAE,QAAQ,CAAC,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,EAAE,KAAK,EAAE,QAAQ,CAAC,MAAM,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,EAAE,GAAG,EAAE,QAAQ,CAAC,MAAM,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC;YACrI,IAAI,CAAC,SAAS,GAAG,EAAE,IAAI,EAAE,QAAQ,CAAC,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,EAAE,KAAK,EAAE,QAAQ,CAAC,MAAM,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,EAAE,GAAG,EAAE,QAAQ,CAAC,MAAM,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC;YACnI,IAAI,UAAU,GAAG,mCAAM,EAAE,CAAC,QAAQ,CAAC,CAAC,EAAE,OAAO,CAAC;YAC9C,IAAI,CAAC,UAAU,GAAG,EAAE,IAAI,EAAE,QAAQ,CAAC,UAAU,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,EAAE,KAAK,EAAE,QAAQ,CAAC,UAAU,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,EAAE,GAAG,EAAE,QAAQ,CAAC,UAAU,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC;YAChJ,IAAI,UAAU,GAAG,mCAAM,EAAE,CAAC,QAAQ,CAAC,EAAE,EAAE,OAAO,CAAC;YAC/C,IAAI,CAAC,UAAU,GAAG,EAAE,IAAI,EAAE,QAAQ,CAAC,UAAU,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,EAAE,KAAK,EAAE,QAAQ,CAAC,UAAU,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,EAAE,GAAG,EAAE,QAAQ,CAAC,UAAU,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC;YAEhJ,IAAI,CAAC,UAAU,EAAE;QAEnB,CAAC;KAAA;IAED,IAAI,QAAQ;QACV,OAAO,IAAI,CAAC,UAAU,CAAC,QAAQ;IACjC,CAAC;IAED,mBAAmB;IACnB,cAAc,CAAC,WAAmB,EAAE,KAAgB;QAClD,MAAM,OAAO,GAAG,KAAK,CAAC,QAAQ,CAAC,WAAW,CAAC,CAAC;QAC5C,OAAO,OAAO,CAAC,KAAK,IAAI,CAAC,OAAO,CAAC,KAAK,IAAI,OAAO,CAAC,OAAO,CAAC,CAAC;IAC7D,CAAC;IAED,gBAAgB,CAAC,WAAmB,EAAE,KAAgB;QACpD,MAAM,OAAO,GAAG,KAAK,CAAC,QAAQ,CAAC,WAAW,CAAC,CAAC;QAC5C,OAAO,OAAO,CAAC,OAAO,IAAI,CAAC,OAAO,CAAC,KAAK,IAAI,OAAO,CAAC,OAAO,CAAC,CAAC;IAC/D,CAAC;IAED,eAAe,CAAC,UAAU,EAAE,WAAW,EAAE,KAAgB;QACvD,MAAM,OAAO,GAAG,KAAK,CAAC,QAAQ,CAAC,WAAW,CAAC,CAAC;QAC5C,OAAO,OAAO,CAAC,QAAQ,CAAC,UAAU,CAAC,IAAI,CAAC,OAAO,CAAC,KAAK,IAAI,OAAO,CAAC,OAAO,CAAC,CAAC;IAC5E,CAAC;IAED,gBAAgB,CAAC,WAAW,EAAE,KAAgB;QAC5C,MAAM,OAAO,GAAG,KAAK,CAAC,QAAQ,CAAC,WAAW,CAAC,CAAC;QAC5C,OAAO,OAAO,CAAC,KAAK,IAAI,OAAO,CAAC,OAAO,CAAC;IAC1C,CAAC;IACD,QAAQ;QACN,IAAI,IAAI,CAAC,MAAM,EAAE;YACf,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,MAAM,CAAC;SAC3B;aAAM;YACL,IAAI,CAAC,QAAQ,EAAE;SAChB;QACD,yDAAyD;IAC3D,CAAC;IAED,QAAQ;QACN,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,EAAE,IAAI,EAAE,0EAAqB,EAAE,CAAC;IACxD,CAAC;IAED,UAAU;QACR,sBAAsB;QACtB,IAAI,IAAI,CAAC,KAAK,EAAE;YACd,IAAI,KAAK,GAAG,IAAI,CAAC,KAAK;YACtB,IAAI,CAAC,KAAK;gBAAE,OAAO,KAAK;YACxB,IAAI,IAAI,CAAC,QAAQ,CAAC,EAAE,EAAE;gBACpB,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;gBAE3B,IAAI,KAAK,GAAG,IAAI,CAAC,WAAW;gBAC5B,IAAI,CAAC,aAAa,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,0DAAS,CAAC,CAAC,GAAQ,EAAE,EAAE;oBAC3D,IAAI,CAAC,GAAG,EAAE;wBACR,OAAO,IAAI,CAAC,aAAa,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC;qBAC7C;;wBAAM,OAAO,yCAAE,CAAC,GAAG,CAAC;gBACvB,CAAC,CAAC,CAAC,CAAC,SAAS,EAAE,CAAC,IAAI,CAAC,CAAC,GAAQ,EAAE,EAAE;oBAChC,IAAI,GAAG,EAAE;wBACP,IAAI,CAAC,OAAO,mCAAQ,GAAG,KAAE,EAAE,EAAE,IAAI,GAAE;wBACnC,IAAI,CAAC,MAAM,GAAG,GAAG,CAAC,UAAU,IAAI,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC,IAAI;wBAChE,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,UAAU,IAAI,IAAI,CAAC,WAAW,CAAC;wBACnD,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC;wBACnB,IAAI,CAAC,kBAAkB,EAAE;qBAC1B;gBACH,CAAC,CAAC;aACH;iBAAM;gBACL,IAAI,CAAC,aAAa,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,SAAS,EAAE,CAAC,IAAI,CAAC,CAAC,GAAQ,EAAE,EAAE;oBAC7D,IAAI,GAAG,EAAE;wBACP,IAAI,CAAC,OAAO,mCAAQ,GAAG,KAAE,EAAE,EAAE,IAAI,GAAE;wBACnC,IAAI,CAAC,MAAM,GAAG,KAAK,IAAI,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC,IAAI;wBACvD,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC;wBACrB,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC;wBACnB,IAAI,CAAC,kBAAkB,EAAE;qBAC1B;gBACH,CAAC,CAAC;aACH;SAEF;IACH,CAAC;IAED,QAAQ,CAAC,EAAG;QACV,MAAM,SAAS,GAAG,IAAI,CAAC,UAAU,CAAC,WAAW,EAAE;QAC/C,IAAI,MAAM,GAAG,IAAI,CAAC,OAAO,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,WAAW,IAAI,SAAS,CAAC,YAAY,CAAC;QACtF,IAAI,CAAC,MAAM,EAAE;YACX,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,yHAAyH,EAAE,SAAS,CAAC;YAChK,OAAO,KAAK;SACb;QACD,IAAI,OAAO,GAAG,IAAI,CAAC,SAAS,CAAC,gBAAgB,CAAC,IAAI,CAAC,MAAM,GAAG,EAAE,CAAC,GAAG,IAAI,CAAC,MAAM;QAC7E,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,UAAU,CAAC,SAAS,CAAC,OAAO,CAAC,GAAG,cAAc;QACrE,IAAI,CAAC,SAAS,CAAC,eAAe,CAAC,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC;QACpD,IAAI,QAAQ,GAAG;YACb,YAAY,EAAE,SAAS,CAAC,YAAY;YACpC,EAAE,EAAE,EAAE,IAAI,IAAI;YACd,gBAAgB,EAAE,SAAS,CAAC,gBAAgB;YAC5C,kBAAkB,EAAE,SAAS,CAAC,kBAAkB;YAChD,aAAa,EAAE,SAAS,CAAC,aAAa;YACtC,gBAAgB,EAAE,SAAS,CAAC,gBAAgB;YAC5C,WAAW,EAAE,SAAS,CAAC,WAAW;YAClC,YAAY,EAAE;gBACZ,OAAO,EAAE,IAAI,CAAC,IAAI,CAAC,gBAAgB,CAAC,EAAE,IAAI,CAAC;gBAC3C,UAAU,EAAE,IAAI,CAAC,WAAW,CAAC,gBAAgB,CAAC,UAAU,IAAI,CAAC;gBAC7D,YAAY,EAAE,IAAI;gBAClB,OAAO,EAAE,CAAC,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,CAAC,GAAG,EAAE;gBAC9E,WAAW,EAAE,IAAI,CAAC,UAAU;gBAC5B,SAAS,EAAE,IAAI,CAAC,WAAW,CAAC,aAAa,CAAC,EAAE;gBAC5C,WAAW,EAAE,IAAI,CAAC,WAAW,CAAC,WAAW;gBACzC,MAAM,EAAE,IAAI,CAAC,WAAW,CAAC,cAAc,IAAI,IAAI;gBAC/C,YAAY;gBACZ,IAAI,EAAE,IAAI,CAAC,WAAW,CAAC,IAAI;aAC5B;YACD,UAAU,EAAE,IAAI,CAAC,WAAW;YAC5B,mBAAmB,EAAE,SAAS,CAAC,mBAAmB;SACnD;QACD,yBAAyB;QACzB,IAAI,CAAC,EAAE,EAAE;YACP,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,SAAS,EAAE,CAAC,IAAI,CAAC,CAAC,GAAQ,EAAE,EAAE;gBAC9D,IAAI,GAAG,EAAE;oBACP,IAAI,CAAC,MAAM,GAAG,GAAG,CAAC,EAAE;oBACpB,IAAI,CAAC,WAAW,GAAG,GAAG,CAAC,UAAU;oBACjC,IAAI,CAAC,cAAc,EAAE;oBACrB,+CAA+C;oBAC/C,IAAI,CAAC,WAAW,EAAE,CAAC,SAAS,EAAE,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;oBAC7D,IAAI,CAAC,SAAS,CAAC,YAAY,CAAC,6DAAY,CAAC,iCAAK,EAAE,EAAE,GAAG,CAAC,EAAE,IAAK,QAAQ,KAAE,MAAM,EAAE,IAAI,CAAC,MAAM,GAAE;oBAC5F,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,EAAE,IAAI,EAAE,0EAAqB,EAAE,IAAI,EAAE,EAAE,GAAG,EAAE,EAAE,CAAC;iBACtE;YACH,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;SACnB;aAAM;YACL,IAAI,CAAC,aAAa,CAAC,UAAU,CAAC,QAAQ,CAAC,CAAC,SAAS,EAAE,CAAC,IAAI,CAAC,CAAC,GAAQ,EAAE,EAAE;gBACpE,IAAI,GAAG,EAAE;oBACP,0EAA0E;oBAE1E,IAAI,CAAC,MAAM,GAAG,GAAG,CAAC,EAAE;oBACpB,IAAI,CAAC,cAAc,EAAE;oBACrB,IAAI,CAAC,SAAS,CAAC,YAAY,CAAC,6DAAY,CAAC,iCAAK,EAAE,EAAE,GAAG,CAAC,EAAE,IAAK,QAAQ,KAAE,MAAM,EAAE,IAAI,CAAC,MAAM,GAAE;oBAC5F,uCAAuC;oBACvC,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,EAAE,IAAI,EAAE,0EAAqB,EAAE,IAAI,oBAAO,GAAG,CAAE,EAAE,CAAC;iBACzE;YACH,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;SACnB;IAEH,CAAC;IAED,UAAU,CAAC,QAAiB,KAAK;QAC/B,IAAI,MAAM,GAAG,KAAK,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,IAAI,CAAC,WAAW;QAClD,IAAI,CAAC,gBAAgB,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,SAAS,EAAE,CAAC,IAAI,CAAC,CAAC,GAAQ,EAAE,EAAE;YAClE,IAAI,GAAG,EAAE;gBACP,IAAI,CAAC,WAAW,GAAG,GAAG;gBACtB,IAAI,CAAC,WAAW,GAAG;oBACjB,IAAI,EAAE,CAAC;oBACP,OAAO,EAAE,CAAC;iBACX;gBAED,IAAI,CAAC,MAAM,GAAG,CAAC;gBACf,IAAI,CAAC,MAAM,GAAG,CAAC;gBACf,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE;oBAC3B,IAAI,CAAC,MAAM,IAAI,CAAC,CAAC,OAAO;oBACxB,IAAI,CAAC,MAAM,IAAI,CAAC,CAAC,IAAI;oBACrB,IAAI,CAAC,WAAW,CAAC,IAAI,IAAI,CAAC,CAAC,UAAU;oBACrC,IAAI,CAAC,WAAW,CAAC,OAAO,IAAI,CAAC,CAAC,OAAO;gBACvC,CAAC,CAAC;gBACF,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,QAAQ,GAAG,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;gBACtF,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC,KAAK,EAAE,KAAK,EAAE,IAAI,EAAE,EAAE,CAC9D,KAAK,KAAK,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAC9B,CAAC,CAAC,QAAQ,KAAK,KAAK,CAAC,QAAQ,CAC9B,CAAC,CACH;gBACD,IAAI,CAAC,GAAG,CAAC,aAAa,EAAE;aACzB;QACH,CAAC,CAAC;IACJ,CAAC;IAED,kBAAkB;QAChB,IAAI,CAAC,UAAU,CAAC,UAAU,CAAC;YACzB,kBAAkB,EAAE,IAAI,CAAC,OAAO,CAAC,kBAAkB;YACnD,gBAAgB,EAAE,IAAI,CAAC,OAAO,CAAC,gBAAgB;YAC/C,WAAW,EAAE,IAAI,CAAC,OAAO,CAAC,WAAW;YACrC,YAAY,EAAE,IAAI,CAAC,OAAO,CAAC,YAAY;YACvC,gBAAgB,EAAE,IAAI,CAAC,OAAO,CAAC,gBAAgB;YAC/C,mBAAmB,EAAE,IAAI,CAAC,OAAO,CAAC,mBAAmB;YACrD,aAAa,EAAE,IAAI,CAAC,OAAO,CAAC,aAAa;SAC1C,CAAC;IACJ,CAAC;IAED,YAAY;QACV,IAAI,YAAY,GAAG,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,YAAY,CAAC,KAAK;QAC9D,IAAI,KAAK,GAAG,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,mBAAmB,CAAC,KAAK;QAC9D,IAAI,MAAM,GAAG,IAAI,CAAC,OAAO,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,WAAW,IAAI,YAAY,CAAC;QAC5E,IAAI,MAAM,EAAE;YACV,IAAI,QAAQ,GAAG;gBACb,UAAU,EAAE,MAAM,CAAC,EAAE;gBACrB,WAAW,EAAE,IAAI,CAAC,WAAW;gBAC7B,UAAU,EAAE,KAAK;gBACjB,IAAI,EAAE,IAAI;gBACV,OAAO,EAAE,IAAI;aACd;YACD,OAAO,IAAI,CAAC,kBAAkB,CAAC,SAAS,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,IAAI,CAAC,0DAAS,CAAC,CAAC,CAAM,EAAE,EAAE;gBACnF,yBAAyB;gBACzB,OAAO,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,QAAQ,CAAC;YAC/C,CAAC,CAAC,CAAC;YACH,6BAA6B;YAC7B,eAAe;YAEf,MAAM;YACN,KAAK;SACN;QACD,OAAO,yCAAE,CAAC,EAAE,CAAC;IACf,CAAC;IAEK,QAAQ,CAAC,UAAmB,KAAK;;YACrC,IAAI,IAAI,CAAC,WAAW,IAAI,IAAI,CAAC,KAAK,EAAE;gBAClC,IAAI,SAAS,GAAG,IAAI;gBACpB,IAAI,KAAK,GAAG,OAAO,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,WAAW,IAAI,IAAI,CAAC,KAAK,CAAC;gBACnE,IAAI,CAAC,KAAK;oBAAE,OAAO,KAAK;gBACxB,KAAK,MAAM,IAAI,IAAI,IAAI,CAAC,OAAO,CAAC,MAAM,EAAE;oBACtC,IAAI,QAAQ,GAAQ,EAAE,CAAC;oBACvB,IAAI;wBACF,QAAQ,GAAG,MAAM,IAAI,CAAC,eAAe,CAAC,MAAM,CAAC,IAAI,CAAC,EAAE,EAAE,KAAK,CAAC,CAAC,SAAS,EAAE;qBACzE;oBAAC,OAAO,KAAK,EAAE;qBACf;oBACD,IAAI,QAAQ,EAAE;wBACZ,SAAS,GAAG,KAAK;wBACjB,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,EAAE,GAAG,KAAK,CAAC,GAAG,QAAQ,CAAC,UAAU,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,KAAK;wBACjE,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,EAAE,GAAG,OAAO,CAAC,GAAG,QAAQ,CAAC,UAAU;qBACrD;yBAAM;wBACL,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,EAAE,GAAG,KAAK,CAAC,GAAG,KAAK;wBACpC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,EAAE,GAAG,OAAO,CAAC,GAAG,IAAI;qBACtC;iBAEF;gBACD,sDAAsD;gBACtD,wBAAwB;gBACxB,WAAW;gBACX,2BAA2B;gBAC3B,IAAI;aACL;QACH,CAAC;KAAA;IAEK,cAAc;;YAClB,MAAM,IAAI,CAAC,YAAY,EAAE,CAAC,SAAS,EAAE;YACrC,MAAM,IAAI,CAAC,SAAS,EAAE,CAAC,SAAS,EAAE;YAClC,yDAAyD;QAC3D,CAAC;KAAA;IAED,WAAW;QACT,OAAO,+CAAQ,CAAC,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,EAAE;YACzC,IAAI,QAAQ,GAAG;gBACb,aAAa,EAAE,CAAC,CAAC,WAAW;gBAC5B,MAAM,EAAE,CAAC,CAAC,IAAI;gBACd,SAAS,EAAE,CAAC,CAAC,OAAO;gBACpB,MAAM,EAAE,CAAC,CAAC,IAAI;gBACd,UAAU,EAAE,CAAC,CAAC,QAAQ;gBACtB,YAAY,EAAE,CAAC,CAAC,UAAU;gBAC1B,YAAY,EAAE,IAAI,CAAC,WAAW;gBAC9B,OAAO,EAAE,CAAC,CAAC,KAAK;gBAChB,cAAc,EAAE;oBACd,SAAS,EAAE,IAAI,CAAC,IAAI,CAAC,gBAAgB,CAAC,EAAE,IAAI,CAAC;oBAC7C,YAAY,EAAE,IAAI,CAAC,WAAW,CAAC,gBAAgB,CAAC,UAAU,IAAI,CAAC;oBAC/D,cAAc,EAAE,IAAI;oBACpB,SAAS,EAAE,CAAC,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,CAAC,GAAG,EAAE;oBAChF,aAAa,EAAE,IAAI,CAAC,UAAU;oBAC9B,WAAW,EAAE,IAAI,CAAC,OAAO,CAAC,EAAE;oBAC5B,aAAa,EAAE,IAAI,CAAC,WAAW,CAAC,WAAW;oBAC3C,MAAM,EAAE,IAAI,CAAC,WAAW,CAAC,IAAI;iBAC9B;aACF;YACD,OAAO,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,QAAQ,CAAC;QAC7C,CAAC,CAAC,CAAC;IACL,CAAC;IAED,SAAS;QAEP,OAAO,IAAI,CAAC,eAAe,CAAC,SAAS,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,IAAI,CAAC,yDAAQ,CAAC,CAAC,CAAM,EAAE,EAAE;YAC/E,gDAAgD;YAChD,OAAO,+CAAQ,CAAC,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,MAAM,CAAC,EAAE;gBACzC,IAAI,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,EAAE,GAAG,KAAK,CAAC,EAAE;oBAClC,IAAI,QAAQ,GAAG;wBACb,OAAO,EAAE,MAAM,CAAC,EAAE;wBAClB,WAAW,EAAE,IAAI,CAAC,WAAW;wBAC7B,UAAU,EAAE,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,EAAE,GAAG,OAAO,CAAC;wBAC5C,IAAI,EAAE,IAAI;wBACV,OAAO,EAAE,IAAI;qBACd;oBACD,OAAO,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,QAAQ,CAAC;iBAC3C;qBAAM;oBACL,OAAO,yCAAE,CAAC,IAAI,CAAC;iBAChB;YACH,CAAC,CAAC,CAAC;QACL,CAAC,CAAC,CAAC;IACL,CAAC;CAEF;;YA7YQ,wDAAW;YASX,wFAAkB;YAKlB,sGAAoB;YADpB,2FAAY;YAEZ,qGAAoB;YAXpB,sDAAW;YADX,2EAAqB;YASrB,uFAAkB;YAJlB,kFAAe;YAWf,yDAAW;YApBX,6DAAiB;;;sBAqCvB,iDAAK;uBACL,iDAAK;0BACL,iDAAK;yBACL,iDAAK;0BACL,kDAAM;;AANI,yBAAyB;IAXrC,yDAAS,CAAC;QACT,QAAQ,EAAE,wBAAwB;QAClC,kLAAkD;QAElD,SAAS,EAAE;YACT,EAAE,OAAO,EAAE,uEAAc,EAAE,QAAQ,EAAE,yDAAa,EAAE;YACpD,EAAE,OAAO,EAAE,+EAAsB,EAAE,QAAQ,EAAE,qEAAyB,EAAE;YACxE,EAAE,OAAO,EAAE,gEAAW,EAAE,QAAQ,EAAE,gFAAiB,EAAE,IAAI,EAAE,CAAC,oEAAe,CAAC,EAAE;YAC9E,EAAE,OAAO,EAAE,qEAAgB,EAAE,QAAQ,EAAE,sDAAU,EAAE;SACpD;;KACF,CAAC;GACW,yBAAyB,CA2WrC;AA3WqC;;;;;;;;;;;;;;;;;;;;;ACnCY;AACP;AAC2B;AACO;AAG7E,MAAM,aAAa,GAAG,GAAG,yEAAkB,wBAAwB,CAAC;IAKvD,oBAAoB,SAApB,oBAAqB,SAAQ,4EAAmD;IAC3F,YAAsB,UAAsB;QAC1C,KAAK,CAAC,UAAU,EAAE,aAAa,CAAC,CAAC;QADb,eAAU,GAAV,UAAU,CAAY;IAE5C,CAAC;IAED,MAAM,CAAC,GAAW;QAChB,OAAO,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,aAAa,GAAC,YAAY,GAAC,GAAG,CAAC;IAC5D,CAAC;CACF;;YAnBQ,4DAAU;;AAWN,oBAAoB;IAHhC,yDAAU,CAAC;QACV,UAAU,EAAE,MAAM;KACnB,CAAC;GACW,oBAAoB,CAQhC;AARgC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACXiE;AAC9B;AACgB;AACnD;AACoB;AACoB;AACP;AACd;AAC+B;AAGN;AACM;AAEJ;AACC;AACE;AAClC;AACI;AACoC;AACA;AACM;AAE3C;IAYtC,mBAAmB,SAAnB,mBAAmB;IAsB9B,YACU,EAAe,EACf,WAA+B,EAC/B,IAAiB,EACjB,aAAmC,EACnC,SAAgC,EAChC,eAAgC,EAChC,kBAAsC,EACtC,YAA0B,EAC1B,GAAsB;QARtB,OAAE,GAAF,EAAE,CAAa;QACf,gBAAW,GAAX,WAAW,CAAoB;QAC/B,SAAI,GAAJ,IAAI,CAAa;QACjB,kBAAa,GAAb,aAAa,CAAsB;QACnC,cAAS,GAAT,SAAS,CAAuB;QAChC,oBAAe,GAAf,eAAe,CAAiB;QAChC,uBAAkB,GAAlB,kBAAkB,CAAoB;QACtC,iBAAY,GAAZ,YAAY,CAAc;QAC1B,QAAG,GAAH,GAAG,CAAmB;QAzBtB,gBAAW,GAAG,IAAI,wDAAY,EAAoB,CAAC;QAE7D,cAAS,GAAG,IAAI;QAChB,gBAAW,GAAG,IAAI;QAClB,cAAS,GAAG,IAAI;QAChB,gBAAW,GAAG,IAAI;QAClB,eAAU,GAAG,IAAI;QACjB,eAAU,GAAG,IAAI;QACjB,YAAO,GAAU,EAAE;QACnB,aAAQ,GAAU,EAAE;QACpB,WAAM,GAAQ,EAAE;QAChB,aAAQ,GAAU,EAAE;QAEpB,aAAQ,GAAU,EAAE;QAclB,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC;YAC9B,kBAAkB,EAAE,CAAC,IAAI,EAAE,+DAAkB,CAAC,CAAC,gEAAmB,CAAC,CAAC,CAAC;YACrE,gBAAgB,EAAE,CAAC,IAAI,EAAE,+DAAkB,CAAC,CAAC,gEAAmB,CAAC,CAAC,CAAC;YACnE,WAAW,EAAE,CAAC,IAAI,EAAE,+DAAkB,CAAC,CAAC,gEAAmB,CAAC,CAAC,CAAC;YAC9D,YAAY,EAAE,CAAC,kBAAkB,EAAE,+DAAkB,CAAC,CAAC,gEAAmB,CAAC,CAAC,CAAC;YAC7E,gBAAgB,EAAE,CAAC,IAAI,EAAE,+DAAkB,CAAC,CAAC,gEAAmB,CAAC,CAAC,CAAC;YACnE,mBAAmB,EAAE,CAAC,IAAI,EAAE,+DAAkB,CAAC,CAAC,gEAAmB,CAAC,CAAC,CAAC;YACtE,aAAa,EAAE,CAAC,IAAI,CAAC;SACtB,CAAC;QACF,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC,IAAI,CAAC,EAAE,MAAM,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,GAAG,CAAC,CAAC;IAC7D,CAAC;IAEK,QAAQ;;YAEZ,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC,SAAS;YACrC,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,OAAO,CAAC,MAAM;YACnC,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,WAAW,CAAC,WAAW;YACzC,IAAI,MAAM,GAAG,mCAAM,EAAE,CAAC,QAAQ,CAAC,CAAC,EAAE,MAAM,CAAC;YACzC,IAAI,CAAC,WAAW,GAAG,MAAM,CAAC,MAAM,CAAC,YAAY,CAAC;YAC9C,wIAAwI;YACxI,IAAI,CAAC,SAAS,GAAG,MAAM,CAAC,MAAM,CAAC,YAAY,CAAC;YAC5C,sIAAsI;YACtI,IAAI,UAAU,GAAG,mCAAM,EAAE,CAAC,QAAQ,CAAC,CAAC,EAAE,OAAO,CAAC;YAC9C,IAAI,CAAC,UAAU,GAAG,UAAU,CAAC,MAAM,CAAC,YAAY,CAAC;YACjD,mJAAmJ;YACnJ,IAAI,UAAU,GAAG,mCAAM,EAAE,CAAC,QAAQ,CAAC,EAAE,EAAE,OAAO,CAAC;YAC/C,IAAI,CAAC,UAAU,GAAG,UAAU,CAAC,MAAM,CAAC,YAAY,CAAC;YACjD,mJAAmJ;YACnJ,+CAA+C;YAC/C,IAAI,CAAC,UAAU,EAAE;YACjB,kBAAkB;YAClB,4CAA4C;YAC5C,8BAA8B;YAC9B,UAAU;YACV,2BAA2B;YAC3B,4FAA4F;YAC5F,QAAQ;YACR,sBAAsB;YACtB,sBAAsB;YACtB,MAAM;YACN,2EAA2E;YAC3E,IAAI;QACN,CAAC;KAAA;IAED,WAAW,CAAC,MAAsB;QAEhC,IAAI,MAAM,CAAC,KAAK,KAAK,kBAAkB,EAAE;YACvC,IAAI,UAAU,GAAG,mCAAM,EAAE,CAAC,QAAQ,CAAC,CAAC,EAAE,OAAO,CAAC;YAC9C,IAAI,CAAC,UAAU,GAAG,UAAU,CAAC,MAAM,CAAC,YAAY,CAAC;YACjD,IAAI,UAAU,GAAG,mCAAM,EAAE,CAAC,QAAQ,CAAC,EAAE,EAAE,OAAO,CAAC;YAC/C,IAAI,CAAC,UAAU,GAAG,UAAU,CAAC,MAAM,CAAC,YAAY,CAAC;SAClD;aAAM;YACL,IAAI,UAAU,GAAG,mCAAM,EAAE,CAAC,QAAQ,CAAC,CAAC,EAAE,OAAO,CAAC;YAC9C,IAAI,CAAC,UAAU,GAAG,UAAU,CAAC,MAAM,CAAC,YAAY,CAAC;YACjD,IAAI,UAAU,GAAG,mCAAM,EAAE,CAAC,QAAQ,CAAC,EAAE,EAAE,OAAO,CAAC;YAC/C,IAAI,CAAC,UAAU,GAAG,UAAU,CAAC,MAAM,CAAC,YAAY,CAAC;SAClD;QACD,IAAI,CAAC,GAAG,CAAC,aAAa,EAAE;IAC1B,CAAC;IAED,OAAO;QACL,IAAI,KAAK,GAAG,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,oBAAoB,CAAC,CAAC,KAAK;QAChE,IAAI,KAAK,EAAE;YACT,IAAI,MAAM,GAAG,mCAAM,CAAC,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,oBAAoB,CAAC,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,OAAO,CAAC;YACzF,IAAI,CAAC,SAAS,GAAG,EAAE,IAAI,EAAE,QAAQ,CAAC,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,EAAE,KAAK,EAAE,QAAQ,CAAC,MAAM,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,EAAE,GAAG,EAAE,QAAQ,CAAC,MAAM,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC;YACnI,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,kBAAkB,CAAC,CAAC,QAAQ,CAAC,MAAM,CAAC,MAAM,CAAC,YAAY,CAAC,CAAC;SACnF;IACH,CAAC;IAED,aAAa;QACX,IAAI,IAAI,GAAG,IAAI,CAAC,QAAQ,CAAC,mBAAmB,CAAC,KAAK;QAClD,IAAI,IAAI,IAAI,IAAI,CAAC,QAAQ,CAAC,MAAM,EAAE;YAChC,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC,IAAI,CAAC,EAAE,MAAM,EAAE,IAAI,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,GAAG,CAAC,CAAC;YAC7D,KAAK,IAAI,KAAK,IAAI,IAAI,CAAC,QAAQ,EAAE;gBAC/B,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,EAAE,GAAG,OAAO,CAAC,GAAG,IAAI;aACvC;SACF;IAEH,CAAC;IAED,IAAI,QAAQ;QACV,OAAO,IAAI,CAAC,UAAU,CAAC,QAAQ;IACjC,CAAC;IAED,mBAAmB;IACnB,cAAc,CAAC,WAAmB,EAAE,KAAgB;QAClD,MAAM,OAAO,GAAG,KAAK,CAAC,QAAQ,CAAC,WAAW,CAAC,CAAC;QAC5C,OAAO,OAAO,CAAC,KAAK,IAAI,CAAC,OAAO,CAAC,KAAK,IAAI,OAAO,CAAC,OAAO,CAAC,CAAC;IAC7D,CAAC;IAED,gBAAgB,CAAC,WAAmB,EAAE,KAAgB;QACpD,MAAM,OAAO,GAAG,KAAK,CAAC,QAAQ,CAAC,WAAW,CAAC,CAAC;QAC5C,OAAO,OAAO,CAAC,OAAO,IAAI,CAAC,OAAO,CAAC,KAAK,IAAI,OAAO,CAAC,OAAO,CAAC,CAAC;IAC/D,CAAC;IAED,eAAe,CAAC,UAAU,EAAE,WAAW,EAAE,KAAgB;QACvD,MAAM,OAAO,GAAG,KAAK,CAAC,QAAQ,CAAC,WAAW,CAAC,CAAC;QAC5C,OAAO,OAAO,CAAC,QAAQ,CAAC,UAAU,CAAC,IAAI,CAAC,OAAO,CAAC,KAAK,IAAI,OAAO,CAAC,OAAO,CAAC,CAAC;IAC5E,CAAC;IAED,gBAAgB,CAAC,WAAW,EAAE,KAAgB;QAC5C,MAAM,OAAO,GAAG,KAAK,CAAC,QAAQ,CAAC,WAAW,CAAC,CAAC;QAC5C,OAAO,OAAO,CAAC,KAAK,IAAI,OAAO,CAAC,OAAO,CAAC;IAC1C,CAAC;IACD,QAAQ;QACN,IAAI,IAAI,CAAC,UAAU,CAAC,OAAO,EAAE;YAC3B,wEAAiB,CAAC,IAAI,CAAC,UAAU,CAAC;YAClC,OAAO,IAAI;SACZ;aAAM;YACL,IAAI,IAAI,CAAC,MAAM,EAAE;gBACf,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,MAAM,CAAC;aAC3B;iBAAM;gBACL,IAAI,CAAC,QAAQ,EAAE;aAChB;SACF;IACH,CAAC;IAED,QAAQ;QACN,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,EAAE,IAAI,EAAE,0EAAqB,EAAE,CAAC;IACxD,CAAC;IAED,QAAQ,CAAC,EAAG;QACV,MAAM,SAAS,GAAG,IAAI,CAAC,UAAU,CAAC,KAAK;QACvC,IAAI,MAAM,GAAG,IAAI,CAAC,OAAO,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,WAAW,IAAI,SAAS,CAAC,YAAY,CAAC;QACtF,IAAI,CAAC,MAAM,EAAE;YACX,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,yHAAyH,EAAE,SAAS,CAAC;YAChK,OAAO,KAAK;SACb;QACD,IAAI,QAAQ,GAAG;YACb,YAAY,EAAE,SAAS,CAAC,YAAY;YACpC,EAAE,EAAE,EAAE,IAAI,IAAI;YACd,gBAAgB,EAAE,SAAS,CAAC,gBAAgB;YAC5C,kBAAkB,EAAE,SAAS,CAAC,kBAAkB;YAChD,aAAa,EAAE,SAAS,CAAC,aAAa;YACtC,gBAAgB,EAAE,SAAS,CAAC,gBAAgB;YAC5C,WAAW,EAAE,SAAS,CAAC,WAAW;YAClC,YAAY,EAAE;gBACZ,OAAO,EAAE,IAAI,CAAC,IAAI,CAAC,gBAAgB,CAAC,EAAE,IAAI,CAAC;gBAC3C,UAAU,EAAE,IAAI,CAAC,WAAW,CAAC,gBAAgB,CAAC,UAAU,IAAI,CAAC;gBAC7D,YAAY,EAAE,IAAI;gBAClB,OAAO,EAAE,CAAC,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,CAAC,GAAG,EAAE;gBAC9E,WAAW,EAAE,IAAI,CAAC,UAAU;gBAC5B,SAAS,EAAE,IAAI,CAAC,WAAW,CAAC,aAAa,CAAC,EAAE;gBAC5C,WAAW,EAAE,IAAI,CAAC,WAAW,CAAC,WAAW;gBACzC,MAAM,EAAE,IAAI,CAAC,WAAW,CAAC,cAAc,IAAI,IAAI;gBAC/C,YAAY;gBACZ,IAAI,EAAE,IAAI,CAAC,WAAW,CAAC,IAAI;aAC5B;YACD,UAAU,EAAE,IAAI,CAAC,WAAW;YAC5B,mBAAmB,EAAE,SAAS,CAAC,mBAAmB;SACnD;QACD,yBAAyB;QACzB,IAAI,CAAC,EAAE,EAAE;YACP,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,SAAS,EAAE,CAAC,IAAI,CAAC,CAAC,GAAQ,EAAE,EAAE;gBAC9D,IAAI,GAAG,EAAE;oBACP,IAAI,CAAC,MAAM,GAAG,GAAG,CAAC,EAAE;oBACpB,IAAI,CAAC,WAAW,GAAG,GAAG,CAAC,UAAU;oBACjC,IAAI,CAAC,cAAc,EAAE;oBACrB,IAAI,CAAC,SAAS,CAAC,YAAY,CAAC,6DAAY,CAAC,iCAAK,EAAE,EAAE,GAAG,CAAC,EAAE,IAAK,QAAQ,KAAE,MAAM,EAAE,IAAI,CAAC,MAAM,GAAE;oBAC5F,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,EAAE,IAAI,EAAE,0EAAqB,EAAE,IAAI,oBAAO,GAAG,CAAE,EAAE,CAAC;iBACzE;YACH,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;SACnB;aAAM;YACL,IAAI,CAAC,aAAa,CAAC,UAAU,CAAC,QAAQ,CAAC,CAAC,SAAS,EAAE,CAAC,IAAI,CAAC,CAAC,GAAQ,EAAE,EAAE;gBACpE,IAAI,GAAG,EAAE;oBACP,IAAI,CAAC,MAAM,GAAG,GAAG,CAAC,EAAE;oBACpB,IAAI,CAAC,cAAc,EAAE;oBACrB,IAAI,CAAC,SAAS,CAAC,YAAY,CAAC,6DAAY,CAAC,iCAAK,EAAE,EAAE,GAAG,CAAC,EAAE,IAAK,QAAQ,KAAE,MAAM,EAAE,IAAI,CAAC,MAAM,GAAE;oBAC5F,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,EAAE,IAAI,EAAE,0EAAqB,EAAE,IAAI,oBAAO,GAAG,CAAE,EAAE,CAAC;iBACzE;YACH,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;SACnB;IAEH,CAAC;IAEK,cAAc;;YAClB,MAAM,IAAI,CAAC,YAAY,EAAE,CAAC,SAAS,EAAE;YACrC,MAAM,IAAI,CAAC,SAAS,EAAE,CAAC,SAAS,EAAE;YAClC,yDAAyD;QAC3D,CAAC;KAAA;IACD,gCAAgC;IAChC,qBAAqB;IACrB,MAAM;IACN,UAAU,CAAC,UAAmB,KAAK;QACjC,sBAAsB;QACtB,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;QAE9B,IAAI,IAAI,CAAC,WAAW,IAAI,IAAI,CAAC,KAAK,EAAE;YAClC,IAAI,KAAK,GAAG,OAAO,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,WAAW,IAAI,IAAI,CAAC,KAAK,CAAC;YACnE,IAAI,CAAC,KAAK;gBAAE,OAAO,KAAK;YACxB,IAAI,CAAC,aAAa,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,SAAS,EAAE,CAAC,IAAI,CAAC,CAAC,GAAQ,EAAE,EAAE;gBAC7D,iBAAiB;gBACjB,IAAI,GAAG,EAAE;oBACP,IAAI,CAAC,OAAO,mCAAQ,GAAG,KAAE,EAAE,EAAE,IAAI,GAAE;oBACnC,IAAI,CAAC,MAAM,GAAG,KAAK,IAAI,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC,IAAI;oBACvD,IAAI,CAAC,QAAQ,EAAE;oBACf,IAAI,CAAC,kBAAkB,EAAE;iBAC1B;qBAAM;oBACL,IAAI,CAAC,OAAO,IAAI,KAAK,IAAI,IAAI,CAAC,KAAK,EAAE;wBACnC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC;wBACnB,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC;qBACtB;iBACF;YACH,CAAC,CAAC;SACH;IACH,CAAC;IAED,kBAAkB;QAChB,IAAI,CAAC,UAAU,CAAC,UAAU,CAAC;YACzB,kBAAkB,EAAE,mCAAM,CAAC,IAAI,CAAC,OAAO,CAAC,kBAAkB,CAAC;YAC3D,gBAAgB,EAAE,mCAAM,CAAC,IAAI,CAAC,OAAO,CAAC,gBAAgB,CAAC;YACvD,WAAW,EAAE,mCAAM,CAAC,IAAI,CAAC,OAAO,CAAC,WAAW,CAAC;YAC7C,YAAY,EAAE,IAAI,CAAC,OAAO,CAAC,YAAY;YACvC,gBAAgB,EAAE,IAAI,CAAC,OAAO,CAAC,gBAAgB;YAC/C,mBAAmB,EAAE,IAAI,CAAC,OAAO,CAAC,mBAAmB;YACrD,aAAa,EAAE,IAAI,CAAC,OAAO,CAAC,aAAa;SAC1C,CAAC;QACF,IAAI,CAAC,aAAa,EAAE;IACtB,CAAC;IAED,YAAY;QACV,IAAI,YAAY,GAAG,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,YAAY,CAAC,KAAK;QAC9D,IAAI,KAAK,GAAG,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,mBAAmB,CAAC,KAAK;QAC9D,IAAI,MAAM,GAAG,IAAI,CAAC,OAAO,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,WAAW,IAAI,YAAY,CAAC;QAC5E,IAAI,MAAM,EAAE;YACV,IAAI,QAAQ,GAAG;gBACb,UAAU,EAAE,MAAM,CAAC,EAAE;gBACrB,WAAW,EAAE,IAAI,CAAC,WAAW;gBAC7B,UAAU,EAAE,KAAK;gBACjB,IAAI,EAAE,IAAI;gBACV,OAAO,EAAE,IAAI;aACd;YACD,OAAO,IAAI,CAAC,kBAAkB,CAAC,SAAS,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,IAAI,CAAC,0DAAS,CAAC,CAAC,CAAM,EAAE,EAAE;gBACnF,yBAAyB;gBACzB,OAAO,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,QAAQ,CAAC;YAC/C,CAAC,CAAC,CAAC;YACH,6BAA6B;YAC7B,eAAe;YAEf,MAAM;YACN,KAAK;SACN;QACD,OAAO,yCAAE,CAAC,EAAE,CAAC;IACf,CAAC;IAEK,QAAQ,CAAC,UAAmB,KAAK;;YACrC,IAAI,IAAI,CAAC,WAAW,IAAI,IAAI,CAAC,KAAK,EAAE;gBAClC,IAAI,SAAS,GAAG,IAAI;gBACpB,IAAI,KAAK,GAAG,OAAO,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,WAAW,IAAI,IAAI,CAAC,KAAK,CAAC;gBACnE,IAAI,CAAC,KAAK;oBAAE,OAAO,KAAK;gBACxB,KAAK,MAAM,IAAI,IAAI,IAAI,CAAC,OAAO,CAAC,MAAM,EAAE;oBACtC,IAAI,QAAQ,GAAQ,EAAE,CAAC;oBACvB,IAAI;wBACF,QAAQ,GAAG,MAAM,IAAI,CAAC,eAAe,CAAC,MAAM,CAAC,IAAI,CAAC,EAAE,EAAE,KAAK,CAAC,CAAC,SAAS,EAAE;qBACzE;oBAAC,OAAO,KAAK,EAAE;qBACf;oBACD,IAAI,QAAQ,EAAE;wBACZ,SAAS,GAAG,KAAK;wBACjB,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,EAAE,GAAG,KAAK,CAAC,GAAG,QAAQ,CAAC,UAAU,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,KAAK;wBACjE,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,EAAE,GAAG,OAAO,CAAC,GAAG,QAAQ,CAAC,UAAU;qBACrD;yBAAM;wBACL,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,EAAE,GAAG,KAAK,CAAC,GAAG,KAAK;wBACpC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,EAAE,GAAG,OAAO,CAAC,GAAG,IAAI;qBACtC;iBAEF;gBACD,sDAAsD;gBACtD,wBAAwB;gBACxB,WAAW;gBACX,IAAI,CAAC,GAAG,CAAC,aAAa,EAAE;gBACxB,IAAI;aACL;QACH,CAAC;KAAA;IAGD,SAAS;QACP,MAAM,SAAS,GAAG,IAAI,CAAC,UAAU,CAAC,KAAK;QACvC,OAAO,IAAI,CAAC,eAAe,CAAC,SAAS,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,IAAI,CAAC,yDAAQ,CAAC,CAAC,CAAM,EAAE,EAAE;YAC/E,gDAAgD;YAChD,OAAO,+CAAQ,CAAC,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,MAAM,CAAC,EAAE;gBACzC,IAAI,SAAS,CAAC,YAAY,IAAI,kBAAkB,EAAE;oBAChD,IAAI,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,EAAE,GAAG,KAAK,CAAC,EAAE;wBAClC,IAAI,QAAQ,GAAG;4BACb,OAAO,EAAE,MAAM,CAAC,EAAE;4BAClB,WAAW,EAAE,IAAI,CAAC,WAAW;4BAC7B,UAAU,EAAE,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,EAAE,GAAG,OAAO,CAAC;4BAC5C,IAAI,EAAE,IAAI;4BACV,OAAO,EAAE,IAAI;yBACd;wBACD,OAAO,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,QAAQ,CAAC;qBAC3C;yBAAM;wBACL,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,EAAE,GAAG,KAAK,CAAC,GAAG,KAAK;wBACtC,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,EAAE,GAAG,OAAO,CAAC,GAAG,CAAC;wBACpC,OAAO,yCAAE,CAAC,IAAI,CAAC;qBAChB;iBACF;qBAAM;oBACL,OAAO,yCAAE,CAAC,IAAI,CAAC;iBAChB;YACH,CAAC,CAAC,CAAC;QACL,CAAC,CAAC,CAAC;IACL,CAAC;CACF;;YAhXQ,wDAAW;YAWX,wFAAkB;YALlB,sDAAW;YAQX,0FAAoB;YAVpB,2EAAqB;YAMrB,kFAAe;YAKf,wFAAkB;YAGlB,2FAAY;YAnBZ,6DAAiB;;;sBAqCvB,iDAAK;uBACL,iDAAK;0BACL,iDAAK;yBACL,iDAAK;0BACL,kDAAM;;AANI,mBAAmB;IAX/B,yDAAS,CAAC;QACT,QAAQ,EAAE,iBAAiB;QAC3B,2KAA2C;QAE3C,SAAS,EAAE;YACT,EAAE,OAAO,EAAE,uEAAc,EAAE,QAAQ,EAAE,yDAAa,EAAE;YACpD,EAAE,OAAO,EAAE,+EAAsB,EAAE,QAAQ,EAAE,qEAAyB,EAAE;YACxE,EAAE,OAAO,EAAE,gEAAW,EAAE,QAAQ,EAAE,gFAAiB,EAAE,IAAI,EAAE,CAAC,oEAAe,CAAC,EAAE;YAC9E,EAAE,OAAO,EAAE,qEAAgB,EAAE,QAAQ,EAAE,sDAAU,EAAE;SACpD;;KACF,CAAC;GACW,mBAAmB,CA8U/B;AA9U+B;;;;;;;;;;;;;;;ACjBhC,IAAY,gBAGX;AAHD,WAAY,gBAAgB;IAC1B,iCAAa;IACb,iCAAa;AACf,CAAC,EAHW,gBAAgB,KAAhB,gBAAgB,QAG3B;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AClB2D;AAIrD,MAAM,YAAY,GAAG;IAC1B;QACE,EAAE,EAAE,qBAAqB;QACzB,IAAI,EAAE,2EAAiB;QACvB,SAAS,EAAE,OAAO;QAClB,SAAS,EAAE,OAAO;QAClB,QAAQ,EAAE,MAAM;QAChB,SAAS,EAAE,OAAO;QAClB,QAAQ,EAAE,cAAc;KACzB;IACD;QACE,EAAE,EAAE,wBAAwB;QAC5B,IAAI,EAAE,2EAAiB;QACvB,SAAS,EAAE,UAAU;QACrB,SAAS,EAAE,UAAU;QACrB,QAAQ,EAAE,MAAM;QAChB,SAAS,EAAE,UAAU;QACrB,QAAQ,EAAE,oBAAoB;KAC/B;IACD;QACE,EAAE,EAAE,sBAAsB;QAC1B,IAAI,EAAE,2EAAiB;QACvB,SAAS,EAAE,gBAAgB;QAC3B,SAAS,EAAE,sBAAsB;QACjC,QAAQ,EAAE,MAAM;QAChB,SAAS,EAAE,QAAQ;QACnB,QAAQ,EAAE,cAAc;KACzB;IACD;QACE,EAAE,EAAE,sBAAsB;QAC1B,IAAI,EAAE,2EAAiB;QACvB,SAAS,EAAE,gBAAgB;QAC3B,SAAS,EAAE,oCAAoC;QAC/C,QAAQ,EAAE,MAAM;QAChB,SAAS,EAAE,QAAQ;QACnB,QAAQ,EAAE,cAAc;KACzB;IACD;QACE,EAAE,EAAE,sBAAsB;QAC1B,IAAI,EAAE,2EAAiB;QACvB,SAAS,EAAE,mBAAmB;QAC9B,SAAS,EAAE,mBAAmB;QAC9B,QAAQ,EAAE,MAAM;QAChB,SAAS,EAAE,QAAQ;QACnB,QAAQ,EAAE,cAAc;KACzB;IACD;QACE,EAAE,EAAE,sBAAsB;QAC1B,IAAI,EAAE,2EAAiB;QACvB,SAAS,EAAE,wBAAwB;QACnC,SAAS,EAAE,wBAAwB;QACnC,QAAQ,EAAE,MAAM;QAChB,SAAS,EAAE,QAAQ;QACnB,QAAQ,EAAE,cAAc;KACzB;IACD;QACE,EAAE,EAAE,sBAAsB;QAC1B,IAAI,EAAE,2EAAiB;QACvB,SAAS,EAAE,gBAAgB;QAC3B,SAAS,EAAE,qBAAqB;QAChC,QAAQ,EAAE,MAAM;QAChB,SAAS,EAAE,QAAQ;QACnB,QAAQ,EAAE,cAAc;KACzB;IACD;QACE,EAAE,EAAE,sBAAsB;QAC1B,IAAI,EAAE,2EAAiB;QACvB,SAAS,EAAE,aAAa;QACxB,SAAS,EAAE,kBAAkB;QAC7B,QAAQ,EAAE,MAAM;QAChB,SAAS,EAAE,QAAQ;QACnB,QAAQ,EAAE,cAAc;KACzB;IACD;QACE,EAAE,EAAE,sBAAsB;QAC1B,IAAI,EAAE,2EAAiB;QACvB,SAAS,EAAE,sBAAsB;QACjC,SAAS,EAAE,gCAAgC;QAC3C,QAAQ,EAAE,MAAM;QAChB,SAAS,EAAE,QAAQ;QACnB,QAAQ,EAAE,cAAc;KACzB;CACF;AAEM,MAAM,aAAa,GAAG;IAC3B;QACE,EAAE,EAAE,sBAAsB;QAC1B,IAAI,EAAE,2EAAiB;QACvB,SAAS,EAAE,wBAAwB;QACnC,QAAQ,EAAE,MAAM;QAChB,SAAS,EAAE,QAAQ;QACnB,QAAQ,EAAE,cAAc;KACzB;CACF;AAGM,MAAM,YAAY,GAAG,sBAAsB;AAC3C,MAAM,UAAU,GAAG,sBAAsB;AACzC,MAAM,UAAU,GAAG,sBAAsB;AACzC,MAAM,kBAAkB,GAAG,sBAAsB;AACjD,MAAM,eAAe,GAAG,sBAAsB;AAC9C,MAAM,cAAc,GAAG,wBAAwB;AAC/C,MAAM,WAAW,GAAG,qBAAqB;AACzC,MAAM,eAAe,GAAG,sBAAsB;AAC9C,MAAM,mBAAmB,GAAG,sBAAsB;AAClD,MAAM,WAAW,GAAG,sBAAsB;AAC1C,MAAM,eAAe,GAAG,sBAAsB;AAGrD,IAAY,gBAKX;AALD,WAAY,gBAAgB;IAC1B,uCAAmB;IACnB,yCAAqB;IACrB,kDAA8B;IAC9B,yCAAqB;AACvB,CAAC,EALW,gBAAgB,KAAhB,gBAAgB,QAK3B;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACzHsK;AAIhG;AACS;AACG;AACb;AAChB;AACc;AACc;AACX;AACuB;AACpB;AAE1E,0DAA0D;AAC1D,MAAM,gBAAgB,GAAG;IACvB,qBAAqB,EAAE,gFAAkB;IACzC,wBAAwB,EAAE,yFAAqB;IAC/C,sBAAsB,EAAE,mFAAmB;IAC3C,sBAAsB,EAAE,gFAAkB;IAC1C,sBAAsB,EAAE,4FAAsB;IAC9C,uDAAuD;IACvD,sBAAsB,EAAE,uGAAyB;IACjD,sBAAsB,EAAE,2FAAiB;IACzC,sBAAsB,EAAE,6EAAiB;IACzC,sBAAsB,EAAE,+DAAa;IACrC,sBAAsB,EAAE,+EAAiB;CAC1C;IAIY,mBAAmB,SAAnB,mBAAmB;IAU9B,YACU,QAAkC,EAClC,SAA2B;QAD3B,aAAQ,GAAR,QAAQ,CAA0B;QAClC,cAAS,GAAT,SAAS,CAAkB;QAL3B,aAAQ,GAAG,IAAI,wDAAY,EAAoB,CAAC;IAMtD,CAAC;IACL,QAAQ;QACN,IAAI,CAAC,QAAQ,EAAE;IAEjB,CAAC;IAED,QAAQ;QACN,IAAI,CAAC,SAAS,CAAC,KAAK,EAAE;QACtB,MAAM,SAAS,GAAG,IAAI,CAAC,QAAQ,CAAC,uBAAuB,CAAc,gBAAgB,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC;QACpG,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC,eAAe,CAAC,SAAS,CAAC,CAAC;QAC3D,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,OAAO,GAAG,IAAI,CAAC,OAAO;QAC9C,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,QAAQ,GAAG,IAAI,CAAC,QAAQ;QAChD,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,WAAW,GAAG,IAAI,CAAC,WAAW;QACtD,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,UAAU,GAAG,IAAI,CAAC,UAAU;QAEpD,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,WAAW,CAAC,SAAS,CAAC,CAAC,GAAG,EAAE,EAAE;YACpD,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,GAAG,CAAC;QACzB,CAAC,CAAC;QACF,iCAAiC;IACnC,CAAC;CAEF;;YAlE2B,oEAAwB;YAA2E,4DAAgB;;;qBAkC5I,iDAAK;sBACL,iDAAK;0BACL,iDAAK;yBACL,iDAAK;uBACL,iDAAK;uBACL,kDAAM;;AAPI,mBAAmB;IAH/B,yDAAS,CAAC;QACT,QAAQ,EAAE,cAAc;KACzB,CAAC;GACW,mBAAmB,CAkC/B;AAlC+B;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AChCS;AACM;AACmB;AAC0B;AACZ;AACT;AACG;AACX;AACN;AACW;AACG;AACY;AACgB;AAChD;AAC2C;AACjC;AACM;AACV;AACS;AACmC;AACe;AAC9D;AAC4C;AAC5B;AACV;AACqE;AAC/C;AACd;AACgB;AACnC;AACqB;AAChB;IAsBzC,iBAAiB,SAAjB,iBAAiB;CAAI;AAArB,iBAAiB;IArB7B,wDAAQ,CAAC;QACR,YAAY,EAAE,CAAC,yFAAqB,EAAE,gFAAkB,EAAE,mFAAmB,EAAE,wEAAmB,EAAE,gFAAkB,EAAE,4FAAsB,EAAE,4GAA0B,EAAE,uGAAyB,EAAE,4FAAiB,EAAE,8EAAiB,EAAE,8GAA4B,EAAE,8HAA0B,EAAE,4GAA2B,EAAE,sEAAe,EAAE,2IAA8B,EAAC,8FAAmB,EAAC,gEAAa,EAAC,gFAAiB,CAAC;QACxa,OAAO,EAAE,CAAC,yFAAqB,EAAE,gFAAkB,EAAE,mFAAmB,EAAE,wEAAmB,EAAE,gFAAkB,EAAE,4FAAsB,EAAE,4GAA0B,EAAE,uGAAyB,EAAE,8GAA4B,EAAE,4FAAiB,EAAE,8EAAiB,EAAE,8HAA0B,EAAE,4GAA2B,EAAC,8FAAmB,EAAC,gEAAa,EAAC,gFAAiB,CAAC;QAClX,OAAO,EAAE;YACP,0DAAY;YACZ,wDAAW;YACX,wEAAe;YACf,gEAAmB;YACnB,uEAAc;YACd,oEAAc;YACd,4EAAmB;YACnB,iEAAc;YACd,iFAAoB;YACpB,8DAAkB;YAClB,8EAAmB;YACnB,wEAAmB;YACnB,oEAAc;YACd,6EAAkB;YAClB,4DAAiB;SAClB;KACF,CAAC;GACW,iBAAiB,CAAI;AAAJ;;;;;;;;;;;;;;;;;;;;;ACrDoB;AACP;AAC2B;AACO;AAG7E,MAAM,qBAAqB,GAAG,GAAG,yEAAkB,oBAAoB,CAAC;IAK3D,kBAAkB,SAAlB,kBAAmB,SAAQ,4EAAwC;IAC9E,YAAsB,UAAsB;QAC1C,KAAK,CAAC,UAAU,EAAE,qBAAqB,CAAC,CAAC;QADrB,eAAU,GAAV,UAAU,CAAY;IAE5C,CAAC;IAGD,cAAc,CAAC,aAAqB,EAAE,oBAA4B,EAAC,cAAqB;QACtF,OAAO,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,qBAAqB,GAAG,mBAAmB,GAAG,aAAa,GAAG,wBAAwB,GAAG,oBAAoB,GAAI,kBAAkB,GAAG,cAAc,CAAC;IAClL,CAAC;CACF;;YApBQ,4DAAU;;AAWN,kBAAkB;IAH9B,yDAAU,CAAC;QACV,UAAU,EAAE,MAAM;KACnB,CAAC;GACW,kBAAkB,CAS9B;AAT8B;;;;;;;;;;;;;;;;;;;;;ACXmB;AACP;AAC2B;AACO;AAG7E,MAAM,4BAA4B,GAAG,GAAG,yEAAkB,mCAAmC,CAAC;AAC9F,MAAM,iCAAiC,GAAG,GAAG,yEAAkB,oBAAoB,CAAC;IAKvE,0BAA0B,SAA1B,0BAA2B,SAAQ,4EAAmD;IACjG,YAAsB,UAAsB;QAC1C,KAAK,CAAC,UAAU,EAAE,4BAA4B,CAAC,CAAC;QAD5B,eAAU,GAAV,UAAU,CAAY;IAE5C,CAAC;IACD,4CAA4C;IAE5C,WAAW,CAAC,MAAc;QACxB,OAAO,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,iCAAiC,GAAG,MAAM,GAAG,uBAAuB,CAAC;IAClG,CAAC;IAED,UAAU,CAAC,MAAc;QACvB,OAAO,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,4BAA4B,GAAG,mBAAmB,GAAG,MAAM,CAAC;IAEzF,CAAC;CACF;;YA1BQ,4DAAU;;AAYN,0BAA0B;IAHtC,yDAAU,CAAC;QACV,UAAU,EAAE,MAAM;KACnB,CAAC;GACW,0BAA0B,CActC;AAdsC;;;;;;;;;;;;;;;;;ACZ6E;AAC7G,MAAM,eAAe,GAAe;IACzC;QACE,KAAK,EAAE,sBAAsB;QAC7B,IAAI,EAAE,+GAAa;QACnB,KAAK,EAAE,aAAa;QACpB,MAAM,EAAC,IAAI;KACZ;IACD;QACE,KAAK,EAAE,kBAAkB;QACzB,IAAI,EAAE,+GAAa;QACnB,KAAK,EAAE,gBAAgB;KACxB;IACD;QACE,KAAK,EAAE,YAAY;QACnB,IAAI,EAAE,+GAAa;QACnB,KAAK,EAAE,YAAY;KACpB;IACD;QACE,KAAK,EAAE,OAAO;QACd,IAAI,EAAE,+GAAa;QACnB,KAAK,EAAE,OAAO;KACf;IACD;QACE,KAAK,EAAE,cAAc;QACrB,IAAI,EAAE,+GAAa;QACnB,KAAK,EAAE,aAAa;KACrB;IACD;QACE,KAAK,EAAE,SAAS;QAChB,IAAI,EAAE,gHAAc;QACpB,KAAK,EAAE,SAAS;QAChB,GAAG,EAAE;YACH,IAAI,EAAE,IAAI;YACV,IAAI,EAAC,IAAI;SACV;KACF;CAEF;AAEM,MAAM,qBAAqB,GAAa;IAC7C,aAAa;IACb,gBAAgB;IAChB,YAAY;IACZ,OAAO;IACP,aAAa;CACd;;;;;;;;;;;;;;;;;;;;;;;;;;;AC9CsF;AACjC;AACwF;AAClD;AACM;AACH;IAOlF,4BAA4B,SAA5B,4BAA4B;IAOvC,YAAoB,0BAAsD,EAAU,YAAsB,EAAU,GAAsB;QAAtH,+BAA0B,GAA1B,0BAA0B,CAA4B;QAAU,iBAAY,GAAZ,YAAY,CAAU;QAAU,QAAG,GAAH,GAAG,CAAmB;QALjI,WAAM,GAAW,CAAC;QAC3B,gBAAW,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,oFAAe,CAAC,CAAC,CAAC;QAC1D,qBAAgB,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,0FAAqB,CAAC,CAAC,CAAC;QACrE,YAAO,GAAY,KAAK;QACxB,gBAAW,GAAU,EAAE;IACuH,CAAC;IAE/I,QAAQ;QACN,IAAI,CAAC,OAAO,EAAE;IAChB,CAAC;IACD,OAAO;QACL,IAAI,CAAC,0BAA0B,CAAC,WAAW,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,SAAS,EAAE,CAAC,IAAI,CAAC,CAAC,GAAQ,EAAE,EAAE;YACrF,IAAI,GAAG,EAAE;gBACP,IAAI,CAAC,WAAW,GAAG,GAAG;gBACtB,IAAI,CAAC,GAAG,CAAC,aAAa,EAAE;aACzB;QACH,CAAC,CAAC;IACJ,CAAC;IACD,GAAG,CAAC,IAAI,EAAE,IAAK;QACb,IAAI,QAAQ,CAAC;QACb,QAAQ,GAAG,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,wGAA0B,EAAE,EAAE,IAAI,EAAE,IAAI,EAAE,QAAQ,EAAE,KAAK,EAAE,CAAC,CAAC;QAC/F,QAAQ,CAAC,iBAAiB,CAAC,IAAI,GAAG,IAAI;QACtC,QAAQ,CAAC,iBAAiB,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM;QAC/C,QAAQ,CAAC,iBAAiB,CAAC,OAAO,GAAG,IAAI;QACzC,QAAQ,CAAC,MAAM,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,EAAE,CAAC,GAAG,EAAE,EAAE;YACtC,IAAI,GAAG,EAAE;gBACP,OAAO,CAAC,GAAG,CAAC,QAAQ,EAAE,GAAG,CAAC;gBAC1B,IAAI,GAAG,CAAC,IAAI,IAAI,MAAM,EAAE;oBACtB,4BAA4B;oBAC5B,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC;oBAC/B,IAAI,CAAC,GAAG,CAAC,aAAa,EAAE;iBACzB;aACF;QACH,CAAC,CAAC;IACJ,CAAC;IACD,YAAY,CAAC,IAAI,EAAE,IAAI;QACrB,OAAO,CAAC,GAAG,CAAC,MAAM,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,CAAC;QACvC,IAAI,IAAI,IAAI,QAAQ,EAAE;YACpB,IAAI,CAAC,0BAA0B,CAAC,MAAM,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,SAAS,EAAE;iBACxD,IAAI,CAAC,CAAC,GAAG,EAAE,EAAE;gBACZ,IAAI,GAAG,EAAE;oBACP,IAAI,KAAK,GAAG,IAAI,CAAC,WAAW,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,IAAI,IAAI,CAAC,EAAE,CAAC;oBAC5D,IAAI,KAAK,IAAI,CAAC,EAAE;wBACd,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC,CAAC;wBACjC,IAAI,CAAC,GAAG,CAAC,aAAa,EAAE;qBACzB;iBACF;YACH,CAAC,CAAC,CAAC;SACN;aAAM;YACL,IAAI,CAAC,GAAG,CAAC,IAAI,EAAE,IAAI,CAAC;SACrB;IACH,CAAC;CACF;;YA/DQ,qGAA0B;YAF1B,gEAAQ;YADR,4DAAiB;;;uBAavB,oDAAS,SAAC,uJAA0B;qBACpC,gDAAK;;AAFK,4BAA4B;IALxC,wDAAS,CAAC;QACT,QAAQ,EAAE,0BAA0B;QACpC,oLAAoD;;KAErD,CAAC;GACW,4BAA4B,CAsDxC;AAtDwC;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACZ4B;AACD;AACE;AACnB;AACiC;AACP;AACgB;IAOhF,0BAA0B,SAA1B,0BAA0B;IAUrC,YAAmB,KAAqB,EAAU,iBAAoC,EAAU,GAAsB,EAAU,0BAAsD,EAAU,IAAiB,EAAU,kBAAsC;QAA9O,UAAK,GAAL,KAAK,CAAgB;QAAU,sBAAiB,GAAjB,iBAAiB,CAAmB;QAAU,QAAG,GAAH,GAAG,CAAmB;QAAU,+BAA0B,GAA1B,0BAA0B,CAA4B;QAAU,SAAI,GAAJ,IAAI,CAAa;QAAU,uBAAkB,GAAlB,kBAAkB,CAAoB;QARjQ,yBAAoB,GAAQ,EAAE;QAC9B,+BAA0B,GAAU,EAAE;QACtC,gCAA2B,GAAU,EAAE;QACvC,wBAAmB,GAAU,EAAE;QAC/B,sBAAiB,GAAU,EAAE;QAC7B,SAAI,GAAW,QAAQ;QACvB,WAAM,GAAW,GAAG;IAEiP,CAAC;IAEtQ,QAAQ;QACN,IAAI,CAAC,QAAQ,EAAE;QACf,IAAI,CAAC,gBAAgB,EAAE;QACvB,IAAI,CAAC,eAAe,EAAE;QACtB,IAAI,CAAC,qBAAqB,EAAE;QAC5B,IAAI,IAAI,CAAC,IAAI,IAAI,QAAQ,EAAE;YACzB,IAAI,CAAC,QAAQ,EAAE;SAChB;aAAM;YACL,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,OAAO,CAAC;SAC5B;IAEH,CAAC;IACD,gBAAgB;QACd,IAAI,CAAC,iBAAiB;aACnB,aAAa,CAAC,gBAAgB,CAAC;aAC/B,SAAS,EAAE;aACX,IAAI,CAAC,CAAC,GAAQ,EAAE,EAAE;YACjB,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;YACjB,IAAI,GAAG,EAAE;gBACP,IAAI,CAAC,mBAAmB,GAAG,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,EAAE;oBACvC,OAAO,EAAE,IAAI,EAAE,CAAC,CAAC,MAAM,EAAE,KAAK,EAAE,CAAC,CAAC,QAAQ,EAAE,CAAC;gBAC/C,CAAC,CAAC,CAAC;gBACH,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,mBAAmB,CAAC,CAAC;gBACtC,IAAI,CAAC,GAAG,CAAC,aAAa,EAAE,CAAC;aAC1B;QACH,CAAC,CAAC,CAAC;IACP,CAAC;IACD,eAAe;QACb,IAAI,CAAC,iBAAiB;aACnB,aAAa,CAAC,eAAe,CAAC;aAC9B,SAAS,EAAE;aACX,IAAI,CAAC,CAAC,GAAQ,EAAE,EAAE;YACjB,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;YACjB,IAAI,GAAG,EAAE;gBACP,IAAI,CAAC,oBAAoB,GAAG,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,EAAE;oBACxC,OAAO,EAAE,IAAI,EAAE,CAAC,CAAC,MAAM,EAAE,KAAK,EAAE,CAAC,CAAC,QAAQ,EAAE,CAAC;gBAC/C,CAAC,CAAC,CAAC;gBACH,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,oBAAoB,CAAC,CAAC;gBACvC,IAAI,CAAC,GAAG,CAAC,aAAa,EAAE,CAAC;aAC1B;QACH,CAAC,CAAC,CAAC;IACP,CAAC;IAED,qBAAqB;QACnB,IAAI,CAAC,iBAAiB;aACnB,aAAa,CAAC,qBAAqB,CAAC;aACpC,SAAS,EAAE;aACX,IAAI,CAAC,CAAC,GAAQ,EAAE,EAAE;YACjB,IAAI,GAAG,EAAE;gBACP,IAAI,CAAC,2BAA2B,GAAG,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,EAAE;oBAC/C,OAAO,EAAE,IAAI,EAAE,CAAC,CAAC,MAAM,EAAE,KAAK,EAAE,CAAC,CAAC,QAAQ,EAAE,MAAM,EAAE,CAAC,CAAC,QAAQ,EAAE,CAAC;gBACnE,CAAC,CAAC,CAAC;gBACH,IAAI,CAAC,GAAG,CAAC,aAAa,EAAE,CAAC;aAC1B;QACH,CAAC,CAAC,CAAC;IACP,CAAC;IACD,cAAc;QACZ,IAAI,aAAa,GAAG,IAAI,CAAC,qBAAqB,CAAC,KAAK,CAAC,aAAa;QAClE,IAAI,oBAAoB,GAAG,IAAI,CAAC,qBAAqB,CAAC,KAAK,CAAC,oBAAoB;QAChF,IAAI,cAAc,GAAG,IAAI,CAAC,qBAAqB,CAAC,KAAK,CAAC,cAAc;QACpE,IAAI,CAAC,kBAAkB,CAAC,cAAc,CAAC,aAAa,EAAE,oBAAoB,EAAE,cAAc,CAAC,CAAC,SAAS,EAAE,CAAC,IAAI,CAAC,CAAC,GAAQ,EAAE,EAAE;YACxH,IAAI,GAAG,EAAE;gBACP,IAAI,CAAC,qBAAqB,CAAC,QAAQ,CAAC,WAAW,CAAC,QAAQ,CAAC,GAAG,CAAC,WAAW,CAAC;aAC1E;QACH,CAAC,CAAC;IACJ,CAAC;IAGD,QAAQ,CAAC,OAAQ;QACf,IAAI,CAAC,qBAAqB,GAAG,IAAI,qDAAS,CAAC;YACzC,aAAa,EAAE,IAAI,uDAAW,CAAC,OAAO,CAAC,CAAC,CAAC,OAAO,CAAC,aAAa,CAAC,CAAC,CAAC,EAAE,CAAC;YACpE,mBAAmB,EAAE,IAAI,uDAAW,CAAC,OAAO,CAAC,CAAC,CAAC,OAAO,CAAC,mBAAmB,CAAC,CAAC,CAAC,EAAE,CAAC;YAChF,kBAAkB,EAAE,IAAI,uDAAW,CAAC,OAAO,CAAC,CAAC,CAAC,OAAO,CAAC,kBAAkB,CAAC,CAAC,CAAC,EAAE,CAAE;YAC/E,gBAAgB,EAAE,IAAI,uDAAW,CAAC,IAAI,CAAC,MAAM,CAAC;YAC9C,EAAE,EAAE,IAAI,uDAAW,CAAC,OAAO,CAAC,CAAC,CAAC,OAAO,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC;YAC9C,oBAAoB,EAAE,IAAI,uDAAW,CAAC,OAAO,CAAC,CAAC,CAAC,OAAO,CAAC,oBAAoB,CAAC,CAAC,CAAC,EAAE,CAAC;YAClF,WAAW,EAAE,IAAI,uDAAW,CAAC,OAAO,CAAC,CAAC,CAAC,OAAO,CAAC,WAAW,CAAC,CAAC,CAAC,EAAE,CAAC;YAChE,cAAc,EAAE,IAAI,uDAAW,CAAC,OAAO,CAAC,CAAC,CAAC,OAAO,CAAC,cAAc,CAAC,CAAC,CAAC,EAAE,CAAC;SACvE,CAAC;IACJ,CAAC;IACD,iBAAiB;QAEf,IAAI,IAAI,GAAG,IAAI,CAAC,qBAAqB,CAAC,WAAW,EAAE,CAAC;QACpD,IAAI,QAAQ,mCAAQ,IAAI,KAAE,SAAS,EAAE,IAAI,CAAC,IAAI,CAAC,gBAAgB,CAAC,EAAE,GAAE;QACpE,IAAI,IAAI,CAAC,IAAI,IAAI,QAAQ,EAAE;YACzB,IAAI,CAAC,0BAA0B,CAAC,UAAU,CAAC,QAAQ,CAAC;iBACjD,SAAS,EAAE;iBACX,IAAI,CAAC,CAAC,GAAG,EAAE,EAAE;gBACZ,IAAI,GAAG,EAAE;oBACP,oBAAoB;oBACpB,IAAI,IAAI,qBAAQ,QAAQ,CAAE;oBAC1B,IAAI,aAAa,GAAG,IAAI,CAAC,qBAAqB,CAAC,KAAK,CAAC,aAAa;oBAClE,IAAI,oBAAoB,GAAG,IAAI,CAAC,qBAAqB,CAAC,KAAK,CAAC,oBAAoB;oBAChF,IAAI,cAAc,GAAG,IAAI,CAAC,qBAAqB,CAAC,KAAK,CAAC,cAAc;oBACpE,IAAI,kBAAkB,GAAG,IAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,IAAI,IAAI,aAAa,CAAC,CAAC,KAAK;oBAC1F,IAAI,yBAAyB,GAAG,IAAI,CAAC,0BAA0B,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,IAAI,IAAI,oBAAoB,CAAC,CAAC,KAAK;oBAC/G,IAAI,mBAAmB,GAAG,IAAI,CAAC,oBAAoB,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,IAAI,IAAI,cAAc,CAAC,CAAC,KAAK;oBAC7F,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,EAAE,IAAI,kCAAO,IAAI,KAAE,kBAAkB,EAAE,kBAAkB,EAAE,yBAAyB,EAAE,yBAAyB,EAAE,mBAAmB,EAAE,mBAAmB,GAAE,EAAE,IAAI,EAAE,MAAM,EAAE,CAAC;iBAChM;YACH,CAAC,CAAC,CAAC;SACN;aAAM;YACL,IAAI,CAAC,0BAA0B,CAAC,IAAI,CAAC,QAAQ,CAAC;iBAC3C,SAAS,EAAE;iBACX,IAAI,CAAC,CAAC,GAAG,EAAE,EAAE;gBACZ,IAAI,GAAG,EAAE;oBACP,QAAQ,CAAC,EAAE,GAAG,GAAG;oBACjB,IAAI,IAAI,qBAAQ,QAAQ,CAAE;oBAC1B,IAAI,aAAa,GAAG,IAAI,CAAC,qBAAqB,CAAC,KAAK,CAAC,aAAa;oBAClE,IAAI,oBAAoB,GAAG,IAAI,CAAC,qBAAqB,CAAC,KAAK,CAAC,oBAAoB;oBAChF,IAAI,cAAc,GAAG,IAAI,CAAC,qBAAqB,CAAC,KAAK,CAAC,cAAc;oBACpE,IAAI,kBAAkB,GAAG,IAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,IAAI,IAAI,aAAa,CAAC,CAAC,KAAK;oBAC1F,IAAI,yBAAyB,GAAG,IAAI,CAAC,0BAA0B,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,IAAI,IAAI,oBAAoB,CAAC,CAAC,KAAK;oBAC/G,IAAI,mBAAmB,GAAG,IAAI,CAAC,oBAAoB,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,IAAI,IAAI,cAAc,CAAC,CAAC,KAAK;oBAC7F,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,EAAE,IAAI,kCAAO,IAAI,KAAE,kBAAkB,EAAE,kBAAkB,EAAE,yBAAyB,EAAE,yBAAyB,EAAE,mBAAmB,EAAE,mBAAmB,GAAE,EAAE,IAAI,EAAE,MAAM,EAAE,CAAC;iBAChM;YACH,CAAC,CAAC,CAAC;SACN;IAEH,CAAC;IACD,WAAW;QAET,IAAI,IAAI,CAAC,qBAAqB,CAAC,KAAK,CAAC,aAAa,IAAI,OAAO,EAAE;YAC7D,IAAI,CAAC,qBAAqB,CAAC,QAAQ,CAAC,oBAAoB,CAAC,CAAC,aAAa,CAAC,CAAC,0DAAc,CAAC,EAAE,CAAC,CAAC,CAAC;YAC7F,IAAI,CAAC,qBAAqB,CAAC,QAAQ,CAAC,oBAAoB,CAAC,CAAC,sBAAsB,EAAE;SACnF;QAED,IAAI,IAAI,CAAC,qBAAqB,CAAC,KAAK,CAAC,aAAa,IAAI,OAAO,EAAE;YAC7D,IAAI,CAAC,qBAAqB,CAAC,QAAQ,CAAC,oBAAoB,CAAC,CAAC,aAAa,CAAC,CAAC,0DAAc,CAAC,EAAE,CAAC,CAAC,CAAC;YAC7F,IAAI,CAAC,qBAAqB,CAAC,QAAQ,CAAC,oBAAoB,CAAC,CAAC,sBAAsB,EAAE;SACnF;QACD,IAAI,aAAa,GAAG,IAAI,CAAC,qBAAqB,CAAC,KAAK,CAAC,aAAa;QAClE,IAAI,oBAAoB,GAAG,IAAI,CAAC,qBAAqB,CAAC,KAAK,CAAC,oBAAoB;QAChF,IAAI,cAAc,GAAG,IAAI,CAAC,qBAAqB,CAAC,KAAK,CAAC,cAAc;QACpE,IAAI,aAAa,IAAI,oBAAoB,IAAI,cAAc,EAAE;YAC3D,IAAI,CAAC,cAAc,EAAE;SACtB;IACH,CAAC;IAED,UAAU,CAAC,IAAa;QACtB,IAAI,aAAa,GAAG,IAAI,CAAC,qBAAqB,CAAC,KAAK,CAAC,aAAa;QAClE,IAAI,oBAAoB,GAAG,IAAI,CAAC,qBAAqB,CAAC,KAAK,CAAC,oBAAoB;QAChF,IAAI,cAAc,GAAG,IAAI,CAAC,qBAAqB,CAAC,KAAK,CAAC,cAAc;QACpE,IAAI,IAAI,IAAI,OAAO,EAAE;YACnB,IAAI,CAAC,0BAA0B,GAAG,IAAI,CAAC,2BAA2B,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,MAAM,IAAI,cAAc,CAAC;YAC1G,IAAI,KAAK,GAAG,IAAI,CAAC,0BAA0B,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,IAAI,IAAI,oBAAoB,CAAC;YAC1F,IAAI,KAAK,GAAG,CAAC,EAAE;gBACb,IAAI,CAAC,qBAAqB,CAAC,QAAQ,CAAC,oBAAoB,CAAC,QAAQ,CAAC,IAAI,CAAC;aACxE;SACF;QACD,IAAI,aAAa,IAAI,oBAAoB,IAAI,cAAc,EAAE;YAC3D,IAAI,CAAC,cAAc,EAAE;SACtB;IACH,CAAC;IACD,eAAe;QACb,IAAI,aAAa,GAAG,IAAI,CAAC,qBAAqB,CAAC,KAAK,CAAC,aAAa;QAClE,IAAI,oBAAoB,GAAG,IAAI,CAAC,qBAAqB,CAAC,KAAK,CAAC,oBAAoB;QAChF,IAAI,cAAc,GAAG,IAAI,CAAC,qBAAqB,CAAC,KAAK,CAAC,cAAc;QACpE,IAAI,aAAa,IAAI,oBAAoB,IAAI,cAAc,EAAE;YAC3D,IAAI,CAAC,cAAc,EAAE;SACtB;IACH,CAAC;IACD,YAAY;QACV,IAAI,CAAC,KAAK,CAAC,OAAO,EAAE;IACtB,CAAC;IACD,cAAc,CAAC,WAAmB;QAChC,MAAM,OAAO,GAAG,IAAI,CAAC,qBAAqB,CAAC,QAAQ,CAAC,WAAW,CAAC,CAAC;QACjE,OAAO,OAAO,CAAC,KAAK,IAAI,CAAC,OAAO,CAAC,KAAK,IAAI,OAAO,CAAC,OAAO,CAAC,CAAC;IAC7D,CAAC;IAED,gBAAgB,CAAC,WAAmB;QAClC,MAAM,OAAO,GAAG,IAAI,CAAC,qBAAqB,CAAC,QAAQ,CAAC,WAAW,CAAC,CAAC;QACjE,OAAO,OAAO,CAAC,OAAO,IAAI,CAAC,OAAO,CAAC,KAAK,IAAI,OAAO,CAAC,OAAO,CAAC,CAAC;IAC/D,CAAC;IAED,eAAe,CAAC,UAAU,EAAE,WAAW;QACrC,MAAM,OAAO,GAAG,IAAI,CAAC,qBAAqB,CAAC,QAAQ,CAAC,WAAW,CAAC,CAAC;QACjE,OAAO,OAAO,CAAC,QAAQ,CAAC,UAAU,CAAC,IAAI,CAAC,OAAO,CAAC,KAAK,IAAI,OAAO,CAAC,OAAO,CAAC,CAAC;IAC5E,CAAC;IAED,gBAAgB,CAAC,WAAW;QAC1B,MAAM,OAAO,GAAG,IAAI,CAAC,qBAAqB,CAAC,QAAQ,CAAC,WAAW,CAAC,CAAC;QACjE,OAAO,OAAO,CAAC,KAAK,IAAI,OAAO,CAAC,OAAO,CAAC;IAC1C,CAAC;CACF;;YA9MQ,sEAAc;YAEd,8FAAiB;YAJjB,4DAAiB;YAMjB,qGAA0B;YAH1B,6DAAW;YAEX,qFAAkB;;AAQd,0BAA0B;IALtC,wDAAS,CAAC;QACT,QAAQ,EAAE,wBAAwB;QAClC,kLAAkD;;KAEnD,CAAC;GACW,0BAA0B,CAmMtC;AAnMsC;;;;;;;;;;;;;;;;;;;;;;ACbuC;IAOjE,eAAe,SAAf,eAAe;IAM1B;QALO,aAAQ,GAAS,KAAK;QACtB,UAAK,GAAS,KAAK;QACnB,UAAK,GAAS,KAAK;QACnB,cAAS,GAAC,EAAE;QAInB,YAAO,GAAG,IAAI,uDAAY,EAAO,CAAC;IAFlB,CAAC;IAIjB,QAAQ;IACR,CAAC;IAED,YAAY,CAAC,IAAI,EAAC,IAAI,EAAC,MAAM;QAC3B,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC;YAChB,GAAG,EAAE,IAAI;YACT,IAAI,EAAE,IAAI;YACV,MAAM,EAAC,MAAM;SACd,CAAC,CAAC;IACL,CAAC;IAGD,WAAW;QACT,IAAI,CAAC,OAAO,CAAC,WAAW,EAAE,CAAC;IAC7B,CAAC;CAEF;;;uBAzBA,gDAAK;oBACL,gDAAK;oBACL,gDAAK;wBACL,gDAAK;sBAGH,iDAAM;;AAPI,eAAe;IAL3B,wDAAS,CAAC;QACT,QAAQ,EAAE,YAAY;QACtB,sKAAsC;;KAEvC,CAAC;GACW,eAAe,CA0B3B;AA1B2B;;;;;;;;;;;;;;;ACP5B,iEAAe,wIAAwI,kcAAkc,gUAAgU,KAAK,mBAAmB,gNAAgN,wxBAAwxB,2BAA2B,qBAAqB,+FAA+F,2eAA2e,2BAA2B,0fAA0f,0HAA0H,geAAge;;;;;;;;;;;;;;ACAloH,iEAAe,8KAA8K,aAAa,MAAM,kwDAAkwD,2EAA2E,k4CAAk4C,2EAA2E,+7DAA+7D,2EAA2E,utBAAutB,2EAA2E,4rBAA4rB;;;;;;;;;;;;;;ACAl9N,iEAAe,gFAAgF,8JAA8J,2BAA2B,UAAU,gPAAgP,6zBAA6zB,+NAA+N,KAAK,uBAAuB,uRAAuR,uyBAAuyB,6NAA6N,KAAK,qBAAqB,2LAA2L,sxBAAsxB,8MAA8M,KAAK,qBAAqB,kIAAkI;;;;;;;;;;;;;;ACA1rI,iEAAe,ycAAyc,oEAAoE,sBAAsB,oZAAoZ,+HAA+H,8bAA8b,gCAAgC,kdAAkd,oCAAoC,sBAAsB,2IAA2I,4bAA4b;;;;;;;;;;;;;;ACAtnF,iEAAe,mqBAAmqB;;;;;;;;;;;;;;ACAlrB,iEAAe,yXAAyX,8BAA8B,sBAAsB,mBAAmB,UAAU,2CAA2C,KAAK,sCAAsC,2CAA2C,KAAK,4BAA4B,2CAA2C,KAAK,yCAAyC,2CAA2C,KAAK,0CAA0C,ygBAAygB;;;;;;;;;;;;;;ACAvzC,iEAAe,mqBAAmqB;;;;;;;;;;;;;;ACAlrB,iEAAe,oXAAoX,8BAA8B,sBAAsB,mBAAmB,UAAU,2CAA2C,KAAK,sCAAsC,2CAA2C,KAAK,uBAAuB,2CAA2C,KAAK,yCAAyC,2CAA2C,KAAK,qCAAqC,qfAAqf;;;;;;;;;;;;;;ACApxC,iEAAe,+mBAA+mB,0BAA0B,iCAAiC,sBAAsB,iCAAiC,uBAAuB,q5BAAq5B;;;;;;;;;;;;;;ACA5pD,iEAAe,kPAAkP,gBAAgB,8KAA8K,gBAAgB,uLAAuL,w8YAAw8Y,2EAA2E,8qBAA8qB,2EAA2E,gmEAAgmE;;;;;;;;;;;;;;ACAl/f,iEAAe,wHAAwH,+gDAA+gD,ynEAAynE;;;;;;;;;;;;;;ACA/wH,iEAAe,wPAAwP,cAAc,mBAAmB,aAAa,gPAAgP,uEAAuE,oEAAoE,mIAAmI,6BAA6B,KAAK,mBAAmB,uBAAuB,mBAAmB,oBAAoB,mBAAmB,qCAAqC,kHAAkH,iBAAiB,mBAAmB,iBAAiB,mBAAmB,0BAA0B,oWAAoW;;;;;;;;;;;;;;ACAthD,iEAAe,wHAAwH,+8GAA+8G,0TAA0T,kBAAkB,6GAA6G,iBAAiB,wgGAAwgG,OAAO,MAAM,yBAAyB,0pBAA0pB,SAAS,mIAAmI,kBAAkB,4eAA4e,WAAW,uBAAuB,kBAAkB,MAAM,kCAAkC,uBAAuB,eAAe,uBAAuB,kDAAkD,uBAAuB,wBAAwB,oHAAoH,mBAAmB,MAAM,mCAAmC,iEAAiE,8BAA8B,8eAA8e;;;;;;;;;;;;;;ACAz2S,iEAAe,wHAAwH,w7CAAw7C,imFAAimF,OAAO,MAAM,wBAAwB,0pBAA0pB,SAAS,kNAAkN,kBAAkB,2MAA2M,uDAAuD,kBAAkB,qKAAqK,kBAAkB,gFAAgF,iBAAiB,yYAAyY,iBAAiB,4IAA4I,OAAO,MAAM,wBAAwB,8kBAA8kB;;;;;;;;;;;;;;ACAjxN,iEAAe,4DAA4D,iBAAiB,k9BAAk9B,0BAA0B,iFAAiF,0BAA0B,iFAAiF,gCAAgC,iFAAiF,yBAAyB,iFAAiF,kBAAkB,2nBAA2nB;;;;;;;;;;;;;;ACA5mE,iEAAe,g3JAAg3J;;;;;;;;;;;;;;ACA/3J,iEAAe,mTAAmT,6GAA6G,oPAAoP,eAAe,qEAAqE,sBAAsB,uEAAuE,2BAA2B,gCAAgC,qEAAqE,eAAe,uEAAuE,2BAA2B,0BAA0B,ovBAAovB,0EAA0E,gEAAgE,iPAAiP,eAAe,qEAAqE,sBAAsB,uEAAuE,2BAA2B,gCAAgC,uEAAuE,2BAA2B,eAAe,uEAAuE,2BAA2B,0BAA0B,quBAAquB,mEAAmE,iRAAiR,YAAY,qEAAqE,kBAAkB,uEAAuE,2BAA2B,0BAA0B,uEAAuE,2BAA2B,wBAAwB,qEAAqE,aAAa,mlBAAmlB","sources":["./node_modules/@angular/material/__ivy_ngcc__/fesm2015/slide-toggle.js","./src/app/core/master-data-map.ts","./src/app/pages/product-form/page-data.service.ts","./src/app/pages/static-pages/addon-page/addon-page.component.ts","./src/app/pages/static-pages/calculated-building/add-calculated-building/add-calculated-building.component.ts","./src/app/pages/static-pages/calculated-building/calculated-building.component.ts","./src/app/pages/static-pages/calculated-building/services/calculated-building-service.ts","./src/app/pages/static-pages/coverage-page/coverage-page.component.ts","./src/app/pages/static-pages/education-life-griph/education-life-griph.component.ts","./src/app/pages/static-pages/education-life/education-life.component.ts","./src/app/pages/static-pages/education-life/models&services/education-life-rate.service.ts","./src/app/pages/static-pages/education-life/models&services/education-life.service.ts","./src/app/pages/static-pages/endo-griph/endo-griph.component.ts","./src/app/pages/static-pages/endo/endo.component.ts","./src/app/pages/static-pages/endo/models&services/endo-rate.service.ts","./src/app/pages/static-pages/endo/models&services/endo.service.ts","./src/app/pages/static-pages/fire-risk/fire-risk.component.ts","./src/app/pages/static-pages/fire-risk/models&services/fire-risk-rate.service.ts","./src/app/pages/static-pages/fire-risk/risk-detail/risk-detail.component.ts","./src/app/pages/static-pages/fire-simple-page/fire-simple-page.component.ts","./src/app/pages/static-pages/health-quo/health-quo.component.ts","./src/app/pages/static-pages/health-quo/models&services/health-payment.service.ts","./src/app/pages/static-pages/health-quo/models&services/health-rate.service.ts","./src/app/pages/static-pages/simple-page-policy/simple-page-policy.component.ts","./src/app/pages/static-pages/simple-page/models&services/health-product.service.ts","./src/app/pages/static-pages/simple-page/simple-page.component.ts","./src/app/pages/static-pages/static-field.interface.ts","./src/app/pages/static-pages/static-pages.data.ts","./src/app/pages/static-pages/static-pages.directive.ts","./src/app/pages/static-pages/static-pages.module.ts","./src/app/pages/static-pages/surrounding-building/models&services/premium-rate-service.ts","./src/app/pages/static-pages/surrounding-building/models&services/surrounding-building.service.ts","./src/app/pages/static-pages/surrounding-building/models&services/surrounding-list.const.ts","./src/app/pages/static-pages/surrounding-building/surrounding-building.component.ts","./src/app/pages/static-pages/surrounding-building/surrounding-detail/surrounding-detail.component.ts","./src/app/pages/static-pages/tables/tables.component.ts","./src/app/pages/static-pages/addon-page/addon-page.component.html","./src/app/pages/static-pages/calculated-building/add-calculated-building/add-calculated-building.component.html","./src/app/pages/static-pages/calculated-building/calculated-building.component.html","./src/app/pages/static-pages/coverage-page/coverage-page.component.html","./src/app/pages/static-pages/education-life-griph/education-life-griph.component.html","./src/app/pages/static-pages/education-life/education-life.component.html","./src/app/pages/static-pages/endo-griph/endo-griph.component.html","./src/app/pages/static-pages/endo/endo.component.html","./src/app/pages/static-pages/fire-risk/fire-risk.component.html","./src/app/pages/static-pages/fire-risk/risk-detail/risk-detail.component.html","./src/app/pages/static-pages/fire-simple-page/fire-simple-page.component.html","./src/app/pages/static-pages/health-quo/health-quo.component.html","./src/app/pages/static-pages/simple-page-policy/simple-page-policy.component.html","./src/app/pages/static-pages/simple-page/simple-page.component.html","./src/app/pages/static-pages/surrounding-building/surrounding-building.component.html","./src/app/pages/static-pages/surrounding-building/surrounding-detail/surrounding-detail.component.html","./src/app/pages/static-pages/tables/tables.component.html"],"sourcesContent":["import { ObserversModule } from '@angular/cdk/observers';\nimport { InjectionToken, forwardRef, EventEmitter, Component, ViewEncapsulation, ChangeDetectionStrategy, ElementRef, ChangeDetectorRef, Attribute, Inject, Optional, ViewChild, Input, Output, Directive, NgModule } from '@angular/core';\nimport { mixinTabIndex, mixinColor, mixinDisableRipple, mixinDisabled, MatRippleModule, MatCommonModule } from '@angular/material/core';\nimport { FocusMonitor } from '@angular/cdk/a11y';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { NG_VALUE_ACCESSOR, NG_VALIDATORS, CheckboxRequiredValidator } from '@angular/forms';\nimport { ANIMATION_MODULE_TYPE } from '@angular/platform-browser/animations';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Injection token to be used to override the default options for `mat-slide-toggle`. */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/a11y';\nimport * as ɵngcc2 from '@angular/material/core';\nimport * as ɵngcc3 from '@angular/cdk/observers';\n\nconst _c0 = [\"thumbContainer\"];\nconst _c1 = [\"toggleBar\"];\nconst _c2 = [\"input\"];\nconst _c3 = function () { return { enterDuration: 150 }; };\nconst _c4 = [\"*\"];\nconst MAT_SLIDE_TOGGLE_DEFAULT_OPTIONS = new InjectionToken('mat-slide-toggle-default-options', {\n    providedIn: 'root',\n    factory: () => ({ disableToggleValue: false })\n});\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// Increasing integer for generating unique ids for slide-toggle components.\nlet nextUniqueId = 0;\n/** @docs-private */\nconst MAT_SLIDE_TOGGLE_VALUE_ACCESSOR = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => MatSlideToggle),\n    multi: true\n};\n/** Change event object emitted by a MatSlideToggle. */\nclass MatSlideToggleChange {\n    constructor(\n    /** The source MatSlideToggle of the event. */\n    source, \n    /** The new `checked` value of the MatSlideToggle. */\n    checked) {\n        this.source = source;\n        this.checked = checked;\n    }\n}\n// Boilerplate for applying mixins to MatSlideToggle.\n/** @docs-private */\nclass MatSlideToggleBase {\n    constructor(_elementRef) {\n        this._elementRef = _elementRef;\n    }\n}\nconst _MatSlideToggleMixinBase = mixinTabIndex(mixinColor(mixinDisableRipple(mixinDisabled(MatSlideToggleBase)), 'accent'));\n/** Represents a slidable \"switch\" toggle that can be moved between on and off. */\nclass MatSlideToggle extends _MatSlideToggleMixinBase {\n    constructor(elementRef, _focusMonitor, _changeDetectorRef, tabIndex, defaults, _animationMode) {\n        super(elementRef);\n        this._focusMonitor = _focusMonitor;\n        this._changeDetectorRef = _changeDetectorRef;\n        this.defaults = defaults;\n        this._animationMode = _animationMode;\n        this._onChange = (_) => { };\n        this._onTouched = () => { };\n        this._uniqueId = `mat-slide-toggle-${++nextUniqueId}`;\n        this._required = false;\n        this._checked = false;\n        /** Name value will be applied to the input element if present. */\n        this.name = null;\n        /** A unique id for the slide-toggle input. If none is supplied, it will be auto-generated. */\n        this.id = this._uniqueId;\n        /** Whether the label should appear after or before the slide-toggle. Defaults to 'after'. */\n        this.labelPosition = 'after';\n        /** Used to set the aria-label attribute on the underlying input element. */\n        this.ariaLabel = null;\n        /** Used to set the aria-labelledby attribute on the underlying input element. */\n        this.ariaLabelledby = null;\n        /** An event will be dispatched each time the slide-toggle changes its value. */\n        this.change = new EventEmitter();\n        /**\n         * An event will be dispatched each time the slide-toggle input is toggled.\n         * This event is always emitted when the user toggles the slide toggle, but this does not mean\n         * the slide toggle's value has changed.\n         */\n        this.toggleChange = new EventEmitter();\n        this.tabIndex = parseInt(tabIndex) || 0;\n    }\n    /** Whether the slide-toggle is required. */\n    get required() { return this._required; }\n    set required(value) { this._required = coerceBooleanProperty(value); }\n    /** Whether the slide-toggle element is checked or not. */\n    get checked() { return this._checked; }\n    set checked(value) {\n        this._checked = coerceBooleanProperty(value);\n        this._changeDetectorRef.markForCheck();\n    }\n    /** Returns the unique id for the visual hidden input. */\n    get inputId() { return `${this.id || this._uniqueId}-input`; }\n    ngAfterContentInit() {\n        this._focusMonitor\n            .monitor(this._elementRef, true)\n            .subscribe(focusOrigin => {\n            // Only forward focus manually when it was received programmatically or through the\n            // keyboard. We should not do this for mouse/touch focus for two reasons:\n            // 1. It can prevent clicks from landing in Chrome (see #18269).\n            // 2. They're already handled by the wrapping `label` element.\n            if (focusOrigin === 'keyboard' || focusOrigin === 'program') {\n                this._inputElement.nativeElement.focus();\n            }\n            else if (!focusOrigin) {\n                // When a focused element becomes disabled, the browser *immediately* fires a blur event.\n                // Angular does not expect events to be raised during change detection, so any state\n                // change (such as a form control's 'ng-touched') will cause a changed-after-checked\n                // error. See https://github.com/angular/angular/issues/17793. To work around this,\n                // we defer telling the form control it has been touched until the next tick.\n                Promise.resolve().then(() => this._onTouched());\n            }\n        });\n    }\n    ngOnDestroy() {\n        this._focusMonitor.stopMonitoring(this._elementRef);\n    }\n    /** Method being called whenever the underlying input emits a change event. */\n    _onChangeEvent(event) {\n        // We always have to stop propagation on the change event.\n        // Otherwise the change event, from the input element, will bubble up and\n        // emit its event object to the component's `change` output.\n        event.stopPropagation();\n        this.toggleChange.emit();\n        // When the slide toggle's config disables toggle change event by setting\n        // `disableToggleValue: true`, the slide toggle's value does not change, and the\n        // checked state of the underlying input needs to be changed back.\n        if (this.defaults.disableToggleValue) {\n            this._inputElement.nativeElement.checked = this.checked;\n            return;\n        }\n        // Sync the value from the underlying input element with the component instance.\n        this.checked = this._inputElement.nativeElement.checked;\n        // Emit our custom change event only if the underlying input emitted one. This ensures that\n        // there is no change event, when the checked state changes programmatically.\n        this._emitChangeEvent();\n    }\n    /** Method being called whenever the slide-toggle has been clicked. */\n    _onInputClick(event) {\n        // We have to stop propagation for click events on the visual hidden input element.\n        // By default, when a user clicks on a label element, a generated click event will be\n        // dispatched on the associated input element. Since we are using a label element as our\n        // root container, the click event on the `slide-toggle` will be executed twice.\n        // The real click event will bubble up, and the generated click event also tries to bubble up.\n        // This will lead to multiple click events.\n        // Preventing bubbling for the second event will solve that issue.\n        event.stopPropagation();\n    }\n    /** Implemented as part of ControlValueAccessor. */\n    writeValue(value) {\n        this.checked = !!value;\n    }\n    /** Implemented as part of ControlValueAccessor. */\n    registerOnChange(fn) {\n        this._onChange = fn;\n    }\n    /** Implemented as part of ControlValueAccessor. */\n    registerOnTouched(fn) {\n        this._onTouched = fn;\n    }\n    /** Implemented as a part of ControlValueAccessor. */\n    setDisabledState(isDisabled) {\n        this.disabled = isDisabled;\n        this._changeDetectorRef.markForCheck();\n    }\n    /** Focuses the slide-toggle. */\n    focus(options, origin) {\n        if (origin) {\n            this._focusMonitor.focusVia(this._inputElement, origin, options);\n        }\n        else {\n            this._inputElement.nativeElement.focus(options);\n        }\n    }\n    /** Toggles the checked state of the slide-toggle. */\n    toggle() {\n        this.checked = !this.checked;\n        this._onChange(this.checked);\n    }\n    /**\n     * Emits a change event on the `change` output. Also notifies the FormControl about the change.\n     */\n    _emitChangeEvent() {\n        this._onChange(this.checked);\n        this.change.emit(new MatSlideToggleChange(this, this.checked));\n    }\n    /** Method being called whenever the label text changes. */\n    _onLabelTextChange() {\n        // Since the event of the `cdkObserveContent` directive runs outside of the zone, the\n        // slide-toggle component will be only marked for check, but no actual change detection runs\n        // automatically. Instead of going back into the zone in order to trigger a change detection\n        // which causes *all* components to be checked (if explicitly marked or not using OnPush),\n        // we only trigger an explicit change detection for the slide-toggle view and its children.\n        this._changeDetectorRef.detectChanges();\n    }\n}\nMatSlideToggle.ɵfac = function MatSlideToggle_Factory(t) { return new (t || MatSlideToggle)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.FocusMonitor), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵinjectAttribute('tabindex'), ɵngcc0.ɵɵdirectiveInject(MAT_SLIDE_TOGGLE_DEFAULT_OPTIONS), ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8)); };\nMatSlideToggle.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: MatSlideToggle, selectors: [[\"mat-slide-toggle\"]], viewQuery: function MatSlideToggle_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(_c0, 5);\n        ɵngcc0.ɵɵviewQuery(_c1, 5);\n        ɵngcc0.ɵɵviewQuery(_c2, 5);\n    } if (rf & 2) {\n        let _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._thumbEl = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._thumbBarEl = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._inputElement = _t.first);\n    } }, hostAttrs: [1, \"mat-slide-toggle\"], hostVars: 12, hostBindings: function MatSlideToggle_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵhostProperty(\"id\", ctx.id);\n        ɵngcc0.ɵɵattribute(\"tabindex\", ctx.disabled ? null : -1)(\"aria-label\", null)(\"aria-labelledby\", null);\n        ɵngcc0.ɵɵclassProp(\"mat-checked\", ctx.checked)(\"mat-disabled\", ctx.disabled)(\"mat-slide-toggle-label-before\", ctx.labelPosition == \"before\")(\"_mat-animation-noopable\", ctx._animationMode === \"NoopAnimations\");\n    } }, inputs: { disabled: \"disabled\", disableRipple: \"disableRipple\", color: \"color\", tabIndex: \"tabIndex\", name: \"name\", id: \"id\", labelPosition: \"labelPosition\", ariaLabel: [\"aria-label\", \"ariaLabel\"], ariaLabelledby: [\"aria-labelledby\", \"ariaLabelledby\"], required: \"required\", checked: \"checked\" }, outputs: { change: \"change\", toggleChange: \"toggleChange\" }, exportAs: [\"matSlideToggle\"], features: [ɵngcc0.ɵɵProvidersFeature([MAT_SLIDE_TOGGLE_VALUE_ACCESSOR]), ɵngcc0.ɵɵInheritDefinitionFeature], ngContentSelectors: _c4, decls: 16, vars: 18, consts: [[1, \"mat-slide-toggle-label\"], [\"label\", \"\"], [1, \"mat-slide-toggle-bar\"], [\"toggleBar\", \"\"], [\"type\", \"checkbox\", \"role\", \"switch\", 1, \"mat-slide-toggle-input\", \"cdk-visually-hidden\", 3, \"id\", \"required\", \"tabIndex\", \"checked\", \"disabled\", \"change\", \"click\"], [\"input\", \"\"], [1, \"mat-slide-toggle-thumb-container\"], [\"thumbContainer\", \"\"], [1, \"mat-slide-toggle-thumb\"], [\"mat-ripple\", \"\", 1, \"mat-slide-toggle-ripple\", \"mat-focus-indicator\", 3, \"matRippleTrigger\", \"matRippleDisabled\", \"matRippleCentered\", \"matRippleRadius\", \"matRippleAnimation\"], [1, \"mat-ripple-element\", \"mat-slide-toggle-persistent-ripple\"], [1, \"mat-slide-toggle-content\", 3, \"cdkObserveContent\"], [\"labelContent\", \"\"], [2, \"display\", \"none\"]], template: function MatSlideToggle_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵelementStart(0, \"label\", 0, 1);\n        ɵngcc0.ɵɵelementStart(2, \"div\", 2, 3);\n        ɵngcc0.ɵɵelementStart(4, \"input\", 4, 5);\n        ɵngcc0.ɵɵlistener(\"change\", function MatSlideToggle_Template_input_change_4_listener($event) { return ctx._onChangeEvent($event); })(\"click\", function MatSlideToggle_Template_input_click_4_listener($event) { return ctx._onInputClick($event); });\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(6, \"div\", 6, 7);\n        ɵngcc0.ɵɵelement(8, \"div\", 8);\n        ɵngcc0.ɵɵelementStart(9, \"div\", 9);\n        ɵngcc0.ɵɵelement(10, \"div\", 10);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(11, \"span\", 11, 12);\n        ɵngcc0.ɵɵlistener(\"cdkObserveContent\", function MatSlideToggle_Template_span_cdkObserveContent_11_listener() { return ctx._onLabelTextChange(); });\n        ɵngcc0.ɵɵelementStart(13, \"span\", 13);\n        ɵngcc0.ɵɵtext(14, \"\\u00A0\");\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵprojection(15);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n    } if (rf & 2) {\n        const _r0 = ɵngcc0.ɵɵreference(1);\n        const _r4 = ɵngcc0.ɵɵreference(12);\n        ɵngcc0.ɵɵattribute(\"for\", ctx.inputId);\n        ɵngcc0.ɵɵadvance(2);\n        ɵngcc0.ɵɵclassProp(\"mat-slide-toggle-bar-no-side-margin\", !_r4.textContent || !_r4.textContent.trim());\n        ɵngcc0.ɵɵadvance(2);\n        ɵngcc0.ɵɵproperty(\"id\", ctx.inputId)(\"required\", ctx.required)(\"tabIndex\", ctx.tabIndex)(\"checked\", ctx.checked)(\"disabled\", ctx.disabled);\n        ɵngcc0.ɵɵattribute(\"name\", ctx.name)(\"aria-checked\", ctx.checked.toString())(\"aria-label\", ctx.ariaLabel)(\"aria-labelledby\", ctx.ariaLabelledby);\n        ɵngcc0.ɵɵadvance(5);\n        ɵngcc0.ɵɵproperty(\"matRippleTrigger\", _r0)(\"matRippleDisabled\", ctx.disableRipple || ctx.disabled)(\"matRippleCentered\", true)(\"matRippleRadius\", 20)(\"matRippleAnimation\", ɵngcc0.ɵɵpureFunction0(17, _c3));\n    } }, directives: [ɵngcc2.MatRipple, ɵngcc3.CdkObserveContent], styles: [\".mat-slide-toggle{display:inline-block;height:24px;max-width:100%;line-height:24px;white-space:nowrap;outline:none;-webkit-tap-highlight-color:transparent}.mat-slide-toggle.mat-checked .mat-slide-toggle-thumb-container{transform:translate3d(16px, 0, 0)}[dir=rtl] .mat-slide-toggle.mat-checked .mat-slide-toggle-thumb-container{transform:translate3d(-16px, 0, 0)}.mat-slide-toggle.mat-disabled{opacity:.38}.mat-slide-toggle.mat-disabled .mat-slide-toggle-label,.mat-slide-toggle.mat-disabled .mat-slide-toggle-thumb-container{cursor:default}.mat-slide-toggle-label{display:flex;flex:1;flex-direction:row;align-items:center;height:inherit;cursor:pointer}.mat-slide-toggle-content{white-space:nowrap;overflow:hidden;text-overflow:ellipsis}.mat-slide-toggle-label-before .mat-slide-toggle-label{order:1}.mat-slide-toggle-label-before .mat-slide-toggle-bar{order:2}[dir=rtl] .mat-slide-toggle-label-before .mat-slide-toggle-bar,.mat-slide-toggle-bar{margin-right:8px;margin-left:0}[dir=rtl] .mat-slide-toggle-bar,.mat-slide-toggle-label-before .mat-slide-toggle-bar{margin-left:8px;margin-right:0}.mat-slide-toggle-bar-no-side-margin{margin-left:0;margin-right:0}.mat-slide-toggle-thumb-container{position:absolute;z-index:1;width:20px;height:20px;top:-3px;left:0;transform:translate3d(0, 0, 0);transition:all 80ms linear;transition-property:transform}._mat-animation-noopable .mat-slide-toggle-thumb-container{transition:none}[dir=rtl] .mat-slide-toggle-thumb-container{left:auto;right:0}.mat-slide-toggle-thumb{height:20px;width:20px;border-radius:50%}.mat-slide-toggle-bar{position:relative;width:36px;height:14px;flex-shrink:0;border-radius:8px}.mat-slide-toggle-input{bottom:0;left:10px}[dir=rtl] .mat-slide-toggle-input{left:auto;right:10px}.mat-slide-toggle-bar,.mat-slide-toggle-thumb{transition:all 80ms linear;transition-property:background-color;transition-delay:50ms}._mat-animation-noopable .mat-slide-toggle-bar,._mat-animation-noopable .mat-slide-toggle-thumb{transition:none}.mat-slide-toggle .mat-slide-toggle-ripple{position:absolute;top:calc(50% - 20px);left:calc(50% - 20px);height:40px;width:40px;z-index:1;pointer-events:none}.mat-slide-toggle .mat-slide-toggle-ripple .mat-ripple-element:not(.mat-slide-toggle-persistent-ripple){opacity:.12}.mat-slide-toggle-persistent-ripple{width:100%;height:100%;transform:none}.mat-slide-toggle-bar:hover .mat-slide-toggle-persistent-ripple{opacity:.04}.mat-slide-toggle:not(.mat-disabled).cdk-keyboard-focused .mat-slide-toggle-persistent-ripple{opacity:.12}.mat-slide-toggle-persistent-ripple,.mat-slide-toggle.mat-disabled .mat-slide-toggle-bar:hover .mat-slide-toggle-persistent-ripple{opacity:0}@media(hover: none){.mat-slide-toggle-bar:hover .mat-slide-toggle-persistent-ripple{display:none}}.cdk-high-contrast-active .mat-slide-toggle-thumb,.cdk-high-contrast-active .mat-slide-toggle-bar{border:1px solid}.cdk-high-contrast-active .mat-slide-toggle.cdk-keyboard-focused .mat-slide-toggle-bar{outline:2px dotted;outline-offset:5px}\\n\"], encapsulation: 2, changeDetection: 0 });\nMatSlideToggle.ctorParameters = () => [\n    { type: ElementRef },\n    { type: FocusMonitor },\n    { type: ChangeDetectorRef },\n    { type: String, decorators: [{ type: Attribute, args: ['tabindex',] }] },\n    { type: undefined, decorators: [{ type: Inject, args: [MAT_SLIDE_TOGGLE_DEFAULT_OPTIONS,] }] },\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] }\n];\nMatSlideToggle.propDecorators = {\n    _thumbEl: [{ type: ViewChild, args: ['thumbContainer',] }],\n    _thumbBarEl: [{ type: ViewChild, args: ['toggleBar',] }],\n    name: [{ type: Input }],\n    id: [{ type: Input }],\n    labelPosition: [{ type: Input }],\n    ariaLabel: [{ type: Input, args: ['aria-label',] }],\n    ariaLabelledby: [{ type: Input, args: ['aria-labelledby',] }],\n    required: [{ type: Input }],\n    checked: [{ type: Input }],\n    change: [{ type: Output }],\n    toggleChange: [{ type: Output }],\n    _inputElement: [{ type: ViewChild, args: ['input',] }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatSlideToggle, [{\n        type: Component,\n        args: [{\n                selector: 'mat-slide-toggle',\n                exportAs: 'matSlideToggle',\n                host: {\n                    'class': 'mat-slide-toggle',\n                    '[id]': 'id',\n                    // Needs to be `-1` so it can still receive programmatic focus.\n                    '[attr.tabindex]': 'disabled ? null : -1',\n                    '[attr.aria-label]': 'null',\n                    '[attr.aria-labelledby]': 'null',\n                    '[class.mat-checked]': 'checked',\n                    '[class.mat-disabled]': 'disabled',\n                    '[class.mat-slide-toggle-label-before]': 'labelPosition == \"before\"',\n                    '[class._mat-animation-noopable]': '_animationMode === \"NoopAnimations\"'\n                },\n                template: \"<label [attr.for]=\\\"inputId\\\" class=\\\"mat-slide-toggle-label\\\" #label>\\n  <div #toggleBar class=\\\"mat-slide-toggle-bar\\\"\\n       [class.mat-slide-toggle-bar-no-side-margin]=\\\"!labelContent.textContent || !labelContent.textContent.trim()\\\">\\n\\n    <input #input class=\\\"mat-slide-toggle-input cdk-visually-hidden\\\" type=\\\"checkbox\\\"\\n           role=\\\"switch\\\"\\n           [id]=\\\"inputId\\\"\\n           [required]=\\\"required\\\"\\n           [tabIndex]=\\\"tabIndex\\\"\\n           [checked]=\\\"checked\\\"\\n           [disabled]=\\\"disabled\\\"\\n           [attr.name]=\\\"name\\\"\\n           [attr.aria-checked]=\\\"checked.toString()\\\"\\n           [attr.aria-label]=\\\"ariaLabel\\\"\\n           [attr.aria-labelledby]=\\\"ariaLabelledby\\\"\\n           (change)=\\\"_onChangeEvent($event)\\\"\\n           (click)=\\\"_onInputClick($event)\\\">\\n\\n    <div class=\\\"mat-slide-toggle-thumb-container\\\" #thumbContainer>\\n      <div class=\\\"mat-slide-toggle-thumb\\\"></div>\\n      <div class=\\\"mat-slide-toggle-ripple mat-focus-indicator\\\" mat-ripple\\n           [matRippleTrigger]=\\\"label\\\"\\n           [matRippleDisabled]=\\\"disableRipple || disabled\\\"\\n           [matRippleCentered]=\\\"true\\\"\\n           [matRippleRadius]=\\\"20\\\"\\n           [matRippleAnimation]=\\\"{enterDuration: 150}\\\">\\n\\n        <div class=\\\"mat-ripple-element mat-slide-toggle-persistent-ripple\\\"></div>\\n      </div>\\n    </div>\\n\\n  </div>\\n\\n  <span class=\\\"mat-slide-toggle-content\\\" #labelContent (cdkObserveContent)=\\\"_onLabelTextChange()\\\">\\n    <!-- Add an invisible span so JAWS can read the label -->\\n    <span style=\\\"display:none\\\">&nbsp;</span>\\n    <ng-content></ng-content>\\n  </span>\\n</label>\\n\",\n                providers: [MAT_SLIDE_TOGGLE_VALUE_ACCESSOR],\n                inputs: ['disabled', 'disableRipple', 'color', 'tabIndex'],\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                styles: [\".mat-slide-toggle{display:inline-block;height:24px;max-width:100%;line-height:24px;white-space:nowrap;outline:none;-webkit-tap-highlight-color:transparent}.mat-slide-toggle.mat-checked .mat-slide-toggle-thumb-container{transform:translate3d(16px, 0, 0)}[dir=rtl] .mat-slide-toggle.mat-checked .mat-slide-toggle-thumb-container{transform:translate3d(-16px, 0, 0)}.mat-slide-toggle.mat-disabled{opacity:.38}.mat-slide-toggle.mat-disabled .mat-slide-toggle-label,.mat-slide-toggle.mat-disabled .mat-slide-toggle-thumb-container{cursor:default}.mat-slide-toggle-label{display:flex;flex:1;flex-direction:row;align-items:center;height:inherit;cursor:pointer}.mat-slide-toggle-content{white-space:nowrap;overflow:hidden;text-overflow:ellipsis}.mat-slide-toggle-label-before .mat-slide-toggle-label{order:1}.mat-slide-toggle-label-before .mat-slide-toggle-bar{order:2}[dir=rtl] .mat-slide-toggle-label-before .mat-slide-toggle-bar,.mat-slide-toggle-bar{margin-right:8px;margin-left:0}[dir=rtl] .mat-slide-toggle-bar,.mat-slide-toggle-label-before .mat-slide-toggle-bar{margin-left:8px;margin-right:0}.mat-slide-toggle-bar-no-side-margin{margin-left:0;margin-right:0}.mat-slide-toggle-thumb-container{position:absolute;z-index:1;width:20px;height:20px;top:-3px;left:0;transform:translate3d(0, 0, 0);transition:all 80ms linear;transition-property:transform}._mat-animation-noopable .mat-slide-toggle-thumb-container{transition:none}[dir=rtl] .mat-slide-toggle-thumb-container{left:auto;right:0}.mat-slide-toggle-thumb{height:20px;width:20px;border-radius:50%}.mat-slide-toggle-bar{position:relative;width:36px;height:14px;flex-shrink:0;border-radius:8px}.mat-slide-toggle-input{bottom:0;left:10px}[dir=rtl] .mat-slide-toggle-input{left:auto;right:10px}.mat-slide-toggle-bar,.mat-slide-toggle-thumb{transition:all 80ms linear;transition-property:background-color;transition-delay:50ms}._mat-animation-noopable .mat-slide-toggle-bar,._mat-animation-noopable .mat-slide-toggle-thumb{transition:none}.mat-slide-toggle .mat-slide-toggle-ripple{position:absolute;top:calc(50% - 20px);left:calc(50% - 20px);height:40px;width:40px;z-index:1;pointer-events:none}.mat-slide-toggle .mat-slide-toggle-ripple .mat-ripple-element:not(.mat-slide-toggle-persistent-ripple){opacity:.12}.mat-slide-toggle-persistent-ripple{width:100%;height:100%;transform:none}.mat-slide-toggle-bar:hover .mat-slide-toggle-persistent-ripple{opacity:.04}.mat-slide-toggle:not(.mat-disabled).cdk-keyboard-focused .mat-slide-toggle-persistent-ripple{opacity:.12}.mat-slide-toggle-persistent-ripple,.mat-slide-toggle.mat-disabled .mat-slide-toggle-bar:hover .mat-slide-toggle-persistent-ripple{opacity:0}@media(hover: none){.mat-slide-toggle-bar:hover .mat-slide-toggle-persistent-ripple{display:none}}.cdk-high-contrast-active .mat-slide-toggle-thumb,.cdk-high-contrast-active .mat-slide-toggle-bar{border:1px solid}.cdk-high-contrast-active .mat-slide-toggle.cdk-keyboard-focused .mat-slide-toggle-bar{outline:2px dotted;outline-offset:5px}\\n\"]\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc1.FocusMonitor }, { type: ɵngcc0.ChangeDetectorRef }, { type: String, decorators: [{\n                type: Attribute,\n                args: ['tabindex']\n            }] }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [MAT_SLIDE_TOGGLE_DEFAULT_OPTIONS]\n            }] }, { type: String, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [ANIMATION_MODULE_TYPE]\n            }] }]; }, { name: [{\n            type: Input\n        }], id: [{\n            type: Input\n        }], labelPosition: [{\n            type: Input\n        }], ariaLabel: [{\n            type: Input,\n            args: ['aria-label']\n        }], ariaLabelledby: [{\n            type: Input,\n            args: ['aria-labelledby']\n        }], change: [{\n            type: Output\n        }], toggleChange: [{\n            type: Output\n        }], required: [{\n            type: Input\n        }], checked: [{\n            type: Input\n        }], _thumbEl: [{\n            type: ViewChild,\n            args: ['thumbContainer']\n        }], _thumbBarEl: [{\n            type: ViewChild,\n            args: ['toggleBar']\n        }], _inputElement: [{\n            type: ViewChild,\n            args: ['input']\n        }] }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst MAT_SLIDE_TOGGLE_REQUIRED_VALIDATOR = {\n    provide: NG_VALIDATORS,\n    useExisting: forwardRef(() => MatSlideToggleRequiredValidator),\n    multi: true\n};\n/**\n * Validator for Material slide-toggle components with the required attribute in a\n * template-driven form. The default validator for required form controls asserts\n * that the control value is not undefined but that is not appropriate for a slide-toggle\n * where the value is always defined.\n *\n * Required slide-toggle form controls are valid when checked.\n */\nclass MatSlideToggleRequiredValidator extends CheckboxRequiredValidator {\n}\nMatSlideToggleRequiredValidator.ɵfac = /*@__PURE__*/ function () { let ɵMatSlideToggleRequiredValidator_BaseFactory; return function MatSlideToggleRequiredValidator_Factory(t) { return (ɵMatSlideToggleRequiredValidator_BaseFactory || (ɵMatSlideToggleRequiredValidator_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(MatSlideToggleRequiredValidator)))(t || MatSlideToggleRequiredValidator); }; }();\nMatSlideToggleRequiredValidator.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: MatSlideToggleRequiredValidator, selectors: [[\"mat-slide-toggle\", \"required\", \"\", \"formControlName\", \"\"], [\"mat-slide-toggle\", \"required\", \"\", \"formControl\", \"\"], [\"mat-slide-toggle\", \"required\", \"\", \"ngModel\", \"\"]], features: [ɵngcc0.ɵɵProvidersFeature([MAT_SLIDE_TOGGLE_REQUIRED_VALIDATOR]), ɵngcc0.ɵɵInheritDefinitionFeature] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatSlideToggleRequiredValidator, [{\n        type: Directive,\n        args: [{\n                selector: `mat-slide-toggle[required][formControlName],\n             mat-slide-toggle[required][formControl], mat-slide-toggle[required][ngModel]`,\n                providers: [MAT_SLIDE_TOGGLE_REQUIRED_VALIDATOR]\n            }]\n    }], null, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** This module is used by both original and MDC-based slide-toggle implementations. */\nclass _MatSlideToggleRequiredValidatorModule {\n}\n_MatSlideToggleRequiredValidatorModule.ɵfac = function _MatSlideToggleRequiredValidatorModule_Factory(t) { return new (t || _MatSlideToggleRequiredValidatorModule)(); };\n_MatSlideToggleRequiredValidatorModule.ɵmod = /*@__PURE__*/ ɵngcc0.ɵɵdefineNgModule({ type: _MatSlideToggleRequiredValidatorModule });\n_MatSlideToggleRequiredValidatorModule.ɵinj = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjector({});\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(_MatSlideToggleRequiredValidatorModule, [{\n        type: NgModule,\n        args: [{\n                exports: [MatSlideToggleRequiredValidator],\n                declarations: [MatSlideToggleRequiredValidator]\n            }]\n    }], null, null); })();\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(_MatSlideToggleRequiredValidatorModule, { declarations: [MatSlideToggleRequiredValidator], exports: [MatSlideToggleRequiredValidator] }); })();\nclass MatSlideToggleModule {\n}\nMatSlideToggleModule.ɵfac = function MatSlideToggleModule_Factory(t) { return new (t || MatSlideToggleModule)(); };\nMatSlideToggleModule.ɵmod = /*@__PURE__*/ ɵngcc0.ɵɵdefineNgModule({ type: MatSlideToggleModule });\nMatSlideToggleModule.ɵinj = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjector({ imports: [[\n            _MatSlideToggleRequiredValidatorModule,\n            MatRippleModule,\n            MatCommonModule,\n            ObserversModule,\n        ], _MatSlideToggleRequiredValidatorModule, MatCommonModule] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatSlideToggleModule, [{\n        type: NgModule,\n        args: [{\n                imports: [\n                    _MatSlideToggleRequiredValidatorModule,\n                    MatRippleModule,\n                    MatCommonModule,\n                    ObserversModule,\n                ],\n                exports: [\n                    _MatSlideToggleRequiredValidatorModule,\n                    MatSlideToggle,\n                    MatCommonModule\n                ],\n                declarations: [MatSlideToggle]\n            }]\n    }], null, null); })();\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatSlideToggleModule, { declarations: function () { return [MatSlideToggle]; }, imports: function () { return [_MatSlideToggleRequiredValidatorModule, MatRippleModule,\n        MatCommonModule,\n        ObserversModule]; }, exports: function () { return [_MatSlideToggleRequiredValidatorModule, MatSlideToggle, MatCommonModule]; } }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_SLIDE_TOGGLE_DEFAULT_OPTIONS, MAT_SLIDE_TOGGLE_REQUIRED_VALIDATOR, MAT_SLIDE_TOGGLE_VALUE_ACCESSOR, MatSlideToggle, MatSlideToggleChange, MatSlideToggleModule, MatSlideToggleRequiredValidator, _MatSlideToggleRequiredValidatorModule };\n\n","import { forkJoin, Observable, of } from \"rxjs\";\nimport { map, mergeMap } from \"rxjs/operators\";\nimport { MasterDataService } from \"../modules/master-data/master-data.service\";\nimport { ConfigInput } from \"../pages/form-component/field.interface\";\n\nexport function getMasterValue(masterServer: MasterDataService, response: any, column: ConfigInput[], editing: boolean = false): Observable<any> {\n\n  if (Array.isArray(response) && response.length > 0) {\n    return of(response).pipe(map((result: any[]) => {\n      let masterPost = []\n      let resource = result.map((res) => {\n        let masterObj = (res.data as any[]).filter(x => (x.value + \"\" as string).startsWith(\"T-\") || (x.value + \"\" as string).startsWith(\"TA-\"))\n        if (masterObj.length > 0) {\n          let postData = masterObj.map(x => {\n            let columnName = column.find(col => col.name == x.column)\n            if (columnName.masterData) {\n              return {\n                \"codeId\": x.value,\n                \"codeType\": columnName.masterData,\n                \"langCd\": \"EN\"\n              }\n            }\n          })\n          masterPost.push(...postData)\n        }\n      })\n\n      return { result, masterPost }\n    }), mergeMap((result: any) => {\n\n      if (result.masterPost.length > 0) {\n        let postData = {\n          \"codeBookRequest\": result.masterPost\n        }\n        return masterServer.getMasterValue(postData).pipe(map((masterValues: any) => {\n          return result.result.map(resp => {\n            resp.data = resp.data.flatMap(x => {\n              if ((x.value + \"\").startsWith(\"T-\") || (x.value + \"\").startsWith(\"TA-\")) {\n                let columnName = column.find(col => col.name == x.column)\n                let index = masterValues.findIndex(master => master.codeId == x.value && columnName.masterData == master.codeType)\n                if (index >= 0) {\n                  if (editing) {\n                    return [x, { column: x.column + \"Value\", value: masterValues[index].codeName }]\n                  } else {\n                    x.value = masterValues[index].codeName\n                  }\n                }\n              }\n              return x\n            })\n            return resp\n          })\n          // return result\n        }))\n      }\n      return of(result.result)\n    }))\n  }\n  return of(response)\n\n}\n\n// return masterServer.getMasterValue(postData).pipe(map((x: any) => {\n//   return x.map(masterD => {\n//     let index = res.data.findIndex(val => val.value == masterD.codeId)\n//     res.data[index].value = masterD.codeName\n//     return res.data[index]\n//   })\n// }), mergeMap((res2) => {\n\n//   let masterObj = (res.data as any[]).filter(x => !(x.value + \"\" as string).includes(\"T-\"))\n//   console.log([...masterObj, ...res2]);\n\n//   return of({ data: [...masterObj, ...res2] })\n// })\n// )\n// export function getMasterValue(masterServer: MasterDataService, response: any, column: ConfigInput[]): Observable<any> {\n//   console.log(response);\n\n//   if (Array.isArray(response) && response.length > 0) {\n//     return of(response).pipe(mergeMap((result: any[]) => {\n//       return forkJoin(result.map((res) => {\n//         let masterObj = (res.data as any[]).filter(x => (x.value + \"\" as string).includes(\"T-\"))\n\n//         if (masterObj.length > 0) {\n//           let postData = {\n//             \"codeBookRequest\": []\n//           }\n//           postData.codeBookRequest = masterObj.map(x => {\n//             let columnName = column.find(col => col.name == x.column)\n//             if (columnName.masterData) {\n//               return {\n//                 \"codeId\": x.value,\n//                 \"codeType\": columnName.masterData,\n//                 \"langCd\": \"EN\"\n//               }\n//             }\n\n//           })\n\n//           return masterServer.getMasterValue(postData).pipe(map((x: any) => {\n//             return x.map(masterD => {\n//               let index = res.data.findIndex(val => val.value == masterD.codeId)\n//               res.data[index].value = masterD.codeName\n//               return res.data[index]\n//             })\n//           }), mergeMap((res2) => {\n\n//             let masterObj = (res.data as any[]).filter(x => !(x.value + \"\" as string).includes(\"T-\"))\n//             console.log([...masterObj, ...res2]);\n\n//             return of({ data: [...masterObj, ...res2] })\n//           })\n//           )\n//         }\n//         return of(res)\n//         // res.data.map(x => {\n//         //   if((x.value as string).includes(\"T-\")){\n\n//         //   }\n//         // })\n//       }))\n//     }))\n//     // response.map(x=> {\n//     //   x.data.map()\n//     // })\n//   }\n//   return of(response)\n\n// }","import { HttpClient } from \"@angular/common/http\";\nimport { Injectable } from \"@angular/core\";\nimport { Observable, of } from \"rxjs\";\nimport { flatMap, mergeMap, switchMap } from \"rxjs/operators\";\nimport { environment } from \"../../../environments/environment\";\nimport { BizOperationService } from \"../../core/biz.operation.service\";\nimport { getMasterValue } from \"../../core/master-data-map\";\nimport { MasterDataService } from \"../../modules/master-data/master-data.service\";\nimport { ConfigInput } from \"../form-component/field.interface\";\n\nconst API_PAGEDATA_URL = `${environment.apiUrl}/pagedata`;\n\n@Injectable({ providedIn: 'root' })\nexport class PageDataService extends BizOperationService<any, number>{\n\n  constructor(protected httpClient: HttpClient, private masterData: MasterDataService) {\n    super(httpClient, API_PAGEDATA_URL);\n  }\n\n  getDetail(table: any, resourceId: any, id: any, view: boolean = false, colums: ConfigInput[] = [], editing: boolean = false) {\n    return this.httpClient.get(API_PAGEDATA_URL + \"/\" + table + \"/\" + resourceId + \"/\" + id).pipe(mergeMap((res: any) => {\n      if (view) {\n        return getMasterValue(this.masterData, res, colums, editing)\n      }\n      return of(res)\n    }))\n  }\n\n  deleteData(table, refID, id) {\n    return this.httpClient.delete(API_PAGEDATA_URL + \"/\" + table + \"/\" + refID + \"/\" + id)\n  }\n\n  updatePremimun(postData: any): Observable<any> {\n    return this.httpClient.put(API_PAGEDATA_URL + \"/resource\", postData)\n  }\n  // updateStatus(data){\n  //   return this.httpClient.put(API_PAGEDATA_URL + \"/resource\",data)\n  // }\n\n}","import { DecimalPipe } from '@angular/common';\nimport { ChangeDetectorRef, Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { Subscription } from 'rxjs';\nimport { GlobalFunctionService } from '../../../core/global-fun.service';\nimport { PolicyDTO } from '../../policy/policy.dto';\nimport { AddOn, Product, ProductPages } from '../../products/models/product.dto';\nimport { AddOnQuoService } from '../../products/services/add-on-quo.service';\nimport { CoverageQuoService } from '../../products/services/coverage-quo.service';\nimport { ProductDataService } from '../../products/services/products-data.service';\nimport { QuotationDTO } from '../../quotations/quotation.dto';\nimport { StaticActionType, StaticPageAction } from '../static-field.interface';\nimport { PageDataService } from \"../../product-form/page-data.service\"\nimport { IsJsonString } from '../../../core/is-json';\nimport { LoadingService } from '../../../modules/loading-toast/loading/loading.service';\nimport { FirePageID, FireRiskID } from '../static-pages.data';\n@Component({\n  selector: 'app-addon-page',\n  templateUrl: './addon-page.component.html',\n  styleUrls: ['./addon-page.component.scss']\n})\nexport class AddonPageComponent implements OnInit {\n  @Input() product: Product\n  @Input() editData: QuotationDTO | PolicyDTO\n  @Input() resourcesId: string\n  @Output() actionEvent = new EventEmitter<StaticPageAction>();\n  addOns = {\n    isSum: false,\n    isUnit: false,\n    isPremium: false,\n  }\n  refID: any\n  addOnsData: any = {}\n  unsubscribe: Subscription[] = []\n  @Input() premiumAmt: string = ''\n  premiun\n  parentData: any = {}\n  isLoading = true\n  fireAddonRate = {\n    \"FRAD009\": 0.1,\n    \"FRAD004\": 0.1,\n    \"FRAD010-T-001\": 0.25,\n    \"FRAD010-T-002\": 0.5,\n    \"FRAD010-T-003\": 0.75,\n    \"FRAD010-T-004\": 1,\n    \"FRAD008-T-001\": 0.2,\n    \"FRAD008-T-002\": 0.2,\n    \"FRAD008-T-003\": 0.2,\n    \"FRAD008-T-004\": 0.2,\n    \"FRAD008-T-005\": 0.25,\n    \"FRAD011\": 0.1,\n    \"FRAD002\": 0.1,\n    \"FRAD006\": 0.1,\n    \"FRAD003\": 0.1,\n    \"FRAD001\": 0.06,\n    \"FRAD007\": 0.08,\n    \"FRAD005\": 0.1,\n  }\n  fireOptionData = {\n    \"FRAD008\": [\n      { \"code\": \"T-001\", \"value\": \"Building\" },\n      { \"code\": \"T-002\", \"value\": \"Furniture\" },\n      { \"code\": \"T-003\", \"value\": \"Machine\" },\n      { \"code\": \"T-004\", \"value\": \"Goods/Stocks\" },\n      { \"code\": \"T-005\", \"value\": \"Water Damage for Goods/Stocks\" },\n    ],\n    \"FRAD010\": [\n      { \"code\": \"T-001\", \"value\": \"First Class Building\" },\n      { \"code\": \"T-002\", \"value\": \"Second Class Building\" },\n      { \"code\": \"T-003\", \"value\": \"Third Class Building\" },\n      { \"code\": \"T-004\", \"value\": \"Fourth Class Building\" },\n    ]\n  }\n  constructor(private addOnQuoService: AddOnQuoService, private globalFun: GlobalFunctionService, private cdRef: ChangeDetectorRef, private prodService: ProductDataService, private numberPipe: DecimalPipe, private pageDataService: PageDataService, private loadingService: LoadingService) { }\n\n  async ngOnInit() {\n    this.refID = this.prodService.referenceID\n    if (this.product.code == \"PLMO02\") {\n      this.parentData = this.getParnet()\n    }\n    if (this.product.addOns && this.product.addOns.length > 0) {\n      await this.loadingService.activate()\n      this.addOns = {\n        isSum: this.product.addOns[0].sumInsured,\n        isUnit: this.product.addOns[0].unit,\n        isPremium: this.product.addOns[0].premium,\n      }\n      let callAddon = true\n      let postData = {\n        quotationNo: this.resourcesId,\n        addOnIds: this.product.addOns.map(x => { return x.id })\n      }\n      let results: any = await this.addOnQuoService.getAllById(postData).toPromise()\n      if (results.length == 0) {\n        postData.quotationNo = this.refID\n        results = await this.addOnQuoService.getAllById(postData).toPromise()\n      }\n      for (const item of this.product.addOns) {\n        item['show'] = true\n        if (item.validationFun) {\n          item['show'] = this.globalFun[item.validationFun] ? this.globalFun[item.validationFun](this.parentData) : true\n        }\n        if (this.product.code == \"CLFR01\") {\n          item[\"sumInsuredStr\"] = \"0\"\n          item[\"unitStr\"] = \"0\"\n          item[\"premiumStr\"] = \"0\"\n        }\n        let response = results.find(x => x.addonId == item.id)\n        // if (item['show']) {\n        this.addOnsData[item.id] = {\n          checked: response && item['show'] ? true : false,\n          sum: response ? response.sumInsured || 0 : 0,\n          unit: response ? response.unit || 0 : 0,\n          premium: response ? response.premium || 0 : 0,\n          option: response ? response.option || \"T-001\" : \"T-001\",\n        }\n\n        if (item.sumInsured) {\n          this.getGlobalFun(item.sumInsuredStr, 'addOnsData', item.id, 'sum', item)\n        }\n        if (item.unit) {\n          this.getGlobalFun(item.unitStr, 'addOnsData', item.id, 'unit', item)\n        }\n        if (item.premium) {\n          if (item.code == \"cross_addon\" && this.addOnsData[item.id].checked) {\n\n          } else {\n            this.getGlobalFun(item.premiumStr, 'addOnsData', item.id, 'premium', item)\n          }\n        }\n        // }\n      }\n      // if (callAddon && this.editData && this.refID) {\n      //   for (const item of this.product.addOns) {\n      //     let response: any = null;\n      //     try {\n      //       response = await this.addOnQuoService.getOne(item.id, this.refID).toPromise()\n      //     } catch (error) {\n      //       response = null\n      //     }\n      //     this.addOnsData[item.id] = {\n      //       checked: response ? true : false,\n      //       sum: response ? response.sumInsured || 0 : 0,\n      //       unit: response ? response.unit || 0 : 0,\n      //       premium: response ? response.premium || 0 : 0\n      //     }\n      //   }\n      // }\n      this.isLoading = false\n      await this.loadingService.deactivate()\n      this.cdRef.detectChanges();\n\n    } else {\n      this.isLoading = false\n    }\n  }\n\n  getGlobalFun(funName: string, mainObj: string, mainKey, subKey: string, addon: any) {\n\n    if (this.product.code == \"PLMO02\" && subKey == \"premium\") {\n      if (this.globalFun[funName]) {\n        let parentValueObj = addon.code == \"uid_md_007\" ? this.getParnet('motor_driver') : this.parentData\n        let unsub = this.globalFun[funName](parentValueObj).subscribe((res) => {\n          this[mainObj][mainKey][subKey] = res\n          this.cdRef.detectChanges();\n        })\n        this.unsubscribe.push(unsub)\n      } else {\n        if (funName) {\n          // if (addon.code == \"cross_addon\" && this.product.code == \"PLMO02\" && subKey == \"premium\") {\n          //   this[mainObj][mainKey][subKey] = this.calcuCross() * 0.15\n          // }else{\n          this[mainObj][mainKey][subKey] = funName\n          // }\n        }\n      }\n    } else if (this.product.code == \"CLFR01\" && subKey == \"premium\") {\n      this[mainObj][mainKey][subKey] = this.rateByValue(addon)\n    }\n    else {\n      if (this.globalFun[funName + \"Result\"]) {\n        let unsub = this.globalFun[funName + \"Result\"].subscribe((res) => {\n          this[mainObj][mainKey][subKey] = res\n          this.cdRef.detectChanges();\n        })\n        this.unsubscribe.push(unsub)\n      } else {\n        if (funName)\n          this[mainObj][mainKey][subKey] = funName\n      }\n    }\n  }\n\n  async nextPage() {\n    const quoService = this.addOnQuoService\n    const posDataArray = this.addOnsData\n    await quoService.deleteAll(this.resourcesId).toPromise()\n    for (let addon of this.product.addOns) {\n      if (posDataArray[addon.id].checked) {\n        let sum = posDataArray[addon.id].sum ? posDataArray[addon.id].sum + \"\" : \"\"\n        let unit = posDataArray[addon.id].unit ? posDataArray[addon.id].unit + \"\" : \"\"\n        let premium = posDataArray[addon.id].premium ? posDataArray[addon.id].premium + \"\" : \"\"\n        let option = posDataArray[addon.id].option ? posDataArray[addon.id].option + \"\" : \"\"\n        try {\n          let postData = {\n            addonId: addon.id,\n            quotationNo: this.resourcesId,\n            option: option,\n            sumInsured: (sum).replace(',', '').replace('MMK', '').replace('USD', ''),\n            unit: (unit).replace(',', '').replace('MMK', '').replace('USD', ''),\n            premium: (premium).replace(',', '').replace('MMK', '').replace('USD', ''),\n          }\n          let res = await quoService.save(postData).toPromise()\n        } catch (error) {\n          // console.log(error);\n\n        }\n      }\n\n    }\n    if (this.product.code == \"PLMO02\") {\n      await this.savePremimun().toPromise()\n    }\n    if (this.product.code == \"CLFR01\") {\n      await this.savePremimunFire().toPromise()\n    }\n    console.log(\"end\");\n\n    this.actionEvent.emit({ type: StaticActionType.NEXT })\n  }\n\n  backPage() {\n    this.actionEvent.emit({ type: StaticActionType.PREV })\n  }\n\n  onCheckAddon() {\n\n  }\n\n  changeOption(addon: AddOn) {\n    if (addon.code != \"cross_addon\" && this.product.code == \"PLMO02\") {\n      let cross = this.product.addOns.find(x => x.code == \"cross_addon\")\n      if (this.addOnsData[cross.id].checked) {\n        let tempPre = this.calcuCross()\n        this.addOnsData[cross.id]['premium'] = tempPre * 0.15\n      }\n    } else if (this.addOnsData[addon.id].checked && addon.code == \"cross_addon\") {\n      let tempPre = this.calcuCross()\n      this.addOnsData[addon.id]['premium'] = tempPre * 0.15\n    }\n    else if (!this.addOnsData[addon.id].checked && addon.code == \"cross_addon\") {\n      this.addOnsData[addon.id]['premium'] = 0\n    }\n  }\n\n  rechangeOption(addOn) {\n    this.addOnsData[addOn.id].premium = this.rateByValue(addOn)\n  }\n\n  calcuCross() {\n    let tempPre = 0\n    for (let addon of this.product.addOns) {\n      if (this.addOnsData[addon.id].checked && addon.code != \"cross_addon\") {\n        tempPre += this.globalFun.calculateDecimal(this.addOnsData[addon.id].premium || 0)\n      }\n    }\n    let coverageData = this.globalFun.tempFormData['coverage_1634010995936'] ? this.globalFun.tempFormData['coverage_1634010995936'] : []\n    for (let cov of coverageData) {\n      tempPre += this.globalFun.calculateDecimal(cov.premium || 0)\n    }\n    // let crossPre = tempPre * 0.15\n    let currency: string = this.parentData ? this.parentData.currency : 'mmk'\n    let excessAmt = 0\n    if (this.parentData) {\n      let excess = this.parentData['excess']\n      if (excess == \"T-002\" && currency == \"mmk\") {\n        excessAmt = 50000\n      } else if (excess == \"T-005\") {\n        excessAmt = 25\n      }\n    }\n\n    return tempPre + excessAmt\n  }\n\n  caluMotorPremimun() {\n    let tempPre = 0\n    for (let addon of this.product.addOns) {\n      if (this.addOnsData[addon.id].checked) {\n        tempPre += this.globalFun.calculateDecimal(this.addOnsData[addon.id].premium || 0)\n      }\n    }\n    let coverageData = this.globalFun.tempFormData['coverage_1634010995936'] ? this.globalFun.tempFormData['coverage_1634010995936'] : []\n    for (let cov of coverageData) {\n      tempPre += this.globalFun.calculateDecimal(cov.premium || 0)\n    }\n    let currency: string = this.parentData ? this.parentData.currency : 'mmk'\n    let discount = 0\n    if (this.parentData) {\n      let excess = this.parentData['excess']\n      let excess_discount = this.parentData['excess_discount']\n      if (excess == \"T-002\" && currency == \"mmk\") {\n        discount = -50000\n      } else if (excess == \"T-005\") {\n        discount = -25\n      } else if (excess == \"T-003\" && currency == \"mmk\") {\n        if (excess_discount == \"T-001\") {\n          discount = 50000\n        } else if (excess_discount == \"T-002\") {\n          discount = 70000\n        } else if (excess_discount == \"T-003\") {\n          discount = 100000\n        }\n      }\n    }\n    let stumd = currency == \"mmk\" ? 100 : 1\n    let preAMT = (tempPre - discount) + stumd\n    this.premiumAmt = this.numberPipe.transform(preAMT) + \" \" + currency.toUpperCase()\n    this.globalFun.paPremiumResult.next(this.premiumAmt)\n    return preAMT\n  }\n\n  caluFirePremimun() {\n    let parentData1 = this.globalFun.tempFormData[FireRiskID]\n    let parentData2 = this.globalFun.tempFormData[FirePageID]\n    let precent = parentData2.policyType == \"T-001\" ? 1 : 0.75\n    let premiumTotal = 0\n    for (let element of parentData1) {\n      premiumTotal += this.globalFun.calculateDecimal(element.premium)\n\n    }\n    // parentData2.forEach(element => {\n    //   premiumTotal += parseFloat(element.premium)\n    // });\n    const posDataArray = this.addOnsData\n    let addOnPre = 0\n    for (let addon of this.product.addOns) {\n      if (posDataArray[addon.id].checked) {\n        addOnPre += this.globalFun.calculateDecimal(posDataArray[addon.id]['premium'])\n      }\n    }\n    let finalPre = (premiumTotal + addOnPre) * precent\n    this.premiumAmt = this.numberPipe.transform(finalPre) + \" MMK\"\n    this.globalFun.paPremiumResult.next(this.premiumAmt)\n    return finalPre\n  }\n\n  savePremimun() {\n    let premiumAmt = this.caluMotorPremimun()\n    let postData = {\n      \"premium\": (Number(this.premiumAmt.split(\" \")[0].split(',').join(\"\")) || 0) + \"\",\n      \"premiumView\": this.premiumAmt,\n      \"resourceId\": this.resourcesId,\n      \"type\": this.prodService.viewType\n    }\n    return this.pageDataService.updatePremimun(postData)\n  }\n\n  savePremimunFire() {\n    let premiumAmt = this.caluFirePremimun()\n    let postData = {\n      \"premium\": (Number(this.premiumAmt.split(\" \")[0].split(',').join(\"\")) || 0) + \"\",\n      \"premiumView\": this.premiumAmt,\n      \"resourceId\": this.resourcesId,\n      \"type\": this.prodService.viewType\n    }\n    return this.pageDataService.updatePremimun(postData)\n  }\n\n  getParnet(tableName: string = 'm_detail') {\n    if (IsJsonString(this.product.config)) {\n      let pageUI: ProductPages = JSON.parse(this.product.config);\n      let pageOrder = this.prodService.type != 'quotation' ? pageUI.application || [] : pageUI.quotation || []\n      let parent = pageOrder.find(page => page.tableName == tableName)\n      if (parent) {\n        return this.globalFun.tempFormData[parent.tableName + parent.id] || null\n      }\n      return null\n    }\n    return null\n  }\n\n  rateByValue(addon: any) {\n    let rate = 0\n    if (addon.code == \"FRAD010\" || addon.code == \"FRAD008\") {\n      let keyId = addon.code + \"-\" + this.addOnsData[addon.id].option\n      rate = this.fireAddonRate[keyId] || 0\n    } else {\n      rate = this.fireAddonRate[addon.code] || 0\n    }\n    let parentData = this.globalFun.tempFormData[FireRiskID]\n    console.log(parentData);\n\n    let totalRisk = 0\n    if (parentData) {\n      parentData.forEach(element => {\n        totalRisk += parseFloat(element.riskSi)\n      });\n    }\n    if (rate > 0 && totalRisk > 0) {\n      let amt = totalRisk * (rate / 100)\n      if (addon.code == \"FRAD010\") {\n        let dis = amt * 0.1\n        amt = amt - dis\n      }\n      return amt\n    }\n    return 0\n  }\n\n}\n","import { ChangeDetectorRef, Component, Input, OnInit } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { NgbActiveModal, NgbModal } from '@ng-bootstrap/ng-bootstrap';\n\n@Component({\n  selector: 'app-add-calculated-building',\n  templateUrl: './add-calculated-building.component.html',\n  styleUrls: ['./add-calculated-building.component.scss']\n})\nexport class AddCalculatedBuildingComponent implements OnInit {\n  @Input() type = \"Contents including FFF\"\n  @Input() pageType=\"Add\"\n  @Input() data: any\n  @Input() riskId: any = 1\n  @Input() isStock: boolean = false\n  calculatedbuildingForm: FormGroup\n  constructor(private modal: NgbActiveModal,private cdf:ChangeDetectorRef) { }\n\n  ngOnInit(): void {\n    this.loadForm(this.data)\n    this.setValidator()\n  }\n  create() {\n    this.modal.dismiss({ data: this.calculatedbuildingForm.value, type: \"save\" })\n  }\n  loadForm(oldData?) {\n    this.calculatedbuildingForm = new FormGroup({\n      firePolicyRiskId: new FormControl(oldData ? oldData.firePolicyRiskId : this.riskId),\n      id: new FormControl(oldData ? oldData.id : \"\"),\n      itemDescription: new FormControl(oldData ? oldData.itemDescription || oldData.description : \"\"),\n      itemName: new FormControl(oldData ? oldData.itemName : \"\"),\n      quantity: new FormControl(oldData ? oldData.quantity : \"\"),\n      totalValue: new FormControl(oldData ? oldData.totalValue : \"\"),\n      updatedBy: new FormControl(oldData ? oldData.updatedBy : \"\"),\n      valuePerQuantity: new FormControl(oldData ? oldData.valuePerQuantity : \"\"),\n      month: new FormControl(oldData ? oldData.month : \"\"),\n      remark: new FormControl(oldData ? oldData.remark : \"\"),\n      stockValue: new FormControl(oldData ? oldData.stockValue : \"\"),\n      agreedSi: new FormControl(oldData ? oldData.agreedSi : \"\"),\n    })\n  }\n  setValidator(){\n    if(this.type==\"Contents including FFF\" || this.type==\"Plant and Machinery\"){\n      this.calculatedbuildingForm.controls['itemDescription'].setValidators([Validators.required])\n      this.calculatedbuildingForm.controls['itemDescription'].updateValueAndValidity()\n      this.calculatedbuildingForm.controls['itemName'].setValidators([Validators.required])\n      this.calculatedbuildingForm.controls['itemName'].updateValueAndValidity()\n      this.calculatedbuildingForm.controls['quantity'].setValidators([Validators.required])\n      this.calculatedbuildingForm.controls['quantity'].updateValueAndValidity()\n      this.calculatedbuildingForm.controls['valuePerQuantity'].setValidators([Validators.required])\n      this.calculatedbuildingForm.controls['valuePerQuantity'].updateValueAndValidity()\n      this.calculatedbuildingForm.controls['totalValue'].setValidators([Validators.required])\n      this.calculatedbuildingForm.controls['totalValue'].updateValueAndValidity()\n    }\n    if(this.type==\"Stock\"){\n      this.calculatedbuildingForm.controls['itemDescription'].setValidators([Validators.required])\n      this.calculatedbuildingForm.controls['itemDescription'].updateValueAndValidity()\n      this.calculatedbuildingForm.controls['stockValue'].setValidators([Validators.required])\n      this.calculatedbuildingForm.controls['stockValue'].updateValueAndValidity()\n      this.calculatedbuildingForm.controls['month'].setValidators([Validators.required])\n      this.calculatedbuildingForm.controls['month'].updateValueAndValidity()\n      this.calculatedbuildingForm.controls['remark'].setValidators([Validators.required])\n      this.calculatedbuildingForm.controls['remark'].updateValueAndValidity()\n      this.calculatedbuildingForm.controls['agreedSi'].setValidators([Validators.required])\n      this.calculatedbuildingForm.controls['agreedSi'].updateValueAndValidity()\n    }\n \n  }\n\n  calculateTotalValue() {\n    this.cdf.detectChanges()\n    let quantity = this.calculatedbuildingForm.value.quantity\n    let value = this.calculatedbuildingForm.value.valuePerQuantity\n    console.log(\"quantity,value\",quantity,value)\n    if (quantity && value)\n      this.calculatedbuildingForm.controls.totalValue.setValue(quantity * value)\n  }\n  dismissModal() {\n    this.modal.dismiss()\n  }\n  isControlValid(controlName: string): boolean {\n    const control = this.calculatedbuildingForm.controls[controlName];\n    return control.valid && (control.dirty || control.touched);\n  }\n\n  isControlInvalid(controlName: string): boolean {\n    const control = this.calculatedbuildingForm.controls[controlName];\n    return control.invalid && (control.dirty || control.touched);\n  }\n\n  controlHasError(validation, controlName): boolean {\n    const control = this.calculatedbuildingForm.controls[controlName];\n    return control.hasError(validation) && (control.dirty || control.touched);\n  }\n\n  isControlTouched(controlName): boolean {\n    const control = this.calculatedbuildingForm.controls[controlName];\n    return control.dirty || control.touched;\n  }\n}\n","import { ChangeDetectorRef, Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\nimport { AuthService } from 'src/app/modules/auth';\nimport { GlobalFunctionService } from '../../../core/global-fun.service';\nimport { FireRiskService } from '../fire-risk/models&services/fire-risk.service';\nimport { FirePageID } from '../static-pages.data';\nimport { AddCalculatedBuildingComponent } from './add-calculated-building/add-calculated-building.component';\nimport { FireContentService, FirePLantService, FireStockService } from './services/calculated-building-service';\n\n@Component({\n  selector: 'app-calculated-building',\n  templateUrl: './calculated-building.component.html',\n  styleUrls: ['./calculated-building.component.scss']\n})\nexport class CalculatedBuildingComponent implements OnInit {\n  isContents: boolean = false\n  isPlant: boolean = false\n  isStock: boolean = false\n  @Input() default: number = 0\n  primary = 'primary'\n  totalContent: number = 0\n  totalPlant: number = 0\n  totalStock: number = 0\n  tableData: any = []\n  contentsData: any = []\n  plantData: any = []\n  stockData: any = []\n  totalSI: number = 0\n  productDetail: any = {}\n  @Input() riskId = 1\n  @Output() totalEvent = new EventEmitter<number>()\n  constructor(private FireContentService: FireContentService, private FirePLantService: FirePLantService, private FireStockService: FireStockService, private modal: NgbModal, private auth: AuthService, private cdf: ChangeDetectorRef, private globalService: GlobalFunctionService, private riskService: FireRiskService) { }\n\n  ngOnInit(): void {\n    this.getFireContent()\n    this.getFirePlant()\n    this.getFireStock()\n    this.productDetail = this.globalService.tempFormData[FirePageID] || {}\n  }\n  actionBtn(event) {\n    console.log(event)\n    if (event.cmd == \"delete\") {\n      if (event.tbtype == \"content\") {\n        this.deleteFireContent(event.data.id)\n      }\n      if (event.tbtype == \"plant\") {\n        this.deleteFirePlant(event.data.id)\n      }\n      if (event.tbtype == \"stock\") {\n        this.deleteFireStock(event.data.id)\n      }\n    }\n    if (event.cmd == \"edit\") {\n      if (event.tbtype == \"content\") {\n        this.add('contents', event.data,\"Edit\")\n      }\n      if (event.tbtype == \"plant\") {\n        this.add('plants', event.data,\"Edit\")\n      }\n      if (event.tbtype == \"stock\") {\n        this.add('stock', event.data,\"Edit\")\n      }\n    }\n\n  }\n  add(type, data?,pageType?) {\n    if (type == \"contents\") {\n      let modalRef;\n      modalRef = this.modal.open(AddCalculatedBuildingComponent, { size: 'xl', backdrop: false });\n      modalRef.componentInstance.type = \"Contents including FFF\"\n      modalRef.componentInstance.pageType=pageType\n      modalRef.componentInstance.riskId = this.riskId\n      modalRef.componentInstance.data = data\n      modalRef.result.then(() => { }, (res) => {\n        if (res) {\n          console.log(\"RESSSS\", res)\n          if (res.type == \"save\") {\n            let postData = { ...res.data, createdBy: this.auth.currentUserValue.id }\n            console.log(\"postData\", postData)\n            this.FireContentService.save(postData).toPromise().then((res: any) => {\n              if (res) {\n                console.log(\"getFireContent-RESSS\", res)\n                this.getFireContent()\n                this.contentsData.push({ ...postData, id: res })\n                this.cdf.detectChanges()\n              }\n            })\n          }\n        }\n      })\n    }\n    if (type == \"plants\") {\n      let modalRef;\n      modalRef = this.modal.open(AddCalculatedBuildingComponent, { size: 'xl', backdrop: false });\n      modalRef.componentInstance.type = \"Plant and Machinery\"\n      modalRef.componentInstance.pageType=pageType\n      modalRef.componentInstance.riskId = this.riskId\n      modalRef.componentInstance.data = data\n      modalRef.result.then(() => { }, (res) => {\n        if (res) {\n          console.log(\"RESSSS\", res)\n          if (res.type == \"save\") {\n            let postData = { ...res.data, createdBy: this.auth.currentUserValue.id }\n            console.log(\"postData\", postData)\n            this.FirePLantService.save(postData).toPromise().then((res: any) => {\n              if (res) {\n                console.log(\"getFirePlant-RESSS\", res)\n                this.getFirePlant()\n                this.plantData.push({ ...postData, id: res })\n                this.cdf.detectChanges()\n              }\n            })\n          }\n        }\n      })\n    }\n    if (type == \"stock\") {\n      let modalRef;\n      modalRef = this.modal.open(AddCalculatedBuildingComponent, { size: 'xl', backdrop: false });\n      modalRef.componentInstance.type = \"Stock\"\n      modalRef.componentInstance.pageType=pageType\n      modalRef.componentInstance.riskId = this.riskId\n      modalRef.componentInstance.data = data\n      modalRef.componentInstance.isStock = true\n      modalRef.result.then(() => { }, (res) => {\n        if (res) {\n          console.log(\"RESSSS\", res)\n          if (res.type == \"save\") {\n            let postData = { ...res.data, createdBy: this.auth.currentUserValue.id,description:res.data.itemDescription }\n            console.log(\"postData\", postData)\n            this.FireStockService.save(postData).toPromise().then((res: any) => {\n              if (res) {\n                console.log(\"getFirePlant-RESSS\", res)\n                this.getFireStock()\n                this.stockData.push({ ...postData, id: res })\n                this.cdf.detectChanges()\n              }\n            })\n          }\n        }\n      })\n    }\n  }\n\n  getFireContent() {\n    this.riskService.getContent(this.riskId).toPromise().then((res: any) => {\n      console.log(\"getFireContent-RESSS\", res)\n      if (res) {\n        this.contentsData = res\n\n        if (this.contentsData.length > 0) {\n          this.isContents = true\n          this.totalContent = 0\n          for (let data of this.contentsData) {\n            console.log(\"TSET\", this.totalContent);\n\n            this.totalContent += parseInt(data.totalValue)\n          }\n        }\n        this.calculateProposeStock()\n        this.cdf.detectChanges()\n      }\n    })\n  }\n  getFirePlant() {\n    this.riskService.getPlant(this.riskId).toPromise().then((res: any) => {\n      if (res) {\n        console.log(\"getFirePlant-RESSS\", res)\n        this.plantData = res\n        if (this.plantData.length > 0) {\n          this.isPlant = true\n          this.totalPlant = 0\n          for (let data of this.plantData) {\n            this.totalPlant += parseInt(data.totalValue)\n\n          }\n        }\n        this.calculateProposeStock()\n        this.cdf.detectChanges()\n      }\n    })\n\n  }\n  getFireStock() {\n    this.riskService.getStock(this.riskId).toPromise().then((res: any) => {\n      if (res) {\n        console.log(\"getFireStock-RESSS\", res)\n        this.stockData = res\n        if (this.stockData.length > 0) {\n          this.isStock = true\n          this.totalStock =0\n          for (let data of this.stockData) {\n            this.totalStock += parseInt(data.stockValue)\n          }\n          this.calculateProposeStock()\n        }\n        this.cdf.detectChanges()\n      }\n    })\n\n  }\n  calculateProposeStock() {\n    this.totalSI = (this.totalStock + this.totalContent + this.totalPlant)\n    this.totalEvent.next(this.totalSI)\n  }\n\n  deleteFireContent(id) {\n    this.FireContentService.delete(id).toPromise().then((res: any) => {\n      if (res) {\n        this.getFireContent()\n      }\n    })\n  }\n  deleteFirePlant(id) {\n    this.FirePLantService.delete(id).toPromise().then((res: any) => {\n      if (res) {\n        this.getFirePlant()\n      }\n    })\n  }\n  deleteFireStock(id) {\n    this.FireStockService.delete(id).toPromise().then((res: any) => {\n      if (res) {\n        this.getFireStock()\n      }\n    })\n  }\n  toggleChange(type) {\n    if (type == 'contents') {\n      this.isContents = this.isContents\n      if (!this.isContents && this.contentsData.lenght > 0) {\n        for (let data of this.contentsData) {\n          this.deleteFireContent(data.id)\n        }\n      }\n    }\n    if (type == 'plants') {\n      this.isPlant = this.isPlant\n      if (!this.isPlant && this.plantData.lenght > 0) {\n        for (let data of this.plantData) {\n          this.deleteFirePlant(data.id)\n        }\n      }\n    }\n    if (type == 'stock') {\n      this.isStock = this.isStock\n      if (!this.isStock && this.stockData.lenght > 0) {\n        for (let data of this.stockData) {\n          this.deleteFireStock(data.id)\n        }\n      }\n    }\n  }\n}\n","import { HttpClient } from \"@angular/common/http\";\nimport { Injectable } from \"@angular/core\";\nimport { environment } from \"../../../../../environments/environment\";\nimport { BizOperationService } from \"../../../../core/biz.operation.service\";\nimport { CalculatedBuildingDTO } from \"./calculated-building.dto\";\n\nconst API_FIRE_CONTENT = `${environment.apiUrl}/fire-policy/content`;\nconst API_FIRE_PLANT = `${environment.apiUrl}/fire-policy/plant-machinery`;\nconst API_FIRE_STOCK = `${environment.apiUrl}/fire-policy/stock`;\n// const API_FIRE_STOCK_RISK = `${environment.apiUrl}/fire-policy/risk/`\n//{riskId}/stock\n@Injectable({\n  providedIn: 'root'\n})\nexport class FireContentService extends BizOperationService<CalculatedBuildingDTO, number>{\n  constructor(protected httpClient: HttpClient) {\n    super(httpClient, API_FIRE_CONTENT);\n  }\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class FirePLantService extends BizOperationService<any, number>{\n  constructor(protected httpClient: HttpClient) {\n    super(httpClient, API_FIRE_PLANT);\n  }\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class FireStockService extends BizOperationService<any, number>{\n  constructor(protected httpClient: HttpClient) {\n    super(httpClient, API_FIRE_STOCK);\n  }\n}\n","import { ChangeDetectorRef, Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { Subscription } from 'rxjs';\nimport { GlobalFunctionService } from '../../../core/global-fun.service';\nimport { IsJsonString } from '../../../core/is-json';\nimport { LoadingService } from '../../../modules/loading-toast/loading/loading.service';\nimport { PolicyDTO } from '../../policy/policy.dto';\nimport { Product, ProductPages } from '../../products/models/product.dto';\nimport { CoverageQuoService } from '../../products/services/coverage-quo.service';\nimport { ProductDataService } from '../../products/services/products-data.service';\nimport { QuotationDTO } from '../../quotations/quotation.dto';\nimport { StaticActionType, StaticPageAction } from '../static-field.interface';\n\n@Component({\n  selector: 'app-coverage-page',\n  templateUrl: './coverage-page.component.html',\n  styleUrls: ['./coverage-page.component.scss']\n})\nexport class CoveragePageComponent implements OnInit {\n\n  @Input() product: Product\n  @Input() editData: QuotationDTO | PolicyDTO\n  @Input() resourcesId: string\n  @Output() actionEvent = new EventEmitter<StaticPageAction>();\n  coverage = {\n    isSum: false,\n    isUnit: false,\n    isPremium: false,\n  }\n  refID: any\n  coverageData: any = {}\n  unsubscribe: Subscription[] = []\n  parentData: any = {}\n  isLoading = true\n  constructor(private coverageQuoService: CoverageQuoService, private globalFun: GlobalFunctionService, private cdRef: ChangeDetectorRef, private prodService: ProductDataService, private loadingService: LoadingService) { }\n\n  async ngOnInit() {\n    this.refID = this.prodService.referenceID\n    if (this.product.code == \"PLMO02\") {\n      this.parentData = this.getParnet()\n    }\n    if (this.product.coverages && this.product.coverages.length > 0) {\n      await this.loadingService.activate()\n      this.coverage = {\n        isSum: this.product.coverages[0].sumInsured,\n        isUnit: this.product.coverages[0].unit,\n        isPremium: this.product.coverages[0].premium,\n      }\n      let postData = {\n        quotationNo: this.editData.id,\n        coverageIds: this.product.coverages.map(x => { return x.id })\n      }\n      let results: any = await this.coverageQuoService.getAllById(postData).toPromise()\n      if (results.length == 0) {\n        postData.quotationNo = this.refID\n        results = await this.coverageQuoService.getAllById(postData).toPromise()\n      }\n      for (const item of this.product.coverages) {\n        item['show'] = true\n        if (item.validationFun) {\n          item['show'] = this.globalFun[item.validationFun] ? this.globalFun[item.validationFun](this.parentData) : true\n        }\n        let response = results.find(x => x.coverageId == item.id)\n        this.coverageData[item.id] = {\n          sum: response ? response.sumInsured || 0 : 0,\n          unit: response ? response.unit || 0 : 0,\n          premium: response ? response.premium || 0 : 0\n        }\n\n        if (item.sumInsured) {\n          this.getGlobalFun(item.sumInsuredStr, 'coverageData', item.id, 'sum')\n        }\n        if (item.unit) {\n          this.getGlobalFun(item.unitStr, 'coverageData', item.id, 'unit')\n        }\n        if (item.premium) {\n          this.getGlobalFun(item.premiumStr, 'coverageData', item.id, 'premium')\n        }\n        // }\n      }\n      this.isLoading = false\n      await this.loadingService.deactivate()\n      this.cdRef.detectChanges();\n\n    } else {\n      this.isLoading = false\n\n    }\n  }\n\n  getGlobalFun(funName: string, mainObj: string, mainKey, subKey: string) {\n    if (this.product.code == \"PLMO02\" && subKey == \"premium\") {\n      if (this.globalFun[funName]) {\n        let unsub = this.globalFun[funName](this.parentData).subscribe((res) => {\n          this[mainObj][mainKey][subKey] = res\n          this.cdRef.detectChanges();\n        })\n        this.unsubscribe.push(unsub)\n      } else {\n        if (funName)\n          this[mainObj][mainKey][subKey] = funName\n      }\n    } else {\n\n      if (this.globalFun[funName + \"Result\"]) {\n        let unsub = this.globalFun[funName + \"Result\"].subscribe((res) => {\n          this[mainObj][mainKey][subKey] = res\n          this.cdRef.detectChanges();\n        })\n        this.unsubscribe.push(unsub)\n      } else {\n        if (funName)\n          this[mainObj][mainKey][subKey] = funName\n      }\n    }\n  }\n\n  async nextPage() {\n    const quoService = this.coverageQuoService\n    const posDataArray = this.coverageData\n    // console.log(this.product.coverages);\n    // for await (const iterator of object) {\n\n    // }\n    this.globalFun.tempFormData['coverage_1634010995936'] = []\n    for (let cov of this.product.coverages) {\n      try {\n        let postData = {\n          coverageId: cov.id,\n          quotationNo: this.resourcesId,\n          sumInsured: ((posDataArray[cov.id].sum || \"\") + \"\").replace(',', '').replace('MMK', '').replace('USD', ''),\n          unit: ((posDataArray[cov.id].unit || \"\") + \"\").replace(',', '').replace('MMK', '').replace('USD', ''),\n          premium: ((posDataArray[cov.id].premium || \"\") + \"\").replace(',', '').replace('MMK', '').replace('USD', ''),\n        }\n        this.globalFun.tempFormData['coverage_1634010995936'].push(postData)\n        let res = await this.coverageQuoService.save(postData).toPromise().catch(e => e)\n      } catch (error) {\n        // console.log(error);\n\n      }\n\n    }\n    this.actionEvent.emit({ type: StaticActionType.NEXT })\n  }\n\n  backPage() {\n    this.actionEvent.emit({ type: StaticActionType.PREV })\n  }\n\n  getParnet() {\n    if (IsJsonString(this.product.config)) {\n      let pageUI: ProductPages = JSON.parse(this.product.config);\n      let pageOrder = this.prodService.type != 'quotation' ? pageUI.application || [] : pageUI.quotation || []\n      let parent = pageOrder.find(page => page.tableName == 'm_detail')\n      if (parent) {\n        return this.globalFun.tempFormData[parent.tableName + parent.id] || null\n      }\n      return null\n    }\n    return null\n  }\n\n}\n","import { Component, EventEmitter, Input, OnInit, Output, ViewChild } from '@angular/core';\nimport { PolicyDTO } from '../../policy/policy.dto';\nimport { Product } from '../../products/models/product.dto';\nimport { QuotationDTO } from '../../quotations/quotation.dto';\nimport { StaticActionType, StaticPageAction } from '../static-field.interface';\nimport {\n  ChartComponent,\n  ApexAxisChartSeries,\n  ApexChart,\n  ApexXAxis,\n  ApexTitleSubtitle,\n  ApexYAxis,\n  ApexLegend,\n  ApexDataLabels,\n  ApexMarkers\n} from 'ng-apexcharts';\nimport { AlertService } from '../../../modules/loading-toast/alert-model/alert.service';\nimport { GlobalFunctionService } from '../../../core/global-fun.service';\nimport { EducationLifeID } from '../static-pages.data';\n\nexport type ChartOptions = {\n  series: ApexAxisChartSeries;\n  chart: ApexChart;\n  xaxis: ApexXAxis;\n  yaxis: ApexYAxis;\n  title: ApexTitleSubtitle;\n  legend: ApexLegend;\n  dataLabels: ApexDataLabels,\n  markers: ApexMarkers\n};\n@Component({\n  selector: 'app-education-life-grip',\n  templateUrl: './education-life-griph.component.html',\n  styleUrls: ['./education-life-griph.component.scss']\n})\nexport class EducationLifeGripComponent implements OnInit {\n  @Input() product: Product\n  @Input() editData: QuotationDTO | PolicyDTO\n  @Input() resourcesId: string\n  @Output() actionEvent = new EventEmitter<StaticPageAction>();\n  @ViewChild(\"chart\") chart: ChartComponent;\n  public chartOptions: Partial<ChartOptions>;\n  // showValue = [636000, 1272000, 1908000, 2544000, 3180000, 3816000, 4452000]\n  @Input() parentData: any\n  showDatas: any[] = []\n  constructor(private alertService: AlertService, private globalFun: GlobalFunctionService) {\n    this.chartOptions = {\n      series: [\n        {\n          name: \"Premium Amount\",\n          data: [],\n          color: \"#005f99\"\n        }\n      ],\n      chart: {\n        height: 450,\n        type: \"line\",\n        toolbar: {\n          show: false\n        }\n      },\n      title: {\n        text: \"Basic Benefit Illustration\",\n        offsetX: 0,\n        offsetY: 10,\n        floating: false,\n        style: {\n          fontSize: \"1.1rem\",\n          fontFamily: \"Roboto\"\n        }\n\n      },\n      xaxis: {\n        type: 'category',\n        categories: [\"0\", \"1 year\", \"2 years\", \"3 years\", \"4 years\", \"5 years\", \"6 years\", \"7 years\", \"8 years\", \"9 years\", \"10 years\", \"11 years\", \"12 years\", \"13 years\", \"14 years\"],\n        labels: {\n          style: {\n            fontSize: \"1rem\",\n            fontFamily: \"Roboto\"\n          }\n        }\n      },\n      yaxis: {\n        min: 0,\n        max: 5000000,\n        tickAmount: 5,\n        labels: {\n          style: {\n            fontSize: \"1rem\",\n            fontFamily: \"Roboto\"\n          }\n        }\n      },\n      legend: {\n        position: 'top',\n        horizontalAlign: 'right',\n        floating: true,\n        offsetY: -25,\n        offsetX: -5\n      },\n      dataLabels: {\n        enabled: true,\n        textAnchor: 'middle',\n        offsetX: -10,\n        offsetY: -5,\n        enabledOnSeries: [0]\n      },\n      markers: {\n        size: [5,0,0],\n        \n      }\n    };\n  }\n  ngOnInit(): void {\n\n    // this.parentData = this.getParnet()\n    if (!this.parentData) {\n      this.alertService.activate(\"This page cann't to show because there is no education life product detail data. Please add education life product detail in rodcut configuration\", \"Warning\")\n    } else {\n      let dataArr: any[] = this.parentData.map((x) => {\n\n        if (x.premiumPaid)\n          return x.premiumPaid > 0 ? x.premiumPaid : null\n        else return null\n      })\n      dataArr.unshift(null)\n      if (this.parentData.length > 0) {\n        if (this.parentData[0].benefitPlan == '002') {\n          this.chartOptions.title.text = \"Double Benefit Illustration\"\n          this.chartOptions.yaxis.max = 5000000 * 2\n          this.chartOptions.series[1] = {\n            data: [],\n            name: \"Goal\"\n          }\n          this.chartOptions.series[2] = {\n            data: [],\n            name: \"2X Goal\"\n          }\n          this.chartOptions.series[1].data = [5000000, 5000000, 5000000, 5000000, 5000000, 5000000, 5000000, 5000000, 5000000, 5000000, 5000000, 5000000, 5000000, 5000000,5000000]\n          this.chartOptions.series[2].data = [10000000, 10000000, 10000000, 10000000, 10000000, 10000000, 10000000, 10000000, 10000000, 10000000, 10000000, 10000000, 10000000, 10000000,10000000]\n        }\n      }\n\n      this.chartOptions.series[0].data = dataArr\n      // 0, 636000, 1272000, 1908000, 2544000, 3180000, 3816000, 4452000\n    }\n  }\n\n\n  getParnet() {\n    return this.globalFun.tempFormData[EducationLifeID]\n  }\n  nextPage() {\n    this.actionEvent.emit({ type: StaticActionType.NEXT })\n\n  }\n  backPage() {\n    this.actionEvent.emit({ type: StaticActionType.PREV })\n  }\n\n}\n","import { DecimalPipe } from '@angular/common';\nimport { ChangeDetectorRef, Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport * as moment from 'moment';\nimport { forkJoin, Observable, of } from 'rxjs';\nimport { map, mergeMap, retry, switchMap } from 'rxjs/operators';\nimport { GlobalFunctionService } from '../../../core/global-fun.service';\nimport { IsJsonString } from '../../../core/is-json';\nimport { AuthService } from '../../../modules/auth';\nimport { AlertService } from '../../../modules/loading-toast/alert-model/alert.service';\nimport { PolicyDTO } from '../../policy/policy.dto';\nimport { Product, ProductPages } from '../../products/models/product.dto';\nimport { ProductDataService } from '../../products/services/products-data.service';\nimport { QuotationDTO } from '../../quotations/quotation.dto';\nimport { StaticActionType, StaticPageAction } from '../static-field.interface';\nimport { EducationLifeID } from '../static-pages.data';\nimport { EduPremRateService, EduSurrRateService } from './models&services/education-life-rate.service';\nimport { EduPaymentService } from './models&services/education-life.service';\n\n@Component({\n  selector: 'app-education-life',\n  templateUrl: './education-life.component.html',\n  styleUrls: ['./education-life.component.scss']\n})\nexport class EducationLifeComponent implements OnInit {\n  @Input() product: Product\n  @Input() editData: QuotationDTO | PolicyDTO\n  @Input() resourcesId: string\n  @Output() actionEvent = new EventEmitter<StaticPageAction>();\n  parentData: any\n  premimuRate = {\n    \"9opt\": 5,\n    \"11opt\": 7,\n    \"14opt\": 10,\n  }\n  frequency = {\n    monthly: 1,\n    quarterly: 4,\n    semi_annually: 6,\n    annually: 12,\n  }\n  lists: number[] = []\n  currentAge: number\n  premimuRateNum: number\n  sumInsured: number\n  frequencyValue: number\n  plan: string\n  policyTermCode: string\n  premiumRate: any[] = []\n  surrendRate: any[] = []\n  showDatas: any[] = []\n  premiumAmt\n  constructor(\n    private globalFun: GlobalFunctionService,\n    private alertService: AlertService,\n    private prodService: ProductDataService,\n    private eduPreService: EduPremRateService,\n    private eduSurrService: EduSurrRateService,\n    private eduPayment: EduPaymentService,\n    private cdf: ChangeDetectorRef,\n    private auth: AuthService,\n    private numberPipe: DecimalPipe,\n  ) { }\n\n  ngOnInit(): void {\n    this.parentData = this.getParnet()\n    if (!this.parentData) {\n      this.alertService.activate(\"This page cann't to show because there is no education life product detail data. Please add education life product detail in rodcut configuration\", \"Warning\")\n    } else {\n\n      this.getRateValue().pipe(switchMap((res) => {\n        if (!res[0] || !res[1]) throw res\n        return of({ premium: res[0], surrend: res[1] })\n      })).toPromise().then((res) => {\n\n        if (res) {\n          this.premiumRate = res.premium\n          this.surrendRate = res.surrend\n          this.createListData()\n        }\n      }).catch(e => {\n        console.log(e);\n      })\n      // rate age benifitPlan policyTerm year\n      // this.parentData['sum_insured'] this.parentData['sum_insured']\n      // paPolicyValidationResult\n    }\n  }\n\n  createListData() {\n\n    this.getcalculateData()\n    this.showDatas = []\n    // console.log(this.premimuRate[policyTermValue + \"opt\"]);\n    let doub = this.plan == \"001\" ? 1 : 2\n    this.lists.forEach((x, i) => {\n      let objData = {\n        resourceId: this.resourcesId,\n        endOfPolicyYear: x,\n        age: this.currentAge + i,\n        benefitPlan: this.plan,\n        premiumPaid: this.premimuRateNum >= x ? this.calculatePre(this.currentAge + i, x) : 0,\n        deathBenefit: this.sumInsured * doub,\n        surrenderValue: this.calculateSur(x),\n        maturityBenefit: this.calculateSur(x) * 0.9\n      }\n      // {\n      //   \"age\": 0,\n      //   \"benefitPlan\": \"string\",\n      //   \"deathBenefit\": 0,\n      //   \"id\": 0,\n      //   \"maturityBenefit\": 0,\n      //   \"premiumPaid\": 0,\n      //   \"resourceId\": \"string\",\n      //   \"surrenderValue\": 0\n      // }\n      this.showDatas.push(objData)\n      if (i + 1 == this.lists.length) {\n        this.cdf.detectChanges()\n      }\n    })\n\n  }\n\n  getcalculateData() {\n    let policyTerm: any = this.globalFun.paPolicyValidationResult.value\n    let policyTermValue = policyTerm.validationValue\n    this.premimuRateNum = this.premimuRate[policyTermValue + \"opt\"]\n    this.policyTermCode = this.parentData['policy_term']\n    this.sumInsured = this.parentData['sum_insured']\n    this.plan = this.parentData['insured_plan']\n    let dob = this.parentData['date_of_birth']\n    this.currentAge = Math.ceil(moment().diff(dob, 'years', true));\n    let paymentFrequency = this.parentData['payment_frequency']\n    this.frequencyValue = this.frequency[paymentFrequency]\n    this.lists = Array.from({ length: policyTermValue }, (_, i) => i + 1)\n    return true\n  }\n\n  getParnet() {\n    if (IsJsonString(this.product.config)) {\n      let pageUI: ProductPages = JSON.parse(this.product.config);\n      let pageOrder = this.prodService.type != 'quotation' ? pageUI.application || [] : pageUI.quotation || []\n      let parent = pageOrder.find(page => page.tableName == 'el_detail')\n      if (parent) {\n        return this.globalFun.tempFormData[parent.tableName + parent.id] || null\n      }\n      return null\n    }\n    return null\n  }\n\n  calculatePre(age: number, year: number): number {\n    // console.log();\n    let tempRate = 15.5\n    let rate = this.premiumRate.find(x => x.age == age)\n    if (rate) {\n      tempRate = rate.rate\n    }\n    // this.frequencyValue\n    let monthly = ((tempRate / 1000) * this.sumInsured)\n    if (year == 1) {\n      console.log(this.frequencyValue);\n      let tempPre = (this.globalFun.calculateDecimal(monthly * this.frequencyValue) + 1500)\n      this.premiumAmt = this.numberPipe.transform(tempPre) + \" MMK / \" + this.parentData['payment_frequency']\n      this.globalFun.paPremiumResult.next(this.premiumAmt)\n    }\n    return this.globalFun.calculateDecimal(monthly * 12) * year\n  }\n\n  calculateSur(year: number): number {\n    let tempRate = 10\n    let rate = this.surrendRate.find(x => x.year == year)\n    if (rate) {\n      tempRate = rate.rate\n      let surrend = (tempRate / 100) * this.sumInsured\n      return surrend\n    }\n    return 0\n  }\n\n  getRateValue(): Observable<any> {\n    return forkJoin([this.getPRate(), this.getSurRate()]).pipe(map((res) => {\n      return res\n    }))\n  }\n\n  getPRate() {\n    return this.eduPreService.getMany(this.parentData['insured_plan'], this.parentData['policy_term'])\n  }\n\n  getSurRate() {\n    return this.eduSurrService.getMany(this.parentData['policy_term'])\n  }\n  nextPage() {\n    if (this.showDatas.length > 0) {\n      this.eduPayment.deleteMany(this.resourcesId).pipe(mergeMap((res: any) => {\n        let postData = {\n          \"request\": this.showDatas,\n          \"resourceDataDTO\": {\n            \"agentId\": this.auth.currentUserValue.id || 1,\n            \"customerId\": this.prodService.creatingCustomer.customerId || 1,\n            \"policyNumber\": null,\n            \"premium\": (Number(this.premiumAmt.split(\" \")[0].split(',').join(\"\")) || 0) + \"\",\n            \"premiumView\": this.premiumAmt,\n            \"productId\": this.product.id,\n            \"quotationId\": this.prodService.referenceID,\n            \"type\": this.prodService.type\n          },\n          \"resourceId\": this.resourcesId\n        }\n        return this.eduPayment.saveMany(postData)\n      })).toPromise().then((res) => {\n        if (res) {\n          this.globalFun.tempFormData[EducationLifeID] = this.showDatas\n          this.actionEvent.emit({ type: StaticActionType.NEXT })\n        }\n      })\n    }\n\n  }\n  backPage() {\n    this.actionEvent.emit({ type: StaticActionType.PREV })\n  }\n\n}\n","import { HttpClient } from \"@angular/common/http\";\nimport { Injectable } from \"@angular/core\";\nimport { environment } from \"../../../../../environments/environment\";\nimport { BizOperationService } from \"../../../../core/biz.operation.service\";\nimport { EDURateDTO } from \"./education-quo.dto\";\n\nconst API_EDU_P_RATE_URL = `${environment.apiUrl}/education-premium-rates`;\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class EduPremRateService extends BizOperationService<EDURateDTO, number>{\n  constructor(protected httpClient: HttpClient) {\n    super(httpClient, API_EDU_P_RATE_URL);\n  }\n\n  getMany(plan: string, term: string) {\n    return this.httpClient.get(API_EDU_P_RATE_URL + \"?benefitPlan=\" + plan + \"&policyTerm=\" + term)\n  }\n}\n\nconst API_EDU_S_RATE_URL = `${environment.apiUrl}/education-surrender-values`;\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class EduSurrRateService extends BizOperationService<EDURateDTO, number>{\n  constructor(protected httpClient: HttpClient) {\n    super(httpClient, API_EDU_S_RATE_URL);\n  }\n\n  getMany(term: string) {\n    return this.httpClient.get(API_EDU_S_RATE_URL + \"?policyTerm=\" + term)\n  }\n}","import { HttpClient } from \"@angular/common/http\";\nimport { Injectable } from \"@angular/core\";\nimport { environment } from \"../../../../../environments/environment\";\nimport { BizOperationService } from \"../../../../core/biz.operation.service\";\nimport { EduPaymentDTO } from \"./education-quo.dto\";\n\nconst API_EDU_LIFE_URL = `${environment.apiUrl}/education/life-benefit`;\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class EduPaymentService extends BizOperationService<EduPaymentDTO, number>{\n  constructor(protected httpClient: HttpClient) {\n    super(httpClient, API_EDU_LIFE_URL);\n  }\n\n  deleteMany(redId: string) {\n    // /api/v1/health/payment-schedule/resource/{resourceId}\n    return this.httpClient.delete(API_EDU_LIFE_URL + \"/resource/\" + redId)\n  }\n  getMany(redId: string) {\n    // /api/v1/health/payment-schedule/resource/{resourceId}\n    return this.httpClient.get(API_EDU_LIFE_URL + \"/resource/\" + redId)\n  }\n\n  saveMany(data: any) {\n    return this.httpClient.post(API_EDU_LIFE_URL + \"s\", data)\n  }\n}","import { Component, EventEmitter, Input, OnInit, Output, ViewChild } from '@angular/core';\nimport { PolicyDTO } from '../../policy/policy.dto';\nimport { Product } from '../../products/models/product.dto';\nimport { QuotationDTO } from '../../quotations/quotation.dto';\nimport { StaticActionType, StaticPageAction } from '../static-field.interface';\nimport {\n  ChartComponent,\n  ApexAxisChartSeries,\n  ApexChart,\n  ApexXAxis,\n  ApexTitleSubtitle,\n  ApexYAxis,\n  ApexLegend,\n  ApexDataLabels,\n  ApexMarkers\n} from 'ng-apexcharts';\nimport { AlertService } from '../../../modules/loading-toast/alert-model/alert.service';\nimport { GlobalFunctionService } from '../../../core/global-fun.service';\nimport { EndowmentID } from '../static-pages.data';\n\nexport type ChartOptions = {\n  series: ApexAxisChartSeries;\n  chart: ApexChart;\n  xaxis: ApexXAxis;\n  yaxis: ApexYAxis;\n  title: ApexTitleSubtitle;\n  legend: ApexLegend;\n  dataLabels: ApexDataLabels,\n  markers: ApexMarkers\n};\n@Component({\n  selector: 'app-endo-grip',\n  templateUrl: './endo-griph.component.html',\n  styleUrls: ['./endo-griph.component.scss']\n})\nexport class EndoGripComponent implements OnInit {\n  @Input() product: Product\n  @Input() editData: QuotationDTO | PolicyDTO\n  @Input() resourcesId: string\n  @Output() actionEvent = new EventEmitter<StaticPageAction>();\n  @ViewChild(\"chart\") chart: ChartComponent;\n  public chartOptions: Partial<ChartOptions>;\n  // showValue = [636000, 1272000, 1908000, 2544000, 3180000, 3816000, 4452000]\n  @Input() parentData: any\n  showDatas: any[] = []\n  constructor(private alertService: AlertService, private globalFun: GlobalFunctionService) {\n    this.chartOptions = {\n      series: [\n        {\n          name: \"Premium Amount\",\n          data: [],\n          color: \"#005f99\"\n        }\n      ],\n      chart: {\n        height: 450,\n        type: \"line\",\n        toolbar: {\n          show: false\n        }\n      },\n      title: {\n        text: \"Basic Benefit Illustration\",\n        offsetX: 0,\n        offsetY: 10,\n        floating: false,\n        style: {\n          fontSize: \"1.1rem\",\n          fontFamily: \"Roboto\"\n        }\n\n      },\n      xaxis: {\n        type: 'category',\n        categories: [\"0\", \"1 year\", \"2 years\", \"3 years\", \"4 years\", \"5 years\", \"6 years\", \"7 years\", \"8 years\", \"9 years\", \"10 years\", \"11 years\", \"12 years\", \"13 years\", \"14 years\"],\n        labels: {\n          style: {\n            fontSize: \"1rem\",\n            fontFamily: \"Roboto\"\n          }\n        }\n      },\n      yaxis: {\n        min: 0,\n        max: 1000000,\n        tickAmount: 5,\n        labels: {\n          style: {\n            fontSize: \"1rem\",\n            fontFamily: \"Roboto\"\n          }\n        }\n      },\n      legend: {\n        position: 'top',\n        horizontalAlign: 'right',\n        floating: true,\n        offsetY: -25,\n        offsetX: -5\n      },\n      dataLabels: {\n        enabled: true,\n        textAnchor: 'middle',\n        offsetX: -10,\n        offsetY: -5,\n        enabledOnSeries: [0]\n      },\n      markers: {\n        size: [5,0,0],\n        \n      }\n    };\n  }\n  ngOnInit(): void {\n\n    // this.parentData = this.getParnet()\n    if (!this.parentData) {\n      this.alertService.activate(\"This page cann't to show because there is no education life product detail data. Please add education life product detail in rodcut configuration\", \"Warning\")\n    } else {\n      let dataArr: any[] = this.parentData.map((x) => {\n\n        if (x.premiumPaid)\n          return x.premiumPaid > 0 ? x.premiumPaid : null\n        else return null\n      })\n      dataArr.unshift(null)\n      // if (this.parentData.length > 0) {\n        // if (this.parentData[0].benefitPlan == '002') {\n        //   this.chartOptions.title.text = \"Double Benefit Illustration\"\n        //   this.chartOptions.yaxis.max = 5000000 * 2\n        //   this.chartOptions.series[1] = {\n        //     data: [],\n        //     name: \"Goal\"\n        //   }\n        //   this.chartOptions.series[2] = {\n        //     data: [],\n        //     name: \"2X Goal\"\n        //   }\n        //   this.chartOptions.series[1].data = [5000000, 5000000, 5000000, 5000000, 5000000, 5000000, 5000000, 5000000, 5000000, 5000000, 5000000, 5000000, 5000000, 5000000,5000000]\n        //   this.chartOptions.series[2].data = [10000000, 10000000, 10000000, 10000000, 10000000, 10000000, 10000000, 10000000, 10000000, 10000000, 10000000, 10000000, 10000000, 10000000,10000000]\n        // }\n      // }\n\n      this.chartOptions.series[0].data = dataArr\n      // 0, 636000, 1272000, 1908000, 2544000, 3180000, 3816000, 4452000\n    }\n  }\n\n\n  getParnet() {\n    return this.globalFun.tempFormData[EndowmentID]\n  }\n  nextPage() {\n    this.actionEvent.emit({ type: StaticActionType.NEXT })\n\n  }\n  backPage() {\n    this.actionEvent.emit({ type: StaticActionType.PREV })\n  }\n\n}\n","import { DecimalPipe } from '@angular/common';\nimport { ChangeDetectorRef, Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport * as moment from 'moment';\nimport { forkJoin, Observable, of } from 'rxjs';\nimport { map, mergeMap, retry, switchMap } from 'rxjs/operators';\nimport { GlobalFunctionService } from '../../../core/global-fun.service';\nimport { IsJsonString } from '../../../core/is-json';\nimport { AuthService } from '../../../modules/auth';\nimport { AlertService } from '../../../modules/loading-toast/alert-model/alert.service';\nimport { PolicyDTO } from '../../policy/policy.dto';\nimport { Product, ProductPages } from '../../products/models/product.dto';\nimport { ProductDataService } from '../../products/services/products-data.service';\nimport { QuotationDTO } from '../../quotations/quotation.dto';\nimport { StaticActionType, StaticPageAction } from '../static-field.interface';\nimport { EndowmentID } from '../static-pages.data';\nimport { EndoRateService, EndoSurrRateService } from './models&services/endo-rate.service';\nimport { EndoService } from './models&services/endo.service';\n\n@Component({\n  selector: 'app-endo',\n  templateUrl: './endo.component.html',\n  styleUrls: ['./endo.component.scss']\n})\nexport class EndoComponent implements OnInit {\n  @Input() product: Product\n  @Input() editData: QuotationDTO | PolicyDTO\n  @Input() resourcesId: string\n  @Output() actionEvent = new EventEmitter<StaticPageAction>();\n  parentData: any\n  premimuRate = {\n    \"9opt\": 5,\n    \"11opt\": 7,\n    \"14opt\": 10,\n  }\n  frequency = {\n    monthly: 1,\n    quarterly: 4,\n    semi_annually: 6,\n    annually: 12,\n  }\n  lists: number[] = []\n  currentAge: number\n  premimuRateNum: number\n  sumInsured: number\n  frequencyValue: number\n  policyTermCode: string\n  premiumRate: any[] = []\n  surrendRate: any[] = []\n  showDatas: any[] = []\n  premiumAmt\n  constructor(\n    private globalFun: GlobalFunctionService,\n    private alertService: AlertService,\n    private prodService: ProductDataService,\n    private eduPreService: EndoRateService,\n    private eduSurrService: EndoSurrRateService,\n    private eduPayment: EndoService,\n    private cdf: ChangeDetectorRef,\n    private auth: AuthService,\n    private numberPipe: DecimalPipe,\n  ) { }\n\n  ngOnInit(): void {\n    this.parentData = this.getParnet()\n    if (!this.parentData) {\n      this.alertService.activate(\"This page cann't to show because there is no endowment product detail data. Please add endowment product detail in prodcut configuration\", \"Warning\")\n    } else {\n\n      this.getRateValue().pipe(switchMap((res) => {\n        if (!res[0] || !res[1]) throw res\n        return of({ premium: res[0], surrend: res[1] })\n      })).toPromise().then((res) => {\n\n        if (res) {\n          this.premiumRate = res.premium\n          this.surrendRate = res.surrend\n          this.createListData()\n        }\n      }).catch(e => {\n        console.log(e);\n      })\n      // rate age benifitPlan policyTerm year\n      // this.parentData['sum_insured'] this.parentData['sum_insured']\n      // paPolicyValidationResult\n    }\n  }\n\n  createListData() {\n\n    this.getcalculateData()\n    this.showDatas = []\n    // console.log(this.premimuRate[policyTermValue + \"opt\"]);\n    this.lists.forEach((x, i) => {\n      let objData = {\n        resourceId: this.resourcesId,\n        endOfPolicyYear: x,\n        age: this.currentAge + i,\n        premiumPaid: this.premimuRateNum >= x ? this.calculatePre(this.currentAge + i, x) : 0,\n        benefit: this.sumInsured,\n        surrenderValue: this.calculateSur(x),\n        policyLoan: this.calculateSur(x) * 0.9\n      }\n      // {\n      //   \"age\": 0,\n      //   \"benefitPlan\": \"string\",\n      //   \"deathBenefit\": 0,\n      //   \"id\": 0,\n      //   \"maturityBenefit\": 0,\n      //   \"premiumPaid\": 0,\n      //   \"resourceId\": \"string\",\n      //   \"surrenderValue\": 0\n      // }\n      this.showDatas.push(objData)\n      if (i + 1 == this.lists.length) {\n        this.cdf.detectChanges()\n      }\n    })\n\n  }\n\n  getcalculateData() {\n    let policyTerm: any = this.globalFun.paPolicyValidationResult.value\n    let policyTermValue = policyTerm.validationValue\n    this.premimuRateNum = this.premimuRate[policyTermValue + \"opt\"]\n    this.policyTermCode = this.parentData['policy_term']\n    this.sumInsured = this.parentData['sum_insured']\n    let dob = this.parentData['date_of_birth']\n    this.currentAge = Math.ceil(moment().diff(dob, 'years', true));\n    let paymentFrequency = this.parentData['payment_frequency']\n    this.frequencyValue = this.frequency[paymentFrequency]\n    this.lists = Array.from({ length: policyTermValue }, (_, i) => i + 1)\n    return true\n  }\n\n  getParnet() {\n    if (IsJsonString(this.product.config)) {\n      let pageUI: ProductPages = JSON.parse(this.product.config);\n      // console.log(\"pageUI\",pageUI);\n      let pageOrder = this.prodService.type != 'quotation' ? pageUI.application || [] : pageUI.quotation || []\n      let parent = pageOrder.find(page => page.tableName == 'endo_detail')\n      if (parent) {\n        return this.globalFun.tempFormData[parent.tableName + parent.id] || null\n      }\n      return null\n    }\n    return null\n  }\n\n  calculatePre(age: number, year: number): number {\n    // console.log();\n    let tempRate = 15.5\n    let rate = this.premiumRate.find(x => x.age == age)\n    if (rate) {\n      tempRate = rate.rate\n    }\n    // this.frequencyValue\n    let monthly = ((tempRate / 1000) * this.sumInsured)\n    if (year == 1) {\n      console.log(this.frequencyValue);\n      let tempPre = (this.globalFun.calculateDecimal(monthly * this.frequencyValue) + 1500)\n      this.premiumAmt = this.numberPipe.transform(tempPre) + \" MMK / \" + this.parentData['payment_frequency']\n      this.globalFun.paPremiumResult.next(this.premiumAmt)\n    }\n    return this.globalFun.calculateDecimal(monthly * 12) * year\n  }\n\n  calculateSur(year: number): number {\n    let tempRate = 10\n    let rate = this.surrendRate.find(x => x.year == year)\n    if (rate) {\n      tempRate = rate.rate\n      let surrend = (tempRate / 100) * this.sumInsured\n      return surrend\n    }\n    return 0\n  }\n\n  getRateValue(): Observable<any> {\n    return forkJoin([this.getPRate(), this.getSurRate()]).pipe(map((res) => {\n      return res\n    }))\n  }\n\n  getPRate() {\n    return this.eduPreService.getMany(this.parentData['policy_term'])\n  }\n\n  getSurRate() {\n    return this.eduSurrService.getMany(this.parentData['policy_term'])\n  }\n  nextPage() {\n    if (this.showDatas.length > 0) {\n      this.eduPayment.deleteMany(this.resourcesId).pipe(mergeMap((res: any) => {\n        let postData = {\n          \"request\": this.showDatas,\n          \"resourceDataDTO\": {\n            \"agentId\": this.auth.currentUserValue.id || 1,\n            \"customerId\": this.prodService.creatingCustomer.customerId || 1,\n            \"policyNumber\": null,\n            \"premium\": (Number(this.premiumAmt.split(\" \")[0].split(',').join(\"\")) || 0) + \"\",\n            \"premiumView\": this.premiumAmt,\n            \"productId\": this.product.id,\n            \"quotationId\": this.prodService.referenceID,\n            \"type\": this.prodService.type\n          },\n          \"resourceId\": this.resourcesId\n        }\n        return this.eduPayment.saveMany(postData)\n      })).toPromise().then((res) => {\n        if (res) {\n          this.globalFun.tempFormData[EndowmentID] = this.showDatas\n          this.actionEvent.emit({ type: StaticActionType.NEXT })\n        }\n      })\n    }\n\n  }\n  backPage() {\n    this.actionEvent.emit({ type: StaticActionType.PREV })\n  }\n\n}\n","import { HttpClient } from \"@angular/common/http\";\nimport { Injectable } from \"@angular/core\";\nimport { environment } from \"../../../../../environments/environment\";\nimport { BizOperationService } from \"../../../../core/biz.operation.service\";\n\nconst API_ENDO_RATE_URL = `${environment.apiUrl}/endowment/rate`;\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class EndoRateService extends BizOperationService<any, number>{\n  constructor(protected httpClient: HttpClient) {\n    super(httpClient, API_ENDO_RATE_URL);\n  }\n\n  getMany(term: string) {\n    return this.httpClient.get(API_ENDO_RATE_URL + \"?policyTerm=\" + term)\n  }\n}\n\nconst API_ENDO_S_RATE_URL = `${environment.apiUrl}/endowment/surrender/rate`;\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class EndoSurrRateService extends BizOperationService<any, number>{\n  constructor(protected httpClient: HttpClient) {\n    super(httpClient, API_ENDO_S_RATE_URL);\n  }\n\n  getMany(term: string) {\n    return this.httpClient.get(API_ENDO_S_RATE_URL + \"?policyTerm=\" + term)\n  }\n}","import { HttpClient } from \"@angular/common/http\";\nimport { Injectable } from \"@angular/core\";\nimport { environment } from \"../../../../../environments/environment\";\nimport { BizOperationService } from \"../../../../core/biz.operation.service\";\n\nconst API_EDU_LIFE_URL = `${environment.apiUrl}/endowment`;\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class EndoService extends BizOperationService<any, number>{\n  constructor(protected httpClient: HttpClient) {\n    super(httpClient, API_EDU_LIFE_URL);\n  }\n\n  deleteMany(redId: string) {\n    // /api/v1/health/payment-schedule/resource/{resourceId}\n    return this.httpClient.delete(API_EDU_LIFE_URL + \"/resource/\" + redId)\n  }\n  getMany(redId: string) {\n    // /api/v1/health/payment-schedule/resource/{resourceId}\n    return this.httpClient.get(API_EDU_LIFE_URL + \"/resource/\" + redId)\n  }\n\n  saveMany(data: any) {\n    return this.httpClient.post(API_EDU_LIFE_URL + \"s\", data)\n  }\n}","import { DecimalPipe } from '@angular/common';\nimport { ChangeDetectorRef, Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\nimport { GlobalFunctionService } from '../../../core/global-fun.service';\nimport { PolicyDTO } from '../../policy/policy.dto';\nimport { Product } from '../../products/models/product.dto';\nimport { QuotationDTO } from '../../quotations/quotation.dto';\nimport { StaticActionType, StaticPageAction } from '../static-field.interface';\nimport { FireRiskID } from '../static-pages.data';\nimport { FireRiskService } from './models&services/fire-risk.service';\nimport { RiskDetailComponent } from './risk-detail/risk-detail.component';\n\n@Component({\n  selector: 'app-fire-risk',\n  templateUrl: './fire-risk.component.html',\n  styleUrls: ['./fire-risk.component.scss']\n})\nexport class FireRiskComponent implements OnInit {\n  @Input() product: Product\n  @Input() editData: QuotationDTO | PolicyDTO\n  @Input() resourcesId: string\n  @Output() actionEvent = new EventEmitter<StaticPageAction>();\n  premiumAmt: string = \"\"\n  listData: any[] = []\n  constructor(\n    private globalFun: GlobalFunctionService,\n    private fireRiskService: FireRiskService,\n    private modalService: NgbModal,\n    private cdf: ChangeDetectorRef\n  ) { }\n\n  ngOnInit(): void {\n    this.getRiskList()\n  }\n  nextPage() {\n    this.globalFun.tempFormData[FireRiskID] = this.listData\n    this.actionEvent.emit({ type: StaticActionType.NEXT })\n  }\n  backPage() {\n    this.actionEvent.emit({ type: StaticActionType.PREV })\n  }\n\n  getRiskList() {\n    this.fireRiskService.getMany(this.resourcesId).toPromise().then((res: any) => {\n      if (res) {\n        this.globalFun.tempFormData[FireRiskID] = res\n        this.listData = res || []\n        this.cdf.detectChanges()\n      }\n    })\n  }\n\n  newData(type: string, detail?: any) {\n    let modalRef;\n    modalRef = this.modalService.open(RiskDetailComponent, { size: 'xl', backdrop: false });\n    modalRef.componentInstance.type = type\n    modalRef.componentInstance.riskId = detail ? detail.riskId : \"\"\n    modalRef.componentInstance.oldData = detail ? detail : {}\n    modalRef.componentInstance.resourcesId = this.resourcesId\n    modalRef.componentInstance.premiumAmt = this.premiumAmt\n    modalRef.result.then(() => { }, (res) => {\n      if (res) {\n        console.log(\"RESSSS\", res)\n        if (res.type == \"save\") {\n          // this.surrounding=res.data\n          if (detail) {\n            let index = this.listData.findIndex(x=> x.id == detail.id)\n            this.listData[index] = res.data\n          } else {\n            this.listData.push(res.data)\n          }\n          this.cdf.detectChanges()\n        }\n      }\n    })\n  }\n\n  delete(data) {\n    this.fireRiskService.delete(data.id).toPromise()\n      .then((res) => {\n        if (res) {\n          let index = this.listData.findIndex(x => x.id == data.id)\n          if (index >= 0) {\n            this.listData.splice(index, 1)\n            this.cdf.detectChanges()\n          }\n        }\n      });\n  }\n\n}\n","import { HttpClient } from \"@angular/common/http\";\nimport { Injectable } from \"@angular/core\";\nimport { environment } from \"../../../../../environments/environment\";\nimport { BizOperationService } from \"../../../../core/biz.operation.service\";\n\nconst API_RISK_RATE_URL = `${environment.apiUrl}/fire-policy/pae`;\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class FireRiskRateService extends BizOperationService<any, number>{\n  constructor(protected httpClient: HttpClient) {\n    super(httpClient, API_RISK_RATE_URL);\n  }\n\n  getMany(data) {\n    return this.httpClient.post(API_RISK_RATE_URL, data)\n  }\n}\n","import { ChangeDetectorRef, Component, Input, OnInit } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { NgbActiveModal, NgbModal } from '@ng-bootstrap/ng-bootstrap';\nimport { map } from 'rxjs/operators';\nimport { AuthService } from 'src/app/modules/auth';\nimport { MasterDataService } from 'src/app/modules/master-data/master-data.service';\nimport { GlobalFunctionService } from '../../../../core/global-fun.service';\nimport { validateAllFields } from '../../../../core/valid-all-feild';\nimport { ProductDataService } from '../../../products/services/products-data.service';\nimport { FirePageID } from '../../static-pages.data';\nimport { PremiumRateService } from '../../surrounding-building/models&services/premium-rate-service';\nimport { SurroundingBuildingService } from '../../surrounding-building/models&services/surrounding-building.service';\nimport { FireRiskRateService } from '../models&services/fire-risk-rate.service';\nimport { FireRiskService } from '../models&services/fire-risk.service';\n\n@Component({\n  selector: 'app-risk-detail',\n  templateUrl: './risk-detail.component.html',\n  styleUrls: ['./risk-detail.component.scss']\n})\nexport class RiskDetailComponent implements OnInit {\n  fireRiskform: FormGroup;\n  typeOfBuildingOption: any = []\n  occupationOfBuildingOption: any[] = []\n  occupationOfBuildingOptions: any[] = []\n  buildingClassOption: any = []\n  roofOption: any = []\n  wallOption: any = []\n  floorClassOption: any = []\n  premiumRateOption: any = []\n  type: string = 'create'\n  resourcesId: string = \"\"\n  @Input() oldData: any = {}\n  premiumAmt: string = \"\"\n  viewPage = \"form\"\n  buildingSi: number = 0\n  riskSi: number = 0\n  otherSi: number = 0\n  fireRate: number = 0\n  productDetail: any = {}\n  fireContentSi: number = 0\n  firePlatSi: number = 0\n  fireStockSi: number = 0\n  constructor(private modalService: NgbModal, public modal: NgbActiveModal, private masterDataService: MasterDataService, private cdf: ChangeDetectorRef, private fireRiskService: FireRiskService, private auth: AuthService, private PremiumRateService: PremiumRateService, private prodService: ProductDataService, private globalService: GlobalFunctionService, private fireRiskRate: FireRiskRateService, private firebuildingService: SurroundingBuildingService) { }\n\n  ngOnInit(): void {\n    this.loadForm()\n    this.getBuildingClass()\n    this.getBuildingType()\n    this.getBuildingOccupation()\n    this.getRoof()\n    this.getWall()\n    this.getFloor()\n    this.productDetail = this.globalService.tempFormData[FirePageID] || {}\n    if (this.type == 'create') {\n      this.loadForm()\n    } else {\n      this.loadForm(this.oldData)\n      if(this.oldData.id){\n        this.getFirePlant()\n        this.getFireStock()\n        this.getFireContent()\n      }\n    }\n\n  }\n  getBuildingClass() {\n    this.masterDataService\n      .getDataByType(\"BUILDING_CLASS\").pipe(map(x => this.getFormatOpt(x)))\n      .toPromise()\n      .then((res: any) => {\n        if (res) {\n          this.buildingClassOption = res\n          this.cdf.detectChanges();\n        }\n      });\n  }\n\n  getBuildingType() {\n    this.masterDataService\n      .getDataByType(\"BUILDING_TYPE\").pipe(map(x => this.getFormatOpt(x)))\n      .toPromise()\n      .then((res: any) => {\n        if (res) {\n          this.typeOfBuildingOption = res\n          this.cdf.detectChanges();\n        }\n      });\n  }\n\n  getRoof() {\n    this.masterDataService\n      .getDataByType(\"CONSTRUCTION_ROOF\").pipe(map(x => this.getFormatOpt(x)))\n      .toPromise()\n      .then((res: any) => {\n        if (res) {\n          this.roofOption = res\n          this.cdf.detectChanges();\n        }\n      });\n  }\n\n  getWall() {\n    this.masterDataService\n      .getDataByType(\"CONSTRUCTION_WALL\").pipe(map(x => this.getFormatOpt(x)))\n      .toPromise()\n      .then((res: any) => {\n        if (res) {\n          this.wallOption = res\n          this.cdf.detectChanges();\n        }\n      });\n  }\n\n  getFloor() {\n    this.masterDataService\n      .getDataByType(\"CONSTRUCTION_FLOOR\").pipe(map(x => this.getFormatOpt(x)))\n      .toPromise()\n      .then((res: any) => {\n        if (res) {\n          this.floorClassOption = res\n          this.cdf.detectChanges();\n        }\n      });\n  }\n\n  getBuildingOccupation() {\n    this.masterDataService\n      .getDataByType(\"BUILDING_OCCUPATION\").pipe(map(x => this.getFormatOpt(x)))\n      .toPromise()\n      .then((res: any) => {\n        if (res) {\n          this.occupationOfBuildingOptions = res\n          let occupationOfBuilding = this.fireRiskform.value.occupationOfBuilding\n          let typeOfBuilding = this.fireRiskform.value.typeOfBuilding\n          if (occupationOfBuilding && typeOfBuilding) {\n            this.occupationOfBuildingOption = this.occupationOfBuildingOptions.filter(x => x.parent == typeOfBuilding)\n            let index = this.occupationOfBuildingOption.findIndex(x => x.code == occupationOfBuilding)\n            if (index < 0) {\n              this.fireRiskform.controls.occupationOfBuilding.setValue(null)\n            }\n          }\n          this.cdf.detectChanges();\n        }\n      });\n  }\n\n  getFormatOpt(res) {\n    return res.map(x => {\n      return { 'code': x.codeId, 'value': x.codeName || x.codeValue, 'parent': x.parentId }\n    })\n  }\n\n  calcuRate(type?: string) {\n    let buildingClass = this.fireRiskform.value.buildingClass\n    let occupationOfBuilding = this.fireRiskform.value.occupationOfBuilding\n    let typeOfBuilding = this.fireRiskform.value.typeOfBuilding\n    if (type == 'child') {\n      this.occupationOfBuildingOption = this.occupationOfBuildingOptions.filter(x => x.parent == typeOfBuilding)\n      let index = this.occupationOfBuildingOption.findIndex(x => x.code == occupationOfBuilding)\n      if (index < 0) {\n        this.fireRiskform.controls.occupationOfBuilding.setValue(null)\n      }\n    }\n    if (buildingClass && occupationOfBuilding && typeOfBuilding) {\n      this.getPremiumRate()\n    }\n  }\n\n  getPremiumRate() {\n    let buildingClass = this.fireRiskform.value.buildingClass\n    let occupationOfBuilding = this.fireRiskform.value.occupationOfBuilding\n    let typeOfBuilding = this.fireRiskform.value.typeOfBuilding\n    this.PremiumRateService.getPremiumRate(buildingClass, occupationOfBuilding, typeOfBuilding).toPromise().then((res: any) => {\n      if (res) {\n        this.fireRiskform.controls.rate.setValue(res.premiumRate)\n      }\n    })\n  }\n\n  loadForm(oldData?) {\n    //     Validators.required\n    // Validators.required\n    // Validators.required\n    this.fireRiskform = new FormGroup({\n      buildingClass: new FormControl(oldData ? oldData.buildingClass : \"\", Validators.required),\n      buildingDescription: new FormControl(oldData ? oldData.buildingDescription : \"\"),\n      // id: new FormControl(oldData ? oldData.id : \"\"),\n      occupationOfBuilding: new FormControl(oldData ? oldData.occupationOfBuilding : \"\", Validators.required),\n      typeOfBuilding: new FormControl(oldData ? oldData.typeOfBuilding : \"\", Validators.required),\n      constructionOfFloor: new FormControl(oldData ? oldData.constructionOfFloor : \"\",),\n      constructionOfRoof: new FormControl(oldData ? oldData.constructionOfRoof : \"\",),\n      constructionOfWall: new FormControl(oldData ? oldData.constructionOfWall : \"\",),\n      height: new FormControl(oldData ? oldData.height : \"\"),\n      length: new FormControl(oldData ? oldData.length : \"\"),\n      width: new FormControl(oldData ? oldData.width : \"\"),\n      rate: new FormControl(oldData ? oldData.rate : \"\"),\n      specialDecoration: new FormControl(oldData ? oldData.specialDecoration : \"\"),\n      storyOfBuilding: new FormControl(oldData ? oldData.storyOfBuilding : \"\"),\n      sumInsure: new FormControl(oldData ? oldData.sumInsure : \"\"),\n      totalSquareFoot: new FormControl(oldData ? oldData.totalSquareFoot : \"\"),\n      yearOfConstruction: new FormControl(oldData ? oldData.yearOfConstruction : \"\"),\n      proposeStockValue: new FormControl(oldData ? oldData.proposeStockValue : 0),\n      buildingSi: new FormControl(oldData ? oldData.buildingSi : 0),\n      riskSi: new FormControl(oldData ? oldData.riskSi : 0),\n    })\n    this.riskSi = oldData ? oldData.riskSi : 0\n    this.buildingSi = oldData ? oldData.buildingSi : 0\n    let occupationOfBuilding = this.fireRiskform.value.occupationOfBuilding\n    let typeOfBuilding = this.fireRiskform.value.typeOfBuilding\n    if (occupationOfBuilding && typeOfBuilding && this.occupationOfBuildingOptions.length > 0) {\n      this.occupationOfBuildingOption = this.occupationOfBuildingOptions.filter(x => x.parent == typeOfBuilding)\n      let index = this.occupationOfBuildingOption.findIndex(x => x.code == occupationOfBuilding)\n      if (index < 0) {\n        this.fireRiskform.controls.occupationOfBuilding.setValue(null)\n      }\n    }\n  }\n\n  createRisk(closeModal?: boolean) {\n    if (this.fireRiskform.invalid) {\n      validateAllFields(this.fireRiskform)\n      return true\n    }\n    let data = this.fireRiskform.getRawValue();\n    // this.calBuildingSi()\n    let postData = {\n      ...this.oldData,\n      ...data,\n      id:this.oldData.id,\n      buildingSi: this.buildingSi,\n      riskSi: this.riskSi,\n      resourceData: {\n        agentId: this.auth.currentUserValue.id || 1,\n        customerId: this.prodService.creatingCustomer.customerId || 1,\n        policyNumber: null,\n        premium: (Number(this.premiumAmt.split(\" \")[0].split(',').join(\"\")) || 0) + \"\",\n        premiumView: this.premiumAmt,\n        productId: this.prodService.createingProd.id,\n        quotationId: this.prodService.referenceID,\n        leadId: this.prodService.creatingLeadId || null,\n        resourceId: this.resourcesId,\n        type: this.prodService.type,\n      },\n      resourceId: this.resourcesId\n    }\n\n    // if (this.type != 'create') {\n    if (postData.id) {\n      this.fireRiskService.updateNoID(postData)\n        .toPromise()\n        .then((res) => {\n          if (res) {\n            this.oldData = { ...postData }\n            this.viewPage = \"other\"\n            if (closeModal)\n              this.modalService.dismissAll({ data: postData, type: \"save\" })\n          }\n        });\n    } else {\n      this.fireRiskService.save(postData)\n        .toPromise()\n        .then((res) => {\n          if (res) {\n            postData.id = res\n            this.oldData = { ...postData }\n            this.viewPage = \"other\"\n            if (closeModal)\n              this.modal.dismiss({ data: postData, type: \"save\" })\n          }\n        });\n    }\n  }\n  viewOther(type: string) {\n    if (this.viewPage != type)\n      this.viewPage = type\n  }\n\n  dismissModal() {\n    this.modal.dismiss()\n  }\n\n  isControlValid(controlName: string): boolean {\n    const control = this.fireRiskform.controls[controlName];\n    return control.valid && (control.dirty || control.touched);\n  }\n\n  isControlInvalid(controlName: string): boolean {\n    const control = this.fireRiskform.controls[controlName];\n    return control.invalid && (control.dirty || control.touched);\n  }\n\n  controlHasError(validation, controlName): boolean {\n    const control = this.fireRiskform.controls[controlName];\n    return control.hasError(validation) && (control.dirty || control.touched);\n  }\n\n  isControlTouched(controlName): boolean {\n    const control = this.fireRiskform.controls[controlName];\n    return control.dirty || control.touched;\n  }\n\n  calcuSquare() {\n    let width = this.fireRiskform.controls['width'].value\n    let height = this.fireRiskform.controls['height'].value\n    if (width * height) {\n      let square = width * height\n      this.fireRiskform.controls['totalSquareFoot'].setValue(square)\n    }\n  }\n  async calBuildingSi() {\n    this.buildingSi = 0\n    let pae = this.oldData.sumInsure / this.oldData.totalSquareFoot\n    let postData = {\n      \"classNo\": this.oldData.buildingClass,\n      \"floorCd\": this.oldData.constructionOfFloor,\n      \"roofCd\": this.oldData.constructionOfRoof,\n      \"wallCd\": this.oldData.constructionOfWall,\n      \"year\": this.oldData.yearOfConstruction,\n    }\n    let pae2: any = await this.fireRiskRate.getMany(postData).toPromise()\n    let value = pae\n    if (pae2) {\n      let rate = pae2.limitedPae\n      value = pae > rate ? rate : pae\n    }\n    \n    this.buildingSi = value * this.oldData.totalSquareFoot\n    if (this.otherSi == 0) {\n      this.otherSi = this.fireContentSi + this.firePlatSi + this.fireStockSi\n    }\n    this.riskSi = this.otherSi + this.buildingSi\n    \n    if (this.oldData) {\n      this.oldData.buildingSi = this.buildingSi\n      this.oldData.riskSi = this.riskSi\n    }\n    \n  }\n\n  changeTotal(total) {\n    this.otherSi = 0\n    this.otherSi = total\n  }\n\n  async calPremimun() {\n    console.log(\"rateData,rate1,rate2,\",this.oldData);\n    if (this.oldData.id) {\n      if (this.productDetail.policyType == 'T-001') {\n        await this.calBuildingSi()\n      } else {\n        this.riskSi = this.oldData.proposeStockValue\n        this.oldData.riskSi = this.riskSi\n      }\n      let rateData = 0\n      let rate1 = this.oldData.rate\n      let response: any = await this.firebuildingService.getMaxRate(this.oldData.id).toPromise()\n      let rate2 = response ? response.rate : 0\n      if (this.oldData.specialDecoration) {\n        if ((rate1 * 1.3) > rate2) {\n          rateData = rate1 * 1.3\n        } else {\n          rateData = ((rate1 * 1.3) + rate2) / 2\n        }\n      } else {\n        if (rate1 > rate2) {\n          rateData = rate1\n        } else {\n          rateData = (rate1 + rate2) / 2\n        }\n      }\n      this.oldData.premium = this.globalService.calculateDecimal(this.oldData.riskSi * (rateData / 100))\n      this.createRisk(true)\n    } else {\n      this.modal.dismiss()\n    }\n  }\n  getFireContent() {\n    this.fireRiskService.getContent(this.oldData.id).toPromise().then((res: any) => {\n      if (res) {\n        this.fireContentSi = 0\n        res.forEach(element => {\n          this.fireContentSi += parseFloat(element.totalValue)\n        });\n      }\n    })\n  }\n  getFirePlant() {\n    this.fireRiskService.getPlant(this.oldData.id).toPromise().then((res: any) => {\n      if (res) {\n        this.firePlatSi = 0\n        res.forEach(element => {\n          this.firePlatSi += parseFloat(element.totalValue)\n        });\n      }\n    })\n\n  }\n  getFireStock() {\n    this.fireRiskService.getStock(this.oldData.id).toPromise().then((res: any) => {\n      if (res) {\n        this.fireStockSi = 0\n        res.forEach(element => {\n          this.fireStockSi += parseFloat(element.stockValue)\n        });\n      }\n    })\n\n  }\n\n\n}\n","import { ChangeDetectorRef, Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { NgbDateAdapter, NgbDateParserFormatter } from '@ng-bootstrap/ng-bootstrap';\nimport * as moment from 'moment';\nimport { mergeMap, switchMap } from 'rxjs/operators';\nimport { GlobalFunctionService } from '../../../core/global-fun.service';\nimport { validateAllFields } from '../../../core/valid-all-feild';\nimport { AuthService } from '../../../modules/auth';\nimport { CustomAdapter, CustomDateParserFormatter } from '../../../_metronic/core';\nimport { PolicyDTO } from '../../policy/policy.dto';\nimport { Product } from '../../products/models/product.dto';\nimport { AddOnQuoService } from '../../products/services/add-on-quo.service';\nimport { ProductDataService } from '../../products/services/products-data.service';\nimport { QuotationDTO } from '../../quotations/quotation.dto';\nimport { StaticActionType, StaticPageAction } from '../static-field.interface';\nimport { FireProductService } from './models&services/fire-product.service';\nimport { CoverageQuoService } from '../../products/services/coverage-quo.service';\nimport { forkJoin, Observable, of } from 'rxjs';\nimport { FirePageID } from '../static-pages.data';\nimport { AlertService } from '../../../modules/loading-toast/alert-model/alert.service';\nimport { DateAdapter, MAT_DATE_FORMATS, MAT_DATE_LOCALE } from '@angular/material/core';\nimport { MomentDateAdapter } from '@angular/material-moment-adapter';\nimport { MY_FORMATS } from '../../../core/is-json';\n@Component({\n  selector: 'app-fire-simple-page',\n  templateUrl: './fire-simple-page.component.html',\n  styleUrls: ['./fire-simple-page.component.scss'],\n  providers: [\n    { provide: NgbDateAdapter, useClass: CustomAdapter },\n    { provide: NgbDateParserFormatter, useClass: CustomDateParserFormatter },\n    { provide: DateAdapter, useClass: MomentDateAdapter, deps: [MAT_DATE_LOCALE] },\n    { provide: MAT_DATE_FORMATS, useValue: MY_FORMATS },\n  ]\n})\nexport class FirePageComponent implements OnInit {\n\n  @Input() product: Product\n  @Input() editData: QuotationDTO | PolicyDTO\n  @Input() resourcesId?: string\n  @Input() premiumAmt: string\n  @Output() actionEvent = new EventEmitter<StaticPageAction>();\n  staticForm: FormGroup\n  toMinDate = null\n  fromMinDate = null\n  toMaxDate = null\n  fromMaxDate = null\n  dobMinDate = null\n  dobMaxDate = null\n  options: any[] = []\n  options2: any[] = []\n  addOns: any = {}\n  options3: any[] = []\n  oldData: any\n  options4: any[] = []\n  private editId: number\n  refID: string\n  constructor(\n    private fb: FormBuilder,\n    private prodService: ProductDataService,\n    private auth: AuthService,\n    private fireService: FireProductService,\n    private globalFun: GlobalFunctionService,\n    private addOnQuoService: AddOnQuoService,\n    private coverageQuoService: CoverageQuoService,\n    private alertService: AlertService,\n    private cdf: ChangeDetectorRef\n  ) {\n    this.staticForm = this.fb.group({\n      startDate: [null, Validators.compose([Validators.required])],\n      endDate: [null, Validators.compose([Validators.required])],\n      policyType: ['T-001', Validators.compose([Validators.required])],\n      policyDuration: [null, Validators.compose([Validators.required, Validators.max(365)])],\n      currency: ['T-001', Validators.compose([Validators.required])],\n    })\n    this.options3 = Array.from({ length: 10 }, (_, i) => i + 1)\n  }\n\n  async ngOnInit() {\n\n    this.options = this.product.coverages\n    this.options2 = this.product.addOns\n    this.refID = this.prodService.referenceID\n    let toDate = moment().subtract(5, `days`)\n    this.fromMinDate = toDate.format('YYYY-MM-DD')\n    // this.fromMinDate = { year: parseInt(toDate.format('YYYY')), month: parseInt(toDate.format('M')), day: parseInt(toDate.format('D')) };\n    this.toMinDate = toDate.format('YYYY-MM-DD')\n    // this.toMinDate = { year: parseInt(toDate.format('YYYY')), month: parseInt(toDate.format('M')), day: parseInt(toDate.format('D')) };\n    let dobMaxDate = moment().subtract(6, `years`)\n    this.dobMaxDate = dobMaxDate.format('YYYY-MM-DD')\n    // this.dobMaxDate = { year: parseInt(dobMaxDate.format('YYYY')), month: parseInt(dobMaxDate.format('M')), day: parseInt(dobMaxDate.format('D')) };\n    let dobMinDate = moment().subtract(75, `years`)\n    this.dobMinDate = dobMinDate.format('YYYY-MM-DD')\n    // this.dobMinDate = { year: parseInt(dobMinDate.format('YYYY')), month: parseInt(dobMinDate.format('M')), day: parseInt(dobMinDate.format('D')) };\n    // if (this.prodService.editData || this.refID)\n    this.getOldData()\n    // this.getAddOn()\n    // for (const item of this.product.addOns) {\n    //   let response: any = null;\n    //   try {\n    //     if (this.editData) {\n    //       response = await this.addOnQuoService.getOne(item.id, this.editData.id).toPromise()\n    //     }\n    //   } catch (error) {\n    //     response = null\n    //   }\n    //   this.addOns[item.id + 'opt'] = response ? response.sumInsured || 0 : 0\n    // }\n  }\n\n\n  doValid() {\n    let value = this.staticForm.controls['startDate'].value\n    let duration = this.staticForm.controls['policyDuration'].value\n    if (value && duration) {\n      let toDate = moment(this.staticForm.controls['startDate'].value).add(duration, 'days')\n      this.toMaxDate = { year: parseInt(toDate.format('YYYY')), month: parseInt(toDate.format('M')), day: parseInt(toDate.format('D')) };\n      this.staticForm.controls['endDate'].setValue(toDate)\n    }\n  }\n\n  calcuteDay() {\n    let startDate = moment(this.staticForm.controls['startDate'].value)\n    let endDate = moment(this.staticForm.controls['endDate'].value)\n    let diffDays = startDate.diff(endDate, \"days\") + 1\n    this.staticForm.controls['policyDuration'].setValue(diffDays)\n  }\n\n  get controls() {\n    return this.staticForm.controls\n  }\n\n  // helpers for View\n  isControlValid(controlName: string, group: FormGroup): boolean {\n    const control = group.controls[controlName];\n    return control.valid && (control.dirty || control.touched);\n  }\n\n  isControlInvalid(controlName: string, group: FormGroup): boolean {\n    const control = group.controls[controlName];\n    return control.invalid && (control.dirty || control.touched);\n  }\n\n  controlHasError(validation, controlName, group: FormGroup): boolean {\n    const control = group.controls[controlName];\n    return control.hasError(validation) && (control.dirty || control.touched);\n  }\n\n  isControlTouched(controlName, group: FormGroup): boolean {\n    const control = group.controls[controlName];\n    return control.dirty || control.touched;\n  }\n  nextPage() {\n    if (this.staticForm.invalid) {\n      validateAllFields(this.staticForm)\n      return true\n    } else {\n      if (this.editId) {\n        this.saveData(this.editId)\n      } else {\n        this.saveData()\n      }\n    }\n  }\n\n  backPage() {\n    this.actionEvent.emit({ type: StaticActionType.PREV })\n  }\n\n  saveData(id?) {\n    const formValue = this.staticForm.value\n    let postData = {\n      id: id || null,\n      endDate: moment(formValue.endDate).format(\"YYYY-MM-DD\"),\n      startDate: moment(formValue.startDate).format(\"YYYY-MM-DD\"),\n      policyType: formValue.policyType,\n      policyDuration: formValue.policyDuration,\n      currency: formValue.currency,\n      resourceData: {\n        agentId: this.auth.currentUserValue.id || 1,\n        customerId: this.prodService.creatingCustomer.customerId || 1,\n        policyNumber: null,\n        premium: (Number(this.premiumAmt.split(\" \")[0].split(',').join(\"\")) || 0) + \"\",\n        premiumView: this.premiumAmt,\n        productId: this.prodService.createingProd.id,\n        quotationId: this.prodService.referenceID,\n        leadId: this.prodService.creatingLeadId || null,\n        // status: ,\n        type: this.prodService.type\n      },\n      resourceId: this.resourcesId,\n    }\n    // console.log(postData);\n    if (!id) {\n      this.fireService.save(postData).toPromise().then((res: any) => {\n        if (res) {\n          this.editId = res.id\n          this.resourcesId = res.resourceId\n          this.globalFun.tempFormData[FirePageID] = { id: res.id, ...postData }\n          this.actionEvent.emit({ type: StaticActionType.NEXT, data: { ...res } })\n        }\n      }).catch((e) => e)\n    } else {\n      this.fireService.updateNoID(postData).toPromise().then((res: any) => {\n        if (res) {\n          this.editId = res.id\n          this.globalFun.tempFormData[FirePageID] = { id: res.id, ...postData }\n          this.actionEvent.emit({ type: StaticActionType.NEXT, data: { ...res } })\n        }\n      }).catch((e) => e)\n    }\n\n  }\n\n  // .pipe(mergeMap(resources => {\n  //   return resources\n  // }))\n  getOldData(dataget: boolean = false) {\n    // let dataget = false\n    console.log(this.resourcesId);\n\n    if (this.resourcesId || this.refID) {\n      let resId = dataget ? this.refID : (this.resourcesId || this.refID)\n      if (!resId) return false\n      this.fireService.getOne(resId).toPromise().then((res: any) => {\n        // dataget = true\n        if (res) {\n          this.oldData = { ...res, id: null }\n          this.editId = resId == this.resourcesId ? res.id : null\n          this.reloadOldValueForm()\n        } else {\n          if (!dataget && resId != this.refID) {\n            this.getOldData(true)\n          }\n        }\n      })\n    }\n  }\n\n  reloadOldValueForm() {\n    this.staticForm.patchValue({\n      startDate: moment(this.oldData.startDate),\n      endDate: moment(this.oldData.endDate),\n      policyType: this.oldData.policyType,\n      policyDuration: this.oldData.policyDuration,\n      currency: this.oldData.currency,\n    })\n    this.cdf.detectChanges()\n  }\n\n}","import { DecimalPipe } from '@angular/common';\nimport { ChangeDetectorRef, Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport * as moment from 'moment';\nimport { forkJoin } from 'rxjs';\nimport { mergeMap } from 'rxjs/operators';\nimport { GlobalFunctionService } from '../../../core/global-fun.service';\nimport { AuthService } from '../../../modules/auth';\nimport { AlertService } from '../../../modules/loading-toast/alert-model/alert.service';\nimport { PolicyDTO } from '../../policy/policy.dto';\nimport { Product } from '../../products/models/product.dto';\nimport { ProductDataService } from '../../products/services/products-data.service';\nimport { QuotationDTO } from '../../quotations/quotation.dto';\nimport { StaticActionType, StaticPageAction } from '../static-field.interface';\nimport { HealthPageID } from '../static-pages.data';\nimport { HealthPaymentService } from './models&services/health-payment.service';\nimport { HealthRateService } from './models&services/health-rate.service';\n\n@Component({\n  selector: 'app-health-quo',\n  templateUrl: './health-quo.component.html',\n  styleUrls: ['./health-quo.component.scss']\n})\nexport class HealthQuoComponent implements OnInit {\n  @Input() product: Product\n  @Input() editData: QuotationDTO | PolicyDTO\n  @Input() resourcesId: string\n  @Output() actionEvent = new EventEmitter<StaticPageAction>();\n  @Input() premiumAmt: string\n  showData: any = []\n  schedule: any = []\n  tempSchedule: any = []\n  parentData: any\n  totalP: number = 0\n  totalL: number = 0\n  constructor(private globalFun: GlobalFunctionService, private alertService: AlertService, private healthRateService: HealthRateService, private healthPayService: HealthPaymentService, private cdf: ChangeDetectorRef, private auth: AuthService, private prodService: ProductDataService, private numberPipe: DecimalPipe) { }\n\n  ngOnInit(): void {\n    this.parentData = this.globalFun.tempFormData[HealthPageID]\n    if (!this.parentData) {\n      this.alertService.activate(\"This page cann't to show because there is no health product detail data. Please add health product detail in prodcut configuration\", \"Warning\")\n    } else {\n      this.showData.push({ keyName: this.parentData.basicCoverId, value: this.parentData.sumInsuredMainCover })\n      // for (let addon of this.product.addOns) {\n      // }\n      if (this.parentData.addOns && this.parentData.basicCoverId != \"Critical illness\") {\n        this.product.addOns.forEach(addon => {\n          if (this.parentData.addOns[addon.id + \"opt\"]) {\n            this.showData.push({ keyName: addon.description, value: this.parentData.addOns[addon.id + \"value\"] })\n          }\n        })\n      }\n      this.calculateSchedule()\n    }\n  }\n\n  calculateSchedule() {\n    //lump\n    // annually\n    // if (this.parentData.paymentFrequency)\n    this.totalP = 0\n    this.totalL = 0\n    let firstTimeValue = 300\n    let doCount = this.parentData.paymentFrequency == 'lump' ? 1 : 2\n    let age = Math.ceil(moment().diff(this.parentData.dateOfBirth, 'years', true));\n    this.healthRateService.getOne(age, this.parentData.basicCoverId).toPromise().then((res: any) => {\n\n      if (res) {\n        if (this.parentData.paymentFrequency == 'lump') {\n          let pre = res.lumpSum * this.parentData.sumInsuredMainCover\n          let levy = firstTimeValue * this.parentData.sumInsuredMainCover\n          this.totalP = this.totalP + pre\n          this.totalL = levy\n          this.schedule.push({ premium: pre, coverage: this.parentData.basicCoverId, sumInsured: this.parentData.sumInsuredMainCover, levy: levy })\n          firstTimeValue = 0\n        } else {\n          let pre = res.semiAnnual * this.parentData.sumInsuredMainCover\n          let levy = firstTimeValue * this.parentData.sumInsuredMainCover\n          this.totalP = this.totalP + pre\n          this.totalP = this.totalP + pre\n          this.totalL = levy\n          this.schedule.push({ premium: pre, coverage: this.parentData.basicCoverId, sumInsured: this.parentData.sumInsuredMainCover, levy: levy })\n          firstTimeValue = 0\n          this.schedule.push({ premium: pre, coverage: this.parentData.basicCoverId, sumInsured: this.parentData.sumInsuredMainCover, levy: 0 })\n        }\n        let tempPre = this.globalFun.calculateDecimal(this.totalP / 12) + this.totalL\n        if (this.schedule.length > 0) {\n          if (this.schedule[0].paymentTerm == \"lump\") {\n            this.tempSchedule = [\n              { premium: this.totalP, levy: this.totalL, total: this.totalP + this.totalL },\n            ]\n          } else {\n            let tempTotal = this.totalP / 2\n            this.tempSchedule = [\n              { premium: tempTotal, levy: this.totalL, total: tempTotal + this.totalL },\n              { premium: tempTotal, levy: 0, total: tempTotal },\n            ]\n          }\n        }\n        this.premiumAmt = this.numberPipe.transform(tempPre) + \" MMK / month\"\n        this.globalFun.paPremiumResult.next(this.premiumAmt)\n        if (this.parentData.basicCoverId == \"Critical illness\") {\n          this.cdf.detectChanges()\n        }\n        else\n          this.calculateScheduleAddOn(age)\n      }\n\n    })\n    // Object.keys(this.parentData.addOns).forEach((key) => {\n    //   if (key.includes(\"opt\")) {\n\n    //   }\n    // })\n  }\n\n  calculateScheduleAddOn(age: number) {\n    let i = 0\n    this.product.addOns.forEach(addon => {\n      if (this.parentData.addOns[addon.id + \"opt\"]) {\n        let value = this.parentData.addOns[addon.id + \"value\"]\n        i += 1\n        this.healthRateService.getOne(age, addon.description).toPromise().then((res: any) => {\n          // console.log(res);\n\n          if (res) {\n            if (this.parentData.paymentFrequency == 'lump') {\n              let pre = res.lumpSum * value\n              this.totalP = this.totalP + pre\n              this.schedule.push({ premium: pre, coverage: addon.description, sumInsured: value, levy: 0 })\n            } else {\n              let pre = res.semiAnnual * value\n              this.totalP = this.totalP + pre\n              this.totalP = this.totalP + pre\n              this.schedule.push({ premium: pre, coverage: addon.description, sumInsured: value, levy: 0 })\n              this.schedule.push({ premium: pre, coverage: addon.description, sumInsured: value, levy: 0 })\n            }\n          }\n          if (i == this.product.addOns.length) {\n            let tempPre = this.globalFun.calculateDecimal(this.totalP / 12) + this.totalL\n            this.premiumAmt = this.numberPipe.transform(tempPre) + \" MMK / month\"\n            this.globalFun.paPremiumResult.next(this.premiumAmt)\n            this.cdf.detectChanges()\n          }\n        }).catch(e => {\n          if (i == this.product.addOns.length) this.cdf.detectChanges()\n        })\n      }\n    })\n  }\n\n  async nextPage() {\n    let tempPre = this.globalFun.calculateDecimal(this.totalP / 12) + this.totalL\n    this.premiumAmt = this.numberPipe.transform(tempPre) + \" MMK / month\"\n    this.globalFun.paPremiumResult.next(this.premiumAmt)\n    this.healthPayService.deleteMany(this.resourcesId).pipe(mergeMap((data) => {\n      let postData = {\n        \"resourceData\": {\n          \"agentId\": this.auth.currentUserValue.id || 1,\n          \"customerId\": this.prodService.creatingCustomer.customerId || 1,\n          \"policyNumber\": null,\n          \"premium\": (Number(this.premiumAmt.split(\" \")[0].split(',').join(\"\")) || 0) + \"\",\n          \"premiumView\": this.premiumAmt,\n          \"productId\": this.product.id,\n          \"quotationId\": this.prodService.referenceID,\n          \"type\": this.prodService.type\n        },\n        \"resourceId\": this.resourcesId,\n        \"requests\": []\n      }\n      postData.requests = this.schedule.map((x) => {\n        return {\n          \"paymentTerm\": this.parentData.paymentFrequency,\n          \"plan\": this.parentData.basicCoverId,\n          \"premium\": x.premium,\n          \"levy\": x.levy,\n          \"coverage\": x.coverage,\n          \"sumInsured\": x.sumInsured,\n          \"resourceId\": this.resourcesId,\n          \"total\": x.levy + x.premium,\n        }\n      })\n      return this.healthPayService.saveAll(postData)\n    })).toPromise().then((res) => {\n      if (res) {\n        this.actionEvent.emit({ type: StaticActionType.NEXT })\n\n      }\n    })\n  }\n\n  backPage() {\n    this.actionEvent.emit({ type: StaticActionType.PREV })\n  }\n\n\n}\n","import { HttpClient } from \"@angular/common/http\";\nimport { Injectable } from \"@angular/core\";\nimport { environment } from \"../../../../../environments/environment\";\nimport { BizOperationService } from \"../../../../core/biz.operation.service\";\nimport { HealthPaymentDTO } from \"./health-quo.dto\";\n\nconst API_HEALTH_PAY_URL = `${environment.apiUrl}/health/payment-schedule`;\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class HealthPaymentService extends BizOperationService<HealthPaymentDTO, number>{\n  constructor(protected httpClient: HttpClient) {\n    super(httpClient, API_HEALTH_PAY_URL);\n  }\n\n  deleteMany(redId: string) {\n    // /api/v1/health/payment-schedule/resource/{resourceId}\n    return this.httpClient.delete(API_HEALTH_PAY_URL + \"/resource/\" + redId)\n  }\n  getMany(redId: string) {\n    // /api/v1/health/payment-schedule/resource/{resourceId}\n    return this.httpClient.get(API_HEALTH_PAY_URL + \"/resource/\" + redId)\n  }\n\n  saveAll(postData: any) {\n    return this.httpClient.post(API_HEALTH_PAY_URL + \"s\", postData)\n  }\n}","import { HttpClient } from \"@angular/common/http\";\nimport { Injectable } from \"@angular/core\";\nimport { environment } from \"../../../../../environments/environment\";\nimport { BizOperationService } from \"../../../../core/biz.operation.service\";\nimport { HealthRateDTO } from \"./health-quo.dto\";\n\nconst API_HEALTH_RATE_URL = `${environment.apiUrl}/health/coverage-rate`;\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class HealthRateService extends BizOperationService<HealthRateDTO, number>{\n  constructor(protected httpClient: HttpClient) {\n    super(httpClient, API_HEALTH_RATE_URL);\n  }\n\n  getOne(age: number, cover: string) {\n    return this.httpClient.get(API_HEALTH_RATE_URL + \"?age=\" + age + \"&cover=\" + cover)\n  }\n}","import { ChangeDetectorRef, Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { NgbDateAdapter, NgbDateParserFormatter } from '@ng-bootstrap/ng-bootstrap';\nimport * as moment from 'moment';\nimport { GlobalFunctionService } from '../../../core/global-fun.service';\nimport { AuthService } from '../../../modules/auth';\nimport { CustomAdapter, CustomDateParserFormatter } from '../../../_metronic/core';\nimport { PolicyDTO } from '../../policy/policy.dto';\nimport { Product } from '../../products/models/product.dto';\nimport { AddOnQuoService } from '../../products/services/add-on-quo.service';\nimport { ProductDataService } from '../../products/services/products-data.service';\nimport { QuotationDTO } from '../../quotations/quotation.dto';\nimport { StaticActionType, StaticPageAction } from '../static-field.interface';\nimport { CoverageQuoService } from '../../products/services/coverage-quo.service';\nimport { AlertService } from '../../../modules/loading-toast/alert-model/alert.service';\nimport { HealthProductService } from '../simple-page/models&services/health-product.service';\nimport { HealthPaymentService } from '../health-quo/models&services/health-payment.service';\nimport { HealthPageID } from '../static-pages.data';\nimport { forkJoin, Observable, of } from 'rxjs';\nimport { mergeMap, switchMap } from 'rxjs/operators';\nimport { DecimalPipe } from '@angular/common';\nimport { DateAdapter, MAT_DATE_FORMATS, MAT_DATE_LOCALE } from '@angular/material/core';\nimport { MAT_MOMENT_DATE_FORMATS, MomentDateAdapter } from '@angular/material-moment-adapter';\nimport { MY_FORMATS } from '../../../core/is-json';\n@Component({\n  selector: 'app-simple-page-policy',\n  templateUrl: './simple-page-policy.component.html',\n  styleUrls: ['./simple-page-policy.component.scss'],\n  providers: [\n    { provide: NgbDateAdapter, useClass: CustomAdapter },\n    { provide: NgbDateParserFormatter, useClass: CustomDateParserFormatter },\n    { provide: DateAdapter, useClass: MomentDateAdapter, deps: [MAT_DATE_LOCALE] },\n    { provide: MAT_DATE_FORMATS, useValue: MY_FORMATS },\n  ]\n})\nexport class SimplePagePolicyComponent implements OnInit {\n\n  @Input() product: Product\n  @Input() editData: QuotationDTO | PolicyDTO\n  @Input() resourcesId?: string\n  @Input() premiumAmt: string\n  @Output() actionEvent = new EventEmitter<StaticPageAction>();\n  staticForm: FormGroup\n  toMinDate = null\n  fromMinDate = null\n  toMaxDate = null\n  fromMaxDate = null\n  dobMinDate = null\n  dobMaxDate = null\n  options: any[] = []\n  options2: any[] = []\n  addOns: any = {}\n  options3: any[] = []\n  oldData: any\n  options4: any[] = []\n  private editId: number\n  refID: string\n  optionArray: any[] = []\n  tempArray: any[] = []\n  totalResult = {\n    unit: 0,\n    premium: 0,\n  }\n  policyTerm = {\n    \"lump\": \"Lump Sum\",\n    \"semi_annually\": \"Semi-Annually\"\n  }\n\n  totalP: number = 0\n  totalL: number = 0\n  constructor(\n    private fb: FormBuilder,\n    private prodService: ProductDataService,\n    private healthService: HealthProductService,\n    private alertService: AlertService,\n    private healthPayService: HealthPaymentService,\n    private auth: AuthService,\n    private globalFun: GlobalFunctionService,\n    private coverageQuoService: CoverageQuoService,\n    private addOnQuoService: AddOnQuoService,\n    private numberPipe: DecimalPipe,\n    private cdf: ChangeDetectorRef\n  ) {\n    this.staticForm = this.fb.group({\n      insuranceStartDate: [{ value: null, disabled: true }, Validators.compose([Validators.required])],\n      insuranceEndDate: [{ value: null, disabled: true }, Validators.compose([Validators.required])],\n      dateOfBirth: [{ value: null, disabled: true }, Validators.compose([Validators.required])],\n      basicCoverId: [{ value: 'Health Insurance', disabled: true }, Validators.compose([Validators.required])],\n      paymentFrequency: [{ value: null, disabled: true }, Validators.compose([Validators.required])],\n      sumInsuredMainCover: [{ value: null, disabled: true }, Validators.compose([Validators.required])],\n      medicalCardNo: [{ value: null, disabled: true }],\n    })\n    this.options3 = Array.from({ length: 10 }, (_, i) => i + 1)\n  }\n\n  async ngOnInit() {\n    this.refID = this.prodService.referenceID\n    if (!this.refID) {\n      this.alertService.activate(\"This page cann't to show because there is no health product detail quotation data.\", \"Warning\")\n    }\n    this.options = this.product.coverages\n    this.options2 = this.product.addOns\n    let toDate = moment().subtract(5, `days`)\n    this.fromMinDate = { year: parseInt(toDate.format('YYYY')), month: parseInt(toDate.format('M')), day: parseInt(toDate.format('D')) };\n    this.toMinDate = { year: parseInt(toDate.format('YYYY')), month: parseInt(toDate.format('M')), day: parseInt(toDate.format('D')) };\n    let dobMaxDate = moment().subtract(6, `years`)\n    this.dobMaxDate = { year: parseInt(dobMaxDate.format('YYYY')), month: parseInt(dobMaxDate.format('M')), day: parseInt(dobMaxDate.format('D')) };\n    let dobMinDate = moment().subtract(75, `years`)\n    this.dobMinDate = { year: parseInt(dobMinDate.format('YYYY')), month: parseInt(dobMinDate.format('M')), day: parseInt(dobMinDate.format('D')) };\n\n    this.getOldData()\n\n  }\n\n  get controls() {\n    return this.staticForm.controls\n  }\n\n  // helpers for View\n  isControlValid(controlName: string, group: FormGroup): boolean {\n    const control = group.controls[controlName];\n    return control.valid && (control.dirty || control.touched);\n  }\n\n  isControlInvalid(controlName: string, group: FormGroup): boolean {\n    const control = group.controls[controlName];\n    return control.invalid && (control.dirty || control.touched);\n  }\n\n  controlHasError(validation, controlName, group: FormGroup): boolean {\n    const control = group.controls[controlName];\n    return control.hasError(validation) && (control.dirty || control.touched);\n  }\n\n  isControlTouched(controlName, group: FormGroup): boolean {\n    const control = group.controls[controlName];\n    return control.dirty || control.touched;\n  }\n  nextPage() {\n    if (this.editId) {\n      this.saveData(this.editId)\n    } else {\n      this.saveData()\n    }\n    // this.actionEvent.emit({ type: StaticActionType.NEXT })\n  }\n\n  backPage() {\n    this.actionEvent.emit({ type: StaticActionType.PREV })\n  }\n\n  getOldData() {\n    // let dataget = false\n    if (this.refID) {\n      let resId = this.refID\n      if (!resId) return false\n      if (this.editData.id) {\n        console.log(this.editData);\n\n        let resId = this.resourcesId\n        this.healthService.getOne(resId).pipe(switchMap((res: any) => {\n          if (!res) {\n            return this.healthService.getOne(this.refID)\n          } else return of(res)\n        })).toPromise().then((res: any) => {\n          if (res) {\n            this.oldData = { ...res, id: null }\n            this.editId = res.resourceId == this.resourcesId ? res.id : null\n            this.getQuoData(res.resourceId != this.resourcesId)\n            this.getAddOn(true)\n            this.reloadOldValueForm()\n          }\n        })\n      } else {\n        this.healthService.getOne(resId).toPromise().then((res: any) => {\n          if (res) {\n            this.oldData = { ...res, id: null }\n            this.editId = resId == this.resourcesId ? res.id : null\n            this.getQuoData(true)\n            this.getAddOn(true)\n            this.reloadOldValueForm()\n          }\n        })\n      }\n\n    }\n  }\n\n  saveData(id?) {\n    const formValue = this.staticForm.getRawValue()\n    let coverd = this.product.coverages.find(x => x.description == formValue.basicCoverId)\n    if (!coverd) {\n      this.alertService.activate(\"This page cann't to save because there is not match coverage in product detail. Please configuration the product detail\", \"Warning\")\n      return false\n    }\n    let tempPre = this.globalFun.calculateDecimal(this.totalP / 12) + this.totalL\n    this.premiumAmt = this.numberPipe.transform(tempPre) + \" MMK / month\"\n    this.globalFun.paPremiumResult.next(this.premiumAmt)\n    let postData = {\n      basicCoverId: formValue.basicCoverId,\n      id: id || null,\n      insuranceEndDate: formValue.insuranceEndDate,\n      insuranceStartDate: formValue.insuranceStartDate,\n      medicalCardNo: formValue.medicalCardNo,\n      paymentFrequency: formValue.paymentFrequency,\n      dateOfBirth: formValue.dateOfBirth,\n      resourceData: {\n        agentId: this.auth.currentUserValue.id || 1,\n        customerId: this.prodService.creatingCustomer.customerId || 1,\n        policyNumber: null,\n        premium: (Number(this.premiumAmt.split(\" \")[0].split(',').join(\"\")) || 0) + \"\",\n        premiumView: this.premiumAmt,\n        productId: this.prodService.createingProd.id,\n        quotationId: this.prodService.referenceID,\n        leadId: this.prodService.creatingLeadId || null,\n        // status: ,\n        type: this.prodService.type\n      },\n      resourceId: this.resourcesId,\n      sumInsuredMainCover: formValue.sumInsuredMainCover,\n    }\n    // console.log(postData);\n    if (!id) {\n      this.healthService.save(postData).toPromise().then((res: any) => {\n        if (res) {\n          this.editId = res.id\n          this.resourcesId = res.resourceId\n          this.saveCoverAddon()\n          // this.globalFun.tempFormData[HealthpageID] = \n          this.saveSchdule().toPromise().then(res => { }).catch(e => e)\n          this.globalFun.tempFormData[HealthPageID] = { id: res.id, ...postData, addOns: this.addOns }\n          this.actionEvent.emit({ type: StaticActionType.NEXT, data: { res } })\n        }\n      }).catch((e) => e)\n    } else {\n      this.healthService.updateNoID(postData).toPromise().then((res: any) => {\n        if (res) {\n          // this.globalFun.tempFormData[HealthPageID] = { id: res.id, ...postData }\n\n          this.editId = res.id\n          this.saveCoverAddon()\n          this.globalFun.tempFormData[HealthPageID] = { id: res.id, ...postData, addOns: this.addOns }\n          //.toPromise().then((result) => result)\n          this.actionEvent.emit({ type: StaticActionType.NEXT, data: { ...res } })\n        }\n      }).catch((e) => e)\n    }\n\n  }\n\n  getQuoData(isRef: boolean = false) {\n    let callId = isRef ? this.refID : this.resourcesId\n    this.healthPayService.getMany(callId).toPromise().then((res: any) => {\n      if (res) {\n        this.optionArray = res\n        this.totalResult = {\n          unit: 0,\n          premium: 0,\n        }\n\n        this.totalP = 0\n        this.totalL = 0\n        this.optionArray.forEach(x => {\n          this.totalP += x.premium\n          this.totalL += x.levy\n          this.totalResult.unit += x.sumInsured\n          this.totalResult.premium += x.premium\n        })\n        this.optionArray = this.optionArray.sort((a, b) => (a.coverage > b.coverage ? 1 : -1))\n        this.tempArray = this.optionArray.filter((thing, index, self) =>\n          index === self.findIndex((t) => (\n            t.coverage === thing.coverage\n          ))\n        )\n        this.cdf.detectChanges()\n      }\n    })\n  }\n\n  reloadOldValueForm() {\n    this.staticForm.patchValue({\n      insuranceStartDate: this.oldData.insuranceStartDate,\n      insuranceEndDate: this.oldData.insuranceEndDate,\n      dateOfBirth: this.oldData.dateOfBirth,\n      basicCoverId: this.oldData.basicCoverId,\n      paymentFrequency: this.oldData.paymentFrequency,\n      sumInsuredMainCover: this.oldData.sumInsuredMainCover,\n      medicalCardNo: this.oldData.medicalCardNo,\n    })\n  }\n\n  saveCoverage(): Observable<any> {\n    let basicCoverId = this.staticForm.controls.basicCoverId.value\n    let value = this.staticForm.controls.sumInsuredMainCover.value\n    let coverd = this.product.coverages.find(x => x.description == basicCoverId)\n    if (coverd) {\n      let postData = {\n        coverageId: coverd.id,\n        quotationNo: this.resourcesId,\n        sumInsured: value,\n        unit: null,\n        premium: null,\n      }\n      return this.coverageQuoService.deleteAll(this.resourcesId).pipe(switchMap((x: any) => {\n        // console.log(x, \"cov\");\n        return this.coverageQuoService.save(postData)\n      }))\n      // .toPromise().then(res => {\n      //   if (res) {\n\n      //   }\n      // })\n    }\n    return of([])\n  }\n\n  async getAddOn(dataget: boolean = false) {\n    if (this.resourcesId || this.refID) {\n      let callAgain = true\n      let resId = dataget ? this.refID : (this.resourcesId || this.refID)\n      if (!resId) return false\n      for (const item of this.product.addOns) {\n        let response: any = {};\n        try {\n          response = await this.addOnQuoService.getOne(item.id, resId).toPromise()\n        } catch (error) {\n        }\n        if (response) {\n          callAgain = false\n          this.addOns[item.id + 'opt'] = response.sumInsured ? true : false\n          this.addOns[item.id + 'value'] = response.sumInsured\n        } else {\n          this.addOns[item.id + 'opt'] = false\n          this.addOns[item.id + 'value'] = null\n        }\n\n      }\n      // if (callAgain && resId != this.refID && !dataget) {\n      //   this.getAddOn(true)\n      // } else {\n      // this.cdf.detectChanges()\n      // }\n    }\n  }\n\n  async saveCoverAddon() {\n    await this.saveCoverage().toPromise()\n    await this.saveAddOn().toPromise()\n    // return forkJoin(this.saveCoverage(), this.saveAddOn())\n  }\n\n  saveSchdule() {\n    return forkJoin(this.optionArray.map((x) => {\n      let postData = {\n        \"paymentTerm\": x.paymentTerm,\n        \"plan\": x.plan,\n        \"premium\": x.premium,\n        \"levy\": x.levy,\n        \"coverage\": x.coverage,\n        \"sumInsured\": x.sumInsured,\n        \"resourceId\": this.resourcesId,\n        \"total\": x.total,\n        \"resourceData\": {\n          \"agentId\": this.auth.currentUserValue.id || 1,\n          \"customerId\": this.prodService.creatingCustomer.customerId || 1,\n          \"policyNumber\": null,\n          \"premium\": (Number(this.premiumAmt.split(\" \")[0].split(',').join(\"\")) || 0) + \"\",\n          \"premiumView\": this.premiumAmt,\n          \"productId\": this.product.id,\n          \"quotationId\": this.prodService.referenceID,\n          \"type\": this.prodService.type\n        },\n      }\n      return this.healthPayService.save(postData)\n    }))\n  }\n\n  saveAddOn() {\n\n    return this.addOnQuoService.deleteAll(this.resourcesId).pipe(mergeMap((x: any) => {\n      // return this.coverageQuoService.save(postData)\n      return forkJoin(this.options2.map(option => {\n        if (this.addOns[option.id + 'opt']) {\n          let postData = {\n            addonId: option.id,\n            quotationNo: this.resourcesId,\n            sumInsured: this.addOns[option.id + 'value'],\n            unit: null,\n            premium: null,\n          }\n          return this.addOnQuoService.save(postData)\n        } else {\n          return of(null)\n        }\n      }))\n    }))\n  }\n\n}","import { HttpClient } from \"@angular/common/http\";\nimport { Injectable } from \"@angular/core\";\nimport { environment } from \"../../../../../environments/environment\";\nimport { BizOperationService } from \"../../../../core/biz.operation.service\";\nimport { HealthProductDetailDTO } from \"./health-product.dto\";\n\nconst API_ADDON_URL = `${environment.apiUrl}/health/product-detail`;\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class HealthProductService extends BizOperationService<HealthProductDetailDTO, number>{\n  constructor(protected httpClient: HttpClient) {\n    super(httpClient, API_ADDON_URL);\n  }\n\n  getOne(quo: string){\n    return this.httpClient.get(API_ADDON_URL+\"/resource/\"+quo)\n  }\n}","import { ChangeDetectorRef, Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { NgbDateAdapter, NgbDateParserFormatter } from '@ng-bootstrap/ng-bootstrap';\nimport * as moment from 'moment';\nimport { mergeMap, switchMap } from 'rxjs/operators';\nimport { GlobalFunctionService } from '../../../core/global-fun.service';\nimport { validateAllFields } from '../../../core/valid-all-feild';\nimport { AuthService } from '../../../modules/auth';\nimport { CustomAdapter, CustomDateParserFormatter } from '../../../_metronic/core';\nimport { PolicyDTO } from '../../policy/policy.dto';\nimport { Product } from '../../products/models/product.dto';\nimport { AddOnQuoService } from '../../products/services/add-on-quo.service';\nimport { ProductDataService } from '../../products/services/products-data.service';\nimport { QuotationDTO } from '../../quotations/quotation.dto';\nimport { StaticActionType, StaticPageAction } from '../static-field.interface';\nimport { HealthProductService } from './models&services/health-product.service';\nimport { CoverageQuoService } from '../../products/services/coverage-quo.service';\nimport { forkJoin, Observable, of } from 'rxjs';\nimport { HealthPageID } from '../static-pages.data';\nimport { AlertService } from '../../../modules/loading-toast/alert-model/alert.service';\nimport { DateAdapter, MAT_DATE_FORMATS, MAT_DATE_LOCALE } from '@angular/material/core';\nimport { MAT_MOMENT_DATE_FORMATS, MomentDateAdapter } from '@angular/material-moment-adapter';\nimport { MatRadioChange } from '@angular/material/radio';\nimport { MY_FORMATS } from '../../../core/is-json';\n@Component({\n  selector: 'app-simple-page',\n  templateUrl: './simple-page.component.html',\n  styleUrls: ['./simple-page.component.scss'],\n  providers: [\n    { provide: NgbDateAdapter, useClass: CustomAdapter },\n    { provide: NgbDateParserFormatter, useClass: CustomDateParserFormatter },\n    { provide: DateAdapter, useClass: MomentDateAdapter, deps: [MAT_DATE_LOCALE] },\n    { provide: MAT_DATE_FORMATS, useValue: MY_FORMATS },\n  ]\n})\nexport class SimplePageComponent implements OnInit {\n\n  @Input() product: Product\n  @Input() editData: QuotationDTO | PolicyDTO\n  @Input() resourcesId?: string\n  @Input() premiumAmt: string\n  @Output() actionEvent = new EventEmitter<StaticPageAction>();\n  staticForm: FormGroup\n  toMinDate = null\n  fromMinDate = null\n  toMaxDate = null\n  fromMaxDate = null\n  dobMinDate = null\n  dobMaxDate = null\n  options: any[] = []\n  options2: any[] = []\n  addOns: any = {}\n  options3: any[] = []\n  oldData: any\n  options4: any[] = []\n  private editId: number\n  refID: string\n  constructor(\n    private fb: FormBuilder,\n    private prodService: ProductDataService,\n    private auth: AuthService,\n    private healthService: HealthProductService,\n    private globalFun: GlobalFunctionService,\n    private addOnQuoService: AddOnQuoService,\n    private coverageQuoService: CoverageQuoService,\n    private alertService: AlertService,\n    private cdf: ChangeDetectorRef\n  ) {\n    this.staticForm = this.fb.group({\n      insuranceStartDate: [null, Validators.compose([Validators.required])],\n      insuranceEndDate: [null, Validators.compose([Validators.required])],\n      dateOfBirth: [null, Validators.compose([Validators.required])],\n      basicCoverId: ['Health Insurance', Validators.compose([Validators.required])],\n      paymentFrequency: [null, Validators.compose([Validators.required])],\n      sumInsuredMainCover: [null, Validators.compose([Validators.required])],\n      medicalCardNo: [null],\n    })\n    this.options3 = Array.from({ length: 10 }, (_, i) => i + 1)\n  }\n\n  async ngOnInit() {\n\n    this.options = this.product.coverages\n    this.options2 = this.product.addOns\n    this.refID = this.prodService.referenceID\n    let toDate = moment().subtract(5, `days`)\n    this.fromMinDate = toDate.format('YYYY-MM-DD')\n    // this.fromMinDate = { year: parseInt(toDate.format('YYYY')), month: parseInt(toDate.format('M')), day: parseInt(toDate.format('D')) };\n    this.toMinDate = toDate.format('YYYY-MM-DD')\n    // this.toMinDate = { year: parseInt(toDate.format('YYYY')), month: parseInt(toDate.format('M')), day: parseInt(toDate.format('D')) };\n    let dobMaxDate = moment().subtract(6, `years`)\n    this.dobMaxDate = dobMaxDate.format('YYYY-MM-DD')\n    // this.dobMaxDate = { year: parseInt(dobMaxDate.format('YYYY')), month: parseInt(dobMaxDate.format('M')), day: parseInt(dobMaxDate.format('D')) };\n    let dobMinDate = moment().subtract(75, `years`)\n    this.dobMinDate = dobMinDate.format('YYYY-MM-DD')\n    // this.dobMinDate = { year: parseInt(dobMinDate.format('YYYY')), month: parseInt(dobMinDate.format('M')), day: parseInt(dobMinDate.format('D')) };\n    // if (this.prodService.editData || this.refID)\n    this.getOldData()\n    // this.getAddOn()\n    // for (const item of this.product.addOns) {\n    //   let response: any = null;\n    //   try {\n    //     if (this.editData) {\n    //       response = await this.addOnQuoService.getOne(item.id, this.editData.id).toPromise()\n    //     }\n    //   } catch (error) {\n    //     response = null\n    //   }\n    //   this.addOns[item.id + 'opt'] = response ? response.sumInsured || 0 : 0\n    // }\n  }\n\n  radioChange($event: MatRadioChange) {\n\n    if ($event.value === 'Health Insurance') {\n      let dobMaxDate = moment().subtract(6, `years`)\n      this.dobMaxDate = dobMaxDate.format('YYYY-MM-DD')\n      let dobMinDate = moment().subtract(75, `years`)\n      this.dobMinDate = dobMinDate.format('YYYY-MM-DD')\n    } else {\n      let dobMaxDate = moment().subtract(6, `years`)\n      this.dobMaxDate = dobMaxDate.format('YYYY-MM-DD')\n      let dobMinDate = moment().subtract(60, `years`)\n      this.dobMinDate = dobMinDate.format('YYYY-MM-DD')\n    }\n    this.cdf.detectChanges()\n  }\n\n  doValid() {\n    let value = this.staticForm.controls['insuranceStartDate'].value\n    if (value) {\n      let toDate = moment(this.staticForm.controls['insuranceStartDate'].value).add(1, 'years')\n      this.toMaxDate = { year: parseInt(toDate.format('YYYY')), month: parseInt(toDate.format('M')), day: parseInt(toDate.format('D')) };\n      this.staticForm.controls['insuranceEndDate'].setValue(toDate.format('YYYY-MM-DD'))\n    }\n  }\n\n  getUnitOption() {\n    let leng = this.controls.sumInsuredMainCover.value\n    if (leng != this.options4.length) {\n      this.options4 = Array.from({ length: leng }, (_, i) => i + 1)\n      for (let addon of this.options2) {\n        this.addOns[addon.id + 'value'] = leng\n      }\n    }\n\n  }\n\n  get controls() {\n    return this.staticForm.controls\n  }\n\n  // helpers for View\n  isControlValid(controlName: string, group: FormGroup): boolean {\n    const control = group.controls[controlName];\n    return control.valid && (control.dirty || control.touched);\n  }\n\n  isControlInvalid(controlName: string, group: FormGroup): boolean {\n    const control = group.controls[controlName];\n    return control.invalid && (control.dirty || control.touched);\n  }\n\n  controlHasError(validation, controlName, group: FormGroup): boolean {\n    const control = group.controls[controlName];\n    return control.hasError(validation) && (control.dirty || control.touched);\n  }\n\n  isControlTouched(controlName, group: FormGroup): boolean {\n    const control = group.controls[controlName];\n    return control.dirty || control.touched;\n  }\n  nextPage() {\n    if (this.staticForm.invalid) {\n      validateAllFields(this.staticForm)\n      return true\n    } else {\n      if (this.editId) {\n        this.saveData(this.editId)\n      } else {\n        this.saveData()\n      }\n    }\n  }\n\n  backPage() {\n    this.actionEvent.emit({ type: StaticActionType.PREV })\n  }\n\n  saveData(id?) {\n    const formValue = this.staticForm.value\n    let coverd = this.product.coverages.find(x => x.description == formValue.basicCoverId)\n    if (!coverd) {\n      this.alertService.activate(\"This page cann't to save because there is not match coverage in product detail. Please configuration the product detail\", \"Warning\")\n      return false\n    }\n    let postData = {\n      basicCoverId: formValue.basicCoverId,\n      id: id || null,\n      insuranceEndDate: formValue.insuranceEndDate,\n      insuranceStartDate: formValue.insuranceStartDate,\n      medicalCardNo: formValue.medicalCardNo,\n      paymentFrequency: formValue.paymentFrequency,\n      dateOfBirth: formValue.dateOfBirth,\n      resourceData: {\n        agentId: this.auth.currentUserValue.id || 1,\n        customerId: this.prodService.creatingCustomer.customerId || 1,\n        policyNumber: null,\n        premium: (Number(this.premiumAmt.split(\" \")[0].split(',').join(\"\")) || 0) + \"\",\n        premiumView: this.premiumAmt,\n        productId: this.prodService.createingProd.id,\n        quotationId: this.prodService.referenceID,\n        leadId: this.prodService.creatingLeadId || null,\n        // status: ,\n        type: this.prodService.type\n      },\n      resourceId: this.resourcesId,\n      sumInsuredMainCover: formValue.sumInsuredMainCover,\n    }\n    // console.log(postData);\n    if (!id) {\n      this.healthService.save(postData).toPromise().then((res: any) => {\n        if (res) {\n          this.editId = res.id\n          this.resourcesId = res.resourceId\n          this.saveCoverAddon()\n          this.globalFun.tempFormData[HealthPageID] = { id: res.id, ...postData, addOns: this.addOns }\n          this.actionEvent.emit({ type: StaticActionType.NEXT, data: { ...res } })\n        }\n      }).catch((e) => e)\n    } else {\n      this.healthService.updateNoID(postData).toPromise().then((res: any) => {\n        if (res) {\n          this.editId = res.id\n          this.saveCoverAddon()\n          this.globalFun.tempFormData[HealthPageID] = { id: res.id, ...postData, addOns: this.addOns }\n          this.actionEvent.emit({ type: StaticActionType.NEXT, data: { ...res } })\n        }\n      }).catch((e) => e)\n    }\n\n  }\n\n  async saveCoverAddon() {\n    await this.saveCoverage().toPromise()\n    await this.saveAddOn().toPromise()\n    // return forkJoin(this.saveCoverage(), this.saveAddOn())\n  }\n  // .pipe(mergeMap(resources => {\n  //   return resources\n  // }))\n  getOldData(dataget: boolean = false) {\n    // let dataget = false\n    console.log(this.resourcesId);\n\n    if (this.resourcesId || this.refID) {\n      let resId = dataget ? this.refID : (this.resourcesId || this.refID)\n      if (!resId) return false\n      this.healthService.getOne(resId).toPromise().then((res: any) => {\n        // dataget = true\n        if (res) {\n          this.oldData = { ...res, id: null }\n          this.editId = resId == this.resourcesId ? res.id : null\n          this.getAddOn()\n          this.reloadOldValueForm()\n        } else {\n          if (!dataget && resId != this.refID) {\n            this.getAddOn(true)\n            this.getOldData(true)\n          }\n        }\n      })\n    }\n  }\n\n  reloadOldValueForm() {\n    this.staticForm.patchValue({\n      insuranceStartDate: moment(this.oldData.insuranceStartDate),\n      insuranceEndDate: moment(this.oldData.insuranceEndDate),\n      dateOfBirth: moment(this.oldData.dateOfBirth),\n      basicCoverId: this.oldData.basicCoverId,\n      paymentFrequency: this.oldData.paymentFrequency,\n      sumInsuredMainCover: this.oldData.sumInsuredMainCover,\n      medicalCardNo: this.oldData.medicalCardNo,\n    })\n    this.getUnitOption()\n  }\n\n  saveCoverage(): Observable<any> {\n    let basicCoverId = this.staticForm.controls.basicCoverId.value\n    let value = this.staticForm.controls.sumInsuredMainCover.value\n    let coverd = this.product.coverages.find(x => x.description == basicCoverId)\n    if (coverd) {\n      let postData = {\n        coverageId: coverd.id,\n        quotationNo: this.resourcesId,\n        sumInsured: value,\n        unit: null,\n        premium: null,\n      }\n      return this.coverageQuoService.deleteAll(this.resourcesId).pipe(switchMap((x: any) => {\n        // console.log(x, \"cov\");\n        return this.coverageQuoService.save(postData)\n      }))\n      // .toPromise().then(res => {\n      //   if (res) {\n\n      //   }\n      // })\n    }\n    return of([])\n  }\n\n  async getAddOn(dataget: boolean = false) {\n    if (this.resourcesId || this.refID) {\n      let callAgain = true\n      let resId = dataget ? this.refID : (this.resourcesId || this.refID)\n      if (!resId) return false\n      for (const item of this.product.addOns) {\n        let response: any = {};\n        try {\n          response = await this.addOnQuoService.getOne(item.id, resId).toPromise()\n        } catch (error) {\n        }\n        if (response) {\n          callAgain = false\n          this.addOns[item.id + 'opt'] = response.sumInsured ? true : false\n          this.addOns[item.id + 'value'] = response.sumInsured\n        } else {\n          this.addOns[item.id + 'opt'] = false\n          this.addOns[item.id + 'value'] = null\n        }\n\n      }\n      // if (callAgain && resId != this.refID && !dataget) {\n      //   this.getAddOn(true)\n      // } else {\n      this.cdf.detectChanges()\n      // }\n    }\n  }\n\n\n  saveAddOn() {\n    const formValue = this.staticForm.value\n    return this.addOnQuoService.deleteAll(this.resourcesId).pipe(mergeMap((x: any) => {\n      // return this.coverageQuoService.save(postData)\n      return forkJoin(this.options2.map(option => {\n        if (formValue.basicCoverId == \"Health Insurance\") {\n          if (this.addOns[option.id + 'opt']) {\n            let postData = {\n              addonId: option.id,\n              quotationNo: this.resourcesId,\n              sumInsured: this.addOns[option.id + 'value'],\n              unit: null,\n              premium: null,\n            }\n            return this.addOnQuoService.save(postData)\n          } else {\n            this.addOns[option.id + 'opt'] = false\n            this.addOns[option.id + 'value'] = 0\n            return of(null)\n          }\n        } else {\n          return of(null)\n        }\n      }))\n    }))\n  }\n}","import { EventEmitter } from \"@angular/core\";\nimport { PolicyDTO } from \"../policy/policy.dto\";\nimport { Product } from \"../products/models/product.dto\";\nimport { QuotationDTO } from \"../quotations/quotation.dto\";\n\nexport interface StaticField {\n  product?: Product\n  editData?: PolicyDTO | QuotationDTO,\n  resourcesId?: string\n  premiumAmt?: string\n  actionEvent?: EventEmitter<StaticPageAction>\n}\n\nexport interface StaticPageAction {\n  type: StaticActionType,\n  data?: any\n}\n\nexport enum StaticActionType {\n  NEXT = 'next',\n  PREV = 'prev'\n}","import { AddonPageComponent } from \"./addon-page/addon-page.component\";\nimport { CoveragePageComponent } from \"./coverage-page/coverage-page.component\";\nimport { SimplePageComponent } from \"./simple-page/simple-page.component\";\nimport { PageUIType } from \"../products/models/product.dto\";\nimport { HealthQuoComponent } from \"./health-quo/health-quo.component\";\nimport { EducationLifeComponent } from \"./education-life/education-life.component\";\n\nexport const STATIC_PAGES = [\n  {\n    id: 'addon_1634010770155',\n    type: PageUIType.STATIC,\n    pageTitle: \"AddOn\",\n    showLabel: \"AddOn\",\n    pageType: 'form',\n    tableName: 'addon',\n    pageIcon: \"fa-briefcase\"\n  },\n  {\n    id: 'coverage_1634010995936',\n    type: PageUIType.STATIC,\n    pageTitle: \"Coverage\",\n    showLabel: \"Coverage\",\n    pageType: 'form',\n    tableName: 'coverage',\n    pageIcon: \"fa-clipboard-check\",\n  },\n  {\n    id: 'static_1634018514043',\n    type: PageUIType.STATIC,\n    pageTitle: \"Product Detail\",\n    showLabel: \"Motor Product Detail\",\n    pageType: 'form',\n    tableName: 'static',\n    pageIcon: \"fa-briefcase\"\n  },\n  {\n    id: 'static_1635747288508',\n    type: PageUIType.STATIC,\n    pageTitle: \"Product Detail\",\n    showLabel: \"Motor Product Detail (Application)\",\n    pageType: 'form',\n    tableName: 'static',\n    pageIcon: \"fa-briefcase\"\n  },\n  {\n    id: 'static_1635218894755',\n    type: PageUIType.STATIC,\n    pageTitle: \"Payment Schedules\",\n    showLabel: \"Payment Schedules\",\n    pageType: 'form',\n    tableName: 'static',\n    pageIcon: \"fa-briefcase\"\n  },\n  {\n    id: 'static_1635309151504',\n    type: PageUIType.STATIC,\n    pageTitle: \"Education Life Benefit\",\n    showLabel: \"Education Life Benefit\",\n    pageType: 'form',\n    tableName: 'static',\n    pageIcon: \"fa-briefcase\"\n  },\n  {\n    id: 'static_1641364737069',\n    type: PageUIType.STATIC,\n    pageTitle: \"Product Detail\",\n    showLabel: \"Fire Product Detail\",\n    pageType: 'form',\n    tableName: 'static',\n    pageIcon: \"fa-briefcase\"\n  },\n  {\n    id: 'static_1643116155828',\n    type: PageUIType.STATIC,\n    pageTitle: \"Risk Detail\",\n    showLabel: \"Fire Risk Detail\",\n    pageType: 'form',\n    tableName: 'static',\n    pageIcon: \"fa-briefcase\"\n  },\n  {\n    id: 'static_1644896661652',\n    type: PageUIType.STATIC,\n    pageTitle: \"Benefit Illustration\",\n    showLabel: \"Endowment Benefit Illustration\",\n    pageType: 'form',\n    tableName: 'static',\n    pageIcon: \"fa-briefcase\"\n  },\n]\n\nexport const STATIC_PRINTS = [\n  {\n    id: 'static_1635309151504',\n    type: PageUIType.STATIC,\n    pageTitle: \"Education Life Declare\",\n    pageType: 'form',\n    tableName: 'static',\n    pageIcon: \"fa-briefcase\"\n  },\n]\n\n\nexport const HealthPageID = \"static_1634018514043\"\nexport const FirePageID = \"static_1641364737069\"\nexport const FireRiskID = \"static_1643116155828\"\nexport const HealthPagePolicyID = \"static_1635747288508\"\nexport const HealthQuoPageID = \"static_1635218894755\"\nexport const CoveragePageID = \"coverage_1634010995936\"\nexport const AddonpageID = \"addon_1634010770155\"\nexport const EducationLifeID = \"static_1635309151504\"\nexport const EducationLifeGRAPID = \"static_1635392848894\"\nexport const EndowmentID = \"static_1644896661652\"\nexport const EndowmentGRAPID = \"static_1644896804675\"\n\n\nexport enum PaymentFrequency {\n  Monthly = 'monthly',\n  Quatarly = 'quatarly',\n  SemiAnnually = 'semi_annually',\n  Annually = 'annually'\n}","import { ChangeDetectorRef, ComponentFactoryResolver, ComponentRef, Directive, EventEmitter, Input, OnInit, Output, Renderer2, ViewContainerRef } from \"@angular/core\";\nimport { PolicyDTO } from \"../policy/policy.dto\";\nimport { Product } from \"../products/models/product.dto\";\nimport { QuotationDTO } from \"../quotations/quotation.dto\";\nimport { AddonPageComponent } from \"./addon-page/addon-page.component\";\nimport { CoveragePageComponent } from \"./coverage-page/coverage-page.component\";\nimport { EducationLifeComponent } from \"./education-life/education-life.component\";\nimport { EndoGripComponent } from \"./endo-griph/endo-griph.component\";\nimport { EndoComponent } from \"./endo/endo.component\";\nimport { FireRiskComponent } from \"./fire-risk/fire-risk.component\";\nimport { FirePageComponent } from \"./fire-simple-page/fire-simple-page.component\";\nimport { HealthQuoComponent } from \"./health-quo/health-quo.component\";\nimport { SimplePagePolicyComponent } from \"./simple-page-policy/simple-page-policy.component\";\nimport { SimplePageComponent } from \"./simple-page/simple-page.component\";\nimport { StaticField, StaticPageAction } from \"./static-field.interface\";\n// import { STATIC_COMPONENT } from \"./static-pages.data\";\nconst STATIC_COMPONENT = {\n  'addon_1634010770155': AddonPageComponent,\n  'coverage_1634010995936': CoveragePageComponent,\n  'static_1634018514043': SimplePageComponent,\n  'static_1635218894755': HealthQuoComponent,\n  'static_1635309151504': EducationLifeComponent,\n  // 'static_1635392848894' : EducationLifeGripComponent,\n  'static_1635747288508': SimplePagePolicyComponent,\n  'static_1641364737069': FirePageComponent,\n  'static_1643116155828': FireRiskComponent,\n  'static_1644896661652': EndoComponent,\n  'static_1644896804675': EndoGripComponent,\n}\n@Directive({\n  selector: '[staticPage]'\n})\nexport class StaticPageDirective implements StaticField, OnInit {\n\n  @Input() compId: string\n  @Input() product: Product\n  @Input() resourcesId: string\n  @Input() premiumAmt?: string\n  @Input() editData: QuotationDTO | PolicyDTO\n  @Output() eventOut = new EventEmitter<StaticPageAction>();\n\n  component: ComponentRef<StaticField>;\n  constructor(\n    private resolver: ComponentFactoryResolver,\n    private container: ViewContainerRef,\n  ) { }\n  ngOnInit() {\n    this.reCreate()\n\n  }\n\n  reCreate() {\n    this.container.clear()\n    const component = this.resolver.resolveComponentFactory<StaticField>(STATIC_COMPONENT[this.compId]);\n    this.component = this.container.createComponent(component);\n    this.component.instance.product = this.product\n    this.component.instance.editData = this.editData\n    this.component.instance.resourcesId = this.resourcesId\n    this.component.instance.premiumAmt = this.premiumAmt\n\n    this.component.instance.actionEvent.subscribe((res) => {\n      this.eventOut.emit(res)\n    })\n    // console.log(this.resourcesId);\n  }\n\n}","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { NgbDatepickerModule, NgbModalModule, NgbModule } from '@ng-bootstrap/ng-bootstrap';\nimport { CoveragePageComponent } from './coverage-page/coverage-page.component';\nimport { AddonPageComponent } from './addon-page/addon-page.component';\nimport { SimplePageComponent } from './simple-page/simple-page.component';\nimport { StaticPageDirective } from './static-pages.directive';\nimport { MatRadioModule } from '@angular/material/radio';\nimport { CRUDTableModule } from '../../_metronic/shared/crud-table';\nimport { HealthQuoComponent } from './health-quo/health-quo.component';\nimport { EducationLifeComponent } from './education-life/education-life.component';\nimport { EducationLifeGripComponent } from './education-life-griph/education-life-griph.component';\nimport { NgApexchartsModule } from 'ng-apexcharts';\nimport { SimplePagePolicyComponent } from './simple-page-policy/simple-page-policy.component';\nimport { MatNativeDateModule } from '@angular/material/core';\nimport { MatDatepickerModule } from '@angular/material/datepicker';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { SurroundingBuildingComponent } from './surrounding-building/surrounding-building.component';\nimport { SurroundingDetailComponent } from './surrounding-building/surrounding-detail/surrounding-detail.component';\nimport { NgSelectModule } from '@ng-select/ng-select';\nimport { CalculatedBuildingComponent } from './calculated-building/calculated-building.component';\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\nimport { TablesComponent } from './tables/tables.component';\nimport { AddCalculatedBuildingComponent } from './calculated-building/add-calculated-building/add-calculated-building.component';\nimport { FirePageComponent } from './fire-simple-page/fire-simple-page.component';\nimport { FireRiskComponent } from './fire-risk/fire-risk.component';\nimport { RiskDetailComponent } from './fire-risk/risk-detail/risk-detail.component';\nimport { NgxCurrencyModule } from 'ngx-currency';\nimport { EndoGripComponent } from './endo-griph/endo-griph.component';\nimport { EndoComponent } from './endo/endo.component';\n@NgModule({\n  declarations: [CoveragePageComponent, AddonPageComponent, SimplePageComponent, StaticPageDirective, HealthQuoComponent, EducationLifeComponent, EducationLifeGripComponent, SimplePagePolicyComponent, FirePageComponent, FireRiskComponent, SurroundingBuildingComponent, SurroundingDetailComponent, CalculatedBuildingComponent, TablesComponent, AddCalculatedBuildingComponent,RiskDetailComponent,EndoComponent,EndoGripComponent],\n  exports: [CoveragePageComponent, AddonPageComponent, SimplePageComponent, StaticPageDirective, HealthQuoComponent, EducationLifeComponent, EducationLifeGripComponent, SimplePagePolicyComponent, SurroundingBuildingComponent, FirePageComponent, FireRiskComponent, SurroundingDetailComponent, CalculatedBuildingComponent,RiskDetailComponent,EndoComponent,EndoGripComponent],\n  imports: [\n    CommonModule,\n    FormsModule,\n    CRUDTableModule,\n    ReactiveFormsModule,\n    NgbModalModule,\n    MatRadioModule,\n    NgbDatepickerModule,\n    NgSelectModule,\n    MatSlideToggleModule,\n    NgApexchartsModule,\n    MatDatepickerModule,\n    MatNativeDateModule,\n    MatInputModule,\n    MatFormFieldModule,\n    NgxCurrencyModule\n  ]\n})\nexport class StaticPagesModule { }\n","import { HttpClient } from \"@angular/common/http\";\nimport { Injectable } from \"@angular/core\";\nimport { environment } from \"../../../../../environments/environment\";\nimport { BizOperationService } from \"../../../../core/biz.operation.service\";\nimport { PremiumRate } from \"./premium-rate-dto\";\n\nconst API_FIRE_PREMIUM_RATE = `${environment.apiUrl}/fire/premium-rate`;\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PremiumRateService extends BizOperationService<PremiumRate, number>{\n  constructor(protected httpClient: HttpClient) {\n    super(httpClient, API_FIRE_PREMIUM_RATE);\n  }\n  \n\n  getPremiumRate(buildingClass: string, occupationOfBuilding: string,typeOfBuilding:string) {\n    return this.httpClient.get(API_FIRE_PREMIUM_RATE + \"?classOfBuilding=\" + buildingClass + \"&occupationOfBuilding=\" + occupationOfBuilding  + \"&typeOfBuilding=\" + typeOfBuilding)\n  }\n}\n","import { HttpClient } from \"@angular/common/http\";\nimport { Injectable } from \"@angular/core\";\nimport { environment } from \"../../../../../environments/environment\";\nimport { BizOperationService } from \"../../../../core/biz.operation.service\";\nimport { SurroundingBuildingDTO } from \"./surrounding-building.dto\";\n\nconst API_SURROUNDING_BUILDING_URL = `${environment.apiUrl}/fire-policy/surrounding-building`;\nconst API_RISK_SURROUNDING_BUILDING_API = `${environment.apiUrl}/fire-policy/risk/`;\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SurroundingBuildingService extends BizOperationService<SurroundingBuildingDTO, number>{\n  constructor(protected httpClient: HttpClient) {\n    super(httpClient, API_SURROUNDING_BUILDING_URL);\n  }\n  // fire-policy/surrounding-building/max-rate\n\n  getByRiskId(riskId: number) {\n    return this.httpClient.get(API_RISK_SURROUNDING_BUILDING_API + riskId + \"/surrounding-building\")\n  }\n\n  getMaxRate(riskId: number) {\n    return this.httpClient.get(API_SURROUNDING_BUILDING_URL + \"/max-rate?riskId=\" + riskId)\n\n  }\n}","import { COLTYPE, TableCol } from '../../../../_metronic/shared/crud-table/components/material-table-view/table-dto'\nexport const SURROUNDING_COL: TableCol[] = [\n  {\n    title: \"Building Description\",\n    type: COLTYPE.FEILD,\n    field: \"description\",\n    isDate:true\n  },\n  {\n    title: \"Type of building\",\n    type: COLTYPE.FEILD,\n    field: \"typeOfBuilding\"\n  },\n  {\n    title: \"Occupation\",\n    type: COLTYPE.FEILD,\n    field: \"occupation\"\n  },\n  {\n    title: \"Class\",\n    type: COLTYPE.FEILD,\n    field: \"class\"\n  },\n  {\n    title: \"Premiun Rate\",\n    type: COLTYPE.FEILD,\n    field: \"premiumRate\"\n  },\n  {\n    title: \"Actions\",\n    type: COLTYPE.ACTION,\n    field: \"actions\",\n    btn: {\n      edit: true,\n      view:true\n    }\n  },\n  \n]\n\nexport const SurroundingDisplayCol: string[] = [\n  \"description\",\n  \"typeOfBuilding\",\n  \"occupation\",\n  \"class\",\n  \"premiumRate\"\n]\n  ","import { ChangeDetectorRef, Component, Input, OnInit, ViewChild } from '@angular/core';\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\nimport { MaterialTableViewComponent } from 'src/app/_metronic/shared/crud-table/components/material-table-view/material-table-view.component';\nimport { SurroundingBuildingService } from './models&services/surrounding-building.service';\nimport { SurroundingDisplayCol, SURROUNDING_COL } from './models&services/surrounding-list.const';\nimport { SurroundingDetailComponent } from './surrounding-detail/surrounding-detail.component';\n\n@Component({\n  selector: 'app-surrounding-building',\n  templateUrl: './surrounding-building.component.html',\n  styleUrls: ['./surrounding-building.component.scss']\n})\nexport class SurroundingBuildingComponent implements OnInit {\n  @ViewChild(MaterialTableViewComponent) matTable: MaterialTableViewComponent;\n  @Input() riskId: number = 1\n  ELEMENT_COL = JSON.parse(JSON.stringify(SURROUNDING_COL));\n  displayedColumns = JSON.parse(JSON.stringify(SurroundingDisplayCol));\n  isPopup: boolean = false\n  surrounding: any[] = []\n  constructor(private surroundingBuildingService: SurroundingBuildingService, private modalService: NgbModal, private cdf: ChangeDetectorRef) { }\n\n  ngOnInit(): void {\n    this.getList()\n  }\n  getList() {\n    this.surroundingBuildingService.getByRiskId(this.riskId).toPromise().then((res: any) => {\n      if (res) {\n        this.surrounding = res\n        this.cdf.detectChanges()\n      }\n    })\n  }\n  add(type, data?) {\n    let modalRef;\n    modalRef = this.modalService.open(SurroundingDetailComponent, { size: 'xl', backdrop: false });\n    modalRef.componentInstance.type = type\n    modalRef.componentInstance.riskId = this.riskId\n    modalRef.componentInstance.oldData = data\n    modalRef.result.then(() => { }, (res) => {\n      if (res) {\n        console.log(\"RESSSS\", res)\n        if (res.type == \"save\") {\n          // this.surrounding=res.data\n          this.surrounding.push(res.data)\n          this.cdf.detectChanges()\n        }\n      }\n    })\n  }\n  onActionView(data, type) {\n    console.log(\"data\", data, \"type\", type)\n    if (type == 'delete') {\n      this.surroundingBuildingService.delete(data.id).toPromise()\n        .then((res) => {\n          if (res) {\n            let index = this.surrounding.findIndex(x => x.id == data.id)\n            if (index >= 0) {\n              this.surrounding.splice(index, 1)\n              this.cdf.detectChanges()\n            }\n          }\n        });\n    } else {\n      this.add(type, data)\n    }\n  }\n}\n","import { ChangeDetectorRef, Component, OnInit } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { NgbActiveModal, NgbModal } from '@ng-bootstrap/ng-bootstrap';\nimport { AuthService } from 'src/app/modules/auth';\nimport { MasterDataService } from 'src/app/modules/master-data/master-data.service';\nimport { PremiumRateService } from '../models&services/premium-rate-service';\nimport { SurroundingBuildingService } from '../models&services/surrounding-building.service';\n\n@Component({\n  selector: 'app-surrounding-detail',\n  templateUrl: './surrounding-detail.component.html',\n  styleUrls: ['./surrounding-detail.component.scss']\n})\nexport class SurroundingDetailComponent implements OnInit {\n  surroundingdetailform: FormGroup;\n  typeOfBuildingOption: any = []\n  occupationOfBuildingOption: any[] = []\n  occupationOfBuildingOptions: any[] = []\n  buildingClassOption: any[] = []\n  premiumRateOption: any[] = []\n  type: string = 'create'\n  riskId: string = '1'\n  oldData: any\n  constructor(public modal: NgbActiveModal, private masterDataService: MasterDataService, private cdf: ChangeDetectorRef, private SurroundingBuildingService: SurroundingBuildingService, private auth: AuthService, private PremiumRateService: PremiumRateService) { }\n\n  ngOnInit(): void {\n    this.loadForm()\n    this.getBuildingClass()\n    this.getBuildingType()\n    this.getBuildingOccupation()\n    if (this.type == 'create') {\n      this.loadForm()\n    } else {\n      this.loadForm(this.oldData)\n    }\n\n  }\n  getBuildingClass() {\n    this.masterDataService\n      .getDataByType(\"BUILDING_CLASS\")\n      .toPromise()\n      .then((res: any) => {\n        console.log(res);\n        if (res) {\n          this.buildingClassOption = res.map((x) => {\n            return { code: x.codeId, value: x.codeName };\n          });\n          console.log(this.buildingClassOption);\n          this.cdf.detectChanges();\n        }\n      });\n  }\n  getBuildingType() {\n    this.masterDataService\n      .getDataByType(\"BUILDING_TYPE\")\n      .toPromise()\n      .then((res: any) => {\n        console.log(res);\n        if (res) {\n          this.typeOfBuildingOption = res.map((x) => {\n            return { code: x.codeId, value: x.codeName };\n          });\n          console.log(this.typeOfBuildingOption);\n          this.cdf.detectChanges();\n        }\n      });\n  }\n\n  getBuildingOccupation() {\n    this.masterDataService\n      .getDataByType(\"BUILDING_OCCUPATION\")\n      .toPromise()\n      .then((res: any) => {\n        if (res) {\n          this.occupationOfBuildingOptions = res.map((x) => {\n            return { code: x.codeId, value: x.codeName, parent: x.parentId };\n          });\n          this.cdf.detectChanges();\n        }\n      });\n  }\n  getPremiumRate() {\n    let buildingClass = this.surroundingdetailform.value.buildingClass\n    let occupationOfBuilding = this.surroundingdetailform.value.occupationOfBuilding\n    let typeOfBuilding = this.surroundingdetailform.value.typeOfBuilding\n    this.PremiumRateService.getPremiumRate(buildingClass, occupationOfBuilding, typeOfBuilding).toPromise().then((res: any) => {\n      if (res) {\n        this.surroundingdetailform.controls.premiumRate.setValue(res.premiumRate)\n      }\n    })\n  }\n\n\n  loadForm(oldData?) {\n    this.surroundingdetailform = new FormGroup({\n      buildingClass: new FormControl(oldData ? oldData.buildingClass : \"\"),\n      buildingDescription: new FormControl(oldData ? oldData.buildingDescription : \"\"),\n      distanceToBuilding: new FormControl(oldData ? oldData.distanceToBuilding : \"\",),\n      firePolicyRiskId: new FormControl(this.riskId),\n      id: new FormControl(oldData ? oldData.id : \"\"),\n      occupationOfBuilding: new FormControl(oldData ? oldData.occupationOfBuilding : \"\"),\n      premiumRate: new FormControl(oldData ? oldData.premiumRate : \"\"),\n      typeOfBuilding: new FormControl(oldData ? oldData.typeOfBuilding : \"\"),\n    })\n  }\n  createSurrounding() {\n\n    let data = this.surroundingdetailform.getRawValue();\n    let postData = { ...data, createdBy: this.auth.currentUserValue.id }\n    if (this.type != 'create') {\n      this.SurroundingBuildingService.updateNoID(postData)\n        .toPromise()\n        .then((res) => {\n          if (res) {\n            // postData.id = res\n            let data = { ...postData }\n            let buildingClass = this.surroundingdetailform.value.buildingClass\n            let occupationOfBuilding = this.surroundingdetailform.value.occupationOfBuilding\n            let typeOfBuilding = this.surroundingdetailform.value.typeOfBuilding\n            let buildingClassValue = this.buildingClassOption.find(x => x.code == buildingClass).value\n            let occupationOfBuildingValue = this.occupationOfBuildingOption.find(x => x.code == occupationOfBuilding).value\n            let typeOfBuildingValue = this.typeOfBuildingOption.find(x => x.code == typeOfBuilding).value\n            this.modal.dismiss({ data: { ...data, buildingClassValue: buildingClassValue, occupationOfBuildingValue: occupationOfBuildingValue, typeOfBuildingValue: typeOfBuildingValue }, type: \"save\" })\n          }\n        });\n    } else {\n      this.SurroundingBuildingService.save(postData)\n        .toPromise()\n        .then((res) => {\n          if (res) {\n            postData.id = res\n            let data = { ...postData }\n            let buildingClass = this.surroundingdetailform.value.buildingClass\n            let occupationOfBuilding = this.surroundingdetailform.value.occupationOfBuilding\n            let typeOfBuilding = this.surroundingdetailform.value.typeOfBuilding\n            let buildingClassValue = this.buildingClassOption.find(x => x.code == buildingClass).value\n            let occupationOfBuildingValue = this.occupationOfBuildingOption.find(x => x.code == occupationOfBuilding).value\n            let typeOfBuildingValue = this.typeOfBuildingOption.find(x => x.code == typeOfBuilding).value\n            this.modal.dismiss({ data: { ...data, buildingClassValue: buildingClassValue, occupationOfBuildingValue: occupationOfBuildingValue, typeOfBuildingValue: typeOfBuildingValue }, type: \"save\" })\n          }\n        });\n    }\n\n  }\n  changeClass() {\n\n    if (this.surroundingdetailform.value.buildingClass == 'T-001') {\n      this.surroundingdetailform.controls['distanceToBuilding'].setValidators([Validators.max(25)])\n      this.surroundingdetailform.controls['distanceToBuilding'].updateValueAndValidity()\n    }\n\n    if (this.surroundingdetailform.value.buildingClass != 'T-001') {\n      this.surroundingdetailform.controls['distanceToBuilding'].setValidators([Validators.max(50)])\n      this.surroundingdetailform.controls['distanceToBuilding'].updateValueAndValidity()\n    }\n    let buildingClass = this.surroundingdetailform.value.buildingClass\n    let occupationOfBuilding = this.surroundingdetailform.value.occupationOfBuilding\n    let typeOfBuilding = this.surroundingdetailform.value.typeOfBuilding\n    if (buildingClass && occupationOfBuilding && typeOfBuilding) {\n      this.getPremiumRate()\n    }\n  }\n\n  changeType(type?: string) {\n    let buildingClass = this.surroundingdetailform.value.buildingClass\n    let occupationOfBuilding = this.surroundingdetailform.value.occupationOfBuilding\n    let typeOfBuilding = this.surroundingdetailform.value.typeOfBuilding\n    if (type == 'child') {\n      this.occupationOfBuildingOption = this.occupationOfBuildingOptions.filter(x => x.parent == typeOfBuilding)\n      let index = this.occupationOfBuildingOption.findIndex(x => x.code == occupationOfBuilding)\n      if (index < 0) {\n        this.surroundingdetailform.controls.occupationOfBuilding.setValue(null)\n      }\n    }\n    if (buildingClass && occupationOfBuilding && typeOfBuilding) {\n      this.getPremiumRate()\n    }\n  }\n  changeOccuption() {\n    let buildingClass = this.surroundingdetailform.value.buildingClass\n    let occupationOfBuilding = this.surroundingdetailform.value.occupationOfBuilding\n    let typeOfBuilding = this.surroundingdetailform.value.typeOfBuilding\n    if (buildingClass && occupationOfBuilding && typeOfBuilding) {\n      this.getPremiumRate()\n    }\n  }\n  dismissModal() {\n    this.modal.dismiss()\n  }\n  isControlValid(controlName: string): boolean {\n    const control = this.surroundingdetailform.controls[controlName];\n    return control.valid && (control.dirty || control.touched);\n  }\n\n  isControlInvalid(controlName: string): boolean {\n    const control = this.surroundingdetailform.controls[controlName];\n    return control.invalid && (control.dirty || control.touched);\n  }\n\n  controlHasError(validation, controlName): boolean {\n    const control = this.surroundingdetailform.controls[controlName];\n    return control.hasError(validation) && (control.dirty || control.touched);\n  }\n\n  isControlTouched(controlName): boolean {\n    const control = this.surroundingdetailform.controls[controlName];\n    return control.dirty || control.touched;\n  }\n}\n","import { Component, Input, OnInit, Output,EventEmitter } from '@angular/core';\n\n@Component({\n  selector: 'app-tables',\n  templateUrl: './tables.component.html',\n  styleUrls: ['./tables.component.scss']\n})\nexport class TablesComponent implements OnInit {\n@Input() contents:boolean=false\n@Input() plant:boolean=false\n@Input() stock:boolean=false\n@Input() tableData=[]\n\n  constructor() { }\n  @Output()\n  emitter = new EventEmitter<any>();\n  \n  ngOnInit(): void {\n  }\n\n  onActionView(data,type,tbtype){\n    this.emitter.emit({\n      cmd: type,\n      data: data,\n      tbtype:tbtype\n    });\n  }\n \n\n  ngOnDestroy() {\n    this.emitter.unsubscribe();\n  }\n\n}\n","export default \"<table class=\\\"table table-bordered\\\">\\n  <thead class=\\\"tbody-align\\\">\\n    <tr>\\n      <th></th>\\n      <th style=\\\"text-align: left;\\\">\\n        Base Coverage\\n      </th>\\n      <th *ngIf=\\\"product.code == 'CLFR01'\\\">\\n        Option\\n      </th>\\n      <th *ngIf=\\\"addOns.isSum\\\">\\n        Sum Insured\\n      </th>\\n      <th *ngIf=\\\"addOns.isUnit\\\">\\n        Unit\\n      </th>\\n      <th *ngIf=\\\"addOns.isPremium\\\">\\n        Premium\\n      </th>\\n    </tr>\\n  </thead>\\n  <tbody class=\\\"tbody-align\\\" *ngIf=\\\"!isLoading\\\">\\n    <ng-container *ngFor=\\\"let addon of product.addOns;let i = index\\\">\\n      <tr *ngIf=\\\"addon.show\\\">\\n\\n        <ng-container *ngIf=\\\"addOnsData[addon.id]\\\">\\n          <td>\\n            <input type=\\\"checkbox\\\" [(ngModel)]=\\\"addOnsData[addon.id].checked\\\" (change)=\\\"changeOption(addon)\\\">\\n          </td>\\n        </ng-container>\\n        <td style=\\\"text-align: left;\\\">{{addon.description}}</td>\\n        <!-- <ng-container *ngIf=\\\"addOnsData[addon.id].checked\\\"> -->\\n        <ng-container *ngIf=\\\"addOnsData[addon.id]\\\">\\n          <td *ngIf=\\\"product.code == 'CLFR01'\\\" style=\\\"text-align: left;\\\">\\n            <ng-container *ngIf=\\\"addon.code == 'FRAD010' || addon.code == 'FRAD008' \\\">\\n              <ng-select class=\\\"ng-custom-select\\\" [items]=\\\"fireOptionData[addon.code]\\\" bindLabel=\\\"value\\\"\\n                bindValue=\\\"code\\\" (change)=\\\"rechangeOption(addon)\\\" [(ngModel)]=\\\"addOnsData[addon.id].option\\\" [clearable]=\\\"false\\\"></ng-select>\\n            </ng-container>\\n          </td>\\n          <td *ngIf=\\\"addon.sumInsured\\\">\\n            <ng-container *ngIf=\\\"!addon.sumInsuredStr\\\">\\n              <input type=\\\"text\\\" class=\\\"form-control form-control-sm\\\" [disabled]=\\\"!addOnsData[addon.id].checked\\\"\\n                [(ngModel)]=\\\"addOnsData[addon.id].sum\\\">\\n            </ng-container>\\n            <ng-container *ngIf=\\\"addon.sumInsuredStr\\\">\\n              <!-- {{addOnsData[addon.id].sum}} -->\\n              {{addOnsData[addon.id].sum > 0 ? (addOnsData[addon.id].sum | number) : addOnsData[addon.id].sum}}\\n            </ng-container>\\n          </td>\\n          <td *ngIf=\\\"addon.unit\\\">\\n            <!-- <ng-container *ngIf=\\\"addon.unitStr\\\"></ng-container> -->\\n            <ng-container *ngIf=\\\"!addon.unitStr\\\">\\n              <input type=\\\"text\\\" class=\\\"form-control form-control-sm\\\" [disabled]=\\\"!addOnsData[addon.id].checked\\\"\\n                [(ngModel)]=\\\"addOnsData[addon.id].unit\\\">\\n            </ng-container>\\n            <ng-container *ngIf=\\\"addon.unitStr\\\">\\n              {{addOnsData[addon.id].unit}}\\n            </ng-container>\\n          </td>\\n          <td *ngIf=\\\"addon.premium\\\">\\n            <!-- <ng-container *ngIf=\\\"addon.premiumStr\\\"></ng-container> -->\\n            <ng-container *ngIf=\\\"!addon.premiumStr\\\">\\n              <input type=\\\"text\\\" class=\\\"form-control form-control-sm\\\" [disabled]=\\\"!addOnsData[addon.id].checked\\\"\\n                [(ngModel)]=\\\"addOnsData[addon.id].premium\\\">\\n            </ng-container>\\n            <ng-container *ngIf=\\\"addon.premiumStr\\\">\\n              {{addOnsData[addon.id].premium > 0 ? (addOnsData[addon.id].premium | number) :\\n              addOnsData[addon.id].premium}}\\n            </ng-container>\\n          </td>\\n          <!-- </ng-container> -->\\n        </ng-container>\\n      </tr>\\n    </ng-container>\\n  </tbody>\\n</table>\\n<hr>\\n<div class=\\\"row\\\">\\n  <div class=\\\"col-sm-6 mx-auto\\\">\\n    <button class=\\\"btn btn-block btn-secondary\\\" (click)=\\\"backPage()\\\"> Previous </button>\\n  </div>\\n  <div class=\\\"col-sm-6 mx-auto\\\">\\n    <button class=\\\"btn btn-block btn-primary\\\" (click)=\\\"nextPage()\\\"> Save & Next </button>\\n  </div>\\n</div>\";","export default \"<div class=\\\"modal-content\\\">\\n    <div class=\\\"modal-header\\\">\\n        <div class=\\\"modal-title h4 left-border-image\\\" id=\\\"example-modal-sizes-title-lg\\\">\\n            {{pageType}} {{type}}\\n        </div>\\n    </div>\\n\\n    <form action=\\\"#\\\" class=\\\"form\\\" [formGroup]=\\\"calculatedbuildingForm\\\" (ngSubmit)=\\\"create()\\\">\\n        <div class=\\\"overlay overlay-block cursor-default modal-body\\\">\\n            <div class=\\\"row\\\" style=\\\"align-items: center\\\">\\n                <div class=\\\"col-sm-6\\\">\\n                    <div class=\\\"form-group row\\\">\\n                        <label class=\\\"col-sm-4 col-form-label\\\">Item Description</label>\\n                        <div class=\\\"col-sm-8\\\">\\n                            <input type=\\\"text\\\" class=\\\"form-control form-control-sm \\\" name=\\\"itemDescription\\\" autocomplete=\\\"off\\\" [class.is-invalid]=\\\"isControlInvalid('itemDescription')\\\" [class.is-valid]=\\\"isControlValid('itemDescription')\\\" formControlName=\\\"itemDescription\\\" />\\n                        </div>\\n                    </div>\\n                </div>\\n                <div class=\\\"col-sm-6\\\" *ngIf=\\\"!isStock\\\">\\n                    <div class=\\\"form-group row\\\">\\n                        <label class=\\\"col-sm-4 col-form-label\\\">Item Name</label>\\n                        <div class=\\\"col-sm-8\\\">\\n                            <input type=\\\"text\\\" class=\\\"form-control form-control-sm \\\" name=\\\"itemName\\\" autocomplete=\\\"off\\\" [class.is-invalid]=\\\"isControlInvalid('itemName')\\\" [class.is-valid]=\\\"isControlValid('itemName')\\\" formControlName=\\\"itemName\\\" />\\n                        </div>\\n                    </div>\\n                </div>\\n                <div class=\\\"col-sm-6\\\" *ngIf=\\\"isStock\\\">\\n                    <div class=\\\"form-group row\\\">\\n                        <label class=\\\"col-sm-4 col-form-label\\\">Stock Value</label>\\n                        <div class=\\\"col-sm-8\\\">\\n                            <input type=\\\"tel\\\" currencyMask [options]=\\\"{ prefix: '', thousands: ',', precision: 0,allowNegative:false,align:'left' }\\\" class=\\\"form-control form-control-sm \\\" name=\\\"stockValue\\\" autocomplete=\\\"off\\\" [class.is-invalid]=\\\"isControlInvalid('stockValue')\\\" [class.is-valid]=\\\"isControlValid('stockValue')\\\"\\n                                formControlName=\\\"stockValue\\\" />\\n                        </div>\\n                    </div>\\n                </div>\\n            </div>\\n            <div class=\\\"row\\\" style=\\\"align-items: center\\\">\\n                <div class=\\\"col-sm-6\\\" *ngIf=\\\"!isStock\\\">\\n                    <div class=\\\"form-group row\\\">\\n                        <label class=\\\"col-sm-4 col-form-label\\\">Quantiy</label>\\n                        <div class=\\\"col-sm-8\\\">\\n                            <input type=\\\"number\\\" class=\\\"form-control form-control-sm \\\" (ngModelChange)=\\\"calculateTotalValue()\\\" name=\\\"quantity\\\" autocomplete=\\\"off\\\" [class.is-invalid]=\\\"isControlInvalid('quantity')\\\" [class.is-valid]=\\\"isControlValid('quantity')\\\" formControlName=\\\"quantity\\\"\\n                            />\\n                        </div>\\n                    </div>\\n                </div>\\n                <div class=\\\"col-sm-6\\\" *ngIf=\\\"!isStock\\\">\\n                    <div class=\\\"form-group row\\\">\\n                        <label class=\\\"col-sm-4 col-form-label\\\">Total Value</label>\\n                        <div class=\\\"col-sm-8\\\">\\n                            <input type=\\\"tel\\\" currencyMask [options]=\\\"{ prefix: '', thousands: ',', precision: 0,allowNegative:false,align:'left' }\\\" class=\\\"form-control form-control-sm \\\" name=\\\"totalValue\\\" autocomplete=\\\"off\\\" [class.is-invalid]=\\\"isControlInvalid('totalValue')\\\" [class.is-valid]=\\\"isControlValid('totalValue')\\\"\\n                                formControlName=\\\"totalValue\\\" readonly />\\n                        </div>\\n                    </div>\\n                </div>\\n            </div>\\n            <div class=\\\"row\\\" style=\\\"align-items: center\\\" *ngIf=\\\"isStock\\\">\\n                <div class=\\\"col-sm-6\\\">\\n                    <div class=\\\"form-group row\\\">\\n                        <label class=\\\"col-sm-4 col-form-label\\\">Month</label>\\n                        <div class=\\\"col-sm-8\\\">\\n                            <input type=\\\"text\\\" class=\\\"form-control form-control-sm \\\" name=\\\"month\\\" autocomplete=\\\"off\\\" [class.is-invalid]=\\\"isControlInvalid('month')\\\" [class.is-valid]=\\\"isControlValid('month')\\\" formControlName=\\\"month\\\" />\\n                        </div>\\n                    </div>\\n                </div>\\n                <div class=\\\"col-sm-6\\\">\\n                    <div class=\\\"form-group row\\\">\\n                        <label class=\\\"col-sm-4 col-form-label\\\">Remark</label>\\n                        <div class=\\\"col-sm-8\\\">\\n                            <input type=\\\"text\\\" class=\\\"form-control form-control-sm \\\" name=\\\"remark\\\" autocomplete=\\\"off\\\" [class.is-invalid]=\\\"isControlInvalid('remark')\\\" [class.is-valid]=\\\"isControlValid('remark')\\\" formControlName=\\\"remark\\\" />\\n                        </div>\\n                    </div>\\n                </div>\\n            </div>\\n            <div class=\\\"row\\\" style=\\\"align-items: center\\\">\\n                <div class=\\\"col-sm-6\\\" *ngIf=\\\"!isStock\\\">\\n                    <div class=\\\"form-group row\\\">\\n                        <label class=\\\"col-sm-4 col-form-label\\\">Value Per Quantity</label>\\n                        <div class=\\\"col-sm-8\\\">\\n                            <input type=\\\"tel\\\" currencyMask [options]=\\\"{ prefix: '', thousands: ',', precision: 0,allowNegative:false,align:'left' }\\\" class=\\\"form-control form-control-sm \\\" (ngModelChange)=\\\"calculateTotalValue()\\\" name=\\\"valuePerQuantity\\\" autocomplete=\\\"off\\\" [class.is-invalid]=\\\"isControlInvalid('valuePerQuantity')\\\"\\n                                [class.is-valid]=\\\"isControlValid('valuePerQuantity')\\\" formControlName=\\\"valuePerQuantity\\\" />\\n                        </div>\\n                    </div>\\n                </div>\\n                <div class=\\\"col-sm-6\\\" *ngIf=\\\"isStock\\\">\\n                    <div class=\\\"form-group row\\\">\\n                        <label class=\\\"col-sm-4 col-form-label\\\">Agreed SI</label>\\n                        <div class=\\\"col-sm-8\\\">\\n                            <input type=\\\"tel\\\" currencyMask [options]=\\\"{ prefix: '', thousands: ',', precision: 0,allowNegative:false,align:'left' }\\\" class=\\\"form-control form-control-sm \\\" name=\\\"agreedSi\\\" autocomplete=\\\"off\\\" [class.is-invalid]=\\\"isControlInvalid('agreedSi')\\\" [class.is-valid]=\\\"isControlValid('agreedSi')\\\"\\n                                formControlName=\\\"agreedSi\\\" />\\n                        </div>\\n                    </div>\\n                </div>\\n            </div>\\n\\n        </div>\\n        <div class=\\\"modal-footer\\\">\\n            <button type=\\\"button\\\" class=\\\"btn btn-light btn-elevate mr-2\\\" (click)=\\\"dismissModal()\\\">Cancel</button>\\n            <button type=\\\"submit\\\" class=\\\"btn btn-primary btn-elevate\\\" [disabled]=\\\"calculatedbuildingForm.invalid\\\">Save</button>\\n        </div>\\n    </form>\\n</div>\";","export default \"<div class=\\\"form-group\\\">\\n    <div class=\\\"row\\\" style=\\\"align-items: center;\\\">\\n        <!-- <div class=\\\"col-sm-12\\\">\\n            <label class=\\\"col-sm-12  left-border-image\\\">Calculated Building Sl <span style=\\\"margin-left: 20px;\\\">\\n                    {{default}} </span> </label>\\n        </div> -->\\n\\n    </div>\\n    <hr *ngIf=\\\"productDetail.policyType == 'T-001' \\\">\\n    <div class=\\\"px5 py5\\\" *ngIf=\\\"productDetail.policyType == 'T-001' \\\">\\n        <div class=\\\"row\\\" style=\\\"align-items: center;\\\">\\n\\n            <div class=\\\"col-sm-8\\\">\\n                <label class=\\\"col-sm-6  left-border-image\\\">Contents including FFF</label>\\n            </div>\\n            <div class=\\\"col-sm-2\\\">\\n                <mat-slide-toggle [(ngModel)]=\\\"isContents\\\" [color]=\\\"primary\\\" class=\\\"toggle ft-right\\\" (change)=\\\"toggleChange('contents')\\\"></mat-slide-toggle>\\n            </div>\\n            <div class=\\\"col-sm-2\\\">\\n                <button type=\\\"button\\\" class=\\\"btn btn-primary btn-sm mx-2 ft-right\\\" (click)=\\\"add('contents',null,'Add')\\\">Add</button>\\n            </div>\\n        </div>\\n\\n        <div *ngIf=\\\"isContents && contentsData\\\">\\n            <app-tables [contents]=\\\"true\\\" [tableData]=\\\"contentsData\\\" (emitter)=\\\"actionBtn($event)\\\"></app-tables>\\n            <div class=\\\"row\\\" style=\\\"align-items: center;\\\">\\n\\n                <div class=\\\"col-sm-12\\\">\\n                    <label class=\\\"col-sm-12 col-form-label tx-right\\\">Total Sum Insured for Contents including FFF\\n                        <span style=\\\"margin-left: 29px;\\\">{{totalContent | number}}</span>\\n                    </label>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n    <hr *ngIf=\\\"productDetail.policyType == 'T-001'\\\">\\n    <div *ngIf=\\\"productDetail.policyType == 'T-001'\\\">\\n        <div class=\\\"row\\\" style=\\\"align-items: center;\\\">\\n\\n            <div class=\\\"col-sm-8\\\">\\n                <label class=\\\"col-sm-6  left-border-image\\\">Plant and Machinery</label>\\n            </div>\\n            <div class=\\\"col-sm-2\\\">\\n                <mat-slide-toggle [(ngModel)]=\\\"isPlant\\\" [color]=\\\"primary\\\" class=\\\"toggle ft-right\\\" (change)=\\\"toggleChange('plants')\\\"></mat-slide-toggle>\\n            </div>\\n            <div class=\\\"col-sm-2\\\">\\n                <button type=\\\"button\\\" class=\\\"btn btn-primary btn-sm mx-2 ft-right\\\" (click)=\\\"add('plants',null,'Add')\\\">Add</button>\\n            </div>\\n        </div>\\n\\n        <div *ngIf=\\\"isPlant && plantData\\\">\\n            <app-tables [plant]=\\\"true\\\" [tableData]=\\\"plantData\\\" (emitter)=\\\"actionBtn($event)\\\"></app-tables>\\n            <div class=\\\"row\\\" style=\\\"align-items: center;\\\">\\n\\n                <div class=\\\"col-sm-12\\\">\\n                    <label class=\\\"col-sm-12 col-form-label tx-right\\\">Total Sum Insured for Plants and Machinery\\n                        <span style=\\\"margin-left: 29px;\\\">{{totalPlant | number}}</span>\\n                    </label>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n    <hr>\\n    <div>\\n        <div class=\\\"row\\\" style=\\\"align-items: center;\\\">\\n\\n            <div class=\\\"col-sm-8\\\">\\n                <label class=\\\"col-sm-6 left-border-image\\\">Stock</label>\\n            </div>\\n            <div class=\\\"col-sm-2\\\">\\n                <mat-slide-toggle [(ngModel)]=\\\"isStock\\\" [color]=\\\"primary\\\" class=\\\"toggle ft-right\\\" (change)=\\\"toggleChange('stock')\\\"></mat-slide-toggle>\\n            </div>\\n            <div class=\\\"col-sm-2\\\">\\n                <button type=\\\"button\\\" class=\\\"btn btn-primary btn-sm mx-2 ft-right\\\" (click)=\\\"add('stock',null,'Add')\\\">Add</button>\\n            </div>\\n        </div>\\n\\n        <div *ngIf=\\\"isStock && stockData\\\">\\n            <app-tables [stock]=\\\"true\\\" [tableData]=\\\"stockData\\\" (emitter)=\\\"actionBtn($event)\\\"></app-tables>\\n            <div class=\\\"row\\\" style=\\\"align-items: center;\\\">\\n\\n                <div class=\\\"col-sm-12\\\">\\n                    <label class=\\\"col-sm-12 col-form-label tx-right\\\">Total Sum Insured for Stock\\n                        <span style=\\\"margin-left: 29px;\\\">{{totalStock | number}}</span>\\n                    </label>\\n                </div>\\n            </div>\\n            <hr>\\n\\n        </div>\\n    </div>\";","export default \"<table class=\\\"table table-bordered\\\">\\n  <thead class=\\\"tbody-align\\\">\\n    <tr>\\n      <th>\\n        Basic Coverage\\n      </th>\\n      <th *ngIf=\\\"coverage.isSum\\\">\\n        Sum Insured\\n      </th>\\n      <th *ngIf=\\\"coverage.isUnit\\\">\\n        Unit\\n      </th>\\n      <th *ngIf=\\\"coverage.isPremium\\\">\\n        Premium\\n      </th>\\n    </tr>\\n  </thead>\\n  <tbody class=\\\"tbody-align\\\">\\n    <ng-container *ngFor=\\\"let coverage of product.coverages;let i = index\\\">\\n      <tr *ngIf=\\\"coverage.show\\\">\\n        <td>{{coverage.description}}</td>\\n        <ng-container *ngIf=\\\"coverageData[coverage.id]\\\">\\n          <td *ngIf=\\\"coverage.sumInsured\\\">\\n            <ng-container *ngIf=\\\"!coverage.sumInsuredStr\\\">\\n              <input type=\\\"text\\\" class=\\\"form-control form-control-sm\\\" [(ngModel)]=\\\"coverageData[coverage.id].sum\\\">\\n            </ng-container>\\n            <ng-container *ngIf=\\\"coverage.sumInsuredStr\\\">\\n              {{ coverageData[coverage.id].sum > 0 ? (coverageData[coverage.id].sum | number) :\\n                coverageData[coverage.id].sum}}\\n            </ng-container>\\n          </td>\\n          <td *ngIf=\\\"coverage.unit\\\">\\n            <!-- <ng-container *ngIf=\\\"coverage.unitStr\\\"></ng-container> -->\\n            <ng-container *ngIf=\\\"!coverage.unitStr\\\">\\n              <input type=\\\"text\\\" class=\\\"form-control form-control-sm\\\" [(ngModel)]=\\\"coverageData[coverage.id].unit\\\">\\n            </ng-container>\\n            <ng-container *ngIf=\\\"coverage.unitStr\\\">\\n              {{coverageData[coverage.id].unit}}\\n            </ng-container>\\n          </td>\\n          <td *ngIf=\\\"coverage.premium\\\">\\n            <!-- <ng-container *ngIf=\\\"coverage.premiumStr\\\"></ng-container> -->\\n            <ng-container *ngIf=\\\"!coverage.premiumStr\\\">\\n              <input type=\\\"text\\\" class=\\\"form-control form-control-sm\\\" [(ngModel)]=\\\"coverageData[coverage.id].premium\\\">\\n            </ng-container>\\n            <ng-container *ngIf=\\\"coverage.premiumStr\\\">\\n              <!-- {{coverageData[coverage.id].premium}} -->\\n              {{ coverageData[coverage.id].premium > 0 ? (coverageData[coverage.id].premium | number) :\\n                coverageData[coverage.id].premium}}\\n            </ng-container>\\n          </td>\\n        </ng-container>\\n      </tr>\\n    </ng-container>\\n  </tbody>\\n</table>\\n<hr>\\n<div class=\\\"row\\\">\\n  <div class=\\\"col-sm-6 mx-auto\\\">\\n    <button class=\\\"btn btn-block btn-secondary\\\" (click)=\\\"backPage()\\\"> Previous </button>\\n  </div>\\n  <div class=\\\"col-sm-6 mx-auto\\\">\\n    <button class=\\\"btn btn-block btn-primary\\\" (click)=\\\"nextPage()\\\"> Save & Next </button>\\n  </div>\\n</div>\";","export default \"<apx-chart\\n    [series]=\\\"chartOptions.series\\\"\\n    [chart]=\\\"chartOptions.chart\\\"\\n    [xaxis]=\\\"chartOptions.xaxis\\\"\\n    [yaxis]=\\\"chartOptions.yaxis\\\"\\n    [title]=\\\"chartOptions.title\\\"\\n    [legend]=\\\"chartOptions.legend\\\"\\n    [dataLabels]=\\\"chartOptions.dataLabels\\\"\\n    [markers]=\\\"chartOptions.markers\\\"\\n  ></apx-chart>\\n  <!-- <div class=\\\"row mt-3\\\">\\n    <div class=\\\"col-sm-6 mx-auto\\\">\\n      <button class=\\\"btn btn-block btn-secondary\\\" (click)=\\\"backPage()\\\"> Previous </button>\\n    </div>\\n    <div class=\\\"col-sm-6 mx-auto\\\">\\n      <button class=\\\"btn btn-block btn-primary\\\" (click)=\\\"nextPage()\\\"> Save & Next </button>\\n    </div>\\n  </div> -->\";","export default \"<table class=\\\"table table-bordered\\\">\\n  <thead>\\n    <tr>\\n      <th>End of Policy Year</th>\\n      <th>Age</th>\\n      <th>Premium Paid</th>\\n      <th>Death/PTD Benefit</th>\\n      <th>Surrender Value</th>\\n      <th>Maturity Benefit</th>\\n    </tr>\\n  </thead>\\n  <tbody *ngIf=\\\"premiumRate.length > 0 && surrendRate.length > 0\\\">\\n    <tr *ngFor=\\\"let item of showDatas;let i = index\\\">\\n      <td>{{item.endOfPolicyYear}}</td>\\n      <td>{{item.age}}</td>\\n      <td style=\\\"text-align: right;\\\">{{(item.premiumPaid | number) || \\\"-\\\"}}</td>\\n      <td style=\\\"text-align: right;\\\">{{item.deathBenefit | number}}</td>\\n      <td style=\\\"text-align: right;\\\">{{(item.surrenderValue | number) || \\\"-\\\"}}</td>\\n      <td style=\\\"text-align: right;\\\">{{(item.maturityBenefit | number) || \\\"-\\\"}}</td>\\n    </tr>\\n  </tbody>\\n</table>\\n<hr class=\\\"mb-5\\\">\\n<ng-container *ngIf=\\\"showDatas.length > 0\\\">\\n  <app-education-life-grip [parentData]=\\\"showDatas\\\"></app-education-life-grip>\\n</ng-container>\\n<div class=\\\"row mt-3\\\">\\n  <div class=\\\"col-sm-6 mx-auto\\\">\\n    <button class=\\\"btn btn-block btn-secondary\\\" (click)=\\\"backPage()\\\"> Previous </button>\\n  </div>\\n  <div class=\\\"col-sm-6 mx-auto\\\">\\n    <button class=\\\"btn btn-block btn-primary\\\" (click)=\\\"nextPage()\\\"> Save & Next </button>\\n  </div>\\n</div>\";","export default \"<apx-chart\\n    [series]=\\\"chartOptions.series\\\"\\n    [chart]=\\\"chartOptions.chart\\\"\\n    [xaxis]=\\\"chartOptions.xaxis\\\"\\n    [yaxis]=\\\"chartOptions.yaxis\\\"\\n    [title]=\\\"chartOptions.title\\\"\\n    [legend]=\\\"chartOptions.legend\\\"\\n    [dataLabels]=\\\"chartOptions.dataLabels\\\"\\n    [markers]=\\\"chartOptions.markers\\\"\\n  ></apx-chart>\\n  <!-- <div class=\\\"row mt-3\\\">\\n    <div class=\\\"col-sm-6 mx-auto\\\">\\n      <button class=\\\"btn btn-block btn-secondary\\\" (click)=\\\"backPage()\\\"> Previous </button>\\n    </div>\\n    <div class=\\\"col-sm-6 mx-auto\\\">\\n      <button class=\\\"btn btn-block btn-primary\\\" (click)=\\\"nextPage()\\\"> Save & Next </button>\\n    </div>\\n  </div> -->\";","export default \"<table class=\\\"table table-bordered\\\">\\n  <thead>\\n    <tr>\\n      <th>End of Policy Year</th>\\n      <th>Age</th>\\n      <th>Premium Paid</th>\\n      <th>Death/PTD Benefit</th>\\n      <th>Surrender Value</th>\\n      <th>Policy Loan</th>\\n    </tr>\\n  </thead>\\n  <tbody *ngIf=\\\"premiumRate.length > 0 && surrendRate.length > 0\\\">\\n    <tr *ngFor=\\\"let item of showDatas;let i = index\\\">\\n      <td>{{item.endOfPolicyYear}}</td>\\n      <td>{{item.age}}</td>\\n      <td style=\\\"text-align: right;\\\">{{(item.premiumPaid | number) || \\\"-\\\"}}</td>\\n      <td style=\\\"text-align: right;\\\">{{item.benefit | number}}</td>\\n      <td style=\\\"text-align: right;\\\">{{(item.surrenderValue | number) || \\\"-\\\"}}</td>\\n      <td style=\\\"text-align: right;\\\">{{(item.policyLoan | number) || \\\"-\\\"}}</td>\\n    </tr>\\n  </tbody>\\n</table>\\n<hr class=\\\"mb-5\\\">\\n<ng-container *ngIf=\\\"showDatas.length > 0\\\">\\n  <app-endo-grip [parentData]=\\\"showDatas\\\"></app-endo-grip>\\n</ng-container>\\n<div class=\\\"row mt-3\\\">\\n  <div class=\\\"col-sm-6 mx-auto\\\">\\n    <button class=\\\"btn btn-block btn-secondary\\\" (click)=\\\"backPage()\\\"> Previous </button>\\n  </div>\\n  <div class=\\\"col-sm-6 mx-auto\\\">\\n    <button class=\\\"btn btn-block btn-primary\\\" (click)=\\\"nextPage()\\\"> Save & Next </button>\\n  </div>\\n</div>\";","export default \"<div class=\\\"form-group\\\">\\n    <button type=\\\"button\\\" class=\\\"btn btn-primary mx-2\\\" (click)=\\\"newData('add')\\\">Add New Data</button>\\n</div>\\n<div class=\\\"table-responsive angular-bootstrap-table\\\">\\n    <table class=\\\"table table-head-custom table-vertical-center\\\">\\n        <thead>\\n            <tr>\\n                <th>Building Description</th>\\n                <th>Sum Insured</th>\\n                <th>Premium </th>\\n                <th>Action</th>\\n            </tr>\\n        </thead>\\n        <tbody>\\n            <ng-container *ngFor=\\\"let item of listData\\\">\\n                <tr>\\n                    <td>{{item.buildingDescription}}</td>\\n                    <td>{{item.riskSi | number}}</td>\\n                    <td>{{item.premium | number}}</td>\\n                    <td>\\n                        <a title=\\\"Edit\\\" class=\\\"btn btn-primary btn-cus btn-sm mx-1\\\" (click)=\\\"newData('edit',item)\\\">\\n                            <span class=\\\"flaticon-edit\\\"></span>\\n                        </a>\\n                        <a title=\\\"Delete\\\" class=\\\"btn btn-danger btn-cus btn-sm mx-1\\\" (click)=\\\"delete(item)\\\">\\n                            <span class=\\\"flaticon-delete\\\"></span>\\n                        </a>\\n                    </td>\\n                </tr>\\n            </ng-container>\\n        </tbody>\\n    </table>\\n</div>\\n<div class=\\\"row mt-3\\\">\\n    <div class=\\\"col-sm-6 mx-auto\\\">\\n        <button class=\\\"btn btn-block btn-secondary\\\" (click)=\\\"backPage()\\\"> Previous </button>\\n    </div>\\n    <div class=\\\"col-sm-6 mx-auto\\\">\\n        <button class=\\\"btn btn-block btn-primary\\\" (click)=\\\"nextPage()\\\"> Save & Next </button>\\n    </div>\\n</div>\";","export default \"<div class=\\\"modal-content\\\">\\n    <div class=\\\"modal-header\\\">\\n        <div class=\\\"modal-title h4 left-border-image\\\" id=\\\"example-modal-sizes-title-lg\\\">\\n            Fire Risk\\n            <!-- <small style=\\\"text-decoration: underline;cursor: pointer;\\\" *ngIf=\\\"oldData\\\"\\n                (click)=\\\"viewOther('form')\\\">(View\\n                Other Building)</small> -->\\n            <small style=\\\"text-decoration: underline;cursor: pointer;\\\" *ngIf=\\\"viewPage != 'form'\\\" (click)=\\\"viewOther('other')\\\">(View\\n                Risk Detail)</small>\\n        </div>\\n\\n    </div>\\n    <ng-container *ngIf=\\\"viewPage == 'form';else OtherBuilding\\\">\\n        <form action=\\\"#\\\" class=\\\"form\\\" [formGroup]=\\\"fireRiskform\\\" (ngSubmit)=\\\"createRisk()\\\">\\n            <div class=\\\"overlay overlay-block cursor-default modal-body\\\">\\n\\n                <div class=\\\"row\\\" style=\\\"align-items: center\\\">\\n                    <div class=\\\"col-md-6\\\">\\n                        <div class=\\\"form-group row\\\">\\n                            <label class=\\\"col-md-4 col-form-label\\\">Building Description</label>\\n                            <div class=\\\"col-md-6\\\">\\n                                <textarea type=\\\"text\\\" class=\\\"form-control form-control-sm \\\" name=\\\"buildingDescription\\\" autocomplete=\\\"off\\\" [class.is-invalid]=\\\"isControlInvalid('buildingDescription')\\\" [class.is-valid]=\\\"isControlValid('buildingDescription')\\\" formControlName=\\\"buildingDescription\\\"></textarea>\\n                            </div>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"col-md-6\\\">\\n                        <div class=\\\"form-group row\\\">\\n                            <label class=\\\"col-md-4 col-form-label\\\">Type of Building</label>\\n                            <div class=\\\"col-md-6\\\">\\n                                <ng-select class=\\\"ng-custom-select\\\" (change)=\\\"calcuRate('child')\\\" [class.is-invalid]=\\\"isControlInvalid('typeOfBuilding')\\\" [class.is-valid]=\\\"isControlValid('typeOfBuilding')\\\" [items]=\\\"typeOfBuildingOption\\\" bindLabel=\\\"value\\\" bindValue=\\\"code\\\" formControlName=\\\"typeOfBuilding\\\">\\n                                </ng-select>\\n                            </div>\\n                        </div>\\n                    </div>\\n                </div>\\n                <div class=\\\"row\\\" style=\\\"align-items: center\\\">\\n                    <div class=\\\"col-md-6\\\">\\n                        <div class=\\\"form-group row\\\">\\n                            <label class=\\\"col-md-4 col-form-label\\\">Occupation of Building</label>\\n                            <div class=\\\"col-md-6\\\">\\n                                <ng-select class=\\\"ng-custom-select\\\" [class.is-invalid]=\\\"isControlInvalid('occupationOfBuilding')\\\" (change)=\\\"calcuRate()\\\" [class.is-valid]=\\\"isControlValid('occupationOfBuilding')\\\" [items]=\\\"occupationOfBuildingOption\\\" bindLabel=\\\"value\\\" bindValue=\\\"code\\\"\\n                                    formControlName=\\\"occupationOfBuilding\\\">\\n                                </ng-select>\\n\\n                            </div>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"col-md-6\\\">\\n                        <div class=\\\"form-group row\\\">\\n                            <label class=\\\"col-md-4 col-form-label\\\">Building Class</label>\\n                            <div class=\\\"col-md-6\\\">\\n                                <ng-select class=\\\"ng-custom-select\\\" [class.is-invalid]=\\\"isControlInvalid('buildingClass')\\\" [class.is-valid]=\\\"isControlValid('buildingClass')\\\" [items]=\\\"buildingClassOption\\\" (change)=\\\"calcuRate()\\\" bindLabel=\\\"value\\\" bindValue=\\\"code\\\" formControlName=\\\"buildingClass\\\">\\n                                </ng-select>\\n                            </div>\\n                        </div>\\n                    </div>\\n                </div>\\n                <!--  -->\\n                <div class=\\\"row\\\" style=\\\"align-items: center\\\">\\n                    <div class=\\\"col-md-6\\\">\\n                        <div class=\\\"form-group row\\\">\\n                            <label class=\\\"col-md-4 col-form-label\\\">Construction of Roof</label>\\n                            <div class=\\\"col-md-6\\\">\\n                                <!-- <input type=\\\"number\\\" class=\\\"form-control form-control-sm \\\" name=\\\"constructionOfRoof\\\"\\n                                autocomplete=\\\"off\\\" [class.is-invalid]=\\\"isControlInvalid('constructionOfRoof')\\\"\\n                                [class.is-valid]=\\\"isControlValid('constructionOfRoof')\\\"\\n                                formControlName=\\\"constructionOfRoof\\\" /> -->\\n                                <ng-select class=\\\"ng-custom-select\\\" [class.is-invalid]=\\\"isControlInvalid('constructionOfRoof')\\\" [class.is-valid]=\\\"isControlValid('constructionOfRoof')\\\" [items]=\\\"roofOption\\\" bindLabel=\\\"value\\\" bindValue=\\\"code\\\" formControlName=\\\"constructionOfRoof\\\">\\n                                </ng-select>\\n                            </div>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"col-md-6\\\">\\n                        <div class=\\\"form-group row\\\">\\n                            <label class=\\\"col-md-4 col-form-label\\\">Construction of Walls</label>\\n                            <div class=\\\"col-md-6\\\">\\n                                <!-- <input type=\\\"number\\\" class=\\\"form-control form-control-sm \\\" name=\\\"constructionOfWall\\\"\\n                                autocomplete=\\\"off\\\" [class.is-invalid]=\\\"isControlInvalid('constructionOfWall')\\\"\\n                                [class.is-valid]=\\\"isControlValid('constructionOfWall')\\\"\\n                                formControlName=\\\"constructionOfWall\\\" /> -->\\n                                <ng-select class=\\\"ng-custom-select\\\" [class.is-invalid]=\\\"isControlInvalid('constructionOfWall')\\\" [class.is-valid]=\\\"isControlValid('constructionOfWall')\\\" [items]=\\\"wallOption\\\" bindLabel=\\\"value\\\" bindValue=\\\"code\\\" formControlName=\\\"constructionOfWall\\\">\\n                                </ng-select>\\n                            </div>\\n                        </div>\\n                    </div>\\n                </div>\\n                <!--  -->\\n                <!--  -->\\n                <div class=\\\"row\\\" style=\\\"align-items: center\\\">\\n                    <div class=\\\"col-md-6\\\">\\n                        <div class=\\\"form-group row\\\">\\n                            <label class=\\\"col-md-4 col-form-label\\\">Construction of Floor</label>\\n                            <div class=\\\"col-md-6\\\">\\n                                <!-- <input type=\\\"number\\\" class=\\\"form-control form-control-sm \\\" name=\\\"constructionOfFloor\\\"\\n                                autocomplete=\\\"off\\\" [class.is-invalid]=\\\"isControlInvalid('constructionOfFloor')\\\"\\n                                [class.is-valid]=\\\"isControlValid('constructionOfFloor')\\\"\\n                                formControlName=\\\"constructionOfFloor\\\" /> -->\\n                                <ng-select class=\\\"ng-custom-select\\\" [class.is-invalid]=\\\"isControlInvalid('constructionOfFloor')\\\" [class.is-valid]=\\\"isControlValid('constructionOfFloor')\\\" [items]=\\\"floorClassOption\\\" bindLabel=\\\"value\\\" bindValue=\\\"code\\\" formControlName=\\\"constructionOfFloor\\\">\\n                                </ng-select>\\n                            </div>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"col-md-6\\\">\\n                        <div class=\\\"form-group row\\\">\\n                            <label class=\\\"col-md-4 col-form-label\\\">No. of Story of Building</label>\\n                            <div class=\\\"col-md-6\\\">\\n                                <input type=\\\"number\\\" class=\\\"form-control form-control-sm \\\" name=\\\"storyOfBuilding\\\" autocomplete=\\\"off\\\" [class.is-invalid]=\\\"isControlInvalid('storyOfBuilding')\\\" [class.is-valid]=\\\"isControlValid('storyOfBuilding')\\\" formControlName=\\\"storyOfBuilding\\\" />\\n                            </div>\\n                        </div>\\n                    </div>\\n                </div>\\n                <!--  -->\\n                <!--  -->\\n                <div class=\\\"row\\\" style=\\\"align-items: center\\\">\\n                    <div class=\\\"col-md-6\\\">\\n                        <div class=\\\"form-group row\\\">\\n                            <label class=\\\"col-md-4 col-form-label\\\">Length in Feet</label>\\n                            <div class=\\\"col-md-6\\\">\\n                                <input type=\\\"number\\\" class=\\\"form-control form-control-sm \\\" name=\\\"length\\\" autocomplete=\\\"off\\\" [class.is-invalid]=\\\"isControlInvalid('length')\\\" [class.is-valid]=\\\"isControlValid('length')\\\" formControlName=\\\"length\\\" />\\n                            </div>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"col-md-6\\\">\\n                        <div class=\\\"form-group row\\\">\\n                            <label class=\\\"col-md-4 col-form-label\\\">Height in Feet</label>\\n                            <div class=\\\"col-md-6\\\">\\n                                <input type=\\\"number\\\" class=\\\"form-control form-control-sm \\\" name=\\\"height\\\" autocomplete=\\\"off\\\" [class.is-invalid]=\\\"isControlInvalid('height')\\\" (change)=\\\"calcuSquare()\\\" [class.is-valid]=\\\"isControlValid('height')\\\" formControlName=\\\"height\\\" />\\n                            </div>\\n                        </div>\\n                    </div>\\n                </div>\\n                <!--  -->\\n                <!--  -->\\n                <div class=\\\"row\\\" style=\\\"align-items: center\\\">\\n                    <div class=\\\"col-md-6\\\">\\n                        <div class=\\\"form-group row\\\">\\n                            <label class=\\\"col-md-4 col-form-label\\\">Width in Feet</label>\\n                            <div class=\\\"col-md-6\\\">\\n                                <input type=\\\"number\\\" class=\\\"form-control form-control-sm \\\" name=\\\"width\\\" autocomplete=\\\"off\\\" [class.is-invalid]=\\\"isControlInvalid('width')\\\" [class.is-valid]=\\\"isControlValid('width')\\\" formControlName=\\\"width\\\" (change)=\\\"calcuSquare()\\\" />\\n                            </div>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"col-md-6\\\">\\n                        <div class=\\\"form-group row\\\">\\n                            <label class=\\\"col-md-4 col-form-label\\\">Total Square in Feet</label>\\n                            <div class=\\\"col-md-6\\\">\\n                                <input type=\\\"number\\\" class=\\\"form-control form-control-sm \\\" name=\\\"totalSquareFoot\\\" autocomplete=\\\"off\\\" [class.is-invalid]=\\\"isControlInvalid('totalSquareFoot')\\\" [class.is-valid]=\\\"isControlValid('totalSquareFoot')\\\" formControlName=\\\"totalSquareFoot\\\" />\\n                            </div>\\n                        </div>\\n                    </div>\\n                </div>\\n                <!--  -->\\n                <!--  -->\\n                <div class=\\\"row\\\" style=\\\"align-items: center\\\">\\n                    <div class=\\\"col-md-6\\\">\\n                        <div class=\\\"form-group row\\\">\\n                            <label class=\\\"col-md-4 col-form-label\\\">Year of Construction</label>\\n                            <div class=\\\"col-md-6\\\">\\n                                <input type=\\\"number\\\" class=\\\"form-control form-control-sm \\\" name=\\\"yearOfConstruction\\\" autocomplete=\\\"off\\\" [class.is-invalid]=\\\"isControlInvalid('yearOfConstruction')\\\" [class.is-valid]=\\\"isControlValid('yearOfConstruction')\\\" formControlName=\\\"yearOfConstruction\\\"\\n                                />\\n                            </div>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"col-md-6\\\">\\n                        <div class=\\\"form-group row\\\">\\n                            <label class=\\\"col-md-4 col-form-label\\\">Special Decoration</label>\\n                            <div class=\\\"col-md-6\\\">\\n                                <!-- <input type=\\\"number\\\" class=\\\"form-control form-control-sm \\\" name=\\\"specialDecoration\\\"\\n                                autocomplete=\\\"off\\\" [class.is-invalid]=\\\"isControlInvalid('specialDecoration')\\\"\\n                                [class.is-valid]=\\\"isControlValid('specialDecoration')\\\"\\n                                formControlName=\\\"specialDecoration\\\" /> -->\\n                                <mat-radio-group formControlName=\\\"specialDecoration\\\" class=\\\"col-8\\\">\\n                                    <mat-radio-button class=\\\"mx-1\\\" [value]=\\\"true\\\">Yes\\n                                    </mat-radio-button>\\n                                    <mat-radio-button class=\\\"mx-1\\\" [value]=\\\"false\\\">No\\n                                    </mat-radio-button>\\n                                </mat-radio-group>\\n                            </div>\\n                        </div>\\n                    </div>\\n                </div>\\n                <div class=\\\"row\\\" style=\\\"align-items: center\\\">\\n                    <div class=\\\"col-md-6\\\">\\n                        <div class=\\\"form-group row\\\">\\n                            <label class=\\\"col-md-4 col-form-label\\\">Proposed Sum Insured</label>\\n                            <div class=\\\"col-md-6\\\">\\n                                <input type=\\\"tel\\\" currencyMask [options]=\\\"{ prefix: '', thousands: ',', precision: 0,allowNegative:false,align:'left' }\\\" class=\\\"form-control form-control-sm \\\" name=\\\"sumInsure\\\" autocomplete=\\\"off\\\" [class.is-invalid]=\\\"isControlInvalid('sumInsure')\\\" [class.is-valid]=\\\"isControlValid('sumInsure')\\\"\\n                                    formControlName=\\\"sumInsure\\\" />\\n                            </div>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"col-md-6\\\">\\n                        <div class=\\\"form-group row\\\">\\n                            <label class=\\\"col-md-4 col-form-label\\\">Proposed Stock Value</label>\\n                            <div class=\\\"col-md-6\\\">\\n                                <input type=\\\"tel\\\" currencyMask [options]=\\\"{ prefix: '', thousands: ',', precision: 0,allowNegative:false,align:'left' }\\\" class=\\\"form-control form-control-sm \\\" name=\\\"proposeStockValue\\\" autocomplete=\\\"off\\\" [class.is-invalid]=\\\"isControlInvalid('proposeStockValue')\\\"\\n                                    [class.is-valid]=\\\"isControlValid('proposeStockValue')\\\" formControlName=\\\"proposeStockValue\\\" />\\n                            </div>\\n                        </div>\\n                    </div>\\n                    <!-- <div class=\\\"col-md-6\\\">\\n                    <div class=\\\"form-group row\\\">\\n                        <label class=\\\"col-md-4 col-form-label\\\">Special Decoration</label>\\n                        <div class=\\\"col-md-6\\\">\\n                            <input type=\\\"number\\\" class=\\\"form-control form-control-sm \\\" name=\\\"premiumRate\\\"\\n                                autocomplete=\\\"off\\\" [class.is-invalid]=\\\"isControlInvalid('premiumRate')\\\"\\n                                [class.is-valid]=\\\"isControlValid('premiumRate')\\\" formControlName=\\\"premiumRate\\\" />\\n                        </div>\\n                    </div>\\n                </div> -->\\n                </div>\\n                <!--  -->\\n\\n            </div>\\n            <div class=\\\"modal-footer\\\">\\n                <button type=\\\"button\\\" class=\\\"btn btn-light btn-elevate mr-2\\\" (click)=\\\"calPremimun()\\\">Cancel</button>\\n                <button type=\\\"submit\\\" class=\\\"btn btn-primary btn-elevate\\\">Save</button>\\n            </div>\\n        </form>\\n    </ng-container>\\n    <ng-template #OtherBuilding>\\n        <div class=\\\"overlay overlay-block cursor-default modal-body\\\">\\n            <app-surrounding-building [riskId]=\\\"oldData.id\\\"></app-surrounding-building>\\n            <app-calculated-building [riskId]=\\\"oldData.id\\\" [default]=\\\"buildingSi\\\" (totalEvent)=\\\"changeTotal($event)\\\">\\n            </app-calculated-building>\\n        </div>\\n        <div class=\\\"modal-footer\\\">\\n            <button type=\\\"button\\\" class=\\\"btn btn-light btn-elevate mr-2\\\" (click)=\\\"calPremimun()\\\">Cancel</button>\\n            <button type=\\\"button\\\" class=\\\"btn btn-primary btn-elevate\\\" (click)=\\\"calPremimun()\\\">Save</button>\\n        </div>\\n    </ng-template>\\n</div>\";","export default \"<form action=\\\"\\\" [formGroup]=\\\"staticForm\\\">\\n  <!-- Start date -->\\n  <div class=\\\"row\\\" style=\\\"align-items: center;\\\">\\n    <div class=\\\"col-sm-6\\\">\\n      <div class=\\\"form-group row\\\">\\n        <label class=\\\"col-sm-4 col-form-label \\\">Policy Effective Date</label>\\n        <div class=\\\"col-sm-6\\\">\\n          <div class=\\\"input-group\\\">\\n            <input matInput class=\\\"form-control-sm date-input\\\" formControlName=\\\"startDate\\\" [min]=\\\"fromMinDate\\\" [max]=\\\"fromMaxDate\\\"\\n              [matDatepicker]=\\\"picker\\\" readonly (dateChange)=\\\"doValid()\\\">\\n            <mat-datepicker-toggle matSuffix [for]=\\\"picker\\\"></mat-datepicker-toggle>\\n            <mat-datepicker #picker disabled=\\\"false\\\"></mat-datepicker>\\n            <app-print-error [control]=\\\"controls.startDate\\\"></app-print-error>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n    <div class=\\\"col-sm-6\\\">\\n      <div class=\\\"form-group row\\\">\\n        <label class=\\\"col-sm-4 col-form-label \\\">-</label>\\n        <div class=\\\"col-sm-6\\\">\\n          <div class=\\\"input-group\\\">\\n            <input matInput class=\\\"form-control-sm date-input\\\" formControlName=\\\"endDate\\\" [min]=\\\"toMinDate\\\" [max]=\\\"toMaxDate\\\"\\n              [matDatepicker]=\\\"picker2\\\" readonly>\\n            <mat-datepicker-toggle matSuffix [for]=\\\"picker2\\\"></mat-datepicker-toggle>\\n            <mat-datepicker #picker2 disabled=\\\"true\\\"></mat-datepicker>\\n            <app-print-error [control]=\\\"controls.endDate\\\"></app-print-error>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n  <!-- End date  -->\\n  <!-- Policy Duration -->\\n  <div class=\\\"row\\\" style=\\\"align-items: center;\\\">\\n    <div class=\\\"col-md-6\\\">\\n      <div class=\\\"form-group row\\\">\\n        <label class=\\\"col-4 col-form-label\\\">Policy Duration</label>\\n        <div class=\\\"col-6\\\">\\n          <input type=\\\"text\\\" name=\\\"policyDuration\\\" formControlName=\\\"policyDuration\\\" class=\\\"form-control form-control-sm\\\"\\n            (change)=\\\"doValid()\\\">\\n          <app-print-error [control]=\\\"controls.policyDuration\\\"></app-print-error>\\n        </div>\\n        <div class=\\\"col-2\\\"></div>\\n      </div>\\n    </div>\\n    <!-- /Policy Duration -->\\n    <!-- Policy Type -->\\n    <div class=\\\"col-sm-6\\\">\\n      <section class=\\\"example-section\\\">\\n        <div class=\\\"form-group row\\\">\\n          <label class=\\\"col-4\\\">Policy Type</label>\\n          <mat-radio-group formControlName=\\\"policyType\\\" class=\\\"col-8\\\">\\n            <mat-radio-button class=\\\"mx-1\\\" [value]=\\\"'T-001'\\\">Normal\\n            </mat-radio-button>\\n            <mat-radio-button class=\\\"mx-1\\\" [value]=\\\"'T-002'\\\">Declaration\\n            </mat-radio-button>\\n          </mat-radio-group>\\n        </div>\\n      </section>\\n    </div>\\n    <!-- Policy Type -->\\n\\n  </div>\\n\\n  <div class=\\\"row\\\">\\n    <!--  currency -->\\n    <div class=\\\"col-sm-6\\\">\\n      <section class=\\\"example-section\\\">\\n        <div class=\\\"form-group row\\\">\\n          <label class=\\\"col-4\\\">Currency</label>\\n          <mat-radio-group formControlName=\\\"currency\\\" class=\\\"col-8\\\">\\n            <mat-radio-button class=\\\"mx-1\\\" [value]=\\\"'MMK'\\\">MMK\\n            </mat-radio-button>\\n            <mat-radio-button class=\\\"mx-1\\\" [value]=\\\"'USD'\\\">USD\\n            </mat-radio-button>\\n          </mat-radio-group>\\n        </div>\\n      </section>\\n    </div>\\n    <!--  currency -->\\n\\n  </div>\\n</form>\\n<div class=\\\"row mt-3\\\">\\n  <div class=\\\"col-sm-6 mx-auto\\\">\\n    <button class=\\\"btn btn-block btn-secondary\\\" (click)=\\\"backPage()\\\"> Previous </button>\\n  </div>\\n  <div class=\\\"col-sm-6 mx-auto\\\">\\n    <button class=\\\"btn btn-block btn-primary\\\" (click)=\\\"nextPage()\\\"> Save & Next </button>\\n  </div>\\n</div>\\n\\n<!--  \\\"Health Insurance\\\"\\n\\\"Critical illness\\\"\\n\\\"Surgery & Miscarriage\\\"\\n\\\"Mediacal treatments\\\" -->\";","export default \"<table class=\\\"table table-bordered\\\">\\n  <thead>\\n    <tr>\\n      <th>\\n        Coverages/Benefit\\n      </th>\\n      <th>\\n        Sum Insured\\n      </th>\\n    </tr>\\n  </thead>\\n  <tbody>\\n    <tr *ngFor=\\\"let item of showData\\\">\\n      <td>{{item.keyName}}</td>\\n      <td>{{item.value}} Units</td>\\n    </tr>\\n  </tbody>\\n</table>\\n<hr>\\n<h5 class=\\\"\\\">Payment Schedules</h5>\\n<table class=\\\"table table-bordered\\\">\\n  <thead>\\n    <tr>\\n      <th>\\n        No. of Installment\\n      </th>\\n      <th style=\\\"text-align: right;\\\">\\n        Premium\\n      </th>\\n      <th style=\\\"text-align: right;\\\">\\n        Levy\\n      </th>\\n      <th style=\\\"text-align: right;\\\">\\n        Total\\n      </th>\\n    </tr>\\n  </thead>\\n  <tbody class=\\\"tbody-align\\\">\\n    <tr *ngFor=\\\"let item of tempSchedule;let i =index\\\">\\n      <td>{{i+1}}</td>\\n      <td>{{item.premium | number}}</td>\\n      <td>{{item.levy | number}}</td>\\n      <td>{{(item.premium + item.levy) | number}}</td>\\n    </tr>\\n  </tbody>\\n  <tfoot class=\\\"tbody-align\\\">\\n    <tr>\\n      <td><b>Total</b></td>\\n      <td>{{totalP | number}}</td>\\n      <td>{{totalL | number}}</td>\\n      <td>{{(totalP+totalL) | number}}</td>\\n    </tr>\\n  </tfoot>\\n</table>\\n\\n<div class=\\\"row mt-3\\\">\\n  <div class=\\\"col-sm-6 mx-auto\\\">\\n    <button class=\\\"btn btn-block btn-secondary\\\" (click)=\\\"backPage()\\\"> Previous </button>\\n  </div>\\n  <div class=\\\"col-sm-6 mx-auto\\\">\\n    <button class=\\\"btn btn-block btn-primary\\\" (click)=\\\"nextPage()\\\"> Save & Next </button>\\n  </div>\\n</div>\";","export default \"<form action=\\\"\\\" [formGroup]=\\\"staticForm\\\">\\n  <!-- Start date -->\\n  <div class=\\\"row\\\" style=\\\"align-items: center;\\\">\\n    <div class=\\\"col-6\\\">\\n      <div class=\\\"form-group row\\\">\\n        <label class=\\\"col-sm-4 col-form-label \\\">Period of Insurance</label>\\n        <div class=\\\"col-sm-6\\\">\\n          <div class=\\\"input-group\\\">\\n            <input matInput class=\\\"form-control-sm date-input\\\" formControlName=\\\"insuranceStartDate\\\" [min]=\\\"fromMinDate\\\"\\n              [max]=\\\"fromMaxDate\\\" [matDatepicker]=\\\"picker\\\" readonly>\\n            <mat-datepicker-toggle matSuffix [for]=\\\"picker\\\"></mat-datepicker-toggle>\\n            <mat-datepicker #picker disabled=\\\"false\\\"></mat-datepicker>\\n            <app-print-error [control]=\\\"controls.insuranceStartDate\\\"></app-print-error>\\n          </div>\\n          <!-- <div class=\\\"input-group\\\">\\n            <input type=\\\"text\\\" name=\\\"policy_date\\\" class=\\\"form-control form-control-sm \\\" autocomplete=\\\"off\\\"\\n              placeholder=\\\"dd/mm/yyyy\\\" ngbDatepicker #d=\\\"ngbDatepicker\\\" [minDate]=\\\"fromMinDate\\\" [maxDate]=\\\"fromMaxDate\\\"\\n              formControlName=\\\"insuranceStartDate\\\" (click)=\\\"d.toggle()\\\" readonly=\\\"true\\\" />\\n            <div class=\\\"input-group-append\\\" (click)=\\\"d.toggle()\\\">\\n              <span class=\\\"input-group-text\\\">\\n                <i class=\\\"text-dark-50 flaticon-calendar\\\"></i>\\n              </span>\\n            </div>\\n          </div>\\n          <app-print-error [control]=\\\"controls.insuranceStartDate\\\"></app-print-error> -->\\n        </div>\\n      </div>\\n    </div>\\n    <div class=\\\"col-6\\\">\\n      <div class=\\\"form-group row\\\">\\n        <label class=\\\"col-sm-4 col-form-label \\\">-</label>\\n        <div class=\\\"col-sm-6\\\">\\n          <!-- <div class=\\\"input-group\\\">\\n            <input type=\\\"text\\\" name=\\\"policy_end_date\\\" class=\\\"form-control form-control-sm \\\" autocomplete=\\\"off\\\"\\n              placeholder=\\\"dd/mm/yyyy\\\" ngbDatepicker #de=\\\"ngbDatepicker\\\" [minDate]=\\\"toMinDate\\\" [maxDate]=\\\"toMaxDate\\\"\\n              formControlName=\\\"insuranceEndDate\\\" readonly=\\\"true\\\" />\\n            <div class=\\\"input-group-append\\\">\\n              <span class=\\\"input-group-text\\\">\\n                <i class=\\\"text-dark-50 flaticon-calendar\\\"></i>\\n              </span>\\n            </div>\\n          </div> -->\\n          <!-- <app-print-error [control]=\\\"controls.insuranceStartDate\\\"></app-print-error> -->\\n          <div class=\\\"input-group\\\">\\n            <input matInput class=\\\"form-control-sm date-input\\\" formControlName=\\\"insuranceEndDate\\\" [min]=\\\"toMinDate\\\"\\n              [max]=\\\"toMaxDate\\\" [matDatepicker]=\\\"picker2\\\" readonly>\\n            <mat-datepicker-toggle matSuffix [for]=\\\"picker2\\\"></mat-datepicker-toggle>\\n            <mat-datepicker #picker2 disabled=\\\"true\\\"></mat-datepicker>\\n          </div>\\n        </div>\\n      </div>\\n      <!-- <div class=\\\"input-group\\\">\\n        <input type=\\\"text\\\" name=\\\"policy_end_date\\\" class=\\\"form-control form-control-sm \\\" autocomplete=\\\"off\\\" placeholder=\\\"dd/mm/yyyy\\\"\\n          ngbDatepicker #de=\\\"ngbDatepicker\\\" (click)=\\\"de.toggle()\\\" [minDate]=\\\"toMinDate\\\" [maxDate]=\\\"toMaxDate\\\"\\n          formControlName=\\\"insuranceEndDate\\\" readonly=\\\"true\\\" />\\n        <div class=\\\"input-group-append\\\" (click)=\\\"de.toggle()\\\">\\n          <span class=\\\"input-group-text\\\">\\n            <i class=\\\"text-dark-50 flaticon-calendar\\\"></i>\\n          </span>\\n        </div>\\n      </div>\\n      <app-print-error [control]=\\\"controls.insuranceEndDate\\\"></app-print-error> -->\\n    </div>\\n  </div>\\n  <!-- End date  -->\\n\\n  <div class=\\\"row\\\" style=\\\"align-items: center;\\\">\\n    <!-- BC -->\\n    <div class=\\\"col-6\\\">\\n      <section class=\\\"example-section\\\">\\n        <div class=\\\"form-group row\\\">\\n          <label class=\\\"col-4\\\">Basic Cover</label>\\n          <mat-radio-group formControlName=\\\"basicCoverId\\\" class=\\\"col-8\\\">\\n            <!-- *ngFor=\\\"let item of options\\\" {{item.premiumStr}} -->\\n            <!-- <mat-radio-button class=\\\"mx-1\\\" *ngFor=\\\"let item of options\\\" [value]=\\\"item.id\\\"> {{item.premiumStr}}\\n            </mat-radio-button> -->\\n            <mat-radio-button class=\\\"mx-1\\\" [value]=\\\"'Health Insurance'\\\">Health Insurance\\n            </mat-radio-button>\\n            <mat-radio-button class=\\\"mx-1\\\" [value]=\\\"'Critical illness'\\\">Critical illness\\n            </mat-radio-button>\\n          </mat-radio-group>\\n        </div>\\n      </section>\\n    </div>\\n    <!-- BC -->\\n    <!-- DOB -->\\n    <div class=\\\"col-6\\\">\\n      <div class=\\\"form-group row\\\">\\n        <label class=\\\"col-4 col-form-label\\\">Date of Birth</label>\\n        <div class=\\\"col-6\\\">\\n          <!-- <div class=\\\"input-group\\\">\\n            <input type=\\\"text\\\" name=\\\"dateOfBirth\\\" class=\\\"form-control form-control-sm \\\" autocomplete=\\\"off\\\"\\n              placeholder=\\\"dd/mm/yyyy\\\" ngbDatepicker #db=\\\"ngbDatepicker\\\" (click)=\\\"db.toggle()\\\" [minDate]=\\\"dobMinDate\\\"\\n              [maxDate]=\\\"dobMaxDate\\\" formControlName=\\\"dateOfBirth\\\" readonly=\\\"true\\\" />\\n            <div class=\\\"input-group-append\\\" (click)=\\\"db.toggle()\\\">\\n              <span class=\\\"input-group-text\\\">\\n                <i class=\\\"text-dark-50 flaticon-calendar\\\"></i>\\n              </span>\\n            </div>\\n          </div> -->\\n          <!-- <app-print-error [control]=\\\"controls.dateOfBirth\\\"></app-print-error> -->\\n          <div class=\\\"input-group\\\">\\n            <input matInput class=\\\"form-control-sm date-input\\\" formControlName=\\\"dateOfBirth\\\" [min]=\\\"dobMinDate\\\" [max]=\\\"dobMaxDate\\\"\\n              [matDatepicker]=\\\"picker3\\\" readonly>\\n            <mat-datepicker-toggle matSuffix [for]=\\\"picker3\\\"></mat-datepicker-toggle>\\n            <mat-datepicker #picker3 disabled=\\\"false\\\"></mat-datepicker>\\n            <app-print-error [control]=\\\"controls.dateOfBirth\\\"></app-print-error>\\n          </div>\\n        </div>\\n\\n      </div>\\n    </div>\\n    <!-- DOB -->\\n  </div>\\n\\n  <div class=\\\"row\\\">\\n    <!--  Payment Frequency -->\\n    <div class=\\\"col-6\\\">\\n      <div class=\\\"form-group row\\\">\\n        <label class=\\\"col-4 col-form-label\\\">Payment Frequency</label>\\n        <div class=\\\"col-6\\\">\\n          <select name=\\\"payment_frequency\\\" formControlName=\\\"paymentFrequency\\\" class=\\\"form-control form-control-sm\\\">\\n            <option [value]=\\\"null\\\">Please Select Payment Frequency</option>\\n            <option value=\\\"lump\\\">Lump Sum</option>\\n            <option value=\\\"semi_annually\\\">Semi-Annually</option>\\n          </select>\\n          <app-print-error [control]=\\\"controls.paymentFrequency\\\"></app-print-error>\\n\\n        </div>\\n      </div>\\n    </div>\\n    <!--  Payment Frequency -->\\n    <!--  Payment Frequency -->\\n    <div class=\\\"col-6\\\">\\n      <div class=\\\"form-group row\\\">\\n        <label class=\\\"col-4 col-form-label\\\">Sum Insured of Main Cover</label>\\n        <div class=\\\"col-6\\\">\\n          <select name=\\\"sumInsuredMainCover\\\" formControlName=\\\"sumInsuredMainCover\\\" class=\\\"form-control form-control-sm\\\">\\n            <option [value]=\\\"null\\\">Please Select Sum Insured</option>\\n            <option *ngFor=\\\"let item of options3\\\" [value]=\\\"item\\\">{{item}} Unit{{item > 1 ? \\\"s\\\" : \\\"\\\"}}</option>\\n          </select>\\n          <app-print-error [control]=\\\"controls.sumInsuredMainCover\\\"></app-print-error>\\n        </div>\\n      </div>\\n    </div>\\n    <!--  Payment Frequency -->\\n  </div>\\n\\n  <div class=\\\"row\\\">\\n    <!--  Medical Card No -->\\n    <div class=\\\"col-6\\\">\\n      <div class=\\\"form-group row\\\">\\n        <label class=\\\"col-4 col-form-label\\\">Medical Card No</label>\\n        <div class=\\\"col-6\\\">\\n          <input type=\\\"text\\\" name=\\\"medicalCardNo\\\" formControlName=\\\"medicalCardNo\\\" class=\\\"form-control form-control-sm\\\">\\n        </div>\\n      </div>\\n    </div>\\n    <!--  Payment Frequency -->\\n  </div>\\n  <!-- <hr> value=\\\"{{item.id}}\\\">-->\\n\\n</form>\\n<div class=\\\"row mt-3\\\">\\n  <div class=\\\"col-12\\\">\\n    <h5 style=\\\"border-bottom: 1px solid rgba(0, 0, 0, 0.1);padding: 20px 0px;\\\">Product And Riders</h5>\\n    <table class=\\\"table table-bordered\\\">\\n      <thead>\\n        <tr>\\n          <th>\\n            Plan\\n          </th>\\n          <th>\\n            Sum Assured\\n          </th>\\n          <th>\\n            Coverage Term\\n          </th>\\n          <th>\\n            Payment Term\\n          </th>\\n          <th>\\n            Premium\\n          </th>\\n        </tr>\\n      </thead>\\n      <tbody>\\n        <tr *ngFor=\\\"let item of tempArray\\\">\\n          <td>{{item.plan}}</td>\\n          <td>{{item.sumInsured}} Unit{{item.sumInsured > 1 ? \\\"s\\\":\\\"\\\"}}</td>\\n          <td>{{item.coverage}}</td>\\n          <td>{{policyTerm[item.paymentTerm] || item.paymentTerm}}</td>\\n          <td>{{item.premium | number}} </td>\\n        </tr>\\n      </tbody>\\n      <tfoot>\\n        <tr>\\n          <td><b>Total</b></td>\\n          <td>{{totalResult.unit}} Unit{{totalResult.unit > 1 ? \\\"s\\\":\\\"\\\"}}</td>\\n          <td></td>\\n          <td></td>\\n          <td>{{totalResult.premium | number}}</td>\\n        </tr>\\n      </tfoot>\\n    </table>\\n\\n  </div>\\n</div>\\n<div class=\\\"row mt-3\\\">\\n  <div class=\\\"col-sm-6 mx-auto\\\">\\n    <button class=\\\"btn btn-block btn-secondary\\\" (click)=\\\"backPage()\\\"> Previous </button>\\n  </div>\\n  <div class=\\\"col-sm-6 mx-auto\\\">\\n    <button class=\\\"btn btn-block btn-primary\\\" (click)=\\\"nextPage()\\\"> Save & Next </button>\\n  </div>\\n</div>\\n\\n<!--  \\\"Health Insurance\\\"\\n\\\"Critical illness\\\"\\n\\\"Surgery & Miscarriage\\\"\\n\\\"Mediacal treatments\\\" -->\";","export default \"<form action=\\\"\\\" [formGroup]=\\\"staticForm\\\">\\n  <!-- Start date -->\\n  <div class=\\\"row\\\" style=\\\"align-items: center;\\\">\\n    <div class=\\\"col-6\\\">\\n      <div class=\\\"form-group row\\\">\\n        <label class=\\\"col-sm-4 col-form-label \\\">Period of Insurance</label>\\n        <div class=\\\"col-sm-6\\\">\\n          <div class=\\\"input-group\\\">\\n            <input matInput class=\\\"form-control-sm date-input\\\" formControlName=\\\"insuranceStartDate\\\" [min]=\\\"fromMinDate\\\"\\n              [max]=\\\"fromMaxDate\\\" [matDatepicker]=\\\"picker\\\" readonly (dateChange)=\\\"doValid()\\\">\\n            <mat-datepicker-toggle matSuffix [for]=\\\"picker\\\"></mat-datepicker-toggle>\\n            <mat-datepicker #picker disabled=\\\"false\\\"></mat-datepicker>\\n            <app-print-error [control]=\\\"controls.insuranceStartDate\\\"></app-print-error>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n    <div class=\\\"col-6\\\">\\n      <div class=\\\"form-group row\\\">\\n        <label class=\\\"col-sm-4 col-form-label \\\">-</label>\\n        <div class=\\\"col-sm-6\\\">\\n          <div class=\\\"input-group\\\">\\n            <input matInput class=\\\"form-control-sm date-input\\\" formControlName=\\\"insuranceEndDate\\\" [min]=\\\"toMinDate\\\"\\n              [max]=\\\"toMaxDate\\\" [matDatepicker]=\\\"picker2\\\" readonly>\\n            <mat-datepicker-toggle matSuffix [for]=\\\"picker2\\\"></mat-datepicker-toggle>\\n            <mat-datepicker #picker2 disabled=\\\"true\\\"></mat-datepicker>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n  <!-- End date  -->\\n\\n  <div class=\\\"row\\\" style=\\\"align-items: center;\\\">\\n    <!-- BC -->\\n    <div class=\\\"col-6\\\">\\n      <section class=\\\"example-section\\\">\\n        <div class=\\\"form-group row\\\">\\n          <label class=\\\"col-4\\\">Basic Cover</label>\\n          <mat-radio-group formControlName=\\\"basicCoverId\\\" class=\\\"col-8\\\" (change)=\\\"radioChange($event)\\\">\\n            <mat-radio-button class=\\\"mx-1\\\" [value]=\\\"'Health Insurance'\\\">Health Insurance\\n            </mat-radio-button>\\n            <mat-radio-button class=\\\"mx-1\\\" [value]=\\\"'Critical illness'\\\">Critical Illness\\n            </mat-radio-button>\\n          </mat-radio-group>\\n        </div>\\n      </section>\\n    </div>\\n    <!-- BC -->\\n    <!-- DOB -->\\n    <div class=\\\"col-6\\\">\\n      <div class=\\\"form-group row\\\">\\n        <label class=\\\"col-4 col-form-label\\\">Date of Birth</label>\\n        <div class=\\\"col-6\\\">\\n          <div class=\\\"input-group\\\">\\n            <input matInput class=\\\"form-control-sm date-input\\\" formControlName=\\\"dateOfBirth\\\" [min]=\\\"dobMinDate\\\" [max]=\\\"dobMaxDate\\\"\\n              [matDatepicker]=\\\"picker3\\\" readonly>\\n            <mat-datepicker-toggle matSuffix [for]=\\\"picker3\\\"></mat-datepicker-toggle>\\n            <mat-datepicker #picker3 disabled=\\\"false\\\"></mat-datepicker>\\n            <app-print-error [control]=\\\"controls.dateOfBirth\\\"></app-print-error>\\n          </div>\\n        </div>\\n\\n      </div>\\n    </div>\\n    <!-- DOB -->\\n  </div>\\n\\n  <div class=\\\"row\\\">\\n    <!--  Payment Frequency -->\\n    <div class=\\\"col-6\\\">\\n      <div class=\\\"form-group row\\\">\\n        <label class=\\\"col-4 col-form-label\\\">Payment Frequency</label>\\n        <div class=\\\"col-6\\\">\\n          <select name=\\\"payment_frequency\\\" formControlName=\\\"paymentFrequency\\\" class=\\\"form-control form-control-sm\\\">\\n            <option [value]=\\\"null\\\">Please Select Payment Frequency</option>\\n            <option value=\\\"lump\\\">Lump Sum</option>\\n            <option value=\\\"semi_annually\\\">Semi-Annually</option>\\n          </select>\\n          <app-print-error [control]=\\\"controls.paymentFrequency\\\"></app-print-error>\\n\\n        </div>\\n      </div>\\n    </div>\\n    <!--  Payment Frequency -->\\n    <!--  Payment Frequency -->\\n    <div class=\\\"col-6\\\">\\n      <div class=\\\"form-group row\\\">\\n        <label class=\\\"col-4 col-form-label\\\">Sum Insured of Main Cover</label>\\n        <div class=\\\"col-6\\\">\\n          <select name=\\\"sumInsuredMainCover\\\" formControlName=\\\"sumInsuredMainCover\\\" class=\\\"form-control form-control-sm\\\"\\n            (change)=\\\"getUnitOption()\\\">\\n            <option [value]=\\\"null\\\">Please Select Sum Insured</option>\\n            <option *ngFor=\\\"let item of options3\\\" [value]=\\\"item\\\">{{item}} Unit{{item > 1 ? \\\"s\\\": \\\"\\\"}}</option>\\n          </select>\\n          <app-print-error [control]=\\\"controls.sumInsuredMainCover\\\"></app-print-error>\\n        </div>\\n      </div>\\n    </div>\\n    <!--  Payment Frequency -->\\n  </div>\\n\\n  <div class=\\\"row\\\">\\n    <!--  Medical Card No -->\\n    <div class=\\\"col-6\\\">\\n      <div class=\\\"form-group row\\\">\\n        <label class=\\\"col-4 col-form-label\\\">Medical Card No</label>\\n        <div class=\\\"col-6\\\">\\n          <input type=\\\"text\\\" name=\\\"medicalCardNo\\\" formControlName=\\\"medicalCardNo\\\" class=\\\"form-control form-control-sm\\\">\\n        </div>\\n      </div>\\n    </div>\\n    <!--  Payment Frequency -->\\n  </div>\\n  <!-- <hr> value=\\\"{{item.id}}\\\">-->\\n  <ng-container *ngIf=\\\"controls.basicCoverId.value == 'Health Insurance'\\\">\\n    <div class=\\\"row mt-5\\\">\\n      <div class=\\\"col-12\\\">\\n        <h5 style=\\\"border-bottom: 1px solid rgba(0, 0, 0, 0.1);padding: 20px 0px;\\\">Optional Cover</h5>\\n      </div>\\n    </div>\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-12\\\">\\n        <div class=\\\"form-group row\\\" *ngFor=\\\"let item of options2\\\" style=\\\"align-items: center;\\\">\\n          <label class=\\\"col-4 col-form-label\\\">{{item.description}}</label>\\n          <div class=\\\"col-2\\\">\\n            <span class=\\\"switch switch-icon\\\">\\n              <label>\\n                <input type=\\\"checkbox\\\" name=\\\"{{item.description}}\\\" [(ngModel)]=\\\"addOns[item.id+'opt']\\\"\\n                  [ngModelOptions]=\\\"{standalone: true}\\\" />\\n                <span></span>\\n              </label>\\n            </span>\\n          </div>\\n          <div class=\\\"col-6\\\" *ngIf=\\\"addOns[item.id+'opt']\\\">\\n            <div class=\\\"row\\\">\\n              <label class=\\\"col-6 col-form-label\\\">Sum Insured</label>\\n              <div class=\\\"col-6\\\">\\n                <select [(ngModel)]=\\\"addOns[item.id+'value']\\\" [ngModelOptions]=\\\"{standalone: true}\\\"\\n                  class=\\\"form-control form-control-sm\\\">\\n                  <option *ngFor=\\\"let item of options4\\\" [value]=\\\"item\\\">{{item}} Unit{{item > 1 ? \\\"s\\\": \\\"\\\"}}</option>\\n                </select>\\n              </div>\\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n  </ng-container>\\n</form>\\n<div class=\\\"row mt-3\\\">\\n  <div class=\\\"col-sm-6 mx-auto\\\">\\n    <button class=\\\"btn btn-block btn-secondary\\\" (click)=\\\"backPage()\\\"> Previous </button>\\n  </div>\\n  <div class=\\\"col-sm-6 mx-auto\\\">\\n    <button class=\\\"btn btn-block btn-primary\\\" (click)=\\\"nextPage()\\\"> Save & Next </button>\\n  </div>\\n</div>\\n\\n<!--  \\\"Health Insurance\\\"\\n\\\"Critical illness\\\"\\n\\\"Surgery & Miscarriage\\\"\\n\\\"Mediacal treatments\\\" -->\";","export default \"<div>\\n    <div class=\\\"row\\\" style=\\\"align-items: center; margin: 10px 0px;\\\">\\n\\n        <div class=\\\"col-sm-8\\\">\\n            <label class=\\\"col-sm-6  left-border-image\\\">Surrounding Building </label>\\n        </div>\\n        <div class=\\\"col-sm-4\\\">\\n            <button type=\\\"button\\\" class=\\\"btn btn-primary btn-sm mx-2 ft-right\\\" (click)=\\\"add('create')\\\">Add New Data</button>\\n        </div>\\n    </div>\\n    <div class=\\\"table-responsive angular-bootstrap-table\\\">\\n        <table class=\\\"table table-head-custom table-vertical-center\\\">\\n            <thead>\\n                <tr>\\n                    <th>Building Description</th>\\n                    <th>Type of Building</th>\\n                    <th>Occupation</th>\\n                    <th>Class</th>\\n                    <th>Premium Rate</th>\\n                    <th>Action</th>\\n                </tr>\\n            </thead>\\n            <tbody *ngIf=\\\"surrounding.length>0\\\">\\n                <tr *ngFor=\\\"let data of surrounding\\\">\\n                    <th>\\n                        {{data.buildingDescription}}\\n                    </th>\\n                    <th>\\n                        {{data.typeOfBuildingValue}}\\n                    </th>\\n                    <th>\\n                        {{data.occupationOfBuildingValue}}\\n                    </th>\\n                    <th>\\n                        {{data.buildingClassValue}}\\n                    </th>\\n                    <th>\\n                        {{data.premiumRate}}\\n                    </th>\\n                    <th>\\n                        <a title=\\\"Edit Form Page\\\" class=\\\"btn btn-primary btn-cus btn-sm mx-1\\\" (click)=\\\"onActionView(data,'edit')\\\">\\n                            <span class=\\\"flaticon-edit\\\"></span>\\n                        </a>\\n                        <a title=\\\"Delete Form Page\\\" class=\\\"btn btn-danger btn-cus btn-sm mx-1\\\" (click)=\\\"onActionView(data,'delete')\\\">\\n                            <span class=\\\"flaticon-delete\\\"></span>\\n                        </a>\\n                    </th>\\n                </tr>\\n            </tbody>\\n\\n\\n        </table>\\n    </div>\";","export default \"<div class=\\\"modal-content\\\">\\n    <div class=\\\"modal-header\\\">\\n        <div class=\\\"modal-title h4 left-border-image\\\" id=\\\"example-modal-sizes-title-lg\\\">\\n            Surrounding Detail\\n        </div>\\n    </div>\\n\\n    <form action=\\\"#\\\" class=\\\"form\\\" [formGroup]=\\\"surroundingdetailform\\\" (ngSubmit)=\\\"createSurrounding()\\\">\\n        <div class=\\\"overlay overlay-block cursor-default modal-body\\\">\\n\\n            <div class=\\\"row\\\" style=\\\"align-items: center\\\">\\n                <div class=\\\"col-sm-6\\\">\\n                    <div class=\\\"form-group row\\\">\\n                        <label class=\\\"col-sm-4 col-form-label\\\">Building Description</label>\\n                        <div class=\\\"col-sm-8\\\">\\n                            <input type=\\\"text\\\" class=\\\"form-control form-control-sm \\\" name=\\\"buildingDescription\\\" autocomplete=\\\"off\\\" [class.is-invalid]=\\\"isControlInvalid('buildingDescription')\\\" [class.is-valid]=\\\"isControlValid('buildingDescription')\\\" formControlName=\\\"buildingDescription\\\"\\n                            />\\n                        </div>\\n                    </div>\\n                </div>\\n                <div class=\\\"col-sm-6\\\">\\n                    <div class=\\\"form-group row\\\">\\n                        <label class=\\\"col-sm-4 col-form-label\\\">Type of Building</label>\\n                        <div class=\\\"col-sm-8\\\">\\n                            <ng-select class=\\\"ng-custom-select\\\" (change)=\\\"changeType('child')\\\" [class.is-invalid]=\\\"isControlInvalid('typeOfBuilding')\\\" [class.is-valid]=\\\"isControlValid('typeOfBuilding')\\\" [items]=\\\"typeOfBuildingOption\\\" bindLabel=\\\"value\\\" bindValue=\\\"code\\\" formControlName=\\\"typeOfBuilding\\\">\\n                            </ng-select>\\n                        </div>\\n                    </div>\\n                </div>\\n            </div>\\n            <div class=\\\"row\\\" style=\\\"align-items: center\\\">\\n                <div class=\\\"col-sm-6\\\">\\n                    <div class=\\\"form-group row\\\">\\n                        <label class=\\\"col-sm-4 col-form-label\\\">Occupation of Building</label>\\n                        <div class=\\\"col-sm-8\\\">\\n                            <ng-select class=\\\"ng-custom-select\\\" (change)=\\\"changeOccuption()\\\" [class.is-invalid]=\\\"isControlInvalid('occupationOfBuilding')\\\" [class.is-valid]=\\\"isControlValid('occupationOfBuilding')\\\" [items]=\\\"occupationOfBuildingOption\\\" bindLabel=\\\"value\\\" bindValue=\\\"code\\\"\\n                                formControlName=\\\"occupationOfBuilding\\\">\\n                            </ng-select>\\n\\n                        </div>\\n                    </div>\\n                </div>\\n                <div class=\\\"col-sm-6\\\">\\n                    <div class=\\\"form-group row\\\">\\n                        <label class=\\\"col-sm-4 col-form-label\\\">Building Class</label>\\n                        <div class=\\\"col-sm-8\\\">\\n                            <ng-select class=\\\"ng-custom-select\\\" (change)=\\\"changeClass()\\\" [class.is-invalid]=\\\"isControlInvalid('buildingClass')\\\" [class.is-valid]=\\\"isControlValid('buildingClass')\\\" [items]=\\\"buildingClassOption\\\" bindLabel=\\\"value\\\" bindValue=\\\"code\\\" formControlName=\\\"buildingClass\\\">\\n                            </ng-select>\\n                        </div>\\n                    </div>\\n                </div>\\n            </div>\\n            <div class=\\\"row\\\" style=\\\"align-items: center\\\">\\n                <div class=\\\"col-sm-6\\\">\\n                    <div class=\\\"form-group row\\\">\\n                        <label class=\\\"col-sm-4 col-form-label\\\">Distance to Building (feet)</label>\\n                        <div class=\\\"col-sm-8\\\">\\n                            <input type=\\\"number\\\" class=\\\"form-control form-control-sm \\\" name=\\\"distanceToBuilding\\\" autocomplete=\\\"off\\\" [class.is-invalid]=\\\"isControlInvalid('distanceToBuilding')\\\" [class.is-valid]=\\\"isControlValid('distanceToBuilding')\\\" formControlName=\\\"distanceToBuilding\\\"\\n                            />\\n                        </div>\\n                    </div>\\n                </div>\\n                <div class=\\\"col-sm-6\\\">\\n                    <div class=\\\"form-group row\\\">\\n                        <label class=\\\"col-sm-4 col-form-label\\\">Rate</label>\\n                        <div class=\\\"col-sm-8\\\">\\n                            <input type=\\\"number\\\" class=\\\"form-control form-control-sm \\\" name=\\\"premiumRate\\\" autocomplete=\\\"off\\\" [class.is-invalid]=\\\"isControlInvalid('premiumRate')\\\" [class.is-valid]=\\\"isControlValid('premiumRate')\\\" formControlName=\\\"premiumRate\\\" />\\n\\n\\n                        </div>\\n                    </div>\\n                </div>\\n            </div>\\n\\n        </div>\\n        <div class=\\\"modal-footer\\\">\\n            <button type=\\\"button\\\" class=\\\"btn btn-light btn-sm btn-elevate mr-2\\\" (click)=\\\"dismissModal()\\\">Cancel</button>\\n            <button type=\\\"submit\\\" class=\\\"btn btn-primary btn-sm btn-elevate\\\">Save</button>\\n        </div>\\n    </form>\\n\\n</div>\";","export default \"<div class=\\\"table-responsive angular-bootstrap-table\\\">\\n    <table class=\\\"table table-head-custom table-vertical-center\\\">\\n        <thead *ngIf=\\\"contents\\\">\\n            <tr>\\n                <th>Item Name</th>\\n                <th>Item Description</th>\\n                <th style=\\\"text-align: right;\\\">Value per Quantity</th>\\n                <th>Quantity</th>\\n                <th style=\\\"text-align: right;\\\">Total Value</th>\\n                <th>Action</th>\\n            </tr>\\n        </thead>\\n        <tbody *ngIf=\\\"tableData.length>0 && contents\\\">\\n            <tr *ngFor=\\\"let data of tableData\\\">\\n                <th>\\n                    {{data.itemName}}\\n                </th>\\n                <th>\\n                    {{data.itemDescription}}\\n                </th>\\n                <th style=\\\"text-align: right;\\\">\\n                    {{data.valuePerQuantity | number}}\\n                </th>\\n                <th>\\n                    {{data.quantity}}\\n                </th>\\n                <th style=\\\"text-align: right;\\\">\\n                    {{data.totalValue | number}}\\n                </th>\\n                <th>\\n                    <a title=\\\"Edit Form Page\\\" class=\\\"btn btn-primary btn-cus btn-sm mx-1\\\" (click)=\\\"onActionView(data,'edit','content')\\\">\\n                        <span class=\\\"flaticon-edit\\\"></span>\\n                    </a>\\n                    <a title=\\\"Delete Form Page\\\" class=\\\"btn btn-danger btn-cus btn-sm mx-1\\\" (click)=\\\"onActionView(data,'delete','content')\\\">\\n                        <span class=\\\"flaticon-delete\\\"></span>\\n                    </a>\\n                </th>\\n            </tr>\\n        </tbody>\\n\\n        <thead *ngIf=\\\"plant\\\">\\n            <tr>\\n                <th>Item Name</th>\\n                <th>Item Description</th>\\n                <th style=\\\"text-align: right;\\\">Value per Quantity</th>\\n                <th style=\\\"text-align: right;\\\">Quantity</th>\\n                <th style=\\\"text-align: right;\\\">Total Value</th>\\n                <th>Action</th>\\n            </tr>\\n        </thead>\\n        <tbody *ngIf=\\\"tableData.length>0 && plant\\\">\\n            <tr *ngFor=\\\"let data of tableData\\\">\\n                <th>\\n                    {{data.itemName}}\\n                </th>\\n                <th>\\n                    {{data.itemDescription}}\\n                </th>\\n                <th style=\\\"text-align: right;\\\">\\n                    {{data.valuePerQuantity | number}}\\n                </th>\\n                <th style=\\\"text-align: right;\\\">\\n                    {{data.quantity}}\\n                </th>\\n                <th style=\\\"text-align: right;\\\">\\n                    {{data.totalValue | number}}\\n                </th>\\n                <th>\\n                    <a title=\\\"Edit Form Page\\\" class=\\\"btn btn-primary btn-cus btn-sm mx-1\\\" (click)=\\\"onActionView(data,'edit','plant')\\\">\\n                        <span class=\\\"flaticon-edit\\\"></span>\\n                    </a>\\n                    <a title=\\\"Delete Form Page\\\" class=\\\"btn btn-danger btn-cus btn-sm mx-1\\\" (click)=\\\"onActionView(data,'delete','plant')\\\">\\n                        <span class=\\\"flaticon-delete\\\"></span>\\n                    </a>\\n                </th>\\n            </tr>\\n        </tbody>\\n        <thead *ngIf=\\\"stock\\\">\\n            <tr>\\n                <th>Month</th>\\n                <th>Description</th>\\n                <th style=\\\"text-align: right;\\\">Stock Value</th>\\n                <th style=\\\"text-align: right;\\\">Agreed SI</th>\\n                <th>Remarks</th>\\n                <th>Action</th>\\n            </tr>\\n        </thead>\\n        <tbody *ngIf=\\\"tableData.length>0 && stock\\\">\\n            <tr *ngFor=\\\"let data of tableData\\\">\\n                <th>\\n                    {{data.month}}\\n                </th>\\n                <th>\\n                    {{data.description}}\\n                </th>\\n                <th style=\\\"text-align: right;\\\">\\n                    {{data.stockValue | number}}\\n                </th>\\n                <th style=\\\"text-align: right;\\\">\\n                    {{data.agreedSi | number}}\\n                </th>\\n                <th>\\n                    {{data.remark}}\\n                </th>\\n                <th>\\n                    <a title=\\\"Edit Form Page\\\" class=\\\"btn btn-primary btn-cus btn-sm mx-1\\\" (click)=\\\"onActionView(data,'edit','stock')\\\">\\n                        <span class=\\\"flaticon-edit\\\"></span>\\n                    </a>\\n                    <a title=\\\"Delete Form Page\\\" class=\\\"btn btn-danger btn-cus btn-sm mx-1\\\" (click)=\\\"onActionView(data,'delete','stock')\\\">\\n                        <span class=\\\"flaticon-delete\\\"></span>\\n                    </a>\\n                </th>\\n            </tr>\\n        </tbody>\\n    </table>\\n</div>\";"],"names":[],"sourceRoot":"webpack:///"}