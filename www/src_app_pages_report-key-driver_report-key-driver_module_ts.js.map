{"version":3,"file":"src_app_pages_report-key-driver_report-key-driver_module_ts.js","mappings":"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","sources":["./src/app/pages/report-key-driver/report-key-driver-export.service.ts","./src/app/pages/report-key-driver/report-key-driver.component.ts","./src/app/pages/report-key-driver/report-key-driver.module.ts","./src/app/pages/report-key-driver/report-key-driver.component.html"],"sourcesContent":["import { HttpClient, HttpParams } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Workbook } from 'exceljs';\nimport * as fs from 'file-saver';\nimport { AuthService } from '../../../app/modules/auth';\nimport { BizOperationService } from '../../../app/core/biz.operation.service';\nimport { environment } from '../../../environments/environment';\n\nconst API_ADDON_URL = `${environment.apiUrl}/report/keyDriver`;\nconst API_HIREARCHY_URL = `${environment.apiUrl}/officeHirearchy`;\nconst API_AGENT_OFFICE_URL = `${environment.apiUrl}/agentByOffice`;\n\n\nconst alphabet = [\"A\", \"B\", \"C\", \"D\", \"E\", \"F\", \"G\", \"H\", \"I\", \"J\", \"K\", \"L\", \"M\", \"N\", \"O\", \"P\", \"Q\", \"R\", \"S\", \"T\", \"U\", \"V\", \"W\", \"X\", \"Y\", \"Z\",\n  \"AA\", \"AB\", \"AC\", \"AD\", \"AE\", \"AF\", \"AG\", \"AH\", \"AI\", \"AJ\", \"AK\", \"AL\", \"AM\", \"AN\", \"AO\", \"AP\", \"AQ\", \"AR\", \"AS\", \"AT\", \"AU\", \"AV\", \"AW\", \"AX\", \"AY\", \"AZ\",\n  \"BA\", \"BB\", \"BC\", \"BD\", \"BE\", \"BF\", \"BG\", \"BH\", \"BI\", \"BJ\", \"BK\", \"BL\", \"BM\", \"BN\", \"BO\", \"BP\", \"BQ\", \"BR\", \"BS\", \"BT\", \"BU\", \"BV\", \"BW\", \"BX\", \"BY\", \"BZ\",\n  \"CA\", \"CB\", \"CC\", \"CD\", \"CE\", \"CF\", \"CG\", \"CH\", \"CI\", \"CJ\", \"CK\", \"CL\", \"CM\", \"CN\", \"CO\", \"CP\", \"CQ\", \"CR\", \"CS\", \"CT\", \"CU\", \"CV\", \"CW\", \"CX\", \"CY\", \"CZ\",\n  \"DA\", \"DB\", \"DC\", \"DD\", \"DE\", \"DF\", \"DG\", \"DH\", \"DI\", \"DJ\", \"DK\", \"DL\", \"DM\", \"DN\", \"DO\", \"DP\", \"DQ\", \"DR\", \"DS\", \"DT\", \"DU\", \"DV\", \"DW\", \"DX\", \"DY\", \"DZ\",\n  \"EA\", \"EB\", \"EC\", \"ED\", \"EE\", \"EF\", \"EG\", \"EH\", \"EI\", \"EJ\", \"EK\", \"EL\", \"EM\", \"EN\", \"EO\", \"EP\", \"EQ\", \"ER\", \"ES\", \"ET\", \"EU\", \"EV\", \"EW\", \"EX\", \"EY\", \"Z\"];\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ReportKeyDriverExportService extends BizOperationService<any, number>{\n  constructor(protected httpClient: HttpClient, private authService: AuthService) {\n    super(httpClient, API_ADDON_URL);\n  }\n\n  getOfficeHirearchy(parentId, typeCode) {\n    let reqObj = {\n      parentId: parentId,\n      typeCode: typeCode,\n    }\n    const params = new HttpParams({\n      fromObject: reqObj\n    });\n    return this.httpClient.get<any>(API_HIREARCHY_URL, { params: params });\n  }\n\n  getAgentOffice(officeId) {\n    let reqObj = {\n      officeId: officeId,\n    }\n    const params = new HttpParams({\n      fromObject: reqObj\n    });\n    return this.httpClient.get<any>(API_AGENT_OFFICE_URL, { params: params });\n  }\n\n\n  getAllReportData(searchValue) {\n    if (searchValue.fromDate) {\n      searchValue.fromDate = this.formatDateYYYY_MM_DD(searchValue.fromDate);\n    }\n    if (searchValue.toDate) {\n      searchValue.toDate = this.formatDateYYYY_MM_DD(searchValue.toDate);\n    }\n    const params = new HttpParams({\n      fromObject: searchValue\n    });\n    return this.httpClient.get<any>(API_ADDON_URL, { params: params });\n  }\n\n  exportExcel(excelData) {\n    //Title, Header & Data\n    const title = excelData.title;\n    const products = excelData.products\n    const subHeader = excelData.subHeader\n    const searchValue = excelData.searchValue\n    const data = excelData.data;\n    const totalNewBusinessCase = excelData.totalNewBusinessCase\n    const totalPremium = excelData.totalPremium\n    const roundTotalProductDistribution = excelData.roundTotalProductDistribution\n    const roundTotalAverageCaseSize = excelData.roundTotalAverageCaseSize\n    const manPower = excelData.manPower\n    const activeManPower = excelData.activeManPower\n    const activeRatio = excelData.activeRatio\n    const productivity = excelData.productivity\n    const anpCaseSize = excelData.anpCaseSize\n    const monthlyCaseSize = excelData.monthlyCaseSize\n    const channelProductivity = excelData.channelProductivity\n\n    //Create a workbook with a worksheet\n    let workbook = new Workbook();\n    let worksheet = workbook.addWorksheet('Sheet1');\n\n    // Freeze\n    worksheet.views = [\n      { state: 'frozen', xSplit: 0, ySplit: 4, activeCell: 'A1' }\n    ];\n\n    //Add Row and formatting\n    worksheet.mergeCells('A1', 'C2');\n    let titleRow = worksheet.getCell('A1');\n    titleRow.value = title\n    titleRow.font = {\n      name: 'Calibri',\n      size: 12,\n      underline: 'single',\n      bold: true,\n      color: { argb: '0085A3' }\n    }\n    titleRow.alignment = { vertical: 'middle', horizontal: 'left' }\n\n    //Reported Date:\n    worksheet.mergeCells('G1', 'G1');\n    let reportDate = worksheet.getCell('G1');\n    reportDate.value = 'Reported Date: ' + this.formatReportedDate(new Date());\n    reportDate.font = {\n      name: 'Calibri',\n      size: 10,\n      bold: true\n    }\n    reportDate.alignment = { vertical: 'middle', horizontal: 'left' }\n\n     //Reported By:\n     worksheet.mergeCells('G2', 'G2');\n     let reportBy = worksheet.getCell('G2');\n     reportBy.value = 'Reported By: ' + this.authService.currentUserValue.username\n     reportBy.font = {\n       name: 'Calibri',\n       size: 10,    \n       bold: true\n     }\n     reportBy.alignment = { vertical: 'middle', horizontal: 'left' }\n   \n    // Display search name   \n    if (searchValue.length > 0) {\n      for (var i = 0; i < searchValue.length; i++) {\n        let cellIndex = null;\n        let cellIndexValue = null;\n        if (searchValue[i].fromDate) {\n          cellIndex = 'F1';\n          cellIndexValue = 'From Date: ' + searchValue[i].fromDate;\n        }\n        if (searchValue[i].toDate) {\n          cellIndex = 'F2';\n          cellIndexValue = 'To Date: ' + searchValue[i].toDate;\n        }\n        if (searchValue[i].companyName) {\n          cellIndex = 'L1';\n          cellIndexValue = 'Company: ' + searchValue[i].companyName;\n        }\n        if (searchValue[i].channelName) {\n          cellIndex = 'M1';\n          cellIndexValue = 'Channel: ' + searchValue[i].channelName;\n        }\n        if (searchValue[i].regionName) {\n          cellIndex = 'N1';\n          cellIndexValue = 'Region: ' + searchValue[i].regionName;\n        }\n        if (searchValue[i].clusterName) {\n          cellIndex = 'L2';\n          cellIndexValue = 'Cluster: ' + searchValue[i].clusterName;\n        }\n        if (searchValue[i].branchName) {\n          cellIndex = 'M2';\n          cellIndexValue = 'Branch: ' + searchValue[i].branchName;\n        }\n        if (searchValue[i].agentName) {\n          cellIndex = 'N2';\n          cellIndexValue = 'Agent: ' + searchValue[i].agentName;\n        }\n\n        if (cellIndex != null && cellIndexValue != null) {\n          let searchCell = worksheet.getCell(cellIndex);\n          searchCell.value = cellIndexValue;\n          searchCell.font = {\n            name: 'Calibri',\n            size: 10,\n            bold: true\n          }\n          searchCell.alignment = { vertical: 'middle', horizontal: 'left' }\n        }\n      }\n    }\n\n    worksheet.addRow([]);\n\n    //Adding Sub Header Row\n    //worksheet.mergeCells('A4:F4');\n    let startIndex: number = 0;\n    for (var i = 0; i < products.length; i++) {\n      let start = this.calculateStartPoint(startIndex);\n      startIndex += 1;\n      worksheet.mergeCells(start + ':' + start);\n      let fireCell = worksheet.getCell(start);\n      fireCell.value = products[i];\n      fireCell.font = {\n        name: 'Calibri',\n        size: 12,\n        bold: true\n      }\n      fireCell.alignment = { vertical: 'middle', horizontal: 'center' }\n    }\n\n    //Adding Data with Conditional Formatting\n    data.forEach(d => {\n      let row = worksheet.addRow(d);\n      let index = 0;\n      d.forEach(a => {\n        index++;\n        let center = row.getCell(index);\n        if (index == 1) {\n          if (center) {\n            center.alignment = { vertical: 'middle', horizontal: 'left' }\n          }\n        } else {\n          center.alignment = { vertical: 'middle', horizontal: 'right' }   \n          center.numFmt = '#,##0.00_);(#,##0.00)';\n        }\n      });\n    }\n    );\n\n\n    if (totalNewBusinessCase != null) {\n      let total = data.length + 5\n      let totalCell = worksheet.getCell('A' + total);\n      totalCell.value = 'Total';\n      totalCell.font = {\n        name: 'Calibri',\n        size: 10,\n        bold: true\n      }\n      totalCell.alignment = { vertical: 'middle', horizontal: 'left' }\n\n      let index = data.length + 5\n      let valueCell = worksheet.getCell('B' + index);\n      valueCell.value = totalNewBusinessCase;\n      valueCell.font = {\n        name: 'Calibri',\n        size: 10,\n        bold: true\n      }\n      valueCell.alignment = { vertical: 'middle', horizontal: 'right' }\n      valueCell.numFmt = '#,##0.00_);(#,##0.00)';\n    }\n\n    if (totalPremium != null) {\n      let total = data.length + 5\n      let totalCell = worksheet.getCell('C' + total);\n      totalCell.value = totalPremium;\n      totalCell.font = {\n        name: 'Calibri',\n        size: 10,\n        bold: true\n      }\n      totalCell.alignment = { vertical: 'middle', horizontal: 'right' }\n      totalCell.numFmt = '#,##0.00_);(#,##0.00)';\n    }\n\n    if (roundTotalProductDistribution != null) {\n      let total = data.length + 5\n      let totalCell = worksheet.getCell('D' + total);\n      totalCell.value = roundTotalProductDistribution;\n      totalCell.font = {\n        name: 'Calibri',\n        size: 10,\n        bold: true\n      }\n      totalCell.alignment = { vertical: 'middle', horizontal: 'right' }\n      totalCell.numFmt = '#,##0.00_);(#,##0.00)';\n    }\n\n    if (roundTotalAverageCaseSize != null) {\n      let total = data.length + 5\n      let totalCell = worksheet.getCell('E' + total);\n      totalCell.value = roundTotalAverageCaseSize;\n      totalCell.font = {\n        name: 'Calibri',\n        size: 10,\n        bold: true\n      }\n      totalCell.alignment = { vertical: 'middle', horizontal: 'right' }\n      totalCell.numFmt = '#,##0.00_);(#,##0.00)';\n    }\n\n    if (manPower != null) {\n      let manpowerIndex = data.length + 6\n      let manPowerCell = worksheet.getCell('A' + manpowerIndex);\n      manPowerCell.value = 'Manpower';\n      manPowerCell.font = {\n        name: 'Calibri',\n        size: 10,\n        bold: false\n      }\n      manPowerCell.alignment = { vertical: 'middle', horizontal: 'left' }\n\n      let total = data.length + 6\n      let totalCell = worksheet.getCell('B' + total);\n      totalCell.value = manPower;\n      totalCell.font = {\n        name: 'Calibri',\n        size: 10,\n        bold: false\n      }\n      totalCell.alignment = { vertical: 'middle', horizontal: 'right' }\n      totalCell.numFmt = '#,##0.00_);(#,##0.00)';\n    }\n\n    if (activeManPower != null) {\n      let activeManpowerIndex = data.length + 7\n      let activeManPowerCell = worksheet.getCell('A' + activeManpowerIndex);\n      activeManPowerCell.value = 'Active Manpower';\n      activeManPowerCell.font = {\n        name: 'Calibri',\n        size: 10,\n        bold: false\n      }\n      activeManPowerCell.alignment = { vertical: 'middle', horizontal: 'left' }\n\n      let total = data.length + 7\n      let totalCell = worksheet.getCell('B' + total);\n      totalCell.value = activeManPower;\n      totalCell.font = {\n        name: 'Calibri',\n        size: 10,\n        bold: false\n      }\n      totalCell.alignment = { vertical: 'middle', horizontal: 'right' }\n      totalCell.numFmt = '#,##0.00_);(#,##0.00)';\n    }\n\n    if (activeManPower != null) {\n      let activeManpowerIndex = data.length + 7\n      let activeManPowerCell = worksheet.getCell('A' + activeManpowerIndex);\n      activeManPowerCell.value = 'Active Manpower';\n      activeManPowerCell.font = {\n        name: 'Calibri',\n        size: 10,\n        bold: false\n      }\n      activeManPowerCell.alignment = { vertical: 'middle', horizontal: 'left' }\n\n      let total = data.length + 7\n      let totalCell = worksheet.getCell('B' + total);\n      totalCell.value = activeManPower;\n      totalCell.font = {\n        name: 'Calibri',\n        size: 10,\n        bold: false\n      }\n      totalCell.alignment = { vertical: 'middle', horizontal: 'right' }\n      totalCell.numFmt = '#,##0.00_);(#,##0.00)';\n    }\n\n    if (activeRatio != null) {\n      let activeRatioIndex = data.length + 8\n      let activeRatioIndexCell = worksheet.getCell('A' + activeRatioIndex);\n      activeRatioIndexCell.value = 'Active ratio';\n      activeRatioIndexCell.font = {\n        name: 'Calibri',\n        size: 10,\n        bold: false\n      }\n      activeRatioIndexCell.alignment = { vertical: 'middle', horizontal: 'left' }\n\n      let total = data.length + 8\n      let totalCell = worksheet.getCell('B' + total);\n      totalCell.value = activeRatio;\n      totalCell.font = {\n        name: 'Calibri',\n        size: 10,\n        bold: false\n      }\n      totalCell.alignment = { vertical: 'middle', horizontal: 'right' }\n      totalCell.numFmt = '#,##0.00_);(#,##0.00)';\n    }\n\n    if (productivity != null) {\n      let productivityndex = data.length + 9\n      let productivityIndexCell = worksheet.getCell('A' + productivityndex);\n      productivityIndexCell.value = 'Productivity';\n      productivityIndexCell.font = {\n        name: 'Calibri',\n        size: 10,\n        bold: false\n      }\n      productivityIndexCell.alignment = { vertical: 'middle', horizontal: 'left' }\n\n      let total = data.length + 9\n      let totalCell = worksheet.getCell('B' + total);\n      totalCell.value = productivity;\n      totalCell.font = {\n        name: 'Calibri',\n        size: 10,\n        bold: false\n      }\n      totalCell.alignment = { vertical: 'middle', horizontal: 'right' }\n      totalCell.numFmt = '#,##0.00_);(#,##0.00)';\n    }\n\n    if (channelProductivity != null) {\n      let channelProductivityIndex = data.length + 10\n      let channelProductivityCell = worksheet.getCell('A' + channelProductivityIndex);\n      channelProductivityCell.value = 'Channel Productivity';\n      channelProductivityCell.font = {\n        name: 'Calibri',\n        size: 10,\n        bold: false\n      }\n      channelProductivityCell.alignment = { vertical: 'middle', horizontal: 'left' }\n\n      let total = data.length + 10\n      let totalCell = worksheet.getCell('B' + total);\n      totalCell.value = channelProductivity;\n      totalCell.font = {\n        name: 'Calibri',\n        size: 10,\n        bold: false\n      }\n      totalCell.alignment = { vertical: 'middle', horizontal: 'right' }\n      totalCell.numFmt = '#,##0.00_);(#,##0.00)';\n    }\n\n    if (anpCaseSize != null) {\n      let anpCaseSizeIndex = data.length + 11\n      let anpCaseSizeCell = worksheet.getCell('A' + anpCaseSizeIndex);\n      anpCaseSizeCell.value = 'ANP Case Size';\n      anpCaseSizeCell.font = {\n        name: 'Calibri',\n        size: 10,\n        bold: false\n      }\n      anpCaseSizeCell.alignment = { vertical: 'middle', horizontal: 'left' }\n\n      let total = data.length + 11\n      let totalCell = worksheet.getCell('B' + total);\n      totalCell.value = anpCaseSize;\n      totalCell.font = {\n        name: 'Calibri',\n        size: 10,\n        bold: false\n      }\n      totalCell.alignment = { vertical: 'middle', horizontal: 'right' }\n      totalCell.numFmt = '#,##0.00_);(#,##0.00)';\n    }\n\n\n    if (monthlyCaseSize != null) {\n      let monthlyCaseSizeIndex = data.length + 12\n      let monthlyCaseSizeCell = worksheet.getCell('A' + monthlyCaseSizeIndex);\n      monthlyCaseSizeCell.value = 'Monthly Case Size';\n      monthlyCaseSizeCell.font = {\n        name: 'Calibri',\n        size: 10,\n        bold: false\n      }\n      monthlyCaseSizeCell.alignment = { vertical: 'middle', horizontal: 'left' }\n\n      let total = data.length + 12\n      let totalCell = worksheet.getCell('B' + total);\n      totalCell.value = monthlyCaseSize;\n      totalCell.font = {\n        name: 'Calibri',\n        size: 10,\n        bold: false\n      }\n      totalCell.alignment = { vertical: 'middle', horizontal: 'right' }\n      totalCell.numFmt = '#,##0.00_);(#,##0.00)';\n    }\n\n    worksheet.columns.forEach(function (column, i) {\n      var maxLength = 0;\n      column[\"eachCell\"]({ includeEmpty: true }, function (cell) {\n        var columnLength = cell.value ? cell.value.toString().length : 10;\n        if (columnLength > maxLength) {\n          maxLength = columnLength;\n        }\n      });\n      column.width = maxLength < 10 ? 10 : maxLength;\n    });\n\n    // worksheet.getColumn(1).width = 5;\n    // worksheet.getColumn(2).width = 20;\n    // worksheet.getColumn(3).width = 15;\n    // worksheet.getColumn(4).width = 15;\n    // worksheet.getColumn(5).width = 20;\n\n    const autoHeight = (worksheet) => {\n      const lineHeight = 12 // height per line is roughly 12\n      worksheet.eachRow((row) => {\n        let maxLine = 1\n        row.eachCell((cell) => {\n          maxLine = Math.max(cell.value.split('\\n').length - 1, maxLine)\n        })\n        row.height = lineHeight * maxLine\n      })\n    }\n\n    //Generate & Save Excel File\n    workbook.xlsx.writeBuffer().then((data) => {\n      let blob = new Blob([data], { type: 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet; charset=utf-8' });\n      fs.saveAs(blob, title + '_' + this.formatDateDDMMYYY(new Date()) + '.xlsx');\n    });\n\n  }\n\n\n\n  calculateStartPoint(index) {\n    return alphabet[index] + '4'\n  }\n\n  calculateEndPoint(index) {\n    return alphabet[index] + '4'\n  }\n\n  calculateDataPoint(index) {\n    return alphabet[index] + '5'\n  }\n\n  formatDateDDMMYYY(date) {\n    var d = new Date(date),\n      month = '' + (d.getMonth() + 1),\n      day = '' + d.getDate(),\n      year = d.getFullYear();\n    if (month.length < 2)\n      month = '0' + month;\n    if (day.length < 2)\n      day = '0' + day;\n    return [day, month, year].join('_');\n  }\n\n  mathRoundTo(num: number, places: number) {\n    const factor = 10 ** places;\n    return (Math.round(num * factor) / factor).toLocaleString();\n  };\n\n  formatDateYYYY_MM_DD(date) {\n    var d = new Date(date),\n      month = '' + (d.getMonth() + 1),\n      day = '' + d.getDate(),\n      year = d.getFullYear();\n    if (month.length < 2)\n      month = '0' + month;\n    if (day.length < 2)\n      day = '0' + day;\n    return [year, month, day].join('-');\n  }\n\n  formatReportedDate(date) {\n    var d = new Date(date),\n      month = '' + (d.getMonth() + 1),\n      day = '' + d.getDate(),\n      year = d.getFullYear();\n    if (month.length < 2)\n      month = '0' + month;\n    if (day.length < 2)\n      day = '0' + day;\n    return [day, month, year].join('/');\n  }\n}","import { ChangeDetectorRef, Component, OnInit } from '@angular/core';\r\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport * as moment from 'moment';\r\nimport { validateAllFields } from '../../../app/core/valid-all-feild';\r\nimport { ReportIdentityType, ReportStatus } from '../report-detail-by-agent/report-detail-by-agent.const';\r\nimport { ReportKeyDriverExportService } from './report-key-driver-export.service';\r\nimport { CONSTANT_AGENT_REPORT_DATA } from './report-key-driver.const';\r\n\r\n@Component({\r\n  selector: 'app-report-key-driver',\r\n  templateUrl: './report-key-driver.component.html',\r\n  styleUrls: ['./report-key-driver.component.scss']\r\n})\r\nexport class ReportKeyDriverComponent implements OnInit {\r\n  createFormGroup: FormGroup;\r\n  fromMinDate = null;\r\n  fromMaxDate = null;\r\n  toMaxDate: { year: number; month: number; day: number; };\r\n  selectOptions = {\r\n    companies: [],\r\n    channels: [],\r\n    regions: [],\r\n    cluster: [],\r\n    branches: [],\r\n    agents: [],\r\n  }\r\n\r\n  reports = [];\r\n  products = [];\r\n  policies = [];\r\n  productList = [];\r\n\r\n  agentName: string = null;\r\n  companyName: string = null;\r\n  channelName: string = null;\r\n  regionName: string = null;\r\n  clusterName: string = null;\r\n  branchName: string = null;\r\n\r\n  productValues = [];\r\n  subHeader = [];\r\n  dataExcel = [];\r\n  isData: boolean = false;\r\n  displayDataList = [];\r\n  totalAverageCaseSize: number = 0;\r\n  totalProductDistribution: number = 0;\r\n  roundTotalProductDistribution: number = 0;\r\n  roundTotalAverageCaseSize: number = 0;\r\n  totalNewBusinessCase: number = 0;\r\n  totalPremium: number = 0;\r\n  keyDriver: any;\r\n  activeRatio: number = 0;\r\n  title: string = 'Key Driver Report';\r\n  productivity: number = 0;\r\n  channelProductivity: number = 0;\r\n  anpCaseSize: number = 0;\r\n  monthlyCaseSize: number = 0;\r\n\r\n  constructor(private cdf: ChangeDetectorRef,\r\n    public exportService: ReportKeyDriverExportService) { }\r\n\r\n\r\n  ngOnInit(): void {\r\n    this.loadForm();\r\n    this.getOfficeHirearchy();\r\n    this.fromMinDate = null;\r\n    this.fromMaxDate = null;\r\n  }\r\n\r\n  async getOfficeHirearchy() {\r\n    await this.exportService.getOfficeHirearchy('', '01').toPromise().then(async (res: any) => {\r\n      if (res) {\r\n        this.selectOptions.companies = res\r\n      }\r\n    });\r\n  }\r\n\r\n  async getAllReports() {\r\n    this.totalNewBusinessCase = 0;\r\n    this.totalPremium = 0;\r\n    this.totalProductDistribution = 0;\r\n    this.totalAverageCaseSize = 0;\r\n\r\n    if (this.createFormGroup.invalid) {\r\n      validateAllFields(this.createFormGroup);\r\n    } else {\r\n      await this.exportService.getAllReportData(this.createFormGroup.value).toPromise().then(async (res: any) => {\r\n        if (res) {\r\n          this.keyDriver = res\r\n          if (res.productsList.length > 0) {\r\n            this.isData = true;\r\n            for (var i = 0; i < res.productsList.length; i++) {\r\n              this.totalNewBusinessCase += res.productsList[i].pcount;\r\n              this.totalPremium += res.productsList[i].premium;\r\n            }\r\n            for (var i = 0; i < res.productsList.length; i++) {\r\n              let obj = {\r\n                product: res.productsList[i].name,\r\n                newBusinessCase: res.productsList[i].pcount,\r\n                newBusinessPremium: res.productsList[i].premium,\r\n                productDistribution: this.productDistribution(res.productsList[i].pcount, this.totalNewBusinessCase),\r\n                averageCaseSize: this.averageCaseSize(res.productsList[i].premium, res.productsList[i].pcount)\r\n\r\n              }\r\n              this.displayDataList.push(obj);\r\n            }\r\n            this.roundTotalProductDistribution = this.totalProductDistribution\r\n            this.roundTotalProductDistribution = this.totalProductDistribution\r\n            this.roundTotalAverageCaseSize = this.totalAverageCaseSize\r\n\r\n            if (this.keyDriver.manPower) {\r\n              this.activeRatio = this.keyDriver.activeManPower / this.keyDriver.manPower\r\n            }\r\n\r\n            if (this.keyDriver.activeManPower) {\r\n              this.productivity = this.totalNewBusinessCase / this.keyDriver.activeManPower\r\n            }\r\n\r\n            if (this.keyDriver.manPower) {\r\n              this.channelProductivity = this.totalNewBusinessCase / this.keyDriver.manPower\r\n            }\r\n\r\n            if (this.totalNewBusinessCase != 0) {\r\n              this.anpCaseSize = this.totalPremium / this.totalNewBusinessCase\r\n            }\r\n\r\n            if (this.totalNewBusinessCase != 0) {\r\n              this.monthlyCaseSize = (this.totalPremium / 12) / this.totalNewBusinessCase\r\n            }\r\n          } else {\r\n            this.isData = false\r\n          }\r\n        }\r\n      });\r\n    }\r\n    this.cdf.detectChanges();\r\n  }\r\n\r\n  productDistribution(newBusinessCase, totalNewBusinessCase) {\r\n    let returnValue: any;\r\n    if (totalNewBusinessCase != 0) {\r\n      returnValue = newBusinessCase * 100 / totalNewBusinessCase\r\n    } else {\r\n      returnValue = 0;\r\n    }\r\n    this.totalProductDistribution += Number(returnValue);\r\n    return returnValue;\r\n  }\r\n\r\n  averageCaseSize(premium, newBusinessCase) {\r\n    let returnValue: any;\r\n    if (newBusinessCase != 0) {\r\n      returnValue = premium / newBusinessCase\r\n    } else {\r\n      returnValue = 0;\r\n    }\r\n    this.totalAverageCaseSize += Number(returnValue);\r\n    return returnValue;\r\n  }\r\n\r\n  calculateDivision(value, divided) {\r\n    let returnValue: any;\r\n    if (divided != 0) {\r\n      returnValue = value / divided\r\n    } else {\r\n      returnValue = 0;\r\n    }\r\n    return returnValue;\r\n  }\r\n\r\n  generateReportExcel() {\r\n    this.dataExcel = [];\r\n    this.productValues = ['Product', 'New Business Case', 'New Business Premium\t',\r\n      'Product Distribution', 'Average Case Size'];\r\n\r\n    // Data\r\n    for (var i = 0; i < this.displayDataList.length; i++) {\r\n      this.dataExcel.push([\r\n        this.displayDataList[i].product,\r\n        this.displayDataList[i].newBusinessCase || 0.00,\r\n        this.displayDataList[i].newBusinessPremium || 0.00,\r\n        this.displayDataList[i].productDistribution || 0.00,\r\n        this.displayDataList[i].averageCaseSize || 0.00,\r\n      ]);\r\n    }\r\n\r\n    let fromDate = null;\r\n    let toDate = null;\r\n    if (this.createFormGroup.value.fromDate) {\r\n      fromDate = this.formatDateDDMMYYY(this.createFormGroup.value.fromDate)\r\n    }\r\n    if (this.createFormGroup.value.fromDate) {\r\n      toDate = this.formatDateDDMMYYY(this.createFormGroup.value.toDate)\r\n    }\r\n\r\n    let reportData = {\r\n      title: this.title,\r\n      searchValue: [\r\n        { fromDate: fromDate },\r\n        { toDate: toDate },\r\n        { agentName: this.agentName },\r\n        { companyName: this.companyName },\r\n        { channelName: this.channelName },\r\n        { regionName: this.regionName },\r\n        { clusterName: this.clusterName },\r\n        { branchName: this.branchName }\r\n      ],\r\n      products: this.productValues,\r\n      subHeader: this.subHeader,\r\n      data: this.dataExcel,\r\n      totalNewBusinessCase: this.totalNewBusinessCase || 0.00,\r\n      totalPremium: this.totalPremium || 0.00,\r\n      roundTotalProductDistribution: this.roundTotalProductDistribution || 0.00,\r\n      roundTotalAverageCaseSize: this.roundTotalAverageCaseSize || 0.00,\r\n      manPower: this.keyDriver.manPower || 0.00,\r\n      activeManPower: this.keyDriver.activeManPower || 0.00,\r\n      activeRatio: this.activeRatio || 0.00,\r\n      productivity: this.productivity || 0,\r\n      channelProductivity: this.channelProductivity || 0.00,\r\n      anpCaseSize: this.anpCaseSize || 0.00,\r\n      monthlyCaseSize: this.monthlyCaseSize || 0.00\r\n    }\r\n    this.exportService.exportExcel(reportData);\r\n  }\r\n\r\n  cancelReport() {\r\n    this.createFormGroup.reset();\r\n    this.loadForm();\r\n    this.selectOptions.channels = [];\r\n    this.selectOptions.regions = [];\r\n    this.selectOptions.cluster = [];\r\n    this.selectOptions.branches = [];\r\n    this.selectOptions.agents = [];\r\n    this.totalNewBusinessCase = 0;\r\n    this.totalPremium = 0;\r\n    this.totalProductDistribution = 0;\r\n    this.totalAverageCaseSize = 0;\r\n    this.agentName = null;\r\n    this.companyName = null;\r\n    this.channelName = null;\r\n    this.regionName = null;\r\n    this.clusterName = null;\r\n    this.branchName = null;\r\n    this.agentName = null;\r\n    this.isData = false;\r\n    this.fromMinDate = null;\r\n    this.fromMaxDate = null;\r\n    this.cdf.detectChanges();\r\n  }\r\n\r\n  async changeOptions(ev, type) {\r\n    if (type == 'company') {\r\n      if (ev) {\r\n        this.companyName = ev.name\r\n        await this.exportService.getOfficeHirearchy('', '01').toPromise().then(async (res: any) => {\r\n          if (res) {\r\n            this.selectOptions.channels = res\r\n          }\r\n        });\r\n      } else {\r\n        this.companyName = null;\r\n        this.selectOptions.channels = [];\r\n        this.selectOptions.regions = [];\r\n        this.selectOptions.cluster = [];\r\n        this.selectOptions.branches = [];\r\n        this.selectOptions.agents = [];\r\n        this.createFormGroup.controls['channelId'].setValue('');\r\n        this.createFormGroup.controls['regionId'].setValue('');\r\n        this.createFormGroup.controls['clusterId'].setValue('');\r\n        this.createFormGroup.controls['branchId'].setValue('');\r\n        this.createFormGroup.controls['agentId'].setValue('');\r\n      }\r\n      this.selectOptions.channels = [...this.selectOptions.channels];\r\n      this.selectOptions.regions = [...this.selectOptions.regions];\r\n      this.selectOptions.cluster = [...this.selectOptions.cluster];\r\n      this.selectOptions.branches = [...this.selectOptions.branches];\r\n    }\r\n\r\n    if (type == 'channel') {\r\n      this.selectOptions.channels = [];\r\n      this.selectOptions.regions = [];\r\n      this.selectOptions.cluster = [];\r\n      this.selectOptions.branches = [];\r\n      this.selectOptions.agents = [];\r\n      this.createFormGroup.controls['channelId'].setValue('');\r\n      this.createFormGroup.controls['regionId'].setValue('');\r\n      this.createFormGroup.controls['clusterId'].setValue('');\r\n      this.createFormGroup.controls['branchId'].setValue('');\r\n      this.createFormGroup.controls['agentId'].setValue('');\r\n      if (ev) {\r\n        this.companyName = ev.name;\r\n        await this.exportService.getOfficeHirearchy(ev.id, '02').toPromise().then(async (res: any) => {\r\n          if (res) {\r\n            this.selectOptions.channels = res\r\n          }\r\n        });\r\n      } else {\r\n        this.companyName = null;\r\n        this.createFormGroup.value.companyId = '';\r\n        this.createFormGroup.value.channelId = '';\r\n        this.createFormGroup.value.regionId = '';\r\n        this.createFormGroup.value.clusterId = '';\r\n        this.createFormGroup.value.branchId = '';\r\n        this.createFormGroup.value.agentId = '';\r\n      }\r\n    }\r\n\r\n    if (type == 'region') {\r\n      this.selectOptions.regions = [];\r\n      this.selectOptions.cluster = [];\r\n      this.selectOptions.branches = [];\r\n      this.selectOptions.agents = [];\r\n      this.createFormGroup.controls['regionId'].setValue('');\r\n      this.createFormGroup.controls['clusterId'].setValue('');\r\n      this.createFormGroup.controls['branchId'].setValue('');\r\n      this.createFormGroup.controls['agentId'].setValue('');\r\n      if (ev) {\r\n        this.channelName = ev.name;\r\n        await this.exportService.getOfficeHirearchy(ev.id, '03').toPromise().then(async (res: any) => {\r\n          if (res) {\r\n            this.selectOptions.regions = res\r\n          }\r\n        });\r\n      } else {\r\n        this.channelName = null\r\n        this.createFormGroup.value.channelId = '';\r\n        this.createFormGroup.value.regionId = '';\r\n        this.createFormGroup.value.clusterId = '';\r\n        this.createFormGroup.value.branchId = '';\r\n        this.createFormGroup.value.agentId = '';\r\n      }\r\n\r\n    }\r\n\r\n    if (type == 'cluster') {\r\n      this.selectOptions.cluster = [];\r\n      this.selectOptions.branches = [];\r\n      this.selectOptions.agents = [];\r\n      this.createFormGroup.controls['clusterId'].setValue('');\r\n      this.createFormGroup.controls['branchId'].setValue('');\r\n      this.createFormGroup.controls['agentId'].setValue('');\r\n      if (ev) {\r\n        this.regionName = ev.name\r\n        await this.exportService.getOfficeHirearchy(ev.id, '04').toPromise().then(async (res: any) => {\r\n          if (res) {\r\n            this.selectOptions.cluster = res\r\n          }\r\n        });\r\n      } else {\r\n        this.regionName = null\r\n        this.createFormGroup.value.regionId = '';\r\n        this.createFormGroup.value.clusterId = '';\r\n        this.createFormGroup.value.branchId = '';\r\n        this.createFormGroup.value.agentId = '';\r\n      }\r\n    }\r\n    if (type == 'branch') {\r\n      this.selectOptions.branches = [];\r\n      this.selectOptions.agents = [];\r\n      this.createFormGroup.controls['branchId'].setValue('');\r\n      this.createFormGroup.controls['agentId'].setValue('');\r\n      if (ev) {\r\n        this.clusterName = ev.name;\r\n        await this.exportService.getOfficeHirearchy(ev.id, '05').toPromise().then(async (res: any) => {\r\n          if (res) {\r\n            this.selectOptions.branches = res\r\n          }\r\n        });\r\n      } else {\r\n        this.clusterName = null;\r\n        this.createFormGroup.value.clusterId = '';\r\n        this.createFormGroup.value.branchId = '';\r\n        this.createFormGroup.value.agentId = '';\r\n      }\r\n    }\r\n\r\n    if (type == 'agent') {\r\n      this.selectOptions.agents = [];\r\n      this.createFormGroup.controls['agentId'].setValue('');\r\n      if (ev) {\r\n        this.branchName = ev.name\r\n        await this.exportService.getAgentOffice(ev.id).toPromise().then(async (res: any) => {\r\n          if (res) {\r\n            this.selectOptions.agents = res\r\n          }\r\n        });       \r\n      } else {\r\n        this.branchName = null;   \r\n        this.createFormGroup.value.branchId = '';\r\n        this.createFormGroup.value.agentId = '';\r\n      }\r\n    }\r\n\r\n    if (type == 'office') {\r\n      if (ev) {\r\n        this.agentName = ev.agentName\r\n      } else {\r\n        this.agentName = null\r\n        this.createFormGroup.value.agentId = '';\r\n      }\r\n    }\r\n    this.cdf.detectChanges()\r\n  }\r\n\r\n\r\n  loadForm() {\r\n    this.createFormGroup = new FormGroup({\r\n      \"fromDate\": new FormControl('', [Validators.required, Validators.nullValidator]),\r\n      \"toDate\": new FormControl('', [Validators.required, Validators.nullValidator]),\r\n      \"agentId\": new FormControl(''),\r\n      \"companyId\": new FormControl(''),\r\n      \"channelId\": new FormControl(''),\r\n      \"regionId\": new FormControl(''),\r\n      \"clusterId\": new FormControl(''),\r\n      \"branchId\": new FormControl('')\r\n    });\r\n  }\r\n\r\n  isControlValid(controlName: string): boolean {\r\n    const control = this.createFormGroup.controls[controlName];\r\n    return control.valid && (control.dirty || control.touched);\r\n  }\r\n\r\n  isControlInvalid(controlName: string): boolean {\r\n    const control = this.createFormGroup.controls[controlName];\r\n    return control.invalid && (control.dirty || control.touched);\r\n  }\r\n\r\n  controlHasError(validation, controlName): boolean {\r\n    const control = this.createFormGroup.controls[controlName];\r\n    return control.hasError(validation) && (control.dirty || control.touched);\r\n  }\r\n\r\n  isControlTouched(controlName): boolean {\r\n    const control = this.createFormGroup.controls[controlName];\r\n    return control.dirty || control.touched;\r\n  }\r\n\r\n  doValid(type) {\r\n    if (type == 'FromDate') {\r\n      let value = this.createFormGroup.controls['fromDate'].value;\r\n      if (value) {\r\n        let toDate = moment(this.createFormGroup.controls['fromDate'].value).add(0, 'years')\r\n        this.toMaxDate = { year: parseInt(toDate.format('YYYY')), month: parseInt(toDate.format('M')), day: parseInt(toDate.format('D')) };\r\n        this.createFormGroup.controls['fromDate'].setValue(toDate.format('YYYY-MM-DD'))\r\n      }\r\n      var fromDate = new Date(this.createFormGroup.value.fromDate);\r\n      fromDate.setFullYear(fromDate.getFullYear() + 1);\r\n      fromDate.setDate(fromDate.getDate() - 1);\r\n      this.fromMinDate = this.createFormGroup.value.fromDate\r\n      this.fromMaxDate = fromDate;\r\n      let diffYear = new Date(this.createFormGroup.value.toDate).getFullYear() - new Date(this.createFormGroup.value.fromDate).getFullYear();\r\n      if (diffYear != 0 && diffYear != 1) {\r\n        this.createFormGroup.controls['toDate'].setValue('');\r\n      }\r\n    }\r\n\r\n    if (type == 'ToDate') {\r\n      let value = this.createFormGroup.controls['toDate'].value;\r\n      if (value) {\r\n        let toDate = moment(this.createFormGroup.controls['toDate'].value).add(0, 'years')\r\n        this.toMaxDate = { year: parseInt(toDate.format('YYYY')), month: parseInt(toDate.format('M')), day: parseInt(toDate.format('D')) };\r\n        this.createFormGroup.controls['toDate'].setValue(toDate.format('YYYY-MM-DD'))\r\n      }\r\n      var toDate = new Date(this.createFormGroup.value.toDate);\r\n      toDate.setFullYear(toDate.getFullYear() - 1);\r\n      toDate.setDate(toDate.getDate() + 1);\r\n      this.fromMinDate = toDate\r\n      if (!this.createFormGroup.value.toDate) {\r\n        this.fromMaxDate = this.createFormGroup.value.toDate;\r\n      }\r\n\r\n      let diffYear = new Date(this.createFormGroup.value.toDate).getFullYear() - new Date(this.createFormGroup.value.fromDate).getFullYear();\r\n      if (diffYear != 0 && diffYear != 1) {\r\n        this.createFormGroup.controls['fromDate'].setValue('');\r\n      }\r\n      if (diffYear == 1) {\r\n        if (new Date(this.createFormGroup.value.toDate).getMonth() > new Date(this.createFormGroup.value.fromDate).getMonth()) {\r\n          this.createFormGroup.controls['fromDate'].setValue('');\r\n        }\r\n        if (new Date(this.createFormGroup.value.toDate).getMonth() == new Date(this.createFormGroup.value.fromDate).getMonth() &&\r\n          new Date(this.createFormGroup.value.toDate).getDate() >= new Date(this.createFormGroup.value.fromDate).getDate()) {\r\n          this.createFormGroup.controls['fromDate'].setValue('');\r\n        }\r\n      }\r\n    }\r\n    this.cdf.detectChanges();\r\n  }\r\n\r\n  clearDate(type) {\r\n    this.fromMinDate = null;\r\n    this.fromMaxDate = null;\r\n    if (type == 'FromDate') {\r\n      this.createFormGroup.controls['fromDate'].setValue('');\r\n    }\r\n    if (type == 'ToDate') {\r\n      this.createFormGroup.controls['toDate'].setValue('');\r\n    }\r\n    this.displayDataList = [];\r\n    this.totalNewBusinessCase = 0;\r\n    this.totalPremium = 0;\r\n    this.totalProductDistribution = 0;\r\n    this.totalAverageCaseSize = 0;\r\n\r\n    this.selectOptions.channels = [];\r\n    this.selectOptions.regions = [];\r\n    this.selectOptions.cluster = [];\r\n    this.selectOptions.branches = [];\r\n    this.selectOptions.agents = [];\r\n    this.createFormGroup.controls['companyId'].setValue('');\r\n    this.createFormGroup.controls['channelId'].setValue('');\r\n    this.createFormGroup.controls['regionId'].setValue('');\r\n    this.createFormGroup.controls['clusterId'].setValue('');\r\n    this.createFormGroup.controls['branchId'].setValue('');\r\n    this.createFormGroup.controls['agentId'].setValue('');\r\n  }\r\n\r\n  formatDateDDMMYYY(date) {\r\n    var d = new Date(date),\r\n      month = '' + (d.getMonth() + 1),\r\n      day = '' + d.getDate(),\r\n      year = d.getFullYear();\r\n    if (month.length < 2)\r\n      month = '0' + month;\r\n    if (day.length < 2)\r\n      day = '0' + day;\r\n    return [day, month, year].join('/');\r\n  }\r\n\r\n  mathRoundTo(num: number, places: number) {\r\n    const factor = 10 ** places;\r\n    return (Math.round(num * factor) / factor).toLocaleString();\r\n  };\r\n\r\n\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule, DatePipe } from '@angular/common';\r\nimport { ReportKeyDriverComponent } from './report-key-driver.component';\r\nimport { RouterModule } from '@angular/router';\r\nimport { CRUDTableModule } from 'src/app/_metronic/shared/crud-table';\r\nimport { InlineSVGModule } from 'ng-inline-svg';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { NgSelectModule } from '@ng-select/ng-select';\r\nimport { NgbDatepickerModule } from '@ng-bootstrap/ng-bootstrap';\r\nimport { NgApexchartsModule } from 'ng-apexcharts';\r\nimport { MatDatepickerModule } from '@angular/material/datepicker';\r\nimport { DateAdapter, MatNativeDateModule, MAT_DATE_FORMATS, MAT_DATE_LOCALE } from '@angular/material/core';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { MomentDateAdapter } from '@angular/material-moment-adapter';\r\nimport { MY_FORMATS } from 'src/app/core/is-json';\r\n\r\n\r\n\r\n@NgModule({\r\n  declarations: [ReportKeyDriverComponent],\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    NgSelectModule,\r\n    ReactiveFormsModule,\r\n    InlineSVGModule,\r\n    CRUDTableModule,\r\n    NgbDatepickerModule,\r\n    NgApexchartsModule,\r\n    MatDatepickerModule,\r\n    MatNativeDateModule,\r\n    MatInputModule,\r\n    MatFormFieldModule,\r\n    RouterModule.forChild([\r\n      {\r\n        path: '',\r\n        component: ReportKeyDriverComponent,\r\n      },\r\n    ]),\r\n  ],\r\n  providers: [DatePipe,{provide: DateAdapter, useClass: MomentDateAdapter, deps: [MAT_DATE_LOCALE]},\r\n  {provide: MAT_DATE_FORMATS, useValue: MY_FORMATS}]\r\n})\r\nexport class ReportKeyDriverModule { }\r\n","export default \"<div class=\\\"row\\\">\\r\\n    <div class=\\\"col-12\\\">\\r\\n        <div class=\\\"card card-custom gutter-b\\\">\\r\\n            <div class=\\\"card-header\\\">\\r\\n                <div class=\\\"card-title\\\">\\r\\n                    <h3 class=\\\"card-label left-border-image\\\">Key Driver Report</h3>\\r\\n                </div>\\r\\n                <div class=\\\"card-toolbar\\\">\\r\\n                    <button type=\\\"button\\\" class=\\\"btn btn-primary ml-2\\\" style=\\\"min-width: 50px;\\\"\\r\\n                        (click)=\\\"getAllReports()\\\">\\r\\n                        <span class=\\\"flaticon2-magnifier-tool\\\"></span>\\r\\n                    </button>\\r\\n                    <button type=\\\"button\\\" [disabled]=\\\"!isData\\\" (click)=\\\"generateReportExcel()\\\"\\r\\n                        class=\\\"btn btn-primary ml-2\\\" style=\\\"min-width: 50px;\\\">\\r\\n                        <span class=\\\"\\\">Generate</span>\\r\\n                    </button>\\r\\n                    <button type=\\\"button\\\" (click)=\\\"cancelReport()\\\" class=\\\"btn btn-primary ml-2\\\"\\r\\n                        style=\\\"min-width: 50px;\\\">\\r\\n                        <span class=\\\"\\\">Cancel</span>\\r\\n                    </button>\\r\\n                </div>\\r\\n            </div>\\r\\n            <div class=\\\"card-body px-10 py-3\\\">\\r\\n                <form action=\\\"#\\\" class=\\\"form\\\" [formGroup]=\\\"createFormGroup\\\">\\r\\n                    <div class=\\\"row\\\" style=\\\"align-items: center;\\\">\\r\\n                        <div class=\\\"col-sm-6 from-date\\\">\\r\\n                            <div class=\\\"form-group row\\\">\\r\\n                                <label class=\\\"col-sm-4 col-form-label\\\">From Month/Year</label>\\r\\n                                <div class=\\\"col-sm-6 input-date\\\">\\r\\n                                    <input type=\\\"text\\\" readonly class=\\\"form-control form-control-sm\\\"\\r\\n                                        formControlName=\\\"fromDate\\\" [min]=\\\"fromMinDate\\\" [max]=\\\"fromMaxDate\\\"\\r\\n                                        [matDatepicker]=\\\"picker1\\\" (dateChange)=\\\"doValid('FromDate')\\\" autocomplete=\\\"off\\\">\\r\\n                                    <mat-datepicker-toggle matSuffix [for]=\\\"picker1\\\"></mat-datepicker-toggle>\\r\\n                                    <mat-datepicker #picker1 disabled=\\\"false\\\"></mat-datepicker>\\r\\n                                </div>\\r\\n                                <button type=\\\"button\\\" style=\\\"margin: 0 !important;\\\" (click)=\\\"clearDate('FromDate')\\\"\\r\\n                                    class=\\\"btn btn-primary btn-elevate mx-2\\\">Clear</button>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                        <div class=\\\"col-sm-6 from-date\\\">\\r\\n                            <div class=\\\"form-group row\\\">\\r\\n                                <label class=\\\"col-sm-4 col-form-label\\\">To Month/Year</label>\\r\\n                                <div class=\\\"col-sm-6 input-date\\\">\\r\\n                                    <input type=\\\"text\\\" readonly class=\\\"form-control form-control-sm\\\"\\r\\n                                        formControlName=\\\"toDate\\\" [min]=\\\"fromMinDate\\\" [max]=\\\"fromMaxDate\\\"\\r\\n                                        [matDatepicker]=\\\"picker\\\" (dateChange)=\\\"doValid('ToDate')\\\" autocomplete=\\\"off\\\">\\r\\n                                    <mat-datepicker-toggle matSuffix [for]=\\\"picker\\\"></mat-datepicker-toggle>\\r\\n                                    <mat-datepicker #picker disabled=\\\"false\\\"></mat-datepicker>\\r\\n                                </div>\\r\\n                                <button type=\\\"button\\\" style=\\\"margin: 0 !important;\\\" (click)=\\\"clearDate('ToDate')\\\"\\r\\n                                    class=\\\"btn btn-primary btn-elevate mx-2\\\">Clear</button>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <div class=\\\"row\\\" style=\\\"align-items: center;\\\"\\r\\n                        *ngIf=\\\"createFormGroup.value.fromDate != '' && createFormGroup.value.toDate != '' \\\">\\r\\n                        <div class=\\\"col-sm-6\\\"\\r\\n                            *ngIf=\\\"createFormGroup.value.fromDate != '' && createFormGroup.value.toDate != '' \\\">\\r\\n                            <div class=\\\"form-group row\\\">\\r\\n                                <label class=\\\"col-sm-4 col-form-label\\\">Company</label>\\r\\n                                <div class=\\\"col-sm-8\\\">\\r\\n                                    <ng-select class=\\\"ng-custom-select\\\" placeholder=\\\"Please Select\\\"\\r\\n                                        (change)=\\\"changeOptions($event, 'channel')\\\" [items]=\\\"selectOptions.companies\\\"\\r\\n                                        bindLabel=\\\"name\\\" bindValue=\\\"id\\\" formControlName=\\\"companyId\\\">\\r\\n                                    </ng-select>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                        <div class=\\\"col-sm-6\\\">\\r\\n                            <div class=\\\"form-group row\\\">\\r\\n                                <label class=\\\"col-sm-4 col-form-label\\\">Channel</label>\\r\\n                                <div class=\\\"col-sm-8\\\">\\r\\n                                    <ng-select [readonly]=\\\"selectOptions.channels.length == 0 \\\" class=\\\"ng-custom-select\\\"\\r\\n                                        placeholder=\\\"Please Select\\\" (change)=\\\"changeOptions($event, 'region')\\\"\\r\\n                                        [items]=\\\"selectOptions.channels\\\" bindLabel=\\\"name\\\" bindValue=\\\"id\\\"\\r\\n                                        formControlName=\\\"channelId\\\">\\r\\n                                    </ng-select>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <div class=\\\"row\\\" style=\\\"align-items: center;\\\"\\r\\n                        *ngIf=\\\"createFormGroup.value.fromDate != '' && createFormGroup.value.toDate != '' \\\">\\r\\n                        <div class=\\\"col-sm-6\\\">\\r\\n                            <div class=\\\"form-group row\\\">\\r\\n                                <label class=\\\"col-sm-4 col-form-label\\\">Region</label>\\r\\n                                <div class=\\\"col-sm-8\\\">\\r\\n                                    <ng-select [readonly]=\\\"selectOptions.regions.length == 0 \\\" class=\\\"ng-custom-select\\\"\\r\\n                                        placeholder=\\\"Please Select\\\" (change)=\\\"changeOptions($event, 'cluster')\\\"\\r\\n                                        [items]=\\\"selectOptions.regions\\\" bindLabel=\\\"name\\\" bindValue=\\\"id\\\"\\r\\n                                        formControlName=\\\"regionId\\\">\\r\\n                                    </ng-select>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                        <div class=\\\"col-sm-6\\\">\\r\\n                            <div class=\\\"form-group row\\\">\\r\\n                                <label class=\\\"col-sm-4 col-form-label\\\">Cluster</label>\\r\\n                                <div class=\\\"col-sm-8\\\">\\r\\n                                    <ng-select [readonly]=\\\"selectOptions.cluster.length == 0 \\\" class=\\\"ng-custom-select\\\"\\r\\n                                        placeholder=\\\"Please Select\\\" (change)=\\\"changeOptions($event, 'branch')\\\"\\r\\n                                        [items]=\\\"selectOptions.cluster\\\" bindLabel=\\\"name\\\" bindValue=\\\"id\\\"\\r\\n                                        formControlName=\\\"clusterId\\\">\\r\\n                                    </ng-select>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <div class=\\\"row\\\" style=\\\"align-items: center;\\\"\\r\\n                        *ngIf=\\\"createFormGroup.value.fromDate != '' && createFormGroup.value.toDate != '' \\\">\\r\\n                        <div class=\\\"col-sm-6\\\">\\r\\n                            <div class=\\\"form-group row\\\">\\r\\n                                <label class=\\\"col-sm-4 col-form-label\\\">Branch</label>\\r\\n                                <div class=\\\"col-sm-8\\\">\\r\\n                                    <ng-select [readonly]=\\\"selectOptions.branches.length == 0 \\\" class=\\\"ng-custom-select\\\"\\r\\n                                        placeholder=\\\"Please Select\\\" (change)=\\\"changeOptions($event, 'agent')\\\"\\r\\n                                        [items]=\\\"selectOptions.branches\\\" bindLabel=\\\"name\\\" bindValue=\\\"id\\\"\\r\\n                                        formControlName=\\\"branchId\\\">\\r\\n                                    </ng-select>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                        <!-- <div class=\\\"col-sm-6\\\">\\r\\n                            <div class=\\\"form-group row\\\">\\r\\n                                <label class=\\\"col-sm-4 col-form-label\\\">Agent Name</label>\\r\\n                                <div class=\\\"col-sm-8\\\">\\r\\n                                    <ng-select [readonly]=\\\"selectOptions.agents.length == 0 \\\" class=\\\"ng-custom-select\\\"\\r\\n                                        placeholder=\\\"Please Select\\\" (change)=\\\"changeOptions($event, 'office')\\\"\\r\\n                                        [items]=\\\"selectOptions.agents\\\" bindLabel=\\\"agentName\\\" bindValue=\\\"agentId\\\"\\r\\n                                        formControlName=\\\"agentId\\\">\\r\\n                                    </ng-select>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div> -->\\r\\n                    </div>\\r\\n                </form>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n<div class=\\\"row\\\" *ngIf=\\\"isData\\\">\\r\\n    <div class=\\\"col-12\\\">\\r\\n        <div style=\\\"width: 100%;\\r\\n        overflow: hidden; position: relative;\\\">\\r\\n            <div style=\\\"width: 30%;float: left; position: relative;\\\">\\r\\n                <br *ngIf=\\\"createFormGroup.value.companyId\\\">\\r\\n                <br *ngIf=\\\"createFormGroup.value.clusterId\\\">\\r\\n                <h3 class=\\\"card-label left-border-image\\\" style=\\\"font-size: 1.15rem;\\\">{{ title }}</h3>\\r\\n            </div>\\r\\n            <div style=\\\"width: 30%; float: left; position: relative;\\\">\\r\\n                <br *ngIf=\\\"createFormGroup.value.companyId\\\">\\r\\n                <br *ngIf=\\\"createFormGroup.value.clusterId\\\">\\r\\n                <div class=\\\"date-display\\\">\\r\\n                    <span *ngIf=\\\"createFormGroup.value.fromDate\\\">From Month/Year : {{\\r\\n                        formatDateDDMMYYY(createFormGroup.value.fromDate) }} </span>\\r\\n                    <span *ngIf=\\\"createFormGroup.value.toDate\\\">To Month/Year : {{\\r\\n                        formatDateDDMMYYY(createFormGroup.value.toDate) }}</span>\\r\\n                </div>\\r\\n            </div>\\r\\n            <div class=\\\"search-display\\\">\\r\\n                <div *ngIf=\\\"createFormGroup.value.companyId != '' || \\r\\n                createFormGroup.value.channelId !='' || createFormGroup.value.regionId != '' \\\">\\r\\n                    <span *ngIf=\\\"createFormGroup.value.companyId\\\">Company: {{ companyName }} </span>\\r\\n                    <span *ngIf=\\\"createFormGroup.value.channelId\\\">Channel: {{ channelName }} </span>\\r\\n                    <span *ngIf=\\\"createFormGroup.value.regionId\\\">Region: {{ regionName }} </span>\\r\\n                </div>\\r\\n                <div *ngIf=\\\"createFormGroup.value.clusterId != '' || \\r\\n                createFormGroup.value.branchId !='' || createFormGroup.value.agentId !='' \\\">\\r\\n                    <span *ngIf=\\\"createFormGroup.value.clusterId\\\">Cluster: {{ clusterName }} </span>\\r\\n                    <span *ngIf=\\\"createFormGroup.value.branchId\\\">Branch: {{ branchName }}</span>\\r\\n                    <span *ngIf=\\\"createFormGroup.value.agentId\\\">Agent: {{ agentName }} </span>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n        <div style=\\\"width: 100%;\\r\\n        overflow-y: scroll;\\r\\n        overflow-x: scroll;\\r\\n        max-height: 500px;\\\">\\r\\n            <table border=\\\"1\\\">\\r\\n                <tr>\\r\\n                    <th>Product</th>\\r\\n                    <th>New Business Case</th>\\r\\n                    <th>New Business Premium</th>\\r\\n                    <th>Product Distribution</th>\\r\\n                    <th>Average Case Size</th>\\r\\n                </tr>\\r\\n                <tr *ngFor=\\\"let data of displayDataList; let i = index\\\">\\r\\n                    <td class=\\\"text-left\\\">{{ data.product }}</td>\\r\\n                    <td class=\\\"text-right\\\">{{ data.newBusinessCase | number:'1.2-2' }}</td>\\r\\n                    <td class=\\\"text-right\\\">{{ data.newBusinessPremium | number:'1.2-2' }}</td>\\r\\n                    <td class=\\\"text-right\\\">{{ data.productDistribution | number:'1.2-2' }}</td>\\r\\n                    <td class=\\\"text-right\\\">{{ data.averageCaseSize | number:'1.2-2' }}</td>\\r\\n                </tr>\\r\\n                <tr>\\r\\n                    <td class=\\\"text-left\\\">Total</td>\\r\\n                    <td class=\\\"text-right\\\">{{ totalNewBusinessCase | number:'1.2-2' }}</td>\\r\\n                    <td class=\\\"text-right\\\">{{ totalPremium | number:'1.2-2' }}</td>\\r\\n                    <td class=\\\"text-right\\\">{{ roundTotalProductDistribution | number:'1.2-2' }}</td>\\r\\n                    <td class=\\\"text-right\\\">{{ roundTotalAverageCaseSize | number:'1.2-2' }}</td>\\r\\n                </tr>\\r\\n                <tr>\\r\\n                    <td class=\\\"text-left\\\">Manpower</td>\\r\\n                    <td colspan=\\\"4\\\">{{ (keyDriver.manPower || 0) | number:'1.2-2'  }}</td>\\r\\n                </tr>\\r\\n                <tr>\\r\\n                    <td class=\\\"text-left\\\">Active Manpower</td>\\r\\n                    <td colspan=\\\"4\\\">{{ (keyDriver.activeManPower || 0) | number:'1.2-2' }}</td>\\r\\n                </tr>\\r\\n                <tr>\\r\\n                    <td class=\\\"text-left\\\">Active ratio</td>\\r\\n                    <td colspan=\\\"4\\\">{{ (activeRatio || 0) | number:'1.2-2'  }}</td>\\r\\n                </tr>\\r\\n                <tr>\\r\\n                    <td class=\\\"text-left\\\">Productivity</td>\\r\\n                    <td colspan=\\\"4\\\">{{ (productivity || 0) | number:'1.2-2' }}</td>\\r\\n                </tr>\\r\\n                <tr>\\r\\n                    <td class=\\\"text-left\\\">Channel Productivity</td>\\r\\n                    <td colspan=\\\"4\\\">{{ (channelProductivity || 0) | number:'1.2-2' }}</td>\\r\\n                </tr>\\r\\n                <tr>\\r\\n                    <td class=\\\"text-left\\\">ANP Case Size</td>\\r\\n                    <td colspan=\\\"4\\\">{{ (anpCaseSize || 0) | number:'1.2-2'  }}</td>\\r\\n                </tr>\\r\\n                <tr>\\r\\n                    <td class=\\\"text-left\\\">Monthly Case Size</td>\\r\\n                    <td colspan=\\\"4\\\">{{ (monthlyCaseSize || 0) | number:'1.2-2'  }}</td>\\r\\n                </tr>\\r\\n            </table>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n<div *ngIf=\\\"!isData\\\" style=\\\"color: gray; text-align: center;\\\"> There is no data </div>\";"],"names":[],"sourceRoot":"webpack:///"}