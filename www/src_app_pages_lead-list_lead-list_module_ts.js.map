{"version":3,"file":"src_app_pages_lead-list_lead-list_module_ts.js","mappings":"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","sources":["./src/app/pages/lead-list/lead-list.component.ts","./src/app/pages/lead-list/lead-list.const.ts","./src/app/pages/lead-list/lead-list.module.ts","./src/app/pages/lead-list/lead-list.share.module.ts","./src/app/pages/lead-list/lead-list.component.html"],"sourcesContent":["import {\n  ChangeDetectorRef,\n  Component,\n  EventEmitter,\n  Input,\n  OnInit,\n  Output,\n  ViewChild,\n} from \"@angular/core\";\nimport { FormControl, FormGroup } from \"@angular/forms\";\nimport { Router } from \"@angular/router\";\nimport { MaterialTableViewComponent } from \"src/app/_metronic/shared/crud-table/components/material-table-view/material-table-view.component\";\nimport { LeadCol, LeadDisplayCol } from \"./lead-list.const\";\nimport { LeadListService } from \"./lead-list.service\";\nimport { DateAdapter, MAT_DATE_FORMATS, MAT_DATE_LOCALE } from \"@angular/material/core\";\nimport { MAT_MOMENT_DATE_FORMATS, MomentDateAdapter } from \"@angular/material-moment-adapter\";\nimport { MasterDataService } from \"../../modules/master-data/master-data.service\";\nimport { ProductDataService } from \"../products/services/products-data.service\";\nimport { MY_FORMATS } from \"../../core/is-json\";\nimport { NgbModal } from \"@ng-bootstrap/ng-bootstrap\";\nimport { CustomerListComponent } from \"../customer-list/customer-list.component\";\n\n@Component({\n  selector: \"app-lead-list\",\n  templateUrl: \"./lead-list.component.html\",\n  styleUrls: [\"./lead-list.component.scss\"],\n  providers: [\n    { provide: DateAdapter, useClass: MomentDateAdapter, deps: [MAT_DATE_LOCALE] },\n    { provide: MAT_DATE_FORMATS, useValue: MY_FORMATS },\n  ]\n})\n\nexport class LeadListComponent implements OnInit {\n  @ViewChild(MaterialTableViewComponent) matTable: MaterialTableViewComponent;\n\n  ELEMENT_COL = JSON.parse(JSON.stringify(LeadCol));\n  displayedColumns = JSON.parse(JSON.stringify(LeadDisplayCol));\n\n  LeadList: any[] = [];\n  LeadForm: FormGroup;\n\n  @Output() selectedUser = new EventEmitter();\n  @Input() isPopup: boolean = false;\n  show: boolean = false\n  statusOption: any[] = []\n  sourceOption: any[] = []\n  productOption: any[] = []\n  constructor(\n    private router: Router,\n    private cdf: ChangeDetectorRef,\n    private LeadListService: LeadListService,\n    private masterDataService: MasterDataService,\n    private productService: ProductDataService,\n    private modalService: NgbModal\n  ) {\n    this.loadForm();\n  }\n  ngOnInit(): void {\n    this.show = true\n    this.getList();\n    this.getStatus();\n    this.getSource();\n    this.getProduct()\n\n  }\n  loadForm() {\n    this.LeadForm = new FormGroup({\n      campaignName: new FormControl(null),\n      existingCustomerId: new FormControl(null),\n      existingCustomerName: new FormControl({ value: null, disabled: true }),\n      contactName: new FormControl(null),\n      leadId: new FormControl(null),\n      openDateStr: new FormControl(null),\n      productId: new FormControl(null),\n      sourceCode: new FormControl(null),\n      statusCode: new FormControl(null),\n    });\n  }\n\n  navigateToDetail(data, id?: string, secondaryId?: string) {\n    this.router.navigate([\"/lead/lead-detail\"], {\n      queryParams: {\n        pageStatus: data,\n        pageId: id,\n        pageSecondaryId: secondaryId,\n        leadId: id,\n      },\n      // skipLocationChange: true, replaceUrl: true\n    });\n  }\n  getStatus() {\n    this.masterDataService\n      .getDataByType(\"LEAD_STATUS\")\n      .toPromise()\n      .then((res: any) => {\n        console.log(res);\n        if (res) {\n          this.statusOption = res.map((x) => {\n            return { code: x.codeId, value: x.codeName };\n          });\n          console.log(this.statusOption);\n          this.cdf.detectChanges();\n        }\n      });\n  }\n  getSource() {\n    this.masterDataService\n      .getDataByType(\"LEAD_SOURCE\")\n      .toPromise()\n      .then((res: any) => {\n        console.log(res);\n        if (res) {\n          this.sourceOption = res.map((x) => {\n            return { code: x.codeId, value: x.codeName };\n          });\n          console.log(this.sourceOption);\n          this.cdf.detectChanges();\n        }\n      });\n  }\n  getProduct() {\n    this.productService\n      .getAll()\n      .toPromise()\n      .then((res: any) => {\n        console.log(res);\n        if (res) {\n          this.productOption = res.map((x) => {\n            return { code: x.id, value: x.name };\n          });\n          console.log(this.productOption);\n          this.cdf.detectChanges();\n        }\n      });\n  }\n\n  getList() {\n    this.LeadListService.getLeadList(this.LeadForm.getRawValue())\n      .toPromise()\n      .then((res: any) => {\n        if (res) {\n          console.log(\"RES\", res)\n          this.LeadList = res\n          this.cdf.detectChanges();\n          this.matTable.reChangeData();\n        }\n      });\n  }\n\n  get selected() {\n    let user;\n    if (this.matTable) {\n      user = this.matTable.selection.selected[0];\n    }\n    return user ? user : { id: 0 };\n  }\n\n  rowSelected(event) {\n    this.selectedUser.emit(event);\n  }\n\n  cancel() {\n    this.LeadForm.reset();\n    this.getList();\n  }\n\n  actionBtn(event) {\n    if (event.cmd == \"edit\") {\n      this.navigateToDetail(\"edit\", event.data.leadId, event.data.individualId);\n    }\n    if (event.cmd == \"view\") {\n      this.navigateToDetail(\"view\", event.data.leadId, event.data.individualId);\n    }\n  }\n\n  viewExistingCustomer() {\n    let modalRef;\n    modalRef = this.modalService.open(CustomerListComponent, { size: 'xl', backdrop: false });\n    modalRef.componentInstance.isPopup = true\n    modalRef.result.then(() => { }, (res) => {\n      if (res) {\n        if (res.type == \"save\") {\n          let customer = res.data\n          console.log('onDidDismiss =====> ', customer);\n          this.LeadForm.controls.existingCustomerId.setValue(customer.customerId)\n          this.LeadForm.controls.existingCustomerName.setValue(customer.name)\n        }\n      }\n    })\n\n\n  }\n\n  //for view\n  isControlValid(controlName: string): boolean {\n    const control = this.LeadForm.controls[controlName];\n    return control.valid && (control.dirty || control.touched);\n  }\n\n  isControlInvalid(controlName: string): boolean {\n    const control = this.LeadForm.controls[controlName];\n    return control.invalid && (control.dirty || control.touched);\n  }\n\n  controlHasError(validation, controlName): boolean {\n    const control = this.LeadForm.controls[controlName];\n    return control.hasError(validation) && (control.dirty || control.touched);\n  }\n\n  isControlTouched(controlName): boolean {\n    const control = this.LeadForm.controls[controlName];\n    return control.dirty || control.touched;\n  }\n}\n","import { COLTYPE, TableCol } from '../../_metronic/shared/crud-table/components/material-table-view/table-dto'\nexport const LeadCol: TableCol[] = [\n  {\n    title: \"Lead ID\",\n    type: COLTYPE.FEILD,\n    field: \"leadId\"\n  },\n  {\n    title: \"Lead Name\",\n    type: COLTYPE.FEILD,\n    field: \"contactName\"\n  },\n  {\n    title: \"Product\",\n    type: COLTYPE.FEILD,\n    field: \"productName\"\n  },\n  {\n    title: \"Existing Customer\",\n    type: COLTYPE.FEILD,\n    field: \"existingCustomerName\"\n  },\n\n  {\n    title: \"Source\",\n    type: COLTYPE.FEILD,\n    field: \"sourceValue\"\n  },\n  {\n    title: \"Open Date\",\n    type: COLTYPE.FEILD,\n    field: \"openedDate\",\n    isFromatDate:true\n  },\n  {\n    title: \"Campaign Name\",\n    type: COLTYPE.FEILD,\n    field: \"campaignName\",\n  },\n  {\n    title: \"Status\",\n    type: COLTYPE.FEILD,\n    field: \"statusCode\",\n    isLeadStatus: true\n  },\n  {\n    title: \"Actions\",\n    type: COLTYPE.ACTION,\n    field: \"actions\",\n    btn: {\n      edit: true,\n      view:true\n    }\n  },\n]\n\nexport const LeadDisplayCol: string[] = [\n  \"leadId\",\n  \"contactName\",\n  \"productName\",\n  \"existingCustomerName\",\n  \"sourceValue\",\n  \"openedDate\",\n  \"campaignName\",\n  \"statusCode\",\n  \"actions\",\n]\n\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { LeadListComponent } from './lead-list.component';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { InlineSVGModule } from 'ng-inline-svg';\nimport { CRUDTableModule } from 'src/app/_metronic/shared/crud-table';\nimport { LeadListShareModule } from './lead-list.share.module';\nimport { RouterModule } from '@angular/router';\nimport { NgbDatepickerModule } from '@ng-bootstrap/ng-bootstrap';\nimport { NgSelectModule } from '@ng-select/ng-select';\n\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    InlineSVGModule,\n    CRUDTableModule,\n    NgbDatepickerModule,\n    LeadListShareModule,\n    NgSelectModule,\n    RouterModule.forChild([\n      {\n        path: '',\n        component: LeadListComponent,\n      },\n    ]),\n\n  ]\n})\nexport class LeadListModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule } from '@angular/router';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { InlineSVGModule } from 'ng-inline-svg';\nimport { CRUDTableModule } from '../../_metronic/shared/crud-table';\nimport { LeadListComponent } from './lead-list.component';\nimport { MatRadioModule } from '@angular/material/radio';\nimport { MatDatepickerModule } from '@angular/material/datepicker';\nimport { MatInputModule } from '@angular/material/input';\nimport { NgSelectModule } from '@ng-select/ng-select';\nimport { StaticPagesModule } from '../static-pages/static-pages.module';\nimport { NgbModalModule } from '@ng-bootstrap/ng-bootstrap';\nimport { CustomerListShareModule } from '../customer-list/customer-list.share.module';\n\n\n\n@NgModule({\n  declarations: [LeadListComponent],\n  exports: [LeadListComponent],\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    InlineSVGModule,\n    CRUDTableModule,\n    MatRadioModule, \n    MatDatepickerModule,\n    MatInputModule,\n    NgbModalModule,\n    StaticPagesModule,\n    NgSelectModule,\n    CustomerListShareModule\n  ]\n})\nexport class LeadListShareModule { }\n","export default \"<div class=\\\"row\\\">\\n    <div class=\\\"col-12\\\">\\n        <div class=\\\"card card-custom gutter-b\\\">\\n            <div class=\\\"card-header\\\" *ngIf=\\\"!isPopup\\\">\\n                <div class=\\\"card-title\\\">\\n                    <h3 class=\\\"card-label left-border-image\\\">Lead List</h3>\\n                </div>\\n                <div class=\\\"card-toolbar\\\">\\n                    <!-- <button type=\\\"button\\\" class=\\\"btn btn-primary btn-circle\\\" (click)=\\\"navigateToDetail('create')\\\">\\n                        <span class=\\\"flaticon2-plus\\\"></span>\\n                    </button> -->\\n                    <button type=\\\"button\\\" class=\\\"btn btn-primary ml-2\\\" style=\\\"min-width: 50px;\\\" (click)=\\\"getList()\\\">\\n                        <span class=\\\"flaticon2-magnifier-tool\\\"></span>\\n                    </button>\\n                    <button type=\\\"button\\\" class=\\\"btn btn-primary ml-2\\\" style=\\\"min-width: 50px;\\\" (click)=\\\"cancel()\\\">\\n                        <span class=\\\"\\\">Cancel</span>\\n                    </button>\\n                </div>\\n            </div>\\n            <div class=\\\"card-body px-10 py-3\\\">\\n                <form action=\\\"#\\\" class=\\\"form\\\" [formGroup]=\\\"LeadForm\\\">\\n                    <div class=\\\"row\\\" style=\\\"align-items: center;\\\">\\n                        <div class=\\\"col-xl-4 col-sm-6\\\">\\n                            <div class=\\\"form-group row\\\">\\n                                <label class=\\\"col-sm-4 col-form-label\\\">Lead ID</label>\\n                                <div class=\\\"col-sm-8\\\">\\n                                    <input type=\\\"text\\\" class=\\\"form-control form-control-sm \\\" name=\\\"leadId\\\" autocomplete=\\\"off\\\" [class.is-invalid]=\\\"isControlInvalid('leadId')\\\" [class.is-valid]=\\\"isControlValid('leadId')\\\" formControlName=\\\"leadId\\\" />\\n                                </div>\\n                            </div>\\n                        </div>\\n                        <div class=\\\"col-xl-4 col-sm-6\\\">\\n                            <div class=\\\"form-group row\\\">\\n                                <label class=\\\"col-sm-4 col-form-label\\\">Lead Name</label>\\n                                <div class=\\\"col-sm-8\\\">\\n                                    <input type=\\\"text\\\" class=\\\"form-control form-control-sm \\\" name=\\\"contactName\\\" autocomplete=\\\"off\\\" [class.is-invalid]=\\\"isControlInvalid('contactName')\\\" [class.is-valid]=\\\"isControlValid('contactName')\\\" formControlName=\\\"contactName\\\" />\\n                                </div>\\n                            </div>\\n                        </div>\\n                        <div class=\\\"col-xl-4 col-sm-6\\\">\\n                            <div class=\\\"form-group row\\\">\\n                                <label class=\\\"col-sm-4 col-form-label\\\">Open Date</label>\\n                                <div class=\\\"col-sm-8\\\">\\n                                    <div class=\\\"input-group \\\">\\n                                        <input matInput class=\\\"form-control-sm date-input\\\" formControlName=\\\"openDateStr\\\" [matDatepicker]=\\\"picker\\\" readonly>\\n                                        <mat-datepicker-toggle matSuffix [for]=\\\"picker\\\"></mat-datepicker-toggle>\\n                                        <mat-datepicker #picker disabled=\\\"false\\\"></mat-datepicker>\\n\\n                                    </div>\\n                                </div>\\n                            </div>\\n                        </div>\\n                    <!-- </div>\\n                    <div class=\\\"row\\\"> -->\\n                        <div class=\\\"col-xl-4 col-sm-6\\\">\\n                            <div class=\\\"form-group row\\\">\\n                                <label class=\\\"col-sm-4 col-form-label\\\">Product</label>\\n                                <div class=\\\"col-sm-8\\\">\\n                                    <!-- <input type=\\\"text\\\" class=\\\"form-control form-control-sm \\\" name=\\\"productId\\\"\\n                                        autocomplete=\\\"off\\\" [class.is-invalid]=\\\"isControlInvalid('productId')\\\"\\n                                        [class.is-valid]=\\\"isControlValid('productId')\\\" formControlName=\\\"productId\\\" /> -->\\n                                    <ng-select class=\\\"ng-custom-select\\\" [class.is-invalid]=\\\"isControlInvalid('productId')\\\" [class.is-valid]=\\\"isControlValid('productId')\\\" [items]=\\\"productOption\\\" bindLabel=\\\"value\\\" bindValue=\\\"code\\\" formControlName=\\\"productId\\\">\\n                                    </ng-select>\\n                                </div>\\n                            </div>\\n                        </div>\\n                        <div class=\\\"col-xl-4 col-sm-6\\\">\\n                            <div class=\\\"form-group row\\\">\\n                                <label class=\\\"col-sm-4 col-form-label\\\">Source</label>\\n                                <div class=\\\"col-sm-8\\\">\\n                                    <!-- <input type=\\\"text\\\" class=\\\"form-control form-control-sm \\\" name=\\\"sourceCode\\\"\\n                                        autocomplete=\\\"off\\\" [class.is-invalid]=\\\"isControlInvalid('sourceCode')\\\"\\n                                        [class.is-valid]=\\\"isControlValid('sourceCode')\\\" formControlName=\\\"sourceCode\\\" /> -->\\n                                    <ng-select class=\\\"ng-custom-select\\\" [class.is-invalid]=\\\"isControlInvalid('sourceCode')\\\" [class.is-valid]=\\\"isControlValid('sourceCode')\\\" [items]=\\\"sourceOption\\\" bindLabel=\\\"value\\\" bindValue=\\\"code\\\" formControlName=\\\"sourceCode\\\">\\n                                    </ng-select>\\n                                </div>\\n                            </div>\\n                        </div>\\n                        <div class=\\\"col-xl-4 col-sm-6\\\">\\n                            <div class=\\\"form-group row\\\">\\n                                <label class=\\\"col-sm-4 col-form-label\\\">Campaign Name </label>\\n                                <div class=\\\"col-sm-8\\\">\\n                                    <input type=\\\"text\\\" class=\\\"form-control form-control-sm \\\" name=\\\"campaignName\\\" autocomplete=\\\"off\\\" [class.is-invalid]=\\\"isControlInvalid('campaignName')\\\" [class.is-valid]=\\\"isControlValid('campaignName')\\\" formControlName=\\\"campaignName\\\" />\\n                                </div>\\n                            </div>\\n                        </div>\\n                    <!-- </div>\\n                    <div class=\\\"row\\\"> -->\\n\\n                        <div class=\\\"col-xl-4 col-sm-6\\\">\\n                            <div class=\\\"form-group row\\\">\\n                                <label class=\\\"col-sm-4 col-form-label\\\">Existing Customer</label>\\n                                <div class=\\\"col-sm-8\\\" (click)=\\\"viewExistingCustomer()\\\" >\\n                                    <input type=\\\"text\\\" class=\\\"form-control form-control-sm \\\" name=\\\"existingCustomerName\\\" autocomplete=\\\"off\\\" [class.is-invalid]=\\\"isControlInvalid('existingCustomerName')\\\" [class.is-valid]=\\\"isControlValid('existingCustomerName')\\\"\\n                                        formControlName=\\\"existingCustomerName\\\" readonly />\\n                                </div>\\n                            </div>\\n                        </div>\\n                        <div class=\\\"col-xl-4 col-sm-6\\\">\\n                            <div class=\\\"form-group row\\\">\\n                                <label class=\\\"col-sm-4 col-form-label\\\">Status</label>\\n                                <div class=\\\"col-sm-8\\\">\\n                                    <ng-select class=\\\"ng-custom-select\\\" [class.is-invalid]=\\\"isControlInvalid('statusCode')\\\" [class.is-valid]=\\\"isControlValid('statusCode')\\\" [items]=\\\"statusOption\\\" bindLabel=\\\"value\\\" bindValue=\\\"code\\\" formControlName=\\\"statusCode\\\">\\n                                    </ng-select>\\n                                </div>\\n                            </div>\\n                        </div>\\n                    </div>\\n                </form>\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n<div class=\\\"row\\\">\\n    <div class=\\\"col-12\\\">\\n        <div class=\\\"card card-custom gutter-b\\\">\\n            <div class=\\\"card-body customer-card-body\\\" *ngIf=\\\"show\\\">\\n                <app-material-table-view [data]=\\\"LeadList\\\" [colum]=\\\"ELEMENT_COL\\\" [displayedColumns]=\\\"displayedColumns\\\" (emitter)=\\\"actionBtn($event)\\\" (rowselect)=\\\"rowSelected($event)\\\" [selectable]=\\\"isPopup\\\">\\n                </app-material-table-view>\\n            </div>\\n        </div>\\n    </div>\\n</div>\";"],"names":[],"sourceRoot":"webpack:///"}