{"version":3,"file":"src_app_pages_lead-list_lead-list_module_ts.js","mappings":"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","sources":["./src/app/pages/lead-list/lead-list.component.ts","./src/app/pages/lead-list/lead-list.const.ts","./src/app/pages/lead-list/lead-list.module.ts","./src/app/pages/lead-list/lead-list.share.module.ts","./src/app/pages/lead-list/lead-list.component.html"],"sourcesContent":["import {\r\n  ChangeDetectorRef,\r\n  Component,\r\n  EventEmitter,\r\n  Input,\r\n  OnInit,\r\n  Output,\r\n  ViewChild,\r\n} from \"@angular/core\";\r\nimport { FormControl, FormGroup } from \"@angular/forms\";\r\nimport { Router } from \"@angular/router\";\r\nimport { MaterialTableViewComponent } from \"src/app/_metronic/shared/crud-table/components/material-table-view/material-table-view.component\";\r\nimport { LeadCol, LeadDisplayCol } from \"./lead-list.const\";\r\nimport { LeadListService } from \"./lead-list.service\";\r\nimport { DateAdapter, MAT_DATE_FORMATS, MAT_DATE_LOCALE } from \"@angular/material/core\";\r\nimport { MAT_MOMENT_DATE_FORMATS, MomentDateAdapter } from \"@angular/material-moment-adapter\";\r\nimport { MasterDataService } from \"../../modules/master-data/master-data.service\";\r\nimport { ProductDataService } from \"../products/services/products-data.service\";\r\nimport { MY_FORMATS } from \"../../core/is-json\";\r\nimport { NgbModal } from \"@ng-bootstrap/ng-bootstrap\";\r\nimport { CustomerListComponent } from \"../customer-list/customer-list.component\";\r\nimport { map } from 'rxjs/operators';\r\nimport { forkJoin, catchError, of } from 'rxjs';\r\n@Component({\r\n  selector: \"app-lead-list\",\r\n  templateUrl: \"./lead-list.component.html\",\r\n  styleUrls: [\"./lead-list.component.scss\"],\r\n  providers: [\r\n    { provide: DateAdapter, useClass: MomentDateAdapter, deps: [MAT_DATE_LOCALE] },\r\n    { provide: MAT_DATE_FORMATS, useValue: MY_FORMATS },\r\n  ]\r\n})\r\n\r\nexport class LeadListComponent implements OnInit {\r\n  @ViewChild(MaterialTableViewComponent) matTable: MaterialTableViewComponent;\r\n\r\n  ELEMENT_COL = JSON.parse(JSON.stringify(LeadCol));\r\n  displayedColumns = JSON.parse(JSON.stringify(LeadDisplayCol));\r\n\r\n  LeadList: any[] = [];\r\n  LeadForm: FormGroup;\r\n  isTableView: boolean = true\r\n  @Output() selectedUser = new EventEmitter();\r\n  @Input() isPopup: boolean = false;\r\n  show: boolean = false\r\n  statusOption: any[] = []\r\n  sourceOption: any[] = []\r\n  productOption: any[] = []\r\n  constructor(\r\n    private router: Router,\r\n    private cdf: ChangeDetectorRef,\r\n    private LeadListService: LeadListService,\r\n    private masterDataService: MasterDataService,\r\n    private productService: ProductDataService,\r\n    private modalService: NgbModal\r\n  ) {\r\n    this.loadForm();\r\n  }\r\n  ngOnInit(): void {\r\n    this.show = true\r\n  }\r\n  ngAfterViewInit() {\r\n    this.getMaster()\r\n    this.getList();\r\n  }\r\n  getMaster() {\r\n    forkJoin([\r\n      this.getStatus(),\r\n      this.getSource(),\r\n      this.getProduct(),\r\n    ]).toPromise().then((res: any) => {\r\n      if (res) {\r\n        this.statusOption = res[0]\r\n        this.sourceOption = res[1]\r\n        this.productOption = res[2]\r\n        this.cdf.detectChanges()\r\n      }\r\n    })\r\n  }\r\n  loadForm() {\r\n    this.LeadForm = new FormGroup({\r\n      campaignName: new FormControl(null),\r\n      existingCustomerId: new FormControl(null),\r\n      existingCustomerName: new FormControl({ value: null, disabled: true }),\r\n      contactName: new FormControl(null),\r\n      leadId: new FormControl(null),\r\n      openDateStr: new FormControl(null),\r\n      productId: new FormControl(null),\r\n      sourceCode: new FormControl(null),\r\n      statusCode: new FormControl(null),\r\n    });\r\n  }\r\n\r\n  navigateToDetail(data, id?: string, secondaryId?: string) {\r\n    this.router.navigate([\"/lead/lead-detail\"], {\r\n      queryParams: {\r\n        pageStatus: data,\r\n        pageId: id,\r\n        pageSecondaryId: secondaryId,\r\n        leadId: id,\r\n      },\r\n      // skipLocationChange: true, replaceUrl: true\r\n    });\r\n  }\r\n  getStatus() {\r\n    return this.masterDataService\r\n      .getDataByType(\"LEAD_STATUS\").pipe(map(x => this.getFormatOpt(x)), catchError(e => {\r\n        return of([])\r\n      }))\r\n    // this.masterDataService\r\n    //   .getDataByType(\"LEAD_STATUS\")\r\n    //   .toPromise()\r\n    //   .then((res: any) => {\r\n    //     console.log(res);\r\n    //     if (res) {\r\n    //       this.statusOption = res.map((x) => {\r\n    //         return { code: x.codeId, value: x.codeName };\r\n    //       });\r\n    //       console.log(this.statusOption);\r\n    //       this.cdf.detectChanges();\r\n    //     }\r\n    //   });\r\n\r\n\r\n  }\r\n  getSource() {\r\n\r\n    return this.masterDataService\r\n      .getDataByType(\"LEAD_SOURCE\").pipe(map(x => this.getFormatOpt(x)), catchError(e => {\r\n        return of([])\r\n      }))\r\n    // this.masterDataService\r\n    //   .getDataByType(\"LEAD_SOURCE\")\r\n    //   .toPromise()\r\n    //   .then((res: any) => {\r\n    //     console.log(res);\r\n    //     if (res) {\r\n    //       this.sourceOption = res.map((x) => {\r\n    //         return { code: x.codeId, value: x.codeName };\r\n    //       });\r\n    //       console.log(this.sourceOption);\r\n    //       this.cdf.detectChanges();\r\n    //     }\r\n    //   });\r\n  }\r\n  getProduct() {\r\n    return this.productService.getAll().pipe(map(x => this.getFormatOpt(x)), catchError(e => {\r\n      return of([])\r\n    }))\r\n    // this.productService\r\n    //   .getAll()\r\n    //   .toPromise()\r\n    //   .then((res: any) => {\r\n    //     console.log(res);\r\n    //     if (res) {\r\n    //       this.productOption = res.map((x) => {\r\n    //         return { code: x.id, value: x.name };\r\n    //       });\r\n    //       console.log(this.productOption);\r\n    //       this.cdf.detectChanges();\r\n    //     }\r\n    //   });\r\n  }\r\n\r\n  getList() {\r\n    this.LeadListService.getLeadList(this.LeadForm.getRawValue())\r\n      .toPromise()\r\n      .then((res: any) => {\r\n        if (res) {\r\n          console.log(\"RES\", res)\r\n          this.LeadList = res\r\n          this.cdf.detectChanges();\r\n          this.matTable.reChangeData();\r\n        }\r\n      });\r\n  }\r\n  getFormatOpt(res) {\r\n    return res.map(x => {\r\n      return { 'code': x.codeId || x.id, 'value': (x.codeName || x.codeValue) || x.name }\r\n    })\r\n  }\r\n  get selected() {\r\n    let user;\r\n    if (this.matTable) {\r\n      user = this.matTable.selection.selected[0];\r\n    }\r\n    return user ? user : { id: 0 };\r\n  }\r\n\r\n  rowSelected(event) {\r\n    this.selectedUser.emit(event);\r\n  }\r\n\r\n  cancel() {\r\n    this.LeadForm.reset();\r\n    this.getList();\r\n  }\r\n\r\n  actionBtn(event) {\r\n    if (event.cmd == \"edit\") {\r\n      this.navigateToDetail(\"edit\", event.data.leadId, event.data.individualId);\r\n    }\r\n    if (event.cmd == \"view\") {\r\n      this.navigateToDetail(\"view\", event.data.leadId, event.data.individualId);\r\n    }\r\n  }\r\n\r\n  viewExistingCustomer() {\r\n    let modalRef;\r\n    modalRef = this.modalService.open(CustomerListComponent, { size: 'xl', backdrop: false });\r\n    modalRef.componentInstance.isPopup = true\r\n    modalRef.result.then(() => { }, (res) => {\r\n      if (res) {\r\n        if (res.type == \"save\") {\r\n          let customer = res.data\r\n          console.log('onDidDismiss =====> ', customer);\r\n          this.LeadForm.controls.existingCustomerId.setValue(customer.customerId)\r\n          this.LeadForm.controls.existingCustomerName.setValue(customer.name)\r\n        }\r\n      }\r\n    })\r\n\r\n\r\n  }\r\n\r\n  //for view\r\n  isControlValid(controlName: string): boolean {\r\n    const control = this.LeadForm.controls[controlName];\r\n    return control.valid && (control.dirty || control.touched);\r\n  }\r\n\r\n  isControlInvalid(controlName: string): boolean {\r\n    const control = this.LeadForm.controls[controlName];\r\n    return control.invalid && (control.dirty || control.touched);\r\n  }\r\n\r\n  controlHasError(validation, controlName): boolean {\r\n    const control = this.LeadForm.controls[controlName];\r\n    return control.hasError(validation) && (control.dirty || control.touched);\r\n  }\r\n\r\n  isControlTouched(controlName): boolean {\r\n    const control = this.LeadForm.controls[controlName];\r\n    return control.dirty || control.touched;\r\n  }\r\n}\r\n","import { COLTYPE, TableCol } from '../../_metronic/shared/crud-table/components/material-table-view/table-dto'\r\nexport const LeadCol: TableCol[] = [\r\n  {\r\n    title: \"Lead ID\",\r\n    type: COLTYPE.FEILD,\r\n    field: \"leadId\"\r\n  },\r\n  {\r\n    title: \"Lead Name\",\r\n    type: COLTYPE.FEILD,\r\n    field: \"contactName\"\r\n  },\r\n  {\r\n    title: \"Product\",\r\n    type: COLTYPE.FEILD,\r\n    field: \"productName\"\r\n  },\r\n  {\r\n    title: \"Existing Customer\",\r\n    type: COLTYPE.FEILD,\r\n    field: \"existingCustomerName\"\r\n  },\r\n\r\n  {\r\n    title: \"Source\",\r\n    type: COLTYPE.FEILD,\r\n    field: \"sourceValue\"\r\n  },\r\n  {\r\n    title: \"Open Date\",\r\n    type: COLTYPE.FEILD,\r\n    field: \"openedDate\",\r\n    isFromatDate:true\r\n  },\r\n  {\r\n    title: \"Campaign Name\",\r\n    type: COLTYPE.FEILD,\r\n    field: \"campaignName\",\r\n  },\r\n  {\r\n    title: \"Status\",\r\n    type: COLTYPE.FEILD,\r\n    field: \"statusCode\",\r\n    isLeadStatus: true\r\n  },\r\n  {\r\n    title: \"Actions\",\r\n    type: COLTYPE.ACTION,\r\n    field: \"actions\",\r\n    btn: {\r\n      edit: true,\r\n    }\r\n  },\r\n]\r\n\r\nexport const LeadDisplayCol: string[] = [\r\n  \"leadId\",\r\n  \"contactName\",\r\n  \"productName\",\r\n  \"existingCustomerName\",\r\n  \"sourceValue\",\r\n  \"openedDate\",\r\n  \"campaignName\",\r\n  \"statusCode\",\r\n  \"actions\",\r\n]\r\n\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { LeadListComponent } from './lead-list.component';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { InlineSVGModule } from 'ng-inline-svg';\r\nimport { CRUDTableModule } from 'src/app/_metronic/shared/crud-table';\r\nimport { LeadListShareModule } from './lead-list.share.module';\r\nimport { RouterModule } from '@angular/router';\r\nimport { NgbDatepickerModule } from '@ng-bootstrap/ng-bootstrap';\r\nimport { NgSelectModule } from '@ng-select/ng-select';\r\n\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    InlineSVGModule,\r\n    CRUDTableModule,\r\n    NgbDatepickerModule,\r\n    LeadListShareModule,\r\n    NgSelectModule,\r\n    RouterModule.forChild([\r\n      {\r\n        path: '',\r\n        component: LeadListComponent,\r\n      },\r\n    ]),\r\n\r\n  ]\r\n})\r\nexport class LeadListModule { }\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { RouterModule } from '@angular/router';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { InlineSVGModule } from 'ng-inline-svg';\r\nimport { CRUDTableModule } from '../../_metronic/shared/crud-table';\r\nimport { LeadListComponent } from './lead-list.component';\r\nimport { MatRadioModule } from '@angular/material/radio';\r\nimport { MatDatepickerModule } from '@angular/material/datepicker';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { NgSelectModule } from '@ng-select/ng-select';\r\nimport { StaticPagesModule } from '../static-pages/static-pages.module';\r\nimport { NgbModalModule } from '@ng-bootstrap/ng-bootstrap';\r\nimport { CustomerListShareModule } from '../customer-list/customer-list.share.module';\r\n\r\n\r\n\r\n@NgModule({\r\n  declarations: [LeadListComponent],\r\n  exports: [LeadListComponent],\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    InlineSVGModule,\r\n    CRUDTableModule,\r\n    MatRadioModule, \r\n    MatDatepickerModule,\r\n    MatInputModule,\r\n    NgbModalModule,\r\n    StaticPagesModule,\r\n    NgSelectModule,\r\n    CustomerListShareModule\r\n  ]\r\n})\r\nexport class LeadListShareModule { }\r\n","export default \"<div class=\\\"row\\\">\\r\\n    <div class=\\\"col-12\\\">\\r\\n        <div class=\\\"card card-custom gutter-b\\\">\\r\\n            <div class=\\\"card-header\\\" *ngIf=\\\"!isPopup\\\">\\r\\n                <div class=\\\"card-title\\\">\\r\\n                    <h3 class=\\\"card-label left-border-image\\\">Lead List</h3>\\r\\n                </div>\\r\\n                <div class=\\\"card-toolbar\\\">\\r\\n                    <!-- <button type=\\\"button\\\" class=\\\"btn btn-primary btn-circle\\\" (click)=\\\"navigateToDetail('create')\\\">\\r\\n                        <span class=\\\"flaticon2-plus\\\"></span>\\r\\n                    </button> -->\\r\\n                    <button type=\\\"button\\\" class=\\\"btn btn-primary ml-2\\\" style=\\\"min-width: 50px;\\\" (click)=\\\"getList()\\\">\\r\\n                        <span class=\\\"flaticon2-magnifier-tool\\\"></span>\\r\\n                    </button>\\r\\n                    <button type=\\\"button\\\" class=\\\"btn btn-primary ml-2\\\" style=\\\"min-width: 50px;\\\" (click)=\\\"cancel()\\\">\\r\\n                        <span class=\\\"\\\">Cancel</span>\\r\\n                    </button>\\r\\n                </div>\\r\\n            </div>\\r\\n            <div class=\\\"card-body px-10 py-3\\\">\\r\\n                <form action=\\\"#\\\" class=\\\"form\\\" [formGroup]=\\\"LeadForm\\\">\\r\\n                    <div class=\\\"row\\\" style=\\\"align-items: center;\\\">\\r\\n                        <div class=\\\"col-xl-4 col-sm-6\\\">\\r\\n                            <div class=\\\"form-group row\\\">\\r\\n                                <label class=\\\"col-sm-4 col-form-label\\\">Lead ID</label>\\r\\n                                <div class=\\\"col-sm-8\\\">\\r\\n                                    <input type=\\\"text\\\" class=\\\"form-control form-control-sm \\\" name=\\\"leadId\\\"\\r\\n                                        autocomplete=\\\"off\\\" [class.is-invalid]=\\\"isControlInvalid('leadId')\\\"\\r\\n                                        [class.is-valid]=\\\"isControlValid('leadId')\\\" formControlName=\\\"leadId\\\" />\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                        <div class=\\\"col-xl-4 col-sm-6\\\">\\r\\n                            <div class=\\\"form-group row\\\">\\r\\n                                <label class=\\\"col-sm-4 col-form-label\\\">Lead Name</label>\\r\\n                                <div class=\\\"col-sm-8\\\">\\r\\n                                    <input type=\\\"text\\\" class=\\\"form-control form-control-sm \\\" name=\\\"contactName\\\"\\r\\n                                        autocomplete=\\\"off\\\" [class.is-invalid]=\\\"isControlInvalid('contactName')\\\"\\r\\n                                        [class.is-valid]=\\\"isControlValid('contactName')\\\"\\r\\n                                        formControlName=\\\"contactName\\\" />\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                        <div class=\\\"col-xl-4 col-sm-6\\\">\\r\\n                            <div class=\\\"form-group row\\\">\\r\\n                                <label class=\\\"col-sm-4 col-form-label\\\">Open Date</label>\\r\\n                                <div class=\\\"col-sm-8\\\">\\r\\n                                    <div class=\\\"input-group \\\">\\r\\n                                        <input matInput class=\\\"form-control-sm date-input\\\" formControlName=\\\"openDateStr\\\"\\r\\n                                            [matDatepicker]=\\\"picker\\\" readonly>\\r\\n                                        <mat-datepicker-toggle matSuffix [for]=\\\"picker\\\"></mat-datepicker-toggle>\\r\\n                                        <mat-datepicker #picker disabled=\\\"false\\\"></mat-datepicker>\\r\\n\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                        <!-- </div>\\r\\n                    <div class=\\\"row\\\"> -->\\r\\n                        <div class=\\\"col-xl-4 col-sm-6\\\">\\r\\n                            <div class=\\\"form-group row\\\">\\r\\n                                <label class=\\\"col-sm-4 col-form-label\\\">Product</label>\\r\\n                                <div class=\\\"col-sm-8\\\">\\r\\n                                    <!-- <input type=\\\"text\\\" class=\\\"form-control form-control-sm \\\" name=\\\"productId\\\"\\r\\n                                        autocomplete=\\\"off\\\" [class.is-invalid]=\\\"isControlInvalid('productId')\\\"\\r\\n                                        [class.is-valid]=\\\"isControlValid('productId')\\\" formControlName=\\\"productId\\\" /> -->\\r\\n                                    <ng-select class=\\\"ng-custom-select\\\"\\r\\n                                        [class.is-invalid]=\\\"isControlInvalid('productId')\\\"\\r\\n                                        [class.is-valid]=\\\"isControlValid('productId')\\\" [items]=\\\"productOption\\\"\\r\\n                                        bindLabel=\\\"value\\\" bindValue=\\\"code\\\" formControlName=\\\"productId\\\">\\r\\n                                    </ng-select>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                        <div class=\\\"col-xl-4 col-sm-6\\\">\\r\\n                            <div class=\\\"form-group row\\\">\\r\\n                                <label class=\\\"col-sm-4 col-form-label\\\">Source</label>\\r\\n                                <div class=\\\"col-sm-8\\\">\\r\\n                                    <!-- <input type=\\\"text\\\" class=\\\"form-control form-control-sm \\\" name=\\\"sourceCode\\\"\\r\\n                                        autocomplete=\\\"off\\\" [class.is-invalid]=\\\"isControlInvalid('sourceCode')\\\"\\r\\n                                        [class.is-valid]=\\\"isControlValid('sourceCode')\\\" formControlName=\\\"sourceCode\\\" /> -->\\r\\n                                    <ng-select class=\\\"ng-custom-select\\\"\\r\\n                                        [class.is-invalid]=\\\"isControlInvalid('sourceCode')\\\"\\r\\n                                        [class.is-valid]=\\\"isControlValid('sourceCode')\\\" [items]=\\\"sourceOption\\\"\\r\\n                                        bindLabel=\\\"value\\\" bindValue=\\\"code\\\" formControlName=\\\"sourceCode\\\">\\r\\n                                    </ng-select>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                        <div class=\\\"col-xl-4 col-sm-6\\\">\\r\\n                            <div class=\\\"form-group row\\\">\\r\\n                                <label class=\\\"col-sm-4 col-form-label\\\">Campaign Name </label>\\r\\n                                <div class=\\\"col-sm-8\\\">\\r\\n                                    <input type=\\\"text\\\" class=\\\"form-control form-control-sm \\\" name=\\\"campaignName\\\"\\r\\n                                        autocomplete=\\\"off\\\" [class.is-invalid]=\\\"isControlInvalid('campaignName')\\\"\\r\\n                                        [class.is-valid]=\\\"isControlValid('campaignName')\\\"\\r\\n                                        formControlName=\\\"campaignName\\\" />\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                        <!-- </div>\\r\\n                    <div class=\\\"row\\\"> -->\\r\\n\\r\\n                        <div class=\\\"col-xl-4 col-sm-6\\\">\\r\\n                            <div class=\\\"form-group row\\\">\\r\\n                                <label class=\\\"col-sm-4 col-form-label\\\">Existing Customer</label>\\r\\n                                <div class=\\\"col-sm-8\\\" (click)=\\\"viewExistingCustomer()\\\">\\r\\n                                    <input type=\\\"text\\\" class=\\\"form-control form-control-sm \\\" name=\\\"existingCustomerName\\\"\\r\\n                                        autocomplete=\\\"off\\\" [class.is-invalid]=\\\"isControlInvalid('existingCustomerName')\\\"\\r\\n                                        [class.is-valid]=\\\"isControlValid('existingCustomerName')\\\"\\r\\n                                        formControlName=\\\"existingCustomerName\\\" readonly />\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                        <div class=\\\"col-xl-4 col-sm-6\\\">\\r\\n                            <div class=\\\"form-group row\\\">\\r\\n                                <label class=\\\"col-sm-4 col-form-label\\\">Status</label>\\r\\n                                <div class=\\\"col-sm-8\\\">\\r\\n                                    <ng-select class=\\\"ng-custom-select\\\"\\r\\n                                        [class.is-invalid]=\\\"isControlInvalid('statusCode')\\\"\\r\\n                                        [class.is-valid]=\\\"isControlValid('statusCode')\\\" [items]=\\\"statusOption\\\"\\r\\n                                        bindLabel=\\\"value\\\" bindValue=\\\"code\\\" formControlName=\\\"statusCode\\\">\\r\\n                                    </ng-select>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </form>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n<div class=\\\"row\\\">\\r\\n    <div class=\\\"col-12\\\">\\r\\n        <div class=\\\"card card-custom gutter-b\\\">\\r\\n            <div class=\\\"card-body customer-card-body\\\" *ngIf=\\\"show\\\">\\r\\n                <ng-container *ngIf=\\\"isTableView;else cardView\\\">\\r\\n                    <app-material-table-view [data]=\\\"LeadList\\\" [colum]=\\\"ELEMENT_COL\\\"\\r\\n                        [displayedColumns]=\\\"displayedColumns\\\" (emitter)=\\\"actionBtn($event)\\\"\\r\\n                        (rowselect)=\\\"rowSelected($event)\\\" [selectable]=\\\"isPopup\\\">\\r\\n                    </app-material-table-view>\\r\\n                </ng-container>\\r\\n                <ng-template #cardView>\\r\\n\\r\\n                </ng-template>\\r\\n            </div>\\r\\n\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\";"],"names":[],"sourceRoot":"webpack:///"}