{"version":3,"file":"default-src_app_pages_lead-detail_campaign-list_campaign-list_component_ts.js","mappings":"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","sources":["./src/app/pages/lead-detail/campaign-list/campaign-list.component.ts","./src/app/pages/lead-detail/lead-detail.service.ts"],"sourcesContent":["import { ChangeDetectorRef, Component, EventEmitter, Input, OnInit, Output, ViewChild } from '@angular/core';\nimport { FormControl, FormGroup } from '@angular/forms';\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\nimport { MaterialTableViewComponent } from 'src/app/_metronic/shared/crud-table/components/material-table-view/material-table-view.component';\nimport { CampaignCol, CampaignDisplayCol } from '../FNA-list.const';\nimport { LeadDetailService } from '../lead-detail.service';\n\n@Component({\n  selector: 'app-campaign-list',\n  templateUrl: './campaign-list.component.html',\n  styleUrls: ['./campaign-list.component.scss']\n})\nexport class CampaignListComponent implements OnInit {\n  campaignForm: FormGroup;\n  campaignList: any = []\n  @Input() isPopup: boolean = false\n  @Output() selectedCampaign = new EventEmitter();\n  @ViewChild(MaterialTableViewComponent) matTable: MaterialTableViewComponent\n  ELEMENT_COL = JSON.parse(JSON.stringify(CampaignCol))\n  displayedColumns = JSON.parse(JSON.stringify(CampaignDisplayCol))\n\n  constructor(private LeadDetailService: LeadDetailService, private cdf: ChangeDetectorRef, private modalService: NgbModal) { }\n\n  ngOnInit(): void {\n    this.loadForm()\n    this.getList()\n  }\n  getList() {\n    this.LeadDetailService.getCampaignList(this.campaignForm.value).toPromise().then((res: any) => {\n      if (res) {\n        this.campaignList = res\n        this.cdf.detectChanges()\n        this.matTable.reChangeData()\n      }\n    })\n  }\n  cancel() {\n    this.modalService.dismissAll()\n  }\n  loadForm() {\n    this.campaignForm = new FormGroup({\n      \"cpmNumber\": new FormControl(null),\n      \"cpmName\": new FormControl(null),\n    })\n  }\n  rowSelected(event) {\n    this.selectedCampaign.emit(event)\n  }\n  closeModal() {\n    this.modalService.dismissAll()\n  }\n  nextProd() {\n    if (this.selected.cpmNumber) {\n      this.modalService.dismissAll({ data: this.selected, type: \"save\" })\n    }\n  }\n  get selected() {\n    let campaign\n    if (this.matTable) {\n      campaign = this.matTable.selection.selected[0]\n    }\n    return campaign ? campaign : { cpmNumber: 0 }\n  }\n\n  //for view\n  isControlValid(controlName: string): boolean {\n    const control = this.campaignForm.controls[controlName];\n    return control.valid && (control.dirty || control.touched);\n  }\n\n  isControlInvalid(controlName: string): boolean {\n    const control = this.campaignForm.controls[controlName];\n    return control.invalid && (control.dirty || control.touched);\n  }\n\n  controlHasError(validation, controlName): boolean {\n    const control = this.campaignForm.controls[controlName];\n    return control.hasError(validation) && (control.dirty || control.touched);\n  }\n}\n","import { HttpClient } from \"@angular/common/http\";\nimport { Injectable } from \"@angular/core\";\nimport { SearchDropdownInnerComponent } from \"src/app/_metronic/partials/layout/extras/dropdown-inner/search-dropdown-inner/search-dropdown-inner.component\";\nimport { environment } from \"../../../environments/environment\";\nimport { BizOperationService } from \"../../core/biz.operation.service\";\nimport { Lead } from \"./lead.dto\";\n\n\nconst API_LEAD_URL = `${environment.apiUrl}/lead`;\nconst API_CAMPAIGN_URL = `${environment.apiUrl}/campaign`;\nconst API_LEAD_SOURCE_URL = `${environment.apiUrl}/leadSource`;\nconst API_LEAD_SCORE_URL = `${environment.apiUrl}/leadSource/score`;\nconst API_LEAD_QUALITY_URL = `${environment.apiUrl}/leadQuality`;\nconst API_VALIDITY_URL = `${environment.apiUrl}/validity-period/filter`;\nconst API_EXISTING_CUSTOMER_URL = `${environment.apiUrl}/customer/checkExistingCustomer`;\nconst API_EXISTING_PROSPECT_URL = `${environment.apiUrl}/customer/checkExistingProspect`;\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LeadDetailService extends BizOperationService<Lead, number>{\n  constructor(protected httpClient: HttpClient) {\n    super(httpClient, API_LEAD_URL);\n  }\n  updateLeadStatus(postData, oldId) {\n    return this.httpClient.put(API_LEAD_URL + \"/\" + oldId + \"/status\", postData)\n  }\n  getCampaignList(search) {\n    let url = API_CAMPAIGN_URL + \"?\"\n    if (search.cpmNumber) {\n      url = url + \"cpmNumber=\" + search.cpmNumber + \"&\"\n    } if (search.cpmName) {\n      url = url + \"cpmName=\" + search.cpmName + \"&\"\n    }\n    // console.log(url);\n    return this.httpClient.get(url)\n  }\n  getLeadSource() {\n    return this.httpClient.get(API_LEAD_SOURCE_URL)\n  }\n  getLeadQuality(channel: string) {\n    return this.httpClient.get(API_LEAD_QUALITY_URL + \"?distributionChannelCode=\" + channel)\n  }\n  getLeadScore(sourceCode: string, channel: string) {\n    return this.httpClient.get(API_LEAD_SCORE_URL + \"?sourceCode=\" + sourceCode + \"&distributionChannelCode=\" + channel)\n  }\n  getValidityPeriod(leadSource, productId) {\n    return this.httpClient.get(API_VALIDITY_URL + \"?leadSource=\" + leadSource + \"&\" + \"productId=\" + productId)\n  }\n  checkLead(postData) {\n    return this.httpClient.post(API_LEAD_URL + \"/check\", postData)\n  }\n  getCampaignIdByName(campaignName: string) {\n    return this.httpClient.get(API_CAMPAIGN_URL + \"?cpmName=\" + campaignName)\n  }\n  getCampaignNameById(campaignId: string) {\n    return this.httpClient.get(API_CAMPAIGN_URL + \"?cpmNumber=\" + campaignId)\n  }\n  checkExistingCustomer(postData: any) {\n    return this.httpClient.post(API_EXISTING_CUSTOMER_URL, postData)\n  }\n  checkExistingProspect(postData: any) {\n    return this.httpClient.post(API_EXISTING_PROSPECT_URL, postData)\n  }\n  createLead(postData: any) {\n    return this.httpClient.post(API_LEAD_URL, postData)\n  }\n}\n"],"names":[],"sourceRoot":"webpack:///"}