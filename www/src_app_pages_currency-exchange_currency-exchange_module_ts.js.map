{"version":3,"file":"src_app_pages_currency-exchange_currency-exchange_module_ts.js","mappings":"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","sources":["./src/app/pages/currency-exchange/add-form/currency-add-form.component.ts","./src/app/pages/currency-exchange/currency-exchange.component.ts","./src/app/pages/currency-exchange/currency-exchange.module.ts","./src/app/pages/currency-exchange/currency.const.ts","./src/app/pages/currency-exchange/add-form/currency-add-form.component.html","./src/app/pages/currency-exchange/currency-exchange.component.html"],"sourcesContent":["import { AfterViewInit, ChangeDetectorRef, Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\r\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport { MomentDateAdapter } from '@angular/material-moment-adapter';\r\nimport { DateAdapter, MAT_DATE_FORMATS, MAT_DATE_LOCALE } from '@angular/material/core';\r\nimport { NgbActiveModal, NgbModal } from '@ng-bootstrap/ng-bootstrap';\r\nimport { map } from 'rxjs/operators';\r\nimport { MY_FORMATS } from 'src/app/core/is-json';\r\nimport { validateAllFields } from '../../../core/valid-all-feild';\r\nimport { MasterDataService } from '../../../modules/master-data/master-data.service';\r\nimport * as moment from \"moment\";\r\n@Component({\r\n  selector: 'app-currency-add-form',\r\n  templateUrl: './currency-add-form.component.html',\r\n  styleUrls: ['./currency-add-form.component.scss'],\r\n  providers: [\r\n    { provide: DateAdapter, useClass: MomentDateAdapter, deps: [MAT_DATE_LOCALE] },\r\n    { provide: MAT_DATE_FORMATS, useValue: MY_FORMATS },\r\n  ]\r\n})\r\nexport class CurrencyAddFormComponent implements OnInit, AfterViewInit {\r\n\r\n  formGroup: FormGroup\r\n  currencyType: string[] = []\r\n  id: number\r\n  @Input() isModal: boolean = false\r\n  @Input() isEdit: boolean = false\r\n  oldData: any = {}\r\n  @Output() formSubmit = new EventEmitter();\r\n  constructor(private masterDataService: MasterDataService, public modal: NgbModal, private cdf: ChangeDetectorRef) { }\r\n\r\n  ngOnInit() {\r\n    this.formGroup = new FormGroup({\r\n      type: new FormControl(this.oldData.type || \"usd\", [Validators.required]),\r\n      amount: new FormControl(this.oldData.amount || null, [Validators.required]),\r\n      date: new FormControl(this.oldData.date ? moment(this.oldData.date) : null, [Validators.required]),\r\n    })\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    this.getType()\r\n  }\r\n  // type\r\n  // amount\r\n\r\n  getType() {\r\n    this.masterDataService.getDataByType(\"CURRENCY_TYPE\").pipe(map((res: any) => {\r\n      return res.map(x => x.codeId)\r\n    })).toPromise().then((res: any) => {\r\n      if (res) {\r\n        this.currencyType = res\r\n        this.cdf.detectChanges()\r\n      }\r\n    })\r\n  }\r\n\r\n  isControlValid(controlName: string, type?: string): boolean {\r\n    const control = this.formGroup.controls[controlName];\r\n    return control.valid && (control.dirty || control.touched);\r\n  }\r\n\r\n  isControlInvalid(controlName: string, type?: string): boolean {\r\n    const control = this.formGroup.controls[controlName];\r\n    return control.invalid && (control.dirty || control.touched);\r\n  }\r\n\r\n  controlHasError(validation, controlName, type?: string): boolean {\r\n    const control = this.formGroup.controls[controlName];\r\n    return control.hasError(validation) && (control.dirty || control.touched);\r\n  }\r\n\r\n  isControlTouched(controlName, type?: string): boolean {\r\n    const control = this.formGroup.controls[controlName];\r\n    return control.dirty || control.touched;\r\n  }\r\n\r\n  saveData() {\r\n    if (this.formGroup.valid) {\r\n      if (this.isModal) {\r\n        let date=moment(this.formGroup.value.date)\r\n        this.formGroup.controls['date'].setValue(date)\r\n        console.log(( this.formGroup.value));\r\n        \r\n        this.modal.dismissAll({ data: { ...this.formGroup.value, id: this.id }, cmd: 'save' })\r\n      } else {\r\n        this.formSubmit.emit({ ...this.formGroup.value })\r\n      }\r\n    } else {\r\n      validateAllFields(this.formGroup)\r\n    }\r\n  }\r\n\r\n}\r\n","import { AfterViewInit, ChangeDetectorRef, Component, OnInit, ViewChild } from '@angular/core';\r\nimport { FormControl, FormGroup } from '@angular/forms';\r\nimport { MomentDateAdapter } from '@angular/material-moment-adapter';\r\nimport { DateAdapter, MAT_DATE_FORMATS, MAT_DATE_LOCALE } from '@angular/material/core';\r\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\r\nimport { MY_FORMATS } from 'src/app/core/is-json';\r\nimport { AlertService } from 'src/app/modules/loading-toast/alert-model/alert.service';\r\nimport { MaterialTableViewComponent } from '../../_metronic/shared/crud-table/components/material-table-view/material-table-view.component';\r\nimport { CurrencyAddFormComponent } from './add-form/currency-add-form.component';\r\nimport { CurrencyExchange, CurrencyExchangeService } from './currency-exchange.service';\r\nimport { CurrencyCol, CurrencyDisplayCol } from './currency.const';\r\n@Component({\r\n  selector: 'app-currency-exchange',\r\n  templateUrl: './currency-exchange.component.html',\r\n  styleUrls: ['./currency-exchange.component.scss'],\r\n  providers: [\r\n    { provide: DateAdapter, useClass: MomentDateAdapter, deps: [MAT_DATE_LOCALE] },\r\n    { provide: MAT_DATE_FORMATS, useValue: MY_FORMATS },\r\n  ]\r\n})\r\nexport class CurrencyExChangeComponent implements OnInit {\r\n  @ViewChild(MaterialTableViewComponent) matTable: MaterialTableViewComponent\r\n  currencyList: CurrencyExchange[] = []\r\n  ELEMENT_COL = JSON.parse(JSON.stringify(CurrencyCol))\r\n  displayedColumns = JSON.parse(JSON.stringify(CurrencyDisplayCol))\r\n  exchangeForm: FormGroup\r\n  constructor(private currencyService: CurrencyExchangeService, private cdf: ChangeDetectorRef, \r\n    private modalCrl: NgbModal, private alertService: AlertService) {\r\n\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.loadForm()\r\n  }\r\n  ngAfterViewInit() {\r\n\r\n    this.getData()\r\n  }\r\n  loadForm() {\r\n    this.exchangeForm = new FormGroup({\r\n      date: new FormControl(null),\r\n      currency: new FormControl('usd'),\r\n    })\r\n  }\r\n  cancel() {\r\n    this.exchangeForm.reset();\r\n    this.getData();\r\n  }\r\n  getData() {\r\n    // console.log(this.matTable);\r\n\r\n    // this.currencyService.findAll().toPromise().then((res: any) => {\r\n    //   if (res) {\r\n    //     this.currencyList = res\r\n    //     this.cdf.detectChanges()\r\n    //     this.matTable.reChangeData()\r\n    //   }\r\n    // })\r\n    this.currencyService.getList(this.exchangeForm.value).toPromise().then((res: any) => {\r\n      if (res) {\r\n        this.currencyList = res\r\n        this.cdf.detectChanges()\r\n        this.matTable.reChangeData()\r\n      }\r\n    })\r\n\r\n  }\r\n  addData() {\r\n    const modalRef = this.modalCrl.open(CurrencyAddFormComponent, { size: 'md', backdrop: false });\r\n    modalRef.componentInstance.isModal = true\r\n    modalRef.result.then(() => { }, (res) => {\r\n      if (res) {\r\n        if (res.cmd == 'save') {\r\n          this.saveData(res.data)\r\n        }\r\n      }\r\n    })\r\n  }\r\n\r\n  saveData(event: any) {\r\n    let postData = event\r\n    console.log(postData);\r\n    this.currencyService.save(postData).toPromise().then((res: any) => {\r\n      if (res) {\r\n        this.getData()\r\n        this.alertService.activate('This record was created', 'Success Message');\r\n      }\r\n    })\r\n  }\r\n\r\n  updateData(postData: any) {\r\n    console.log('UPDATE', postData);\r\n    this.currencyService.update(postData.id, postData).toPromise().then((res: any) => {\r\n      if (res) {\r\n        this.getData()\r\n        this.alertService.activate('This record was updated', 'Success Message');\r\n      }\r\n    })\r\n  }\r\n\r\n  editData(data) {\r\n    const modalRef = this.modalCrl.open(CurrencyAddFormComponent, { size: 'md', backdrop: false });\r\n    modalRef.componentInstance.oldData = data\r\n    modalRef.componentInstance.id = data.id\r\n    modalRef.componentInstance.isModal = true\r\n    modalRef.componentInstance.isEdit = true\r\n    modalRef.result.then(() => { }, (res) => {\r\n\r\n      if (res) {\r\n        if (res.cmd == 'save') {\r\n          this.updateData(res.data)\r\n        }\r\n      }\r\n    })\r\n  }\r\n\r\n  actionBtn(event) {\r\n    if (event.cmd == 'edit') {\r\n      this.editData(event.data)\r\n    }\r\n    else if (event.cmd == 'delete') {\r\n      this.deleleData(event.data.id)\r\n    }\r\n  }\r\n\r\n  deleleData(id) {\r\n    this.alertService.activate('Are you sure you want to delete?', 'Warning Message').then(result => {\r\n      if (result) {\r\n        this.currencyService.delete(id).toPromise().then((res) => {\r\n          if (res) {\r\n            let index = this.currencyList.findIndex(x => x.id == id)\r\n            if (index >= 0) {\r\n              this.currencyList.splice(index, 1)\r\n              this.matTable.reChangeData()\r\n              this.alertService.activate('This record was deleted', 'Success Message').then(result => {\r\n\r\n              });\r\n            }\r\n          }\r\n        })\r\n      }\r\n    });\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { CurrencyExChangeComponent } from './currency-exchange.component';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { NgbModalModule, NgbModule } from '@ng-bootstrap/ng-bootstrap';\r\nimport { FormComponentModule } from '../form-component/form-component.module';\r\nimport { RouterModule } from '@angular/router';\r\nimport { CurrencyAddFormComponent } from './add-form/currency-add-form.component';\r\nimport { CRUDTableModule } from '../../_metronic/shared/crud-table';\r\nimport { MatDatepickerModule } from '@angular/material/datepicker';\r\n\r\n@NgModule({\r\n  declarations: [CurrencyExChangeComponent, CurrencyAddFormComponent],\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    NgbModalModule,\r\n    NgbModule,\r\n    MatDatepickerModule,\r\n    FormComponentModule,\r\n    CRUDTableModule,\r\n    RouterModule.forChild([\r\n      {\r\n        path: '',\r\n        component: CurrencyExChangeComponent,\r\n      },\r\n    ]),\r\n  ]\r\n})\r\nexport class CurrencyExChangeModule { }\r\n","import { COLTYPE, TableCol } from '../../_metronic/shared/crud-table/components/material-table-view/table-dto'\r\nexport const CurrencyCol: TableCol[] = [\r\n\r\n  {\r\n    title: \"Date\",\r\n    type: COLTYPE.FEILD,\r\n    field: \"date\",\r\n    isFromatDate: true\r\n  },\r\n  {\r\n    title: \"Currency\",\r\n    type: COLTYPE.FEILD,\r\n    field: \"type\",\r\n    isUpper: true\r\n  },\r\n  {\r\n    title: \"Rate\",\r\n    type: COLTYPE.FEILD,\r\n    field: \"amount\",\r\n  },\r\n  {\r\n    title: \"Actions\",\r\n    type: COLTYPE.ACTION,\r\n    field: \"actions\",\r\n    btn: {\r\n      edit: true,\r\n      delete: true\r\n    }\r\n  },\r\n\r\n]\r\n\r\nexport const CurrencyDisplayCol: string[] = [\r\n  // \"id\",\r\n  \"date\",\r\n  \"type\",\r\n  \"amount\",\r\n  \"actions\",\r\n]","export default \"<div class=\\\"card card-custom gutter-b\\\">\\r\\n    <div class=\\\"card-header\\\">\\r\\n        <div class=\\\"card-title\\\">\\r\\n            <h3 class=\\\"card-label\\\">{{ isEdit ? 'Edit' : 'Create' }} Currency Exchange</h3>\\r\\n        </div>\\r\\n    </div>\\r\\n    <div class=\\\"card-body\\\">\\r\\n        <form action=\\\"#\\\" class=\\\"form form-label-right\\\" [formGroup]=\\\"formGroup\\\" (ngSubmit)=\\\"saveData()\\\">\\r\\n            <!-- type -->\\r\\n            <div class=\\\"form-group \\\">\\r\\n                <label class=\\\"form-label\\\">Date</label>\\r\\n                <div class=\\\"input-group \\\">\\r\\n                    <input matInput class=\\\"form-control form-control-sm date-input\\\" placeholder=\\\"Date\\\" formControlName=\\\"date\\\" [matDatepicker]=\\\"picker\\\" readonly>\\r\\n                    <mat-datepicker-toggle matSuffix [for]=\\\"picker\\\" style=\\\"z-index: 99999;\\\"></mat-datepicker-toggle>\\r\\n                    <mat-datepicker #picker disabled=\\\"false\\\" style=\\\"z-index: 99999;\\\"></mat-datepicker>\\r\\n\\r\\n                </div>\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"form-group \\\">\\r\\n                <label class=\\\"form-label\\\">Currency</label>\\r\\n                <select class=\\\"form-control form-control-sm \\\" name=\\\"title\\\" placeholder=\\\"Currency Type\\\" autocomplete=\\\"off\\\" [class.is-invalid]=\\\"isControlInvalid('type')\\\" [class.is-valid]=\\\"isControlValid('type')\\\" formControlName=\\\"type\\\">\\r\\n          <option value=\\\"usd\\\">USD</option>\\r\\n          <!-- <option *ngFor=\\\"let item of currencyType\\\" value=\\\"{{item}}\\\">{{item | uppercase}}</option> -->\\r\\n        </select>\\r\\n\\r\\n            </div>\\r\\n            <!-- type -->\\r\\n\\r\\n            <!-- Amount -->\\r\\n            <div class=\\\"form-group \\\">\\r\\n                <label class=\\\"form-label\\\">Rate</label>\\r\\n                <input type=\\\"number\\\" class=\\\"form-control form-control-sm \\\" name=\\\"amount\\\" placeholder=\\\"Rate\\\" autocomplete=\\\"off\\\" [class.is-invalid]=\\\"isControlInvalid('amount')\\\" [class.is-valid]=\\\"isControlValid('amount')\\\" formControlName=\\\"amount\\\">\\r\\n\\r\\n            </div>\\r\\n            <!-- Amount -->\\r\\n            <div class=\\\"form-group \\\">\\r\\n                <button type=\\\"button\\\" *ngIf=\\\"isModal\\\" class=\\\"btn btn-default\\\" (click)=\\\"modal.dismissAll()\\\">Close</button>\\r\\n                <button type=\\\"submit\\\" class=\\\"btn btn-primary mx-2\\\">Save</button>\\r\\n            </div>\\r\\n        </form>\\r\\n    </div>\\r\\n</div>\";","export default \"<div class=\\\"row\\\">\\r\\n    <div class=\\\"col-12\\\">\\r\\n        <div class=\\\"card card-custom\\\" style=\\\"margin-bottom: 15px;\\\">\\r\\n            <div class=\\\"card-header\\\">\\r\\n                <div class=\\\"card-title\\\">\\r\\n                    <h3 class=\\\"card-label left-border-image\\\">Exchange Rate</h3>\\r\\n                </div>\\r\\n                <div class=\\\"card-toolbar\\\">\\r\\n                    <button type=\\\"button\\\" class=\\\"btn btn-primary btn-circle\\\" (click)=\\\"addData()\\\">\\r\\n                        <span class=\\\"flaticon2-plus\\\"></span>\\r\\n                    </button>\\r\\n                    <button type=\\\"button\\\" class=\\\"btn btn-primary ml-2\\\" style=\\\"min-width: 50px;\\\" (click)=\\\"getData()\\\">\\r\\n                        <span class=\\\"flaticon2-magnifier-tool\\\"></span>\\r\\n                    </button>\\r\\n                    <button type=\\\"button\\\" class=\\\"btn btn-primary ml-2\\\" style=\\\"min-width: 50px;\\\" (click)=\\\"cancel()\\\">\\r\\n                        <span class=\\\"\\\">Cancel</span>\\r\\n                    </button>\\r\\n                </div>\\r\\n                <!-- <app-currency-add-form (formSubmit)=\\\"saveData($event)\\\" [isModal]=\\\"false\\\"></app-currency-add-form> -->\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"card-body \\\">\\r\\n                <form action=\\\"#\\\" class=\\\"form\\\" [formGroup]=\\\"exchangeForm\\\">\\r\\n                    <div class=\\\"row\\\" style=\\\"align-items: center;\\\">\\r\\n                        <div class=\\\"col-sm-6\\\">\\r\\n                            <div class=\\\"form-group row\\\">\\r\\n                                <label class=\\\"col-sm-4 col-form-label\\\">Currency</label>\\r\\n                                <div class=\\\"col-sm-8\\\">\\r\\n                                    <select class=\\\"form-control form-control-sm\\\" name=\\\"title\\\" placeholder=\\\"Currency Type\\\" autocomplete=\\\"off\\\" formControlName=\\\"currency\\\">\\r\\n                                        <option value=\\\"usd\\\">USD</option>\\r\\n\\r\\n                                    </select>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                        <div class=\\\"col-sm-6\\\">\\r\\n                            <div class=\\\"form-group row\\\">\\r\\n                                <label class=\\\"col-sm-4 col-form-label\\\">Date</label>\\r\\n                                <div class=\\\"col-sm-8\\\">\\r\\n                                    <div class=\\\"input-group \\\">\\r\\n                                        <input matInput class=\\\"form-control form-control-sm date-input\\\" formControlName=\\\"date\\\" [matDatepicker]=\\\"picker\\\" readonly>\\r\\n                                        <mat-datepicker-toggle matSuffix [for]=\\\"picker\\\"></mat-datepicker-toggle>\\r\\n                                        <mat-datepicker #picker disabled=\\\"false\\\"></mat-datepicker>\\r\\n\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </form>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n<div class=\\\"row\\\">\\r\\n    <div class=\\\"col-sm-12\\\">\\r\\n        <div class=\\\"card card-custom gutter-b\\\">\\r\\n            <div class=\\\"card card-custom customer-card-body\\\">\\r\\n                <app-material-table-view [data]=\\\"currencyList\\\" [colum]=\\\"ELEMENT_COL\\\" [displayedColumns]=\\\"displayedColumns\\\" (emitter)=\\\"actionBtn($event)\\\">\\r\\n                </app-material-table-view>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\";"],"names":[],"sourceRoot":"webpack:///"}