{"version":3,"file":"src_app_pages_currency-exchange_currency-exchange_module_ts.js","mappings":"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","sources":["./src/app/pages/currency-exchange/add-form/currency-add-form.component.ts","./src/app/pages/currency-exchange/currency-exchange.component.ts","./src/app/pages/currency-exchange/currency-exchange.module.ts","./src/app/pages/currency-exchange/currency.const.ts","./src/app/pages/currency-exchange/add-form/currency-add-form.component.html","./src/app/pages/currency-exchange/currency-exchange.component.html"],"sourcesContent":["import { AfterViewInit, ChangeDetectorRef, Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { MomentDateAdapter } from '@angular/material-moment-adapter';\nimport { DateAdapter, MAT_DATE_FORMATS, MAT_DATE_LOCALE } from '@angular/material/core';\nimport { NgbActiveModal, NgbModal } from '@ng-bootstrap/ng-bootstrap';\nimport { map } from 'rxjs/operators';\nimport { MY_FORMATS } from 'src/app/core/is-json';\nimport { validateAllFields } from '../../../core/valid-all-feild';\nimport { MasterDataService } from '../../../modules/master-data/master-data.service';\nimport * as moment from \"moment\";\n@Component({\n  selector: 'app-currency-add-form',\n  templateUrl: './currency-add-form.component.html',\n  styleUrls: ['./currency-add-form.component.scss'],\n  providers: [\n    { provide: DateAdapter, useClass: MomentDateAdapter, deps: [MAT_DATE_LOCALE] },\n    { provide: MAT_DATE_FORMATS, useValue: MY_FORMATS },\n  ]\n})\nexport class CurrencyAddFormComponent implements OnInit, AfterViewInit {\n\n  formGroup: FormGroup\n  currencyType: string[] = []\n  id: number\n  @Input() isModal: boolean = false\n  @Input() isEdit: boolean = false\n  oldData: any = {}\n  @Output() formSubmit = new EventEmitter();\n  constructor(private masterDataService: MasterDataService, public modal: NgbModal, private cdf: ChangeDetectorRef) { }\n\n  ngOnInit() {\n    this.formGroup = new FormGroup({\n      type: new FormControl(this.oldData.type || \"usd\", [Validators.required]),\n      amount: new FormControl(this.oldData.amount || null, [Validators.required]),\n      date: new FormControl(this.oldData.date ? moment(this.oldData.date) : null, [Validators.required]),\n    })\n  }\n\n  ngAfterViewInit() {\n    this.getType()\n  }\n  // type\n  // amount\n\n  getType() {\n    this.masterDataService.getDataByType(\"CURRENCY_TYPE\").pipe(map((res: any) => {\n      return res.map(x => x.codeId)\n    })).toPromise().then((res: any) => {\n      if (res) {\n        this.currencyType = res\n        this.cdf.detectChanges()\n      }\n    })\n  }\n\n  isControlValid(controlName: string, type?: string): boolean {\n    const control = this.formGroup.controls[controlName];\n    return control.valid && (control.dirty || control.touched);\n  }\n\n  isControlInvalid(controlName: string, type?: string): boolean {\n    const control = this.formGroup.controls[controlName];\n    return control.invalid && (control.dirty || control.touched);\n  }\n\n  controlHasError(validation, controlName, type?: string): boolean {\n    const control = this.formGroup.controls[controlName];\n    return control.hasError(validation) && (control.dirty || control.touched);\n  }\n\n  isControlTouched(controlName, type?: string): boolean {\n    const control = this.formGroup.controls[controlName];\n    return control.dirty || control.touched;\n  }\n\n  saveData() {\n    if (this.formGroup.valid) {\n      if (this.isModal) {\n        let date=moment(this.formGroup.value.date)\n        this.formGroup.controls['date'].setValue(date)\n        console.log(( this.formGroup.value));\n        \n        this.modal.dismissAll({ data: { ...this.formGroup.value, id: this.id }, cmd: 'save' })\n      } else {\n        this.formSubmit.emit({ ...this.formGroup.value })\n      }\n    } else {\n      validateAllFields(this.formGroup)\n    }\n  }\n\n}\n","import { AfterViewInit, ChangeDetectorRef, Component, OnInit, ViewChild } from '@angular/core';\nimport { FormControl, FormGroup } from '@angular/forms';\nimport { MomentDateAdapter } from '@angular/material-moment-adapter';\nimport { DateAdapter, MAT_DATE_FORMATS, MAT_DATE_LOCALE } from '@angular/material/core';\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\nimport { MY_FORMATS } from 'src/app/core/is-json';\nimport { AlertService } from 'src/app/modules/loading-toast/alert-model/alert.service';\nimport { MaterialTableViewComponent } from '../../_metronic/shared/crud-table/components/material-table-view/material-table-view.component';\nimport { CurrencyAddFormComponent } from './add-form/currency-add-form.component';\nimport { CurrencyExchange, CurrencyExchangeService } from './currency-exchange.service';\nimport { CurrencyCol, CurrencyDisplayCol } from './currency.const';\n@Component({\n  selector: 'app-currency-exchange',\n  templateUrl: './currency-exchange.component.html',\n  styleUrls: ['./currency-exchange.component.scss'],\n  providers: [\n    { provide: DateAdapter, useClass: MomentDateAdapter, deps: [MAT_DATE_LOCALE] },\n    { provide: MAT_DATE_FORMATS, useValue: MY_FORMATS},\n  ]\n})\nexport class CurrencyExChangeComponent implements OnInit {\n  @ViewChild(MaterialTableViewComponent) matTable: MaterialTableViewComponent\n  currencyList: CurrencyExchange[] = []\n  ELEMENT_COL = JSON.parse(JSON.stringify(CurrencyCol))\n  displayedColumns = JSON.parse(JSON.stringify(CurrencyDisplayCol))\n  exchangeForm:FormGroup\n  constructor(private currencyService: CurrencyExchangeService, private cdf: ChangeDetectorRef, private modalCrl: NgbModal,private alertService:AlertService) {\n\n  }\n\n  ngOnInit() {\n    this.loadForm()\n    this.getData()\n  }\n  // ngAfterViewInit(){\n  //   this.getData()\n  // }\n  loadForm(){\n    this.exchangeForm = new FormGroup({\n      date: new FormControl(null),\n      currency: new FormControl(null),\n    })\n  }\n\n  getData() {\n    // console.log(this.matTable);\n\n    // this.currencyService.findAll().toPromise().then((res: any) => {\n    //   if (res) {\n    //     this.currencyList = res\n    //     this.cdf.detectChanges()\n    //     this.matTable.reChangeData()\n    //   }\n    // })\n    this.currencyService.getList(this.exchangeForm.value).toPromise().then((res: any) => {\n      if (res) {\n        this.currencyList = res\n        this.cdf.detectChanges()\n        this.matTable.reChangeData()\n      }\n    })\n\n  }\n  addData(){\n    const modalRef = this.modalCrl.open(CurrencyAddFormComponent, { size: 'md', backdrop: false });\n    modalRef.componentInstance.isModal = true\n    modalRef.result.then(() => { }, (res) => {\n      if (res) {\n        if (res.cmd == 'save') {\n          this.saveData(res.data)\n        }\n      }\n    })\n  }\n\n  saveData(event: any) {\n    let postData = event\n    console.log(postData);\n    this.currencyService.save(postData).toPromise().then((res: any) => {\n      if (res) {\n        this.getData()\n        this.alertService.activate('This record was created', 'Success Message');\n      }\n    })\n  }\n\n  updateData(postData: any) {\n    console.log('UPDATE',postData);\n    this.currencyService.update(postData.id, postData).toPromise().then((res: any) => {\n      if (res) {\n        this.getData()\n        this.alertService.activate('This record was updated', 'Success Message');\n      }\n    })\n  }\n\n  editData(data) {\n    const modalRef = this.modalCrl.open(CurrencyAddFormComponent, { size: 'md', backdrop: false });\n    modalRef.componentInstance.oldData = data\n    modalRef.componentInstance.id = data.id\n    modalRef.componentInstance.isModal = true\n    modalRef.componentInstance.isEdit = true\n    modalRef.result.then(() => { }, (res) => {\n      \n      if (res) {\n        if (res.cmd == 'save') {\n          this.updateData(res.data)\n        }\n      }\n    })\n  }\n\n  actionBtn(event) {\n    if (event.cmd == 'edit') {\n      this.editData(event.data)\n    }\n    else if (event.cmd == 'delete') {\n      this.deleleData(event.data.id)\n    }\n  }\n  deleleData(id) {\n    this.currencyService.delete(id).toPromise().then((res) => {\n      if (res) {\n        let index = this.currencyList.findIndex(x => x.id == id)\n        if (index >= 0) {\n          this.currencyList.splice(index, 1)\n          this.matTable.reChangeData()\n\n        }\n      }\n    })\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { CurrencyExChangeComponent } from './currency-exchange.component';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { NgbModalModule, NgbModule } from '@ng-bootstrap/ng-bootstrap';\nimport { FormComponentModule } from '../form-component/form-component.module';\nimport { RouterModule } from '@angular/router';\nimport { CurrencyAddFormComponent } from './add-form/currency-add-form.component';\nimport { CRUDTableModule } from '../../_metronic/shared/crud-table';\nimport { MatDatepickerModule } from '@angular/material/datepicker';\n\n@NgModule({\n  declarations: [CurrencyExChangeComponent, CurrencyAddFormComponent],\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    NgbModalModule,\n    NgbModule,\n    MatDatepickerModule,\n    FormComponentModule,\n    CRUDTableModule,\n    RouterModule.forChild([\n      {\n        path: '',\n        component: CurrencyExChangeComponent,\n      },\n    ]),\n  ]\n})\nexport class CurrencyExChangeModule { }\n","import { COLTYPE, TableCol } from '../../_metronic/shared/crud-table/components/material-table-view/table-dto'\nexport const CurrencyCol: TableCol[] = [\n\n  {\n    title: \"Date\",\n    type: COLTYPE.FEILD,\n    field: \"date\",\n    isFromatDate: true\n  },\n  {\n    title: \"Currency\",\n    type: COLTYPE.FEILD,\n    field: \"type\",\n    isUpper: true\n  },\n  {\n    title: \"Rate\",\n    type: COLTYPE.FEILD,\n    field: \"amount\",\n  },\n  {\n    title: \"Action\",\n    type: COLTYPE.ACTION,\n    field: \"actions\",\n    btn: {\n      edit: true,\n      delete: true\n    }\n  },\n\n]\n\nexport const CurrencyDisplayCol: string[] = [\n  // \"id\",\n  \"date\",\n  \"type\",\n  \"amount\",\n  \"actions\",\n]","export default \"<div class=\\\"card card-custom gutter-b\\\">\\n    <div class=\\\"card-header\\\">\\n        <div class=\\\"card-title\\\">\\n            <h3 class=\\\"card-label\\\">{{ isEdit ? 'Edit' : 'Create' }} Currency Exchange</h3>\\n        </div>\\n    </div>\\n    <div class=\\\"card-body\\\">\\n        <form action=\\\"#\\\" class=\\\"form form-label-right\\\" [formGroup]=\\\"formGroup\\\" (ngSubmit)=\\\"saveData()\\\">\\n            <!-- type -->\\n            <div class=\\\"form-group \\\">\\n                <label class=\\\"form-label\\\">Date</label>\\n                <div class=\\\"input-group \\\">\\n                    <input matInput class=\\\"form-control form-control-sm date-input\\\" placeholder=\\\"Date\\\" formControlName=\\\"date\\\" [matDatepicker]=\\\"picker\\\" readonly>\\n                    <mat-datepicker-toggle matSuffix [for]=\\\"picker\\\" style=\\\"z-index: 99999;\\\"></mat-datepicker-toggle>\\n                    <mat-datepicker #picker disabled=\\\"false\\\" style=\\\"z-index: 99999;\\\"></mat-datepicker>\\n\\n                </div>\\n            </div>\\n\\n            <div class=\\\"form-group \\\">\\n                <label class=\\\"form-label\\\">Currency Type</label>\\n                <select class=\\\"form-control form-control-sm \\\" name=\\\"title\\\" placeholder=\\\"Currency Type\\\" autocomplete=\\\"off\\\" [class.is-invalid]=\\\"isControlInvalid('type')\\\" [class.is-valid]=\\\"isControlValid('type')\\\" formControlName=\\\"type\\\">\\n          <option value=\\\"usd\\\">USD</option>\\n          <!-- <option *ngFor=\\\"let item of currencyType\\\" value=\\\"{{item}}\\\">{{item | uppercase}}</option> -->\\n        </select>\\n\\n            </div>\\n            <!-- type -->\\n\\n            <!-- Amount -->\\n            <div class=\\\"form-group \\\">\\n                <label class=\\\"form-label\\\">Rate</label>\\n                <input type=\\\"number\\\" class=\\\"form-control form-control-sm \\\" name=\\\"amount\\\" placeholder=\\\"Rate\\\" autocomplete=\\\"off\\\" [class.is-invalid]=\\\"isControlInvalid('amount')\\\" [class.is-valid]=\\\"isControlValid('amount')\\\" formControlName=\\\"amount\\\">\\n\\n            </div>\\n            <!-- Amount -->\\n            <div class=\\\"form-group \\\">\\n                <button type=\\\"button\\\" *ngIf=\\\"isModal\\\" class=\\\"btn btn-default\\\" (click)=\\\"modal.dismissAll()\\\">Close</button>\\n                <button type=\\\"submit\\\" class=\\\"btn btn-primary mx-2\\\">Save</button>\\n            </div>\\n        </form>\\n    </div>\\n</div>\";","export default \"<div class=\\\"row\\\">\\n    <div class=\\\"col-12\\\">\\n        <div class=\\\"card card-custom\\\" style=\\\"margin-bottom: 15px;\\\">\\n            <div class=\\\"card-header\\\">\\n                <div class=\\\"card-title\\\">\\n                    <h3 class=\\\"card-label left-border-image\\\">Exchange Rate</h3>\\n                </div>\\n                <div class=\\\"card-toolbar\\\">\\n                    <button type=\\\"button\\\" class=\\\"btn btn-primary btn-circle\\\" (click)=\\\"addData()\\\">\\n                        <span class=\\\"flaticon2-plus\\\"></span>\\n                    </button>\\n                    <button type=\\\"button\\\" class=\\\"btn btn-primary ml-2\\\" style=\\\"min-width: 50px;\\\" (click)=\\\"getData()\\\">\\n                        <span class=\\\"flaticon2-magnifier-tool\\\"></span>\\n                    </button>\\n                </div>\\n                <!-- <app-currency-add-form (formSubmit)=\\\"saveData($event)\\\" [isModal]=\\\"false\\\"></app-currency-add-form> -->\\n            </div>\\n\\n            <div class=\\\"card-body \\\">\\n                <form action=\\\"#\\\" class=\\\"form\\\" [formGroup]=\\\"exchangeForm\\\">\\n                    <div class=\\\"row\\\" style=\\\"align-items: center;\\\">\\n                        <div class=\\\"col-sm-6\\\">\\n                            <div class=\\\"form-group row\\\">\\n                                <label class=\\\"col-sm-4 col-form-label\\\">Currency</label>\\n                                <div class=\\\"col-sm-8\\\">\\n                                    <select class=\\\"form-control form-control-sm\\\" name=\\\"title\\\"\\n                                        placeholder=\\\"Currency Type\\\" autocomplete=\\\"off\\\" formControlName=\\\"currency\\\">\\n                                        <option value=\\\"usd\\\">USD</option>\\n\\n                                    </select>\\n                                </div>\\n                            </div>\\n                        </div>\\n                        <div class=\\\"col-sm-6\\\">\\n                            <div class=\\\"form-group row\\\">\\n                                <label class=\\\"col-sm-4 col-form-label\\\">Date</label>\\n                                <div class=\\\"col-sm-8\\\">\\n                                    <div class=\\\"input-group \\\">\\n                                        <input matInput class=\\\"form-control form-control-sm date-input\\\"\\n                                            formControlName=\\\"date\\\" [matDatepicker]=\\\"picker\\\" readonly>\\n                                        <mat-datepicker-toggle matSuffix [for]=\\\"picker\\\"></mat-datepicker-toggle>\\n                                        <mat-datepicker #picker disabled=\\\"false\\\"></mat-datepicker>\\n\\n                                    </div>\\n                                </div>\\n                            </div>\\n                        </div>\\n                    </div>\\n                </form>\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n\\n<div class=\\\"row\\\">\\n    <div class=\\\"col-sm-12\\\">\\n        <div class=\\\"card card-custom px-10 py-3\\\">\\n            <div class=\\\"card-body\\\">\\n                <app-material-table-view [data]=\\\"currencyList\\\" [colum]=\\\"ELEMENT_COL\\\"\\n                    [displayedColumns]=\\\"displayedColumns\\\" (emitter)=\\\"actionBtn($event)\\\">\\n                </app-material-table-view>\\n            </div>\\n        </div>\\n    </div>\\n</div>\";"],"names":[],"sourceRoot":"webpack:///"}