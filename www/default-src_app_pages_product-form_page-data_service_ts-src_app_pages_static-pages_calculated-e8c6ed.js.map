{"version":3,"file":"default-src_app_pages_product-form_page-data_service_ts-src_app_pages_static-pages_calculated-e8c6ed.js","mappings":"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","sources":["./src/app/core/master-data-map.ts","./src/app/pages/product-form/page-data.service.ts","./src/app/pages/static-pages/calculated-building/services/calculated-building-service.ts","./src/app/pages/static-pages/health-quo/models&services/health-payment.service.ts","./src/app/pages/static-pages/simple-page/models&services/health-product.service.ts","./src/app/pages/static-pages/surrounding-building/models&services/surrounding-building.service.ts"],"sourcesContent":["import { forkJoin, Observable, of } from \"rxjs\";\nimport { map, mergeMap } from \"rxjs/operators\";\nimport { MasterDataService } from \"../modules/master-data/master-data.service\";\nimport { ConfigInput } from \"../pages/form-component/field.interface\";\n\nexport function getMasterValue(masterServer: MasterDataService, response: any, column: ConfigInput[], editing: boolean = false): Observable<any> {\n\n  if (Array.isArray(response) && response.length > 0) {\n    return of(response).pipe(map((result: any[]) => {\n      let masterPost = []\n      let resource = result.map((res) => {\n        let masterObj = (res.data as any[]).filter(x => (x.value + \"\" as string).startsWith(\"T-\") || (x.value + \"\" as string).startsWith(\"TA-\"))\n        if (masterObj.length > 0) {\n          let postData = masterObj.map(x => {\n            let columnName = column.find(col => col.name == x.column)\n            if (columnName.masterData) {\n              return {\n                \"codeId\": x.value,\n                \"codeType\": columnName.masterData,\n                \"langCd\": \"EN\"\n              }\n            }\n          })\n          masterPost.push(...postData)\n        }\n      })\n\n      return { result, masterPost }\n    }), mergeMap((result: any) => {\n\n      if (result.masterPost.length > 0) {\n        let postData = {\n          \"codeBookRequest\": result.masterPost\n        }\n        return masterServer.getMasterValue(postData).pipe(map((masterValues: any) => {\n          return result.result.map(resp => {\n            resp.data = resp.data.flatMap(x => {\n              if ((x.value + \"\").startsWith(\"T-\") || (x.value + \"\").startsWith(\"TA-\")) {\n                let columnName = column.find(col => col.name == x.column)\n                let index = masterValues.findIndex(master => master.codeId == x.value && columnName.masterData == master.codeType)\n                if (index >= 0) {\n                  if (editing) {\n                    return [x, { column: x.column + \"Value\", value: masterValues[index].codeName }]\n                  } else {\n                    x.value = masterValues[index].codeName\n                  }\n                }\n              }\n              return x\n            })\n            return resp\n          })\n          // return result\n        }))\n      }\n      return of(result.result)\n    }))\n  }\n  return of(response)\n\n}\n\n// return masterServer.getMasterValue(postData).pipe(map((x: any) => {\n//   return x.map(masterD => {\n//     let index = res.data.findIndex(val => val.value == masterD.codeId)\n//     res.data[index].value = masterD.codeName\n//     return res.data[index]\n//   })\n// }), mergeMap((res2) => {\n\n//   let masterObj = (res.data as any[]).filter(x => !(x.value + \"\" as string).includes(\"T-\"))\n//   console.log([...masterObj, ...res2]);\n\n//   return of({ data: [...masterObj, ...res2] })\n// })\n// )\n// export function getMasterValue(masterServer: MasterDataService, response: any, column: ConfigInput[]): Observable<any> {\n//   console.log(response);\n\n//   if (Array.isArray(response) && response.length > 0) {\n//     return of(response).pipe(mergeMap((result: any[]) => {\n//       return forkJoin(result.map((res) => {\n//         let masterObj = (res.data as any[]).filter(x => (x.value + \"\" as string).includes(\"T-\"))\n\n//         if (masterObj.length > 0) {\n//           let postData = {\n//             \"codeBookRequest\": []\n//           }\n//           postData.codeBookRequest = masterObj.map(x => {\n//             let columnName = column.find(col => col.name == x.column)\n//             if (columnName.masterData) {\n//               return {\n//                 \"codeId\": x.value,\n//                 \"codeType\": columnName.masterData,\n//                 \"langCd\": \"EN\"\n//               }\n//             }\n\n//           })\n\n//           return masterServer.getMasterValue(postData).pipe(map((x: any) => {\n//             return x.map(masterD => {\n//               let index = res.data.findIndex(val => val.value == masterD.codeId)\n//               res.data[index].value = masterD.codeName\n//               return res.data[index]\n//             })\n//           }), mergeMap((res2) => {\n\n//             let masterObj = (res.data as any[]).filter(x => !(x.value + \"\" as string).includes(\"T-\"))\n//             console.log([...masterObj, ...res2]);\n\n//             return of({ data: [...masterObj, ...res2] })\n//           })\n//           )\n//         }\n//         return of(res)\n//         // res.data.map(x => {\n//         //   if((x.value as string).includes(\"T-\")){\n\n//         //   }\n//         // })\n//       }))\n//     }))\n//     // response.map(x=> {\n//     //   x.data.map()\n//     // })\n//   }\n//   return of(response)\n\n// }","import { HttpClient } from \"@angular/common/http\";\nimport { Injectable } from \"@angular/core\";\nimport { Observable, of } from \"rxjs\";\nimport { flatMap, mergeMap, switchMap } from \"rxjs/operators\";\nimport { environment } from \"../../../environments/environment\";\nimport { BizOperationService } from \"../../core/biz.operation.service\";\nimport { getMasterValue } from \"../../core/master-data-map\";\nimport { MasterDataService } from \"../../modules/master-data/master-data.service\";\nimport { ConfigInput } from \"../form-component/field.interface\";\n\nconst API_PAGEDATA_URL = `${environment.apiUrl}/pagedata`;\n\n@Injectable({ providedIn: 'root' })\nexport class PageDataService extends BizOperationService<any, number>{\n\n  constructor(protected httpClient: HttpClient, private masterData: MasterDataService) {\n    super(httpClient, API_PAGEDATA_URL);\n  }\n\n  getDetail(table: any, resourceId: any, id: any, view: boolean = false, colums: ConfigInput[] = [], editing: boolean = false) {\n    return this.httpClient.get(API_PAGEDATA_URL + \"/\" + table + \"/\" + resourceId + \"/\" + id).pipe(mergeMap((res: any) => {\n      if (view) {\n        return getMasterValue(this.masterData, res, colums, editing)\n      }\n      return of(res)\n    }))\n  }\n\n  deleteData(table, refID, id) {\n    return this.httpClient.delete(API_PAGEDATA_URL + \"/\" + table + \"/\" + refID + \"/\" + id)\n  }\n\n  updatePremimun(postData: any): Observable<any> {\n    return this.httpClient.put(API_PAGEDATA_URL + \"/resource\", postData)\n  }\n  // updateStatus(data){\n  //   return this.httpClient.put(API_PAGEDATA_URL + \"/resource\",data)\n  // }\n\n}","import { HttpClient } from \"@angular/common/http\";\nimport { Injectable } from \"@angular/core\";\nimport { environment } from \"../../../../../environments/environment\";\nimport { BizOperationService } from \"../../../../core/biz.operation.service\";\nimport { CalculatedBuildingDTO } from \"./calculated-building.dto\";\n\nconst API_FIRE_CONTENT = `${environment.apiUrl}/fire-policy/content`;\nconst API_FIRE_PLANT = `${environment.apiUrl}/fire-policy/plant-machinery`;\nconst API_FIRE_STOCK = `${environment.apiUrl}/fire-policy/stock`;\n// const API_FIRE_STOCK_RISK = `${environment.apiUrl}/fire-policy/risk/`\n//{riskId}/stock\n@Injectable({\n  providedIn: 'root'\n})\nexport class FireContentService extends BizOperationService<CalculatedBuildingDTO, number>{\n  constructor(protected httpClient: HttpClient) {\n    super(httpClient, API_FIRE_CONTENT);\n  }\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class FirePLantService extends BizOperationService<any, number>{\n  constructor(protected httpClient: HttpClient) {\n    super(httpClient, API_FIRE_PLANT);\n  }\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class FireStockService extends BizOperationService<any, number>{\n  constructor(protected httpClient: HttpClient) {\n    super(httpClient, API_FIRE_STOCK);\n  }\n}\n","import { HttpClient } from \"@angular/common/http\";\nimport { Injectable } from \"@angular/core\";\nimport { environment } from \"../../../../../environments/environment\";\nimport { BizOperationService } from \"../../../../core/biz.operation.service\";\nimport { HealthPaymentDTO } from \"./health-quo.dto\";\n\nconst API_HEALTH_PAY_URL = `${environment.apiUrl}/health/payment-schedule`;\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class HealthPaymentService extends BizOperationService<HealthPaymentDTO, number>{\n  constructor(protected httpClient: HttpClient) {\n    super(httpClient, API_HEALTH_PAY_URL);\n  }\n\n  deleteMany(redId: string) {\n    // /api/v1/health/payment-schedule/resource/{resourceId}\n    return this.httpClient.delete(API_HEALTH_PAY_URL + \"/resource/\" + redId)\n  }\n  getMany(redId: string) {\n    // /api/v1/health/payment-schedule/resource/{resourceId}\n    return this.httpClient.get(API_HEALTH_PAY_URL + \"/resource/\" + redId)\n  }\n\n  saveAll(postData: any) {\n    return this.httpClient.post(API_HEALTH_PAY_URL + \"s\", postData)\n  }\n}","import { HttpClient } from \"@angular/common/http\";\nimport { Injectable } from \"@angular/core\";\nimport { environment } from \"../../../../../environments/environment\";\nimport { BizOperationService } from \"../../../../core/biz.operation.service\";\nimport { HealthProductDetailDTO } from \"./health-product.dto\";\n\nconst API_ADDON_URL = `${environment.apiUrl}/health/product-detail`;\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class HealthProductService extends BizOperationService<HealthProductDetailDTO, number>{\n  constructor(protected httpClient: HttpClient) {\n    super(httpClient, API_ADDON_URL);\n  }\n\n  getOne(quo: string){\n    return this.httpClient.get(API_ADDON_URL+\"/resource/\"+quo)\n  }\n}","import { HttpClient } from \"@angular/common/http\";\nimport { Injectable } from \"@angular/core\";\nimport { environment } from \"../../../../../environments/environment\";\nimport { BizOperationService } from \"../../../../core/biz.operation.service\";\nimport { SurroundingBuildingDTO } from \"./surrounding-building.dto\";\n\nconst API_SURROUNDING_BUILDING_URL = `${environment.apiUrl}/fire-policy/surrounding-building`;\nconst API_RISK_SURROUNDING_BUILDING_API = `${environment.apiUrl}/fire-policy/risk/`;\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SurroundingBuildingService extends BizOperationService<SurroundingBuildingDTO, number>{\n  constructor(protected httpClient: HttpClient) {\n    super(httpClient, API_SURROUNDING_BUILDING_URL);\n  }\n  // fire-policy/surrounding-building/max-rate\n\n  getByRiskId(riskId: number) {\n    return this.httpClient.get(API_RISK_SURROUNDING_BUILDING_API + riskId + \"/surrounding-building\")\n  }\n\n  getMaxRate(riskId: number) {\n    return this.httpClient.get(API_SURROUNDING_BUILDING_URL + \"/max-rate?riskId=\" + riskId)\n\n  }\n}"],"names":[],"sourceRoot":"webpack:///"}