{"version":3,"file":"src_app_pages_activity-management-list_activity-management-list_module_ts.js","mappings":"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","sources":["./src/app/pages/activity-management-list/activity-manage.const.ts","./src/app/pages/activity-management-list/activity-management-list.component.ts","./src/app/pages/activity-management-list/activity-management-list.module.ts"],"sourcesContent":["import { COLTYPE, TableCol } from '../../_metronic/shared/crud-table/components/material-table-view/table-dto'\nexport const ActivityCol: TableCol[] = [\n  {\n    title: \"Activity No.\",\n    type: COLTYPE.FEILD,\n    field: \"activityNo\",\n    // amtFormat?: boolean,\n    // isTitle?: boolean\n    // isDate?: boolen\n  },\n  {\n    title: \"Activity Type\",\n    type: COLTYPE.FEILD,\n    field: \"activityType\",\n    // amtFormat?: boolean,\n    // isTitle?: boolean\n    // isDate?: boolen\n  },\n  {\n    title: \"Activity Title\",\n    type: COLTYPE.FEILD,\n    field: \"activityTitle\",\n    // amtFormat?: boolean,\n    // isTitle?: boolean\n    // isDate?: boolen\n  },\n  // {\n  //   title: \"Related Type\",\n  //   type: COLTYPE.FEILD,\n  //   field: \"relatedType\",\n  //   // amtFormat?: boolean,\n  //   isTitle: true\n  //   // isDate?: boolen\n  // },\n\n  {\n    title: \"Related To\",\n    type: COLTYPE.FEILD,\n    field: \"relatedTo\",\n    // amtFormat?: boolean,\n    // isTitle?: boolean\n    // isDate?: boolen\n  },\n  {\n    title: \"Assigned To\",\n    type: COLTYPE.FEILD,\n    field: \"assignName\",\n    // isTitle?: boolean\n    // isDate?: boolen\n  },\n  {\n    title: \"Due Date\",\n    type: COLTYPE.FEILD,\n    field: \"dueDate\",\n    isFromatDate: true\n  },\n  {\n    title: \"Status\",\n    type: COLTYPE.FEILD,\n    field: \"status\",\n    isActivityStatus: true,\n    // amtFormat?: boolean,\n    // isTitle?: boolean\n  },\n  {\n    title: \"Customer\",\n    type: COLTYPE.FEILD,\n    field: \"customerName\",\n    // amtFormat?: boolean,\n    // isTitle?: boolean\n  },\n  {\n    title: \"Actions\",\n    type: COLTYPE.ACTION,\n    field: \"actions\",\n    btn: {\n      edit: true\n    }\n    // amtFormat?: boolean,\n    // isTitle?: boolean\n    // isDate?: boolen\n  },\n]\n\nexport const ActivityDisplayCol: string[] = [\n  \"activityNo\",\n  \"activityType\",\n  \"activityTitle\",\n  // \"relatedType\",\n  \"relatedTo\",\n  \"assignName\",\n  \"dueDate\",\n  \"status\",\n  \"customerName\",\n  \"actions\",\n]","import { ChangeDetectorRef, Component, OnInit, ViewChild } from '@angular/core';\nimport { FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\nimport { MomentDateAdapter } from '@angular/material-moment-adapter';\nimport { MAT_DATE_FORMATS, MAT_DATE_LOCALE } from '@angular/material/core';\nimport { Router } from '@angular/router';\nimport { DateAdapter } from 'angular-calendar';\nimport { MY_FORMATS } from '../../core/is-json';\nimport { MaterialTableViewComponent } from '../../_metronic/shared/crud-table/components/material-table-view/material-table-view.component';\nimport { ActivityStatus } from '../../_metronic/shared/crud-table/components/material-table-view/table-dto';\nimport { ActivityCol, ActivityDisplayCol } from './activity-manage.const';\nimport { ActivityManageService } from './activity-manage.service';\n\n@Component({\n  selector: 'app-activity-management-list',\n  templateUrl: './activity-management-list.component.html',\n  styleUrls: ['./activity-management-list.component.scss'],\n  providers: [\n    { provide: DateAdapter, useClass: MomentDateAdapter, deps: [MAT_DATE_LOCALE] },\n    { provide: MAT_DATE_FORMATS, useValue: MY_FORMATS },\n  ]\n})\nexport class ActivityManagementListComponent implements OnInit {\n  @ViewChild(MaterialTableViewComponent) matTable: MaterialTableViewComponent\n  ELEMENT_COL = ActivityCol\n  displayedColumns = ActivityDisplayCol\n  activityList = [];\n  actForm: FormGroup;\n  activityStatus = ActivityStatus\n  totalElements: number = 0\n  totalPages: number = 0\n  selectedPageBtn: number = 0\n  currentPage: number = 1\n  activityType: string[] = [\n    \"Face to Face\",\n    \"Online\",\n    \"Phone Call\"\n  ]\n  postedData: any = {}\n  activityTypeOption = [\n    {\n      code: \"\",\n      value: \"All\"\n    },\n    {\n      code: \"Face to Face\",\n      value: \"Face to Face\"\n    },\n    {\n      code: \"Online\",\n      value: \"Online\"\n    },\n    {\n      code: \"Phone Call\",\n      value: \"Phone Call\"\n    }\n  ]\n  statusOption = [\n    {\n      code: \"\",\n      value: \"All\"\n    },\n    {\n      code: \"Open\",\n      value: \"Open\"\n    },\n    {\n      code: \"Complete\",\n      value: \"Complete\"\n    },\n    {\n      code: \"Cancel\",\n      value: \"Cancel\"\n    }\n  ]\n  constructor(private fb: FormBuilder, private router: Router, private activityService: ActivityManageService, private cdf: ChangeDetectorRef) {\n    this.loadForm();\n  }\n\n  ngOnInit(): void {\n\n  }\n  ngAfterViewInit() {\n    this.getList()\n  }\n  cancel() {\n\n  }\n\n  loadForm() {\n    this.actForm = new FormGroup({\n      \"type\": new FormControl(\"\"),\n      \"title\": new FormControl(null),\n      \"status\": new FormControl(\"\"),\n      startDate: new FormControl(null),\n      endDate: new FormControl(null)\n    })\n  }\n\n\n  // getList() {\n  //   this.activityService.getActivityList(this.actForm.value).toPromise().then((res: any) => {\n  //     if (res) {\n  //       console.log('getActivityList', res);\n\n  //       this.activityList = res\n  //       this.cdf.detectChanges()\n  //      // this.matTable.reChangeData()\n  //     }\n  //   })\n  // }\n\n  reponseFromPager(event) {\n    // console.log(\"LEADEVENT\", event);\n    this.currentPage = event\n    this.getDatabyPage(this.currentPage)\n  }\n\n  getList(limit: number = 5, offset: number = 1) {\n    let postData = { ...this.actForm.getRawValue(), limit: 5, offset: offset }\n    this.postedData = postData\n\n    this.activityService.getActivityList( this.postedData ).toPromise().then((res: any) => {\n      if (res) {\n        // console.log('getActivityList', res);\n        this.activityList = res.content\n        this.totalElements = res.totalElements\n        this.totalPages = res.totalPages\n        this.selectedPageBtn = this.currentPage\n        this.cdf.detectChanges();\n        // this.activityList = res\n        this.cdf.detectChanges()\n        // this.matTable.reChangeData()\n      }\n    })\n  }\n\n  async getDatabyPage(page) {\n    this.currentPage = page\n    let postData = { ...this.actForm.getRawValue(), limit: 5, offset: page }\n    this.totalPages = 0\n    this.postedData = postData\n    await this.activityService.getActivityList(this.postedData).toPromise().then((res: any) => {\n      if (res) {\n        this.activityList = res.content\n        // this.activityList = res\n        this.totalElements = res.totalElements\n        this.totalPages = res.totalPages\n        this.selectedPageBtn = this.currentPage\n        this.cdf.detectChanges();\n      }\n    })\n  }\n\n  actionBtn(event) {\n    if (event.cmd == 'edit') {\n      this.navigateToDetail('edit', event.data.activityNo)\n    }\n  }\n\n  // helpers for View\n  isControlValid(controlName: string): boolean {\n    const control = this.actForm.controls[controlName];\n    return control.valid && (control.dirty || control.touched);\n  }\n\n  isControlInvalid(controlName: string): boolean {\n    const control = this.actForm.controls[controlName];\n    return control.invalid && (control.dirty || control.touched);\n  }\n\n  controlHasError(validation, controlName): boolean {\n    const control = this.actForm.controls[controlName];\n    return control.hasError(validation) && (control.dirty || control.touched);\n  }\n\n  isControlTouched(controlName): boolean {\n    const control = this.actForm.controls[controlName];\n    return control.dirty || control.touched;\n  }\n\n  navigateToDetail(data, id?: string) {\n    this.router.navigate([\"/activity/activity-management-detail\"], { queryParams: { pageStatus: data, pageId: id } })\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule } from '@angular/router';\nimport { ActivityManagementListComponent } from './activity-management-list.component';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { InlineSVGModule } from 'ng-inline-svg';\nimport { CRUDTableModule } from '../../_metronic/shared/crud-table';\nimport { NgSelectModule } from '@ng-select/ng-select';\nimport { LanguageModule } from 'src/app/modules/languages/languages.modules';\nimport { ShareComponentModule } from '../share-components/share-component.module';\n\n@NgModule({\n  declarations: [ActivityManagementListComponent],\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    InlineSVGModule,\n    CRUDTableModule,\n    ShareComponentModule,\n    NgSelectModule,\n    LanguageModule,\n    RouterModule.forChild([\n      {\n        path: '',\n        component: ActivityManagementListComponent,\n      },\n    ]),\n\n  ]\n})\nexport class ActivityManagementListModule { }\n"],"names":[],"sourceRoot":"webpack:///"}