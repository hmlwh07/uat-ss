{"version":3,"file":"src_app_pages_activity-management-list_activity-management-list_module_ts.js","mappings":"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","sources":["./src/app/pages/activity-management-list/activity-manage.const.ts","./src/app/pages/activity-management-list/activity-management-list.component.ts","./src/app/pages/activity-management-list/activity-management-list.module.ts","./src/app/pages/activity-management-list/activity-management-list.component.html"],"sourcesContent":["import { COLTYPE, TableCol } from '../../_metronic/shared/crud-table/components/material-table-view/table-dto'\nexport const ActivityCol: TableCol[] = [\n  {\n    title: \"Activity No.\",\n    type: COLTYPE.FEILD,\n    field: \"activityNo\",\n    // amtFormat?: boolean,\n    // isTitle?: boolean\n    // isDate?: boolen\n  },\n  {\n    title: \"Activity Type\",\n    type: COLTYPE.FEILD,\n    field: \"activityType\",\n    // amtFormat?: boolean,\n    // isTitle?: boolean\n    // isDate?: boolen\n  },\n  {\n    title: \"Activity Title\",\n    type: COLTYPE.FEILD,\n    field: \"activityTitle\",\n    // amtFormat?: boolean,\n    // isTitle?: boolean\n    // isDate?: boolen\n  },\n  // {\n  //   title: \"Related Type\",\n  //   type: COLTYPE.FEILD,\n  //   field: \"relatedType\",\n  //   // amtFormat?: boolean,\n  //   isTitle: true\n  //   // isDate?: boolen\n  // },\n\n  {\n    title: \"Related To\",\n    type: COLTYPE.FEILD,\n    field: \"relatedTo\",\n    // amtFormat?: boolean,\n    // isTitle?: boolean\n    // isDate?: boolen\n  },\n  {\n    title: \"Assigned To\",\n    type: COLTYPE.FEILD,\n    field: \"assignName\",\n    // isTitle?: boolean\n    // isDate?: boolen\n  },\n  {\n    title: \"Due Date\",\n    type: COLTYPE.FEILD,\n    field: \"dueDate\",\n    isFromatDate: true\n  },\n  {\n    title: \"Status\",\n    type: COLTYPE.FEILD,\n    field: \"status\",\n    isActivityStatus: true,\n    // amtFormat?: boolean,\n    // isTitle?: boolean\n  },\n  {\n    title: \"Customer\",\n    type: COLTYPE.FEILD,\n    field: \"customerName\",\n    // amtFormat?: boolean,\n    // isTitle?: boolean\n  },\n  {\n    title: \"Actions\",\n    type: COLTYPE.ACTION,\n    field: \"actions\",\n    btn: {\n      edit: true\n    }\n    // amtFormat?: boolean,\n    // isTitle?: boolean\n    // isDate?: boolen\n  },\n]\n\nexport const ActivityDisplayCol: string[] = [\n  \"activityNo\",\n  \"activityType\",\n  \"activityTitle\",\n  // \"relatedType\",\n  \"relatedTo\",\n  \"assignName\",\n  \"dueDate\",\n  \"status\",\n  \"customerName\",\n  \"actions\",\n]","import { ChangeDetectorRef, Component, OnInit, ViewChild } from '@angular/core';\nimport { FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { MaterialTableViewComponent } from '../../_metronic/shared/crud-table/components/material-table-view/material-table-view.component';\nimport { ActivityStatus } from '../../_metronic/shared/crud-table/components/material-table-view/table-dto';\nimport { ActivityCol, ActivityDisplayCol } from './activity-manage.const';\nimport { ActivityManageService } from './activity-manage.service';\n\n@Component({\n  selector: 'app-activity-management-list',\n  templateUrl: './activity-management-list.component.html',\n  styleUrls: ['./activity-management-list.component.scss']\n})\nexport class ActivityManagementListComponent implements OnInit {\n  @ViewChild(MaterialTableViewComponent) matTable: MaterialTableViewComponent\n  ELEMENT_COL = ActivityCol\n  displayedColumns = ActivityDisplayCol\n  activityList = [];\n  actForm: FormGroup;\n  activityStatus = ActivityStatus\n  activityType: string[] = [\n    \"Face to Face\",\n    \"Online\",\n    \"Phone Call\"\n  ]\n  activityTypeOption = [\n    {\n      code: \"\",\n      value: \"All\"\n    },\n    {\n      code: \"Face to Face\",\n      value: \"Face to Face\"\n    },\n    {\n      code: \"Online\",\n      value: \"Online\"\n    },\n    {\n      code: \"Phone Call\",\n      value: \"Phone Call\"\n    }\n  ]\n  statusOption = [\n    {\n      code: \"\",\n      value: \"All\"\n    },\n    {\n      code: \"Open\",\n      value: \"Open\"\n    },\n    {\n      code: \"Complete\",\n      value: \"Complete\"\n    },\n    {\n      code: \"Cancel\",\n      value: \"Cancel\"\n    }\n  ]\n  constructor(private fb: FormBuilder, private router: Router, private activityService: ActivityManageService, private cdf: ChangeDetectorRef) {\n    this.loadForm();\n  }\n\n  ngOnInit(): void {\n   \n  }\n  ngAfterViewInit() {\n    this.getList()\n  }\n  cancel(){\n    \n  }\n\n  loadForm() {\n    this.actForm = new FormGroup({\n      \"type\": new FormControl(\"\"),\n      \"title\": new FormControl(null),\n      \"status\": new FormControl(\"\"),\n      startDate:new FormControl(null),\n      endDate:new FormControl(null)\n    })\n  }\n\n\n  getList() {\n    this.activityService.getActivityList(this.actForm.value).toPromise().then((res: any) => {\n      if (res) {\n        console.log('getActivityList', res);\n\n        this.activityList = res\n        this.cdf.detectChanges()\n       // this.matTable.reChangeData()\n      }\n    })\n  }\n\n  actionBtn(event) {\n    if (event.cmd == 'edit') {\n      this.navigateToDetail('edit', event.data.activityNo)\n    }\n  }\n\n  // helpers for View\n  isControlValid(controlName: string): boolean {\n    const control = this.actForm.controls[controlName];\n    return control.valid && (control.dirty || control.touched);\n  }\n\n  isControlInvalid(controlName: string): boolean {\n    const control = this.actForm.controls[controlName];\n    return control.invalid && (control.dirty || control.touched);\n  }\n\n  controlHasError(validation, controlName): boolean {\n    const control = this.actForm.controls[controlName];\n    return control.hasError(validation) && (control.dirty || control.touched);\n  }\n\n  isControlTouched(controlName): boolean {\n    const control = this.actForm.controls[controlName];\n    return control.dirty || control.touched;\n  }\n\n  navigateToDetail(data, id?: string) {\n    this.router.navigate([\"/activity/activity-management-detail\"], { queryParams: { pageStatus: data, pageId: id } })\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule } from '@angular/router';\nimport { ActivityManagementListComponent } from './activity-management-list.component';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { InlineSVGModule } from 'ng-inline-svg';\nimport { CRUDTableModule } from '../../_metronic/shared/crud-table';\nimport { NgSelectModule } from '@ng-select/ng-select';\nimport { ShareComponentModule } from '../share-components/share-component.module';\n\n\n\n@NgModule({\n  declarations: [ActivityManagementListComponent],\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    InlineSVGModule,\n    CRUDTableModule,\n    ShareComponentModule,\n    NgSelectModule,\n    RouterModule.forChild([\n      {\n        path: '',\n        component: ActivityManagementListComponent,\n      },\n    ]),\n\n  ]\n})\nexport class ActivityManagementListModule { }\n","export default \"<div class=\\\"row\\\">\\n  <div class=\\\"col-12\\\">\\n    <div class=\\\"card card-custom gutter-b\\\">\\n      <div class=\\\"card-header\\\">\\n        <div class=\\\"card-title\\\">\\n          <h3 class=\\\"card-label left-border-image\\\">Activity Management List</h3>\\n        </div>\\n        <div class=\\\"card-toolbar\\\">\\n          <!-- <button type=\\\"button\\\" class=\\\"btn btn-primary btn-circle\\\" (click)=\\\"navigateToDetail('create')\\\">\\n            <span class=\\\"flaticon2-plus\\\"></span>\\n          </button> -->\\n          <!-- <button type=\\\"button\\\" class=\\\"btn btn-primary ml-2\\\" style=\\\"min-width: 75px;\\\" (click)=\\\"getList()\\\">\\n            <span class=\\\"flaticon2-magnifier-tool search-tool\\\"></span>\\n          </button> -->\\n          <span class=\\\"flaticon2-magnifier-tool search-tool\\\" (click)=\\\"getList()\\\"></span>\\n          <button type=\\\"button\\\" class=\\\"btn btn-primary ml-2\\\" style=\\\"min-width: 50px;\\\" (click)=\\\"cancel()\\\">\\n            <span class=\\\"\\\">Cancel</span>\\n          </button>\\n        </div>\\n      </div>\\n      <div class=\\\"card-body px-10 py-3\\\">\\n        <form action=\\\"#\\\" class=\\\"form\\\" [formGroup]=\\\"actForm\\\">\\n          <div class=\\\"row\\\" style=\\\"align-items: center;\\\">\\n            <app-start-end-date [formInput]=\\\"actForm\\\" remove-host [colClass]=\\\"'col-md-4'\\\"></app-start-end-date>\\n            <div class=\\\"col-md-4\\\">\\n              <div class=\\\"form-group row\\\">\\n                <label class=\\\"col-sm-4 col-form-label\\\">Status</label>\\n                <div class=\\\"col-sm-8\\\">\\n\\n                  <ng-select class=\\\"ng-custom-select ng-custom-select-sm\\\"\\n                    [class.is-invalid]=\\\"isControlInvalid('status')\\\" [class.is-valid]=\\\"isControlValid('status')\\\"\\n                    [items]=\\\"statusOption\\\" bindLabel=\\\"value\\\" bindValue=\\\"code\\\" formControlName=\\\"status\\\">\\n                  </ng-select>\\n\\n                </div>\\n              </div>\\n            </div>\\n          </div>\\n\\n          <div class=\\\"row\\\" style=\\\"align-items: center;\\\">\\n            <div class=\\\"col-md-4\\\">\\n              <div class=\\\"form-group row\\\">\\n                <label class=\\\"col-sm-4 col-form-label \\\">Activity Type</label>\\n                <div class=\\\"col-sm-8\\\">\\n                  <!-- <select class=\\\"form-control form-control-sm \\\" name=\\\"type\\\" autocomplete=\\\"off\\\"\\n                    [class.is-invalid]=\\\"isControlInvalid('type')\\\" [class.is-valid]=\\\"isControlValid('type')\\\"\\n                    formControlName=\\\"type\\\">\\n                    <option value=\\\"\\\">All</option>\\n                    <option value=\\\"{{item}}\\\" *ngFor=\\\"let item of activityType\\\">{{item}}</option>\\n                  </select> -->\\n                  <ng-select class=\\\"ng-custom-select ng-custom-select-sm\\\" [class.is-invalid]=\\\"isControlInvalid('type')\\\"\\n                    [class.is-valid]=\\\"isControlValid('type')\\\" [items]=\\\"activityTypeOption\\\" bindLabel=\\\"value\\\"\\n                    bindValue=\\\"code\\\" formControlName=\\\"type\\\">\\n                  </ng-select>\\n                </div>\\n              </div>\\n            </div>\\n            <div class=\\\"col-md-4\\\">\\n\\n              <div class=\\\"form-group row\\\">\\n                <label class=\\\"col-sm-4 col-form-label\\\">Activity Title</label>\\n                <div class=\\\"col-sm-8\\\">\\n                  <input type=\\\"text\\\" class=\\\"form-control form-control-sm \\\" name=\\\"title\\\" autocomplete=\\\"off\\\"\\n                    [class.is-invalid]=\\\"isControlInvalid('title')\\\" [class.is-valid]=\\\"isControlValid('title')\\\"\\n                    formControlName=\\\"title\\\" />\\n                </div>\\n              </div>\\n            </div>\\n\\n\\n          </div>\\n        </form>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\\n\\n<div class=\\\"row\\\">\\n  <div class=\\\"col-12\\\">\\n    <div class=\\\"card card-custom gutter-b data\\\">\\n\\n      <div class=\\\"card-body customer-card-body\\\">\\n\\n        <app-common-list-2 *ngIf=\\\"activityList.length > 0\\\" class=\\\"data-list\\\" #commonList\\n          [data]=\\\"activityList\\\" [type]=\\\"'activity'\\\" (btnEvent)=\\\"actionBtn($event)\\\">\\n        </app-common-list-2>\\n\\n        <!-- begin:Table -->\\n        <!-- <app-material-table-view [data]=\\\"activityList\\\" [colum]=\\\"ELEMENT_COL\\\" [displayedColumns]=\\\"displayedColumns\\\"\\n          (emitter)=\\\"actionBtn($event)\\\">\\n        </app-material-table-view> -->\\n        <!-- <div class=\\\"table-responsive angular-bootstrap-table\\\">\\n  <div class=\\\"col-12\\\">\\n    <div class=\\\"card card-custom gutter-b data\\\">\\n\\n       <div class=\\\"card-body customer-card-body\\\">\\n        <div *ngFor=\\\"let customer of customerList; let i = index\\\" class=\\\"data-list\\\">\\n          <div class=\\\"data-header\\\">\\n              <div class=\\\"col-6\\\">\\n                  <img src=\\\"../../../assets/images/customer/custoner_list.svg\\\" alt=\\\"customer\\\" />\\n                  <label> {{ customer.partyCode }} </label>\\n              </div>\\n              <div class=\\\"col-6\\\">\\n                  <div class=\\\"actions\\\">\\n                      <img src=\\\"../../../assets/images/edit-01.svg\\\" alt=\\\"edit\\\" />\\n                  </div>\\n              </div>\\n          </div>\\n          <div class=\\\"data-content row\\\">\\n              <div class=\\\"col-4\\\">\\n                  <label *ngIf=\\\"customer.name\\\"> {{ customer.name }}</label>\\n                  <label *ngIf=\\\"customer.fatherName\\\"> {{ customer.fatherName }} </label>\\n                  <label *ngIf=\\\"customer.identityNumber\\\"> {{ customer.identityNumber }} </label>\\n              </div>\\n              <div class=\\\"col-4\\\">\\n                  <label *ngIf=\\\"customer.dateOfBirth\\\"> {{ customer.dateOfBirth | date:'DD/MMM/YYYY' }} </label>\\n                  <label *ngIf=\\\"customer.statusValue\\\"> {{ customer.statusValue }} </label>\\n              </div>\\n              <div class=\\\"col-4\\\">\\n                  <label> ID Type: <span>{{ customer.identityType }}</span> </label>\\n              </div>\\n          </div>\\n      </div> -->\\n\\n\\n        <!-- begin:Table -->\\n        <!-- <app-material-table-view [data]=\\\"activityList\\\" [colum]=\\\"ELEMENT_COL\\\" [displayedColumns]=\\\"displayedColumns\\\"\\n          (emitter)=\\\"actionBtn($event)\\\">\\n        </app-material-table-view> -->\\n        <!-- <div class=\\\"table-responsive angular-bootstrap-table\\\">\\n          <table class=\\\"table table-head-custom table-vertical-center\\\">\\n            <thead>\\n              <th>\\n                Activity No.\\n              </th>\\n              <th>\\n                Activity Type\\n              </th>\\n              <th>\\n                Activity Title\\n              </th>\\n              <th>\\n                Related To\\n              </th>\\n              <th>\\n                Assigned To\\n              </th>\\n              <th>\\n                Due Date\\n              </th>\\n              <th>\\n                Status\\n              </th>\\n              <th>\\n                Customer\\n              </th>\\n              <th>\\n                Actions\\n              </th>\\n            </thead>\\n            <tbody>\\n              <tr *ngFor=\\\"let item of activityList\\\">\\n                <td>\\n                  {{item.activityNo}}\\n                </td>\\n                <td>\\n                  {{item.activityType}}\\n                </td>\\n                <td>\\n                  {{item.activityTitle}}\\n                </td>\\n                <td>\\n                  {{item.relatedTo}}\\n                </td>\\n                <td>\\n                  {{item.assignName}}\\n                </td>\\n                <td>\\n                  {{item.dueDate | date : \\\"dd/MM/Y\\\"}}\\n                </td>\\n                <td>\\n                  {{activityStatus[item.status]}}\\n                </td>\\n                <td>\\n                  {{item.customerName}}\\n                </td>\\n                <td>\\n                  <a title=\\\"Edit\\\" class=\\\"btn btn-icon btn-light btn-hover-primary btn-sm mx-3\\\"\\n                    (click)=\\\"navigateToDetail('edit',item.activityNo)\\\">\\n                    <span [inlineSVG]=\\\"'./assets/media/svg/icons/Communication/Write.svg'\\\" [cacheSVG]=\\\"true\\\"\\n                      class=\\\"svg-icon svg-icon-md svg-icon-primary\\\">\\n                    </span>\\n                  </a>\\n                </td>\\n              </tr>\\n            </tbody>\\n          </table>\\n        </div> -->\\n        <!-- end: Table -->\\n      </div>\\n    </div>\\n  </div>\\n</div>\";"],"names":[],"sourceRoot":"webpack:///"}