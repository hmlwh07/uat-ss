{"version":3,"file":"src_app_pages_product-form_product-form_module_ts.js","mappings":"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","sources":["./node_modules/uuid/dist/esm-browser/regex.js","./node_modules/uuid/dist/esm-browser/rng.js","./node_modules/uuid/dist/esm-browser/stringify.js","./node_modules/uuid/dist/esm-browser/v4.js","./node_modules/uuid/dist/esm-browser/validate.js","./src/app/pages/product-form/product-form.component.ts","./src/app/pages/product-form/product-form.module.ts","./src/app/pages/product-form/product-form.component.html"],"sourcesContent":["export default /^(?:[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}|00000000-0000-0000-0000-000000000000)$/i;","// Unique ID creation requires a high quality random # generator. In the browser we therefore\n// require the crypto API and do not support built-in fallback to lower quality random number\n// generators (like Math.random()).\nvar getRandomValues;\nvar rnds8 = new Uint8Array(16);\nexport default function rng() {\n  // lazy load so that environments that need to polyfill have a chance to do so\n  if (!getRandomValues) {\n    // getRandomValues needs to be invoked in a context where \"this\" is a Crypto implementation. Also,\n    // find the complete implementation of crypto (msCrypto) on IE11.\n    getRandomValues = typeof crypto !== 'undefined' && crypto.getRandomValues && crypto.getRandomValues.bind(crypto) || typeof msCrypto !== 'undefined' && typeof msCrypto.getRandomValues === 'function' && msCrypto.getRandomValues.bind(msCrypto);\n\n    if (!getRandomValues) {\n      throw new Error('crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported');\n    }\n  }\n\n  return getRandomValues(rnds8);\n}","import validate from './validate.js';\n/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */\n\nvar byteToHex = [];\n\nfor (var i = 0; i < 256; ++i) {\n  byteToHex.push((i + 0x100).toString(16).substr(1));\n}\n\nfunction stringify(arr) {\n  var offset = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  // Note: Be careful editing this code!  It's been tuned for performance\n  // and works in ways you may not expect. See https://github.com/uuidjs/uuid/pull/434\n  var uuid = (byteToHex[arr[offset + 0]] + byteToHex[arr[offset + 1]] + byteToHex[arr[offset + 2]] + byteToHex[arr[offset + 3]] + '-' + byteToHex[arr[offset + 4]] + byteToHex[arr[offset + 5]] + '-' + byteToHex[arr[offset + 6]] + byteToHex[arr[offset + 7]] + '-' + byteToHex[arr[offset + 8]] + byteToHex[arr[offset + 9]] + '-' + byteToHex[arr[offset + 10]] + byteToHex[arr[offset + 11]] + byteToHex[arr[offset + 12]] + byteToHex[arr[offset + 13]] + byteToHex[arr[offset + 14]] + byteToHex[arr[offset + 15]]).toLowerCase(); // Consistency check for valid UUID.  If this throws, it's likely due to one\n  // of the following:\n  // - One or more input array values don't map to a hex octet (leading to\n  // \"undefined\" in the uuid)\n  // - Invalid input values for the RFC `version` or `variant` fields\n\n  if (!validate(uuid)) {\n    throw TypeError('Stringified UUID is invalid');\n  }\n\n  return uuid;\n}\n\nexport default stringify;","import rng from './rng.js';\nimport stringify from './stringify.js';\n\nfunction v4(options, buf, offset) {\n  options = options || {};\n  var rnds = options.random || (options.rng || rng)(); // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n\n  rnds[6] = rnds[6] & 0x0f | 0x40;\n  rnds[8] = rnds[8] & 0x3f | 0x80; // Copy bytes to buffer, if provided\n\n  if (buf) {\n    offset = offset || 0;\n\n    for (var i = 0; i < 16; ++i) {\n      buf[offset + i] = rnds[i];\n    }\n\n    return buf;\n  }\n\n  return stringify(rnds);\n}\n\nexport default v4;","import REGEX from './regex.js';\n\nfunction validate(uuid) {\n  return typeof uuid === 'string' && REGEX.test(uuid);\n}\n\nexport default validate;","import { ChangeDetectorRef, Component, OnDestroy, OnInit, ViewChild } from '@angular/core';\r\nimport { of, Subscription } from 'rxjs';\r\nimport { DatePipe, DecimalPipe, Location } from '@angular/common';\r\n// import { uuid } from 'uuid';\r\nimport { Router } from '@angular/router';\r\n\r\nimport { v4 } from 'uuid';\r\nimport { DynamicFormComponent } from '../form-component/dynamic-form.component';\r\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\r\nimport { ProductDataService } from '../products/services/products-data.service';\r\nimport { FormViewModalComponent } from '../form-component/form-view-modal/form-view-modal.component';\r\nimport { ConfigInput, ConfigPage, FromGroupData } from '../form-component/field.interface';\r\nimport { PageUI, PageUIType, Product, ProductPages } from '../products/models/product.dto';\r\nimport { IsJsonString } from '../../core/is-json';\r\nimport { AuthService } from '../../modules/auth';\r\nimport { PageDataService } from './page-data.service';\r\nimport { QuotationDTO } from '../quotations/quotation.dto';\r\nimport { AddOnQuoService } from '../products/services/add-on-quo.service';\r\nimport { CoverageQuoService } from '../products/services/coverage-quo.service';\r\nimport { AlertService } from '../../modules/loading-toast/alert-model/alert.service';\r\nimport { checkVaidDep } from '../check-parent';\r\nimport { AttachmentDownloadService } from '../../_metronic/core/services/attachment-data.service';\r\nimport { StaticActionType, StaticPageAction } from '../static-pages/static-field.interface';\r\nimport { StaticPageDirective } from '../static-pages/static-pages.directive';\r\nimport { MasterDataService } from '../../modules/master-data/master-data.service';\r\nimport { map, switchMap } from 'rxjs/operators';\r\nimport { GlobalFunctionService } from '../../core/global-fun.service';\r\nimport { Customer } from '../customer-detail/custmer.dto';\r\n\r\n\r\n@Component({\r\n  selector: 'app-product-form',\r\n  templateUrl: './product-form.component.html',\r\n  styleUrls: ['./product-form.component.scss']\r\n})\r\nexport class ProductFormComponent implements OnInit, OnDestroy {\r\n  formData: FromGroupData[] = []\r\n  pageOrder: PageUI[] = []\r\n  viewUI: string\r\n  @ViewChild(DynamicFormComponent) dynForm: DynamicFormComponent\r\n  @ViewChild(StaticPageDirective) staticPage: StaticPageDirective\r\n  item: Product\r\n  tempData: any = {}\r\n  activePage: number = 0\r\n  premiumAmt: string = '0'\r\n  private unsubscribe: Subscription[] = []\r\n  coverage = {\r\n    isSum: false,\r\n    isUnit: false,\r\n    isPremium: false,\r\n  }\r\n  addon = {\r\n    isSum: false,\r\n    isUnit: false,\r\n    isPremium: false,\r\n  }\r\n  coverageData: any = {}\r\n  addOnData: any = {}\r\n  viewType: string = 'view'\r\n  resourceId: string = null\r\n  type: string = \"\"\r\n  referenceID: string = \"\"\r\n  referenceStatus: string = \"\"\r\n  tableReform: any[] = []\r\n  detailInput: any = {}\r\n  editData: any\r\n  creatingCustomer: Customer = {}\r\n  creatingLeadId: number = 0\r\n  constructor(private router: Router, private location: Location, private cdRef: ChangeDetectorRef, private modalService: NgbModal, private prodService: ProductDataService, private globalFun: GlobalFunctionService, private auth: AuthService, private pageDataService: PageDataService, private addonQuo: AddOnQuoService, private coverageQuo: CoverageQuoService, private alert: AlertService, private downloadService: AttachmentDownloadService, private masterServer: MasterDataService, private numberPipe: DecimalPipe, private datePipe: DatePipe) { }\r\n\r\n  async ngOnInit() {\r\n    if ((this.prodService.type == 'policy' && this.prodService.createingProdRef)) {\r\n      this.prodService.createingProd = this.prodService.createingProdRef\r\n      this.prodService.createingProdRef = null\r\n    }\r\n\r\n    if (!this.prodService.createingProd) {\r\n      this.location.back()\r\n    } else {\r\n      this.item = this.prodService.createingProd\r\n      this.viewType = this.prodService.viewType\r\n      this.referenceID = this.prodService.referenceID\r\n      this.referenceStatus = this.prodService.referenceStatus\r\n      this.creatingLeadId = this.prodService.creatingLeadId\r\n      this.type = this.prodService.type\r\n      this.editData = this.prodService.editData || {}\r\n      this.creatingCustomer = this.prodService.creatingCustomer\r\n      this.premiumAmt = this.editData.premiumView || this.editData.premium || \"0\"\r\n      let unsub = this.globalFun.paPremiumResult.subscribe((res: any) => {\r\n        this.premiumAmt = res || \"0\"\r\n        this.cdRef.detectChanges()\r\n      })\r\n      this.unsubscribe.push(unsub)\r\n      this.initProductConfig()\r\n\r\n    }\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.prodService.creatingLeadId = 0\r\n    this.unsubscribe.forEach((sb) => sb.unsubscribe());\r\n    // this.prodService.editData = null\r\n  }\r\n\r\n  changePage(i: number) {\r\n    if (this.activePage > i) {\r\n      this.activePage = i\r\n      if (this.formData[this.activePage].type == PageUIType.STATIC) {\r\n        this.cdRef.detectChanges()\r\n        this.staticPage.reCreate()\r\n      }\r\n      if (this.dynForm && this.formData[this.activePage].controls) {\r\n        this.dynForm.newFormCreate(this.formData[this.activePage].controls, this.tempData[this.formData[this.activePage].tableName + this.formData[this.activePage].id])\r\n      }\r\n    }\r\n  }\r\n\r\n  findPageValue(array: ConfigPage[], value: string) {\r\n\r\n    let data: FromGroupData\r\n    let isRef = this.referenceID ? true : false\r\n    for (let index = 0; index < array.length; index++) {\r\n      if (!array[index]) continue\r\n      data = array[index].fromGroup.find(x => x.id == value);\r\n      if (data) {\r\n        data.controls.map(x => {\r\n          if (this.detailInput[value] && x.input != \"underline\" && x.input != \"label\") {\r\n            x.show = this.detailInput[value][x.name] >= 0 ? (this.detailInput[value][x.name] > 0 ? true : false) : x.show\r\n            if (this.detailInput[value][x.name] >= 2) {\r\n              x.disabled = this.detailInput[value][x.name] > 2 ? isRef : true\r\n            }\r\n          } else if (this.detailInput[value] && x.input == \"label\") {\r\n            x.show = this.detailInput[value][x.placeholder] >= 0 ? (this.detailInput[value][x.placeholder] > 0 ? true : false) : x.show\r\n          }\r\n          return x\r\n        })\r\n\r\n        break\r\n      }\r\n    }\r\n    return data\r\n  }\r\n\r\n  initProductConfig() {\r\n    if (IsJsonString(this.item.config)) {\r\n      let pageUI: ProductPages = JSON.parse(this.item.config);\r\n      if (!pageUI) {\r\n        this.alert.activate(\"please setup page group in product configuration.\", \"Creation Error\")\r\n        this.location.back()\r\n        return false\r\n      }\r\n      let tempFormData: ConfigPage[] = []\r\n      if (this.prodService.type == 'quotation') {\r\n        if (!this.item.quotation) {\r\n          this.alert.activate(\"please setup page group in product configuration.\", \"Creation Error\")\r\n          this.location.back()\r\n          return false\r\n        }\r\n        this.pageOrder = pageUI.quotation || []\r\n        this.detailInput = pageUI.quotation_input || {}\r\n        this.viewUI = pageUI.quotation_view || 'ui1'\r\n      } else {\r\n        if (!this.item.application) {\r\n          this.alert.activate(\"please setup page group in product configuration.\", \"Creation Error\")\r\n          this.location.back()\r\n          return false\r\n        }\r\n        this.pageOrder = pageUI.application || []\r\n        this.detailInput = pageUI.application_input || {}\r\n        this.viewUI = pageUI.application_view || 'ui1'\r\n      }\r\n      if (this.pageOrder.length == 0) {\r\n        this.alert.activate(\"Please Create UI Configuration\", \"Creation Error\")\r\n        this.location.back()\r\n        return false\r\n      }\r\n      let dumType = this.prodService.type == 'policy' ? 'application' : this.prodService.type\r\n      tempFormData = this.item.productUIs.map(x => {\r\n        if (x.type == dumType)\r\n          return JSON.parse(x.dynamicProduct.config)\r\n      })\r\n      let counter = 0\r\n      this.pageOrder.forEach((page, index) => {\r\n        counter += 1\r\n        if (page.id == 'addon' && this.item.addOns.length < 1) {\r\n          this.pageOrder.splice(index, 1)\r\n        } else if (page.id == 'coverage' && this.item.coverages.length < 1) {\r\n          this.pageOrder.splice(index, 1)\r\n        }\r\n        if ((page.type == PageUIType.STATIC)) {\r\n          this.formData.push(\r\n            {\r\n              pageTitle: \"\",\r\n              id: v4(),\r\n              pageIcon: \"\",\r\n              pageType: \"form\",\r\n              tableName: \"\",\r\n              controls: [],\r\n              buttons: [],\r\n              type: page.type\r\n            }\r\n          )\r\n        } else {\r\n          let pageData = this.findPageValue(tempFormData, page.id)\r\n          pageData.type = page.type\r\n          if (pageData) {\r\n            this.pageOrder[index].pageTitle = pageData.pageTitle\r\n            this.pageOrder[index].pageType = pageData.pageType\r\n            this.pageOrder[index].pageIcon = pageData.pageIcon\r\n            this.pageOrder[index].tableName = pageData.tableName\r\n            if (!this.prodService.editData && !this.referenceID && pageData.unitCode == \"policyholder_1641795142279\") {\r\n              this.mapPartyCustomer(pageData)\r\n            }\r\n            if (pageData.unitCode == \"policyholder_1641795142279\") {\r\n              pageData.controls = pageData.controls.map(cont => {\r\n                cont.disabled = true\r\n                return cont\r\n              })\r\n            }\r\n            this.formData.push(pageData)\r\n          }\r\n\r\n        }\r\n\r\n        if (counter == this.pageOrder.length) {\r\n          this.callback(tempFormData)\r\n        }\r\n\r\n      })\r\n\r\n    }\r\n  }\r\n\r\n  callback(tempFormData) {\r\n    if (this.prodService.editData) {\r\n      this.resourceId = this.prodService.editData.id\r\n      this.getOldData(this.prodService.editData, tempFormData)\r\n    } else if (this.referenceID) {\r\n      this.getOldData({ id: this.referenceID }, tempFormData, true)\r\n    }\r\n    if (this.formData[this.activePage].pageType == 'table') {\r\n      this.reFormatTable(this.formData[this.activePage].controls)\r\n    }\r\n  }\r\n\r\n  staticEvent(event: StaticPageAction) {\r\n    if (event.type == StaticActionType.NEXT) {\r\n      if (event.data) {\r\n        if (event.data.resourceId)\r\n          this.resourceId = event.data.resourceId\r\n      }\r\n      this.nextPage(this.activePage)\r\n    } else if (event.type == StaticActionType.PREV) {\r\n      this.backPage(this.activePage)\r\n    }\r\n  }\r\n\r\n  clickBtn(event: any) {\r\n    this[event]();\r\n  }\r\n\r\n  saveTemp(data: any) {\r\n    let activeForm = this.formData[this.activePage]\r\n    if (this.viewType != 'view') {\r\n      if (activeForm.pageType == \"form\" && this.tempData[activeForm.tableName + activeForm.id]) {\r\n        if (this.tempData[activeForm.tableName + activeForm.id].refId)\r\n          this.updateDataAPI(activeForm, data, this.tempData[activeForm.tableName + activeForm.id].refId)\r\n        else\r\n          this.saveDataAPI(activeForm, data)\r\n      } else\r\n        this.saveDataAPI(activeForm, data)\r\n    } else {\r\n      if (activeForm.pageType == 'table') {\r\n        if (this.tempData[activeForm.tableName + activeForm.id]) {\r\n          (this.tempData[activeForm.tableName + activeForm.id] as any[]).push(data);\r\n        } else {\r\n          this.tempData[activeForm.tableName + activeForm.id] = [data]\r\n        }\r\n        this.cdRef.detectChanges()\r\n      } else {\r\n        this.tempData[activeForm.tableName + activeForm.id] = data\r\n        this.dynForm.newFormCreate(this.formData[this.activePage + 1].controls, this.tempData[this.formData[this.activePage + 1].tableName + this.formData[this.activePage + 1].id])\r\n        this.activePage += 1\r\n        if (this.formData[this.activePage].pageType == 'table') {\r\n          this.reFormatTable(this.formData[this.activePage].controls)\r\n        }\r\n        this.cdRef.detectChanges();\r\n      }\r\n      this.globalFun.tempFormData = this.tempData\r\n    }\r\n  }\r\n\r\n  download(cols: string[], data: any) {\r\n    let value = this.getOtherData(cols, data)\r\n    if (value) {\r\n      let valueId = value.split(\"].\")[0].replace(\"[\", \"\")\r\n      this.downloadService.getDownload(valueId, value)\r\n    }\r\n  }\r\n\r\n  reFormatTable(controls: ConfigInput[]) {\r\n    this.tableReform = []\r\n    let parentArray: string[] = []\r\n    let tempControls: ConfigInput[] = JSON.parse(JSON.stringify(controls))\r\n    for (let x of tempControls) {\r\n      let skip = false\r\n      x.options = x.options ? x.options : []\r\n      if (!x.isHideView) {\r\n        if (x.tableTitle) {\r\n          let index = parentArray.findIndex(data => data == x.tableTitle)\r\n          if (index < 0) {\r\n            parentArray.push(x.tableTitle)\r\n          } else {\r\n            skip = true\r\n          }\r\n          // parentArray.push()\r\n        }\r\n        if (!skip) {\r\n          let tempName = x.master == 'true' ? x.name + \"Value\" : x.name\r\n          let otherNameObj = {\r\n            name: tempName,\r\n            type: x.input,\r\n            subType: x.type,\r\n            options: (x.master == \"false\" || x.master == false) && x.options.length > 0 ? x.options : []\r\n          }\r\n          let tempObj = {\r\n            title: x.tableTitle || x.label || x.name,\r\n            cols: [otherNameObj],\r\n            type: x.input,\r\n            subType: x.type,\r\n            parent: x.dependency ? x.dependency.parentName : \"\",\r\n            options: (x.master == \"false\" || x.master == false) && x.options.length > 0 ? x.options : []\r\n          }\r\n          this.tableReform.push(tempObj)\r\n        } else {\r\n          let index = this.tableReform.findIndex(data => data.parent == x.dependency.parentName)\r\n          if (index >= 0) {\r\n            let tempName = x.master == 'true' ? x.name + \"Value\" : x.name\r\n            let otherNameObj = {\r\n              name: tempName,\r\n              type: x.input,\r\n              subType: x.type,\r\n              options: (x.master == \"false\" || x.master == false) && x.options.length > 0 ? x.options : []\r\n            }\r\n            this.tableReform[index].cols.push(otherNameObj)\r\n          }\r\n        }\r\n        // return x\r\n      }\r\n    }\r\n    this.cdRef.detectChanges()\r\n  }\r\n\r\n  getOtherData(cols: any[], data: any) {\r\n\r\n    for (let col of cols) {\r\n      if (data[col.name]) {\r\n        if ((data[col.name] + \"\").length > 0) {\r\n          let value = \"\"\r\n          if (col.type == \"input\" && col.subType == \"number\") {\r\n            return this.numberPipe.transform(data[col.name])\r\n          }\r\n          if (col.type == \"date\") {\r\n            return this.datePipe.transform(data[col.name], \"dd/MM/yyyy\")\r\n          }\r\n          if (col.options.length > 0) {\r\n            let valueData = col.options.find(x => x.value == data[col.name])\r\n            if (valueData) {\r\n              return valueData.text\r\n            }\r\n          }\r\n          return data[col.name]\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  updateDataAPI(page: FromGroupData, formData: any, refId: number, isTable: number = -1) {\r\n    this.premiumAmt = this.premiumAmt ? this.premiumAmt : \"0\"\r\n    let postData = {\r\n      productId: this.prodService.createingProd.id,\r\n      type: this.viewType,\r\n      tableName: page.tableName,\r\n      resourceId: this.resourceId,\r\n      refId: refId,\r\n      customerId: this.creatingCustomer.customerId,\r\n      quotationId: this.referenceID,\r\n      agentId: this.auth.currentUserValue.id || 1,\r\n      premium: (Number(this.premiumAmt.split(\" \")[0].split(',').join(\"\")) || 0) + \"\",\r\n      premiumView: this.premiumAmt,\r\n      policyNumber: null,\r\n      pageId: page.id,\r\n      leadId: this.creatingLeadId || null,\r\n      party: page.party || false,\r\n      data: [\r\n\r\n      ]\r\n    }\r\n    for (const [key, value] of Object.entries(formData)) {\r\n      let input = page.controls.find(x => x.name == key)\r\n      let valueData = value\r\n      if (input) {\r\n        valueData = input.input == \"input\" && input.type == 'number' ? Number(value) : value\r\n        if (Array.isArray(valueData)) {\r\n          valueData = valueData.join(\"#-#\");\r\n          if (!(valueData as string).includes(\"#-#\")) {\r\n            valueData += \"#+#\"\r\n          }\r\n        }\r\n      }\r\n      // if (input) {\r\n      //   postData.data.push({\r\n      //     \"column\": key,\r\n      //     \"value\": input.input == \"input\" && input.type == 'number' ? Number(value) : value\r\n      //   })\r\n      // } else {\r\n      postData.data.push({\r\n        \"column\": key,\r\n        \"value\": valueData,\r\n        \"party\": input ? input.party || false : false\r\n      })\r\n      // }\r\n    }\r\n    this.pageDataService.updateNoID(postData).pipe(switchMap((data: any) => {\r\n      if (page.pageType == 'table') {\r\n        return this.checkMasterValue(formData, page.controls, data)\r\n      }\r\n      return of(data)\r\n    })).toPromise().then((res) => {\r\n\r\n      if (res) {\r\n        // this.resourceId = res.resourceId\r\n        this.updateDataStatus()\r\n        if (isTable < 0) {\r\n\r\n          this.tempData[page.tableName + page.id] = { ...formData, refId: res.refId }\r\n          if (page.unitCode == \"policyholder_1641795142279\")\r\n            this.tempData['policyholder_1641795142279'] = { ...formData, refId: res.refId }\r\n          if (this.pageOrder.length > this.activePage + 1) {\r\n            this.dynForm.newFormCreate(this.formData[this.activePage + 1].controls, this.tempData[this.formData[this.activePage + 1].tableName + this.formData[this.activePage + 1].id])\r\n            this.activePage += 1\r\n            this.cdRef.detectChanges();\r\n            this.globalFun.tempFormData = this.tempData\r\n            if (this.formData[this.activePage].pageType == 'table') {\r\n              this.reFormatTable(this.formData[this.activePage].controls)\r\n            }\r\n\r\n          } else {\r\n            this.globalFun.tempFormData = this.tempData\r\n            this.goReusltPage()\r\n          }\r\n        } else {\r\n          formData = res.formData\r\n          this.tempData[page.tableName + page.id][isTable] = { ...formData, refId: res.refId }\r\n          this.cdRef.detectChanges();\r\n        }\r\n      }\r\n    })\r\n\r\n  }\r\n\r\n\r\n\r\n  goReusltPage() {\r\n    this.prodService.previewType = this.type\r\n    this.premiumAmt = this.premiumAmt ? this.premiumAmt : \"0\"\r\n\r\n    this.prodService.editData = { id: this.resourceId, premium: (Number(this.premiumAmt.split(\" \")[0].split(',').join(\"\")) || 0) + \"\", premiumView: this.premiumAmt, agentFirstName: this.auth.currentUserValue.firstName, agentLastName: this.auth.currentUserValue.lastName }\r\n    this.router.navigateByUrl(\"/resourse-detail\")\r\n  }\r\n\r\n  saveDataAPI(page: FromGroupData, formData: any) {\r\n    this.premiumAmt = this.premiumAmt ? this.premiumAmt : \"0\"\r\n\r\n    let postData = {\r\n      productId: this.prodService.createingProd.id,\r\n      type: this.viewType,\r\n      tableName: page.tableName,\r\n      resourceId: this.resourceId,\r\n      agentId: this.auth.currentUserValue.id || 1,\r\n      quotationId: this.referenceID,\r\n      pageId: page.id,\r\n      customerId: this.creatingCustomer.customerId,\r\n      leadId: this.creatingLeadId || null,\r\n      premium: (Number(this.premiumAmt.split(\" \")[0].split(',').join(\"\")) || 0) + \"\",\r\n      premiumView: this.premiumAmt,\r\n      policyNumber: null,\r\n      party: page.party || false,\r\n      pageData: [\r\n        {\r\n          data: []\r\n        }\r\n      ]\r\n    }\r\n    for (const [key, value] of Object.entries(formData)) {\r\n      let input = page.controls.find(x => x.name == key)\r\n      let valueData = value\r\n      if (input) {\r\n        valueData = input.input == \"input\" && input.type == 'number' ? Number(value) : value\r\n        if (Array.isArray(valueData)) {\r\n          valueData = valueData.join(\"#-#\")\r\n          if (!(valueData as string).includes(\"#-#\")) {\r\n            valueData += \"#+#\"\r\n          }\r\n        }\r\n      }\r\n      postData.pageData[0].data.push({\r\n        \"column\": key,\r\n        \"value\": valueData,\r\n        \"party\": input ? input.party || false : false\r\n      })\r\n\r\n    }\r\n    this.pageDataService.save(postData).pipe(switchMap((data: any) => {\r\n      if (page.pageType == 'table') {\r\n        return this.checkMasterValue(formData, page.controls, data)\r\n      }\r\n      return of(data)\r\n    })).toPromise().then((res) => {\r\n\r\n      if (res) {\r\n        this.updateDataStatus()\r\n        if (!this.resourceId)\r\n          this.resourceId = res[0].resourceId;\r\n        if (page.pageType == 'table') {\r\n          formData = res[0].formData\r\n          if (this.tempData[page.tableName + page.id]) {\r\n            (this.tempData[page.tableName + page.id] as any[]).push({ ...formData, refId: res[0].refId, pageId: page.id });\r\n          } else {\r\n            this.tempData[page.tableName + page.id] = [{ ...formData, refId: res[0].refId }]\r\n          }\r\n          this.cdRef.detectChanges()\r\n        } else {\r\n          this.tempData[page.tableName + page.id] = { ...formData, refId: res[0].refId, pageId: page.id }\r\n          if (page.unitCode == \"policyholder_1641795142279\")\r\n            this.tempData['policyholder_1641795142279'] = { ...formData, refId: res[0].refId, pageId: page.id }\r\n          if (this.pageOrder.length > this.activePage + 1) {\r\n            if (this.formData[this.activePage + 1].controls) {\r\n              this.dynForm.newFormCreate(this.formData[this.activePage + 1].controls, this.tempData[this.formData[this.activePage + 1].tableName + this.formData[this.activePage + 1].id])\r\n            }\r\n            this.activePage += 1\r\n            this.cdRef.detectChanges();\r\n            this.globalFun.tempFormData = this.tempData\r\n            if (this.formData[this.activePage].pageType == 'table') {\r\n              this.reFormatTable(this.formData[this.activePage].controls)\r\n            }\r\n          } else {\r\n            this.globalFun.tempFormData = this.tempData\r\n            this.goReusltPage()\r\n          }\r\n        }\r\n\r\n      }\r\n\r\n    })\r\n\r\n  }\r\n\r\n  newData(editData?: any, index?: number) {\r\n    const activeForm = this.formData[this.activePage];\r\n    const modalRef = this.modalService.open(FormViewModalComponent, { size: 'xl' });\r\n    modalRef.componentInstance.controls = this.formData[this.activePage].controls\r\n    modalRef.componentInstance.pageName = this.formData[this.activePage].pageTitle\r\n    modalRef.componentInstance.oldData = index >= 0 ? editData : {}\r\n    modalRef.result.then(() => { }, (res) => {\r\n      if (res) {\r\n        if (res.data && res.type == 'save') {\r\n          if (index >= 0) {\r\n            this.updateDataAPI(activeForm, res.data, this.tempData[activeForm.tableName + activeForm.id][index].refId, index)\r\n          } else {\r\n            this.saveTemp(res.data)\r\n          }\r\n        }\r\n      }\r\n    })\r\n  }\r\n\r\n  async create() {\r\n    let activeForm = this.formData[this.activePage]\r\n    if (activeForm.function) {\r\n      let fun = await this.globalFun[activeForm.function](\"\", this.dynForm.form.getRawValue(), [], true)\r\n      if (!fun) {\r\n        return false\r\n      }\r\n    }\r\n    let submited = this.dynForm.handleSubmit()\r\n    if (!submited) return false\r\n    this.dynForm.reCreateFrom()\r\n  }\r\n\r\n  backPage(index) {\r\n    if (this.activePage > 0) {\r\n      this.activePage -= 1\r\n      this.cdRef.detectChanges();\r\n      if (this.formData[this.activePage].type == PageUIType.STATIC && this.formData[this.activePage + 1].type == PageUIType.STATIC) {\r\n        this.staticPage.reCreate()\r\n      }\r\n      else if (this.formData[this.activePage].type == PageUIType.DYN && this.formData[this.activePage].pageType == 'table') {\r\n        this.reFormatTable(this.formData[this.activePage].controls)\r\n      }\r\n    } else {\r\n      this.location.back()\r\n    }\r\n  }\r\n  async nextPage(index, status?: string) {\r\n    // if (status == 'addOns' || status == 'coverages') {\r\n    //   const quoService = status == \"addOns\" ? this.addonQuo : this.coverageQuo\r\n    //   const posDataArray = status == \"addOns\" ? this.addOnData : this.coverageData\r\n    //   for (let add of this.item[status]) {\r\n    //     try {\r\n    //       let postData = {\r\n    //         addonId: add.id,\r\n    //         coverageId: add.id,\r\n    //         quotationNo: this.resourceId,\r\n    //         sumInsured: (posDataArray[add.id].sum || \"\").replace(',', '').replace('MMK', '').replace('USD', ''),\r\n    //         unit: (posDataArray[add.id].unit || \"\").replace(',', '').replace('MMK', '').replace('USD', ''),\r\n    //         premium: (posDataArray[add.id].premium || \"\").replace(',', '').replace('MMK', '').replace('USD', ''),\r\n    //       }\r\n    //       let res = await quoService.save(postData).toPromise()\r\n\r\n    //     } catch (error) {\r\n    //       console.log(error);\r\n\r\n    //     }\r\n\r\n    //   }\r\n    // }\r\n    if (this.pageOrder.length > index + 1) {\r\n      this.updateDataStatus()\r\n      this.activePage += 1\r\n      // if(this.pageOrder[this.activePage + 1].id != 'addon' && this.pageOrder[this.activePage + 1].id != 'coverage')\r\n      // this.dynForm.newFormCreate(this.formData[this.activePage + 1].controls)\r\n      this.cdRef.detectChanges();\r\n      if (this.formData[this.activePage].type == PageUIType.STATIC && this.formData[this.activePage - 1].type == PageUIType.STATIC) {\r\n        this.staticPage.reCreate()\r\n      }\r\n      else if (this.formData[this.activePage].type == PageUIType.DYN && this.formData[this.activePage].pageType == 'table') {\r\n        this.reFormatTable(this.formData[this.activePage].controls)\r\n      }\r\n    } else {\r\n      // this.location.back()\r\n      this.goReusltPage()\r\n    }\r\n  }\r\n\r\n  async next() {\r\n\r\n    // if (this.pageOrder.length > this.activePage + 1) {\r\n    let activeForm = this.formData[this.activePage]\r\n    if (activeForm.function) {\r\n      let fun = await this.globalFun[activeForm.function](\"\", this.dynForm.form.getRawValue(), [], true);\r\n      if (!fun) {\r\n        return false\r\n      }\r\n    }\r\n    let submited = this.dynForm.handleSubmit()\r\n    if (!submited) return false\r\n\r\n    // } else {\r\n    //   this.location.back()\r\n    // }\r\n  }\r\n\r\n  getGlobalFun(funName: string, mainObj: string, mainKey, subKey: string) {\r\n\r\n    if (this.globalFun[funName + \"Result\"]) {\r\n      let unsub = this.globalFun[funName + \"Result\"].subscribe((res) => {\r\n        this[mainObj][mainKey][subKey] = res\r\n        this.cdRef.detectChanges();\r\n      })\r\n      this.unsubscribe.push(unsub)\r\n    } else {\r\n      if (funName)\r\n        this[mainObj][mainKey][subKey] = funName\r\n    }\r\n  }\r\n\r\n  previous() {\r\n    if (this.activePage > 0) {\r\n      this.dynForm.newFormCreate(this.formData[this.activePage - 1].controls, this.tempData[this.formData[this.activePage - 1].tableName + this.formData[this.activePage - 1].id])\r\n      this.activePage -= 1\r\n      this.cdRef.detectChanges();\r\n    } else {\r\n      this.location.back()\r\n    }\r\n  }\r\n\r\n  submit() {\r\n    this.next()\r\n  }\r\n\r\n  reset() {\r\n    this.dynForm.reCreateFrom()\r\n    this.cdRef.detectChanges();\r\n  }\r\n\r\n  deleteData(index, data) {\r\n    let activeForm = this.formData[this.activePage]\r\n    this.pageDataService.deleteData(activeForm.tableName, data.refId, activeForm.id).toPromise().then((res) => {\r\n      if (res) {\r\n        this.tempData[activeForm.tableName + activeForm.id].splice(index, 1)\r\n        this.cdRef.detectChanges();\r\n      }\r\n    })\r\n  }\r\n\r\n\r\n\r\n  getOldData(oldData: QuotationDTO, tempFormData, isRef?: boolean) {\r\n    let counter = 0\r\n    this.pageOrder.forEach((element) => {\r\n\r\n      counter += 1\r\n      if (element.type == PageUIType.DYN) {\r\n\r\n        let page = this.findPageValue(tempFormData, element.id)\r\n        let view = page.pageType == 'table'\r\n        this.pageDataService.getDetail(page.tableName, oldData.id, page.id, view, page.controls, true).toPromise().then(async (res: any) => {\r\n\r\n          if (res && res.length > 0) {\r\n            let temp = page.pageType == 'form' ? {} : []\r\n            let skipId = isRef\r\n            let trgi = false\r\n            if (res.length == 0 && this.type == 'policy' && oldData.quotationId) {\r\n              res = await this.pageDataService.getDetail(page.tableName, oldData.quotationId, page.id, view, page.controls, true).toPromise()\r\n              skipId = true\r\n            }\r\n            for (const data of res) {\r\n              let tmpObj = {}\r\n              for (const item of data.data) {\r\n                if (item.column == 'id' && !skipId) {\r\n                  tmpObj['refId'] = item.value\r\n                }\r\n                if ((item.value + \"\" as string).includes(\"#-#\")) {\r\n                  // trgi = true\r\n                  tmpObj[item.column] = (item.value + \"\" as string).split(\"#-#\")\r\n                } else if ((item.value + \"\" as string).includes(\"#+#\")) {\r\n                  tmpObj[item.column] = [item.value.replace('#+#', \"\")]\r\n                } else {\r\n                  tmpObj[item.column] = item.value\r\n                }\r\n\r\n              }\r\n              if (Array.isArray(temp)) {\r\n                temp.push(tmpObj)\r\n              } else {\r\n                temp = tmpObj\r\n              }\r\n            };\r\n            if ((page.unitCode == \"policyholder_1641795142279\")) {\r\n              temp[\"customer_id\"] = this.creatingCustomer['customerId']\r\n              this.tempData[\"policyholder_1641795142279\"] = temp\r\n            }\r\n            this.tempData[page.tableName + page.id] = temp\r\n            this.globalFun.tempFormData = this.tempData\r\n            if (page.function && page.pageType == 'form') {\r\n              this.globalFun[page.function](\"\", this.tempData[page.tableName + page.id])\r\n            }\r\n            if (element.id == this.formData[this.activePage].id) {\r\n              if (this.formData[this.activePage].pageType == \"form\" && this.formData[this.activePage].type != PageUIType.STATIC) {\r\n                this.cdRef.detectChanges();\r\n                this.dynForm.reCreateFrom()\r\n                this.cdRef.detectChanges();\r\n                // if (trgi) {\r\n                //   this.globalFun.optionResultChange.next(true)\r\n                // }\r\n              }\r\n            }\r\n\r\n          } else {\r\n\r\n            if (page.unitCode == \"policyholder_1641795142279\")\r\n              this.mapPartyCustomer(page)\r\n          }\r\n\r\n        }).catch(e => {\r\n          if (page.unitCode == \"policyholder_1641795142279\")\r\n            this.mapPartyCustomer(page)\r\n        })\r\n      }\r\n\r\n\r\n    });\r\n  }\r\n\r\n  mapPartyCustomer(page: FromGroupData) {\r\n    let temp = {}\r\n    let config = page.controls.find(x => x.name == \"customer_id\")\r\n\r\n    if (config) {\r\n      for (let afield of config.autoFields) {\r\n        temp[afield.value] = this.creatingCustomer[afield.field]\r\n      }\r\n      this.tempData[page.tableName + page.id] = temp\r\n      this.tempData[page.tableName + page.id]['customer_id'] = this.creatingCustomer[\"customerId\"]\r\n      this.globalFun.tempFormData = this.tempData\r\n      this.cdRef.detectChanges();\r\n      if (page.type == PageUIType.DYN && this.dynForm) {\r\n        this.dynForm.reCreateFrom()\r\n        this.cdRef.detectChanges();\r\n      }\r\n    }\r\n  }\r\n\r\n\r\n\r\n  checkDep(dependency, checkData) {\r\n    return checkVaidDep(dependency, { value: checkData })\r\n  }\r\n\r\n  checkMasterValue(res: any, column, otherResponse: any) {\r\n    // otherResponse =  ? otherResponse[0]['formData'] = res : \r\n    if (Array.isArray(otherResponse)) {\r\n      otherResponse[0]['formData'] = res\r\n    } else {\r\n      otherResponse['formData'] = res\r\n    }\r\n    let tempMasterObj = Object.keys(res).filter(x => (res[x] + \"\").includes(\"T-\"))\r\n    if (tempMasterObj.length > 0) {\r\n      let masterObj = tempMasterObj.map(x => {\r\n        let columnName = column.find(col => col.name == x)\r\n        if (columnName.masterData) {\r\n          return {\r\n            \"codeId\": res[x],\r\n            \"codeType\": columnName.masterData,\r\n            \"langCd\": \"EN\"\r\n          }\r\n        }\r\n      })\r\n      let postData = {\r\n        \"codeBookRequest\": masterObj\r\n      }\r\n      let returnObj = res\r\n      return this.masterServer.getMasterValue(postData).pipe(map((masterValues: any) => {\r\n        tempMasterObj.forEach(x => {\r\n          let colName = column.find(col => col.name == x)\r\n          let index = masterValues.findIndex(master => master.codeId == returnObj[x] && colName.masterData == master.codeType)\r\n          if (index >= 0) {\r\n            returnObj[x + \"Value\"] = masterValues[index].codeName\r\n          }\r\n        })\r\n        if (Array.isArray(otherResponse)) {\r\n          otherResponse[0]['formData'] = returnObj\r\n        } else {\r\n          otherResponse['formData'] = returnObj\r\n        }\r\n        return otherResponse\r\n      }))\r\n    }\r\n    return of(otherResponse)\r\n  }\r\n\r\n  updateDataStatus() {\r\n    if (this.referenceID) {\r\n      if (this.referenceStatus == \"in_progress\") {\r\n        let postData = {\r\n          \"resourceId\": this.referenceID,\r\n          \"type\": this.prodService.viewType,\r\n          \"status\": \"complete\"\r\n        }\r\n        this.pageDataService.updatePremimun(postData).toPromise().then((res) => {\r\n          if (res) {\r\n            this.referenceStatus = \"complete\"\r\n            this.prodService.referenceStatus = \"complete\"\r\n          }\r\n        })\r\n      }\r\n    }\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule, DatePipe, DecimalPipe } from '@angular/common';\r\nimport { RouterModule } from '@angular/router';\r\nimport { ProductFormComponent } from './product-form.component';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { InlineSVGModule } from 'ng-inline-svg';\r\nimport { NgbModalModule } from '@ng-bootstrap/ng-bootstrap';\r\nimport { FormComponentModule } from '../form-component/form-component.module';\r\nimport { StaticPagesModule } from '../static-pages/static-pages.module';\r\n\r\n@NgModule({\r\n  declarations: [ProductFormComponent],\r\n  imports: [\r\n    CommonModule,\r\n    InlineSVGModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    NgbModalModule,\r\n    FormComponentModule,\r\n    StaticPagesModule,\r\n    RouterModule.forChild([\r\n      {\r\n        path: '',\r\n        component: ProductFormComponent,\r\n      },\r\n    ]),\r\n  ],\r\n  providers: [DatePipe,DecimalPipe]\r\n})\r\nexport class ProductFormModule {}\r\n","export default \"<div class=\\\"row\\\" *ngIf=\\\"item\\\">\\n  <div class=\\\"col-12\\\">\\n    <div class=\\\"card card-custom gutter-b\\\">\\n      <div class=\\\"card-body\\\">\\n        <div style=\\\"display:flex\\\">\\n          <div class=\\\"top-box\\\" style=\\\"margin-left: 0px\\\">\\n            PRODUCT <br>\\n            <span>{{item.name}}</span>\\n          </div>\\n          <!-- <div class=\\\"top-box\\\">\\n            Customer <br>\\n            <span>Jimmy Tao</span>\\n          </div> -->\\n          <div class=\\\"top-box\\\">\\n            PREMIUM <br>\\n            <span>{{premiumAmt}}</span>\\n          </div>\\n          <!-- <div class=\\\"top-box\\\">\\n            STATUS <br>\\n            <span>Valid</span>\\n          </div> -->\\n          <!-- <div class=\\\"top-box\\\">\\n            Channel <br>\\n            <span>Gary Guo</span>\\n          </div> -->\\n\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n  <div class=\\\"col-12\\\">\\n    <div class=\\\"card card-custom gutter-b\\\">\\n      <!-- <div class=\\\"card-header\\\">\\n        <div class=\\\"card-title\\\">\\n          <h3 class=\\\"card-label\\\">{{item.name}}</h3>\\n        </div>\\n      </div> -->\\n      <div class=\\\"card-body customer-card-body\\\" *ngIf=\\\"formData.length > 0\\\">\\n        <ng-container *ngIf=\\\"viewUI == 'ui3' \\\">\\n          <div class=\\\"wizard wizard-3\\\">\\n            <div class=\\\"kt-grid__item\\\">\\n              <!--begin: Form Wizard Nav -->\\n              <div class=\\\"wizard-nav border-bottom mb-1 mb-lg-5\\\">\\n                <div class=\\\"wizard-steps pt-8\\\">\\n                  <ng-container *ngFor=\\\"let page of pageOrder;let i = index\\\">\\n                    <!-- <a class=\\\"wizard-step\\\" href=\\\"javascript:;\\\"\\n                      *ngIf=\\\"(page.id == 'coverage' && this.item.coverages.length > 0) || page.id == 'addon' && this.item.addOns.length > 0\\\"\\n                      (click)=\\\"changePage(i)\\\">\\n                      <div class=\\\"wizard-label\\\" [ngClass]=\\\"{'active': i == activePage, 'done' : i < activePage }\\\">\\n                        <div class=\\\"wizard-title\\\"><span>{{i+1}}</span> {{page.pageTitle}}</div>\\n                        <div class=\\\"wizard-bar\\\"></div>\\n                      </div>\\n                    </a> *ngIf=\\\"page.id != 'coverage' && page.id != 'addon' \\\"-->\\n                    <a class=\\\"wizard-step\\\" href=\\\"javascript:;\\\" (click)=\\\"changePage(i)\\\">\\n                      <div class=\\\"wizard-label\\\" [ngClass]=\\\"{'active': i == activePage, 'done' : i < activePage }\\\">\\n                        <div class=\\\"wizard-title\\\"><span>{{i+1}}</span> {{page.pageTitle}}</div>\\n                        <div class=\\\"wizard-bar\\\"></div>\\n                      </div>\\n                    </a>\\n                  </ng-container>\\n                </div>\\n              </div>\\n              <!--end: Form Wizard Nav -->\\n            </div>\\n          </div>\\n        </ng-container>\\n        <ng-container *ngIf=\\\"viewUI == 'ui1' \\\">\\n          <div class=\\\"wizard wizard-1\\\" id=\\\"kt_wizard_v1\\\">\\n            <!--begin: Form Wizard Nav -->\\n            <div class=\\\"wizard-nav border-bottom\\\">\\n              <div class=\\\"wizard-steps pt-8\\\">\\n                <ng-container *ngFor=\\\"let page of pageOrder;let i = index\\\">\\n                  <a class=\\\"wizard-step\\\" href=\\\"javascript:;\\\" (click)=\\\"changePage(i)\\\">\\n                    <div class=\\\"wizard-label\\\" [ngClass]=\\\"{'active': i == activePage, 'done' : i < activePage }\\\">\\n                      <i class=\\\"wizard-icon fa {{page.pageIcon}}\\\"></i>\\n                      <h3 class=\\\"wizard-title\\\">{{i+1}}) {{page.pageTitle}}</h3>\\n                    </div>\\n                  </a>\\n                </ng-container>\\n              </div>\\n            </div>\\n          </div>\\n        </ng-container>\\n        <ng-container *ngIf=\\\"viewUI == 'ui2'\\\">\\n          <div class=\\\"wizard wizard-2\\\" id=\\\"kt_wizard_v2\\\">\\n            <div class=\\\"wizard-nav border-right pt-8\\\">\\n              <!--begin: Form Wizard Nav -->\\n              <div class=\\\"wizard-steps\\\">\\n                <ng-container *ngFor=\\\"let page of pageOrder;let i = index\\\">\\n                  <a class=\\\"wizard-step\\\" href=\\\"javascript:;\\\" (click)=\\\"changePage(i)\\\">\\n                    <div class=\\\"wizard-wrapper\\\" [ngClass]=\\\"{'active': i == activePage, 'done' : i < activePage }\\\">\\n                      <div class=\\\"wizard-icon\\\">\\n                        <span class=\\\"fa {{page.pageIcon}}\\\"></span>\\n                      </div>\\n                      <div class=\\\"wizard-label\\\">\\n                        <div class=\\\"wizard-title\\\"> {{page.pageTitle}}</div>\\n                      </div>\\n                    </div>\\n                  </a>\\n                </ng-container>\\n              </div>\\n              <!--end: Form Wizard Nav -->\\n            </div>\\n            <div class=\\\"wizard-body py-8 px-8 py-lg-20 px-lg-10\\\">\\n              <!-- <hr> -->\\n              <ng-container *ngIf=\\\"pageOrder[activePage].type == 'dyn' \\\">\\n                <ng-container *ngIf=\\\"formData[activePage].pageType != 'table' \\\">\\n                  <dynamic-form #dynForm [config]=\\\"formData[activePage].controls\\\" (submit)=\\\"saveTemp($event)\\\"\\n                    [editStage]=\\\"false\\\"\\n                    [tempData]=\\\"tempData[formData[activePage].tableName+formData[activePage].id] || {}\\\"></dynamic-form>\\n                </ng-container>\\n                <ng-container *ngIf=\\\"formData[activePage].pageType == 'table' \\\">\\n                  <div class=\\\"form-group\\\">\\n                    <!-- <button type=\\\"button\\\" class=\\\"btn btn-default\\\" (click)=\\\"reset()\\\">Reset Data</button> -->\\n                    <button type=\\\"button\\\" class=\\\"btn btn-primary mx-2\\\" (click)=\\\"newData()\\\">Add New Data</button>\\n                  </div>\\n                  <hr>\\n                  <div class=\\\"table-responsive angular-bootstrap-table\\\">\\n                    <table class=\\\"table table-head-custom table-vertical-center\\\">\\n                      <thead>\\n                        <tr>\\n                          <th>NO</th>\\n                          <ng-container *ngFor=\\\"let item of tableReform\\\">\\n                            <th>{{item.title}}</th>\\n                          </ng-container>\\n                          <th>Action</th>\\n                        </tr>\\n                      </thead>\\n                      <tbody>\\n                        <ng-container *ngIf=\\\"tempData[formData[activePage].tableName+formData[activePage].id]\\\">\\n                          <tr\\n                            *ngFor=\\\"let item of tempData[formData[activePage].tableName+formData[activePage].id];let i = index\\\">\\n                            <td>{{i+1}}</td>\\n                            <ng-container *ngFor=\\\"let control of formData[activePage].controls\\\">\\n\\n                              <td *ngIf=\\\"control.input != 'file'\\\">{{getOtherData(control.cols,item) }}</td>\\n                              <td *ngIf=\\\"control.input == 'file'\\\">\\n                                <a href=\\\"javascript:;\\\" (click)=\\\"download(control.cols,item)\\\">\\n                                  {{getOtherData(control.cols,item) }}\\n                                </a>\\n                              </td>\\n                            </ng-container>\\n                            <td style=\\\"white-space: nowrap;\\\">\\n                              <a title=\\\"Edit Data\\\" class=\\\"btn btn-icon btn-light btn-hover-danger btn-sm mx-1\\\"\\n                                (click)=\\\"newData(item,i)\\\">\\n                                <span [inlineSVG]=\\\"'./assets/media/svg/icons/Communication/Write.svg'\\\" [cacheSVG]=\\\"true\\\"\\n                                  class=\\\"svg-icon svg-icon-md svg-icon-primary\\\">\\n                                </span>\\n                              </a>\\n                              <a title=\\\"Delete Data\\\" class=\\\"btn btn-icon btn-light btn-hover-danger btn-sm\\\"\\n                                (click)=\\\"deleteData(i,item)\\\">\\n                                <span [inlineSVG]=\\\"'./assets/media/svg/icons/General/Trash.svg'\\\" [cacheSVG]=\\\"true\\\"\\n                                  class=\\\"svg-icon svg-icon-md svg-icon-danger\\\">\\n                                </span>\\n                              </a>\\n                            </td>\\n                          </tr>\\n                        </ng-container>\\n                      </tbody>\\n                    </table>\\n                  </div>\\n                </ng-container>\\n                <ng-container *ngIf=\\\"formData[activePage].pageType != 'table'\\\">\\n                  <hr>\\n                  <div class=\\\"row\\\">\\n                    <div app-button-box *ngFor=\\\"let contact of formData[activePage].buttons; let i = index\\\"\\n                      [config]=\\\"contact\\\" (eventE)=\\\"clickBtn($event)\\\" [index]=\\\"i\\\" [editStage]=\\\"false\\\"\\n                      class=\\\"col-xs-{{contact.size}} col-sm-{{contact.size}} {{contact.position}} mt-2\\\"></div>\\n                  </div>\\n                </ng-container>\\n                <ng-container *ngIf=\\\"formData[activePage].pageType == 'table'\\\">\\n                  <hr>\\n                  <div class=\\\"row\\\">\\n                    <div class=\\\"col-sm-6 mx-auto\\\">\\n                      <button class=\\\"btn btn-block btn-secondary\\\" (click)=\\\"backPage(activePage)\\\"> Previous </button>\\n                    </div>\\n                    <div class=\\\"col-sm-6 mx-auto\\\">\\n                      <button class=\\\"btn btn-block btn-primary\\\" (click)=\\\"nextPage(activePage)\\\"> Save & Next </button>\\n                    </div>\\n                  </div>\\n                </ng-container>\\n              </ng-container>\\n              <ng-container *ngIf=\\\"pageOrder[activePage].type == 'static'\\\">\\n                <ng-container staticPage [compId]=\\\"pageOrder[activePage].id\\\" [product]=\\\"item\\\" [editData]=\\\"editData\\\"\\n                  [resourcesId]=\\\"resourceId\\\" [premiumAmt]=\\\"premiumAmt\\\" (eventOut)=\\\"staticEvent($event)\\\">\\n                </ng-container>\\n              </ng-container>\\n              <!-- <ng-container *ngIf=\\\"pageOrder[activePage].id == 'addon'\\\">\\n                <table class=\\\"table table-bordered\\\">\\n                  <thead>\\n                    <tr>\\n                      <th>\\n                        AddOn\\n                      </th>\\n                      <th *ngIf=\\\"addon.isSum\\\">\\n                        Sum Insured\\n                      </th>\\n                      <th *ngIf=\\\"addon.isUnit\\\">\\n                        Unit\\n                      </th>\\n                      <th *ngIf=\\\"addon.isPremium\\\">\\n                        Premium\\n                      </th>\\n                    </tr>\\n                  </thead>\\n                  <tbody>\\n                    <tr *ngFor=\\\"let addOn of item.addOns;let i = index\\\">\\n                      <td>{{addOn.description}}</td>\\n                      <td *ngIf=\\\"addOn.sumInsured\\\">\\n                        <ng-container *ngIf=\\\"!addOn.sumInsuredStr\\\">\\n                          <input type=\\\"text\\\" class=\\\"form-control form-control-sm\\\" [(ngModel)]=\\\"addOnData[addOn.id].sum\\\">\\n                        </ng-container>\\n                        <ng-container *ngIf=\\\"addOn.sumInsuredStr\\\">\\n                          {{addOnData[addOn.id].sum}}\\n                        </ng-container>\\n                      </td>\\n                      <td *ngIf=\\\"addOn.unit\\\">\\n                        <ng-container *ngIf=\\\"!addOn.unitStr\\\">\\n                          <input type=\\\"text\\\" class=\\\"form-control form-control-sm\\\" [(ngModel)]=\\\"addOnData[addOn.id].unit\\\">\\n                        </ng-container>\\n                        <ng-container *ngIf=\\\"addOn.unitStr\\\">\\n                          {{addOnData[addOn.id].unit}}\\n                        </ng-container>\\n                      </td>\\n                      <td *ngIf=\\\"addOn.premium\\\">\\n                        <ng-container *ngIf=\\\"!addOn.premiumStr\\\">\\n                          <input type=\\\"text\\\" class=\\\"form-control form-control-sm\\\" [(ngModel)]=\\\"addOnData[addOn.id].premium\\\">\\n                        </ng-container>\\n                        <ng-container *ngIf=\\\"addOn.premiumStr\\\">\\n                          {{addOnData[addOn.id].premium}}\\n                        </ng-container>\\n                      </td>\\n                    </tr>\\n                  </tbody>\\n                </table>\\n                <hr>\\n                <div class=\\\"row\\\">\\n                  <div class=\\\"col-sm-3 mx-auto\\\">\\n                    <button class=\\\"btn btn-block btn-default\\\" (click)=\\\"backPage(activePage)\\\"> Back </button>\\n                  </div>\\n                  <div class=\\\"col-sm-3 mx-auto\\\">\\n                    <button class=\\\"btn btn-block btn-success\\\" (click)=\\\"nextPage(activePage,'addOns')\\\"> {{ activePage + 1\\n                      < pageOrder.length ? \\\"Next\\\" : \\\"Save\\\" }} {{ activePage + 1 < pageOrder.length ? \\\"\\\" : (type |\\n                        titlecase) }} </button>\\n                  </div>\\n                </div>\\n              </ng-container> -->\\n            </div>\\n          </div>\\n        </ng-container>\\n        <ng-container *ngIf=\\\"viewUI != 'ui2'\\\">\\n          <div class=\\\"pb-5\\\">\\n            <div class=\\\"mt-5\\\"></div>\\n            <!-- <hr> -->\\n            <ng-container *ngIf=\\\"pageOrder[activePage].type == 'dyn' \\\">\\n              <ng-container *ngIf=\\\"formData[activePage].pageType != 'table' \\\">\\n                <dynamic-form #dynForm\\n                  [tempData]=\\\"tempData[formData[activePage].tableName+formData[activePage].id] || {}\\\"\\n                  [config]=\\\"formData[activePage].controls\\\" (submit)=\\\"saveTemp($event)\\\" [editStage]=\\\"false\\\">\\n                </dynamic-form>\\n              </ng-container>\\n              <ng-container *ngIf=\\\"formData[activePage].pageType == 'table' \\\">\\n                <div class=\\\"form-group\\\">\\n                  <!-- <button type=\\\"button\\\" class=\\\"btn btn-default\\\" (click)=\\\"reset()\\\">Reset Data</button> -->\\n                  <button type=\\\"button\\\" class=\\\"btn btn-primary mx-2\\\" (click)=\\\"newData()\\\">Add New Data</button>\\n                </div>\\n                <hr>\\n                <div class=\\\"table-responsive angular-bootstrap-table\\\">\\n                  <table class=\\\"table table-head-custom table-vertical-center\\\">\\n                    <thead>\\n                      <tr>\\n                        <th>NO</th>\\n                        <ng-container *ngFor=\\\"let item of tableReform\\\">\\n                          <th>{{item.title}}</th>\\n                        </ng-container>\\n                        <th>Action</th>\\n                      </tr>\\n                    </thead>\\n                    <tbody>\\n                      <ng-container *ngIf=\\\"tempData[formData[activePage].tableName+formData[activePage].id]\\\">\\n                        <tr\\n                          *ngFor=\\\"let item of tempData[formData[activePage].tableName+formData[activePage].id];let i = index\\\">\\n                          <td>{{i+1}}</td>\\n                          <ng-container *ngFor=\\\"let control of tableReform\\\">\\n\\n                            <td *ngIf=\\\"control.type != 'file'\\\">{{ getOtherData(control.cols,item) }}</td>\\n                            <td *ngIf=\\\"control.type == 'file'\\\">\\n                              <a href=\\\"javascript:;\\\" (click)=\\\"download(control.cols,item)\\\">\\n                                {{getOtherData(control.cols,item)}}\\n                              </a>\\n                            </td>\\n                          </ng-container>\\n                          <td style=\\\"white-space: nowrap;\\\">\\n                            <a title=\\\"Edit Data\\\" class=\\\"btn btn-icon btn-light btn-hover-danger btn-sm mx-1\\\"\\n                              (click)=\\\"newData(item,i)\\\">\\n                              <span [inlineSVG]=\\\"'./assets/media/svg/icons/Communication/Write.svg'\\\" [cacheSVG]=\\\"true\\\"\\n                                class=\\\"svg-icon svg-icon-md svg-icon-primary\\\">\\n                              </span>\\n                            </a>\\n                            <a title=\\\"Delete UI\\\" class=\\\"btn btn-icon btn-light btn-hover-danger btn-sm\\\"\\n                              (click)=\\\"deleteData(i,item)\\\">\\n                              <span [inlineSVG]=\\\"'./assets/media/svg/icons/General/Trash.svg'\\\" [cacheSVG]=\\\"true\\\"\\n                                class=\\\"svg-icon svg-icon-md svg-icon-danger\\\">\\n                              </span>\\n                            </a>\\n                          </td>\\n                        </tr>\\n                      </ng-container>\\n                    </tbody>\\n                  </table>\\n                </div>\\n              </ng-container>\\n              <ng-container *ngIf=\\\"formData[activePage].pageType != 'table'\\\">\\n                <hr>\\n                <div class=\\\"row\\\">\\n                  <div app-button-box *ngFor=\\\"let contact of formData[activePage].buttons; let i = index\\\"\\n                    [config]=\\\"contact\\\" (eventE)=\\\"clickBtn($event)\\\" [index]=\\\"i\\\" [editStage]=\\\"false\\\"\\n                    class=\\\"col-xs-{{contact.size}} col-sm-{{contact.size}} {{contact.position}} mt-2\\\"></div>\\n                </div>\\n              </ng-container>\\n              <ng-container *ngIf=\\\"formData[activePage].pageType == 'table'\\\">\\n                <hr>\\n                <div class=\\\"row\\\">\\n                  <div class=\\\"col-sm-6 mx-auto\\\">\\n                    <button class=\\\"btn btn-block btn-secondary\\\" (click)=\\\"backPage(activePage)\\\"> Previous </button>\\n                    <!-- <button class=\\\"btn btn-block btn-default\\\" (click)=\\\"backPage(activePage)\\\">  {{ activePage + 1 <\\n                        pageOrder.length ? \\\"Next\\\" : \\\"Save\\\" }} {{ activePage + 1 < pageOrder.length ? \\\"\\\" : (type |\\n                        titlecase) }}Back </button> -->\\n                  </div>\\n                  <div class=\\\"col-sm-6 mx-auto\\\">\\n                    <button class=\\\"btn btn-block btn-primary\\\" (click)=\\\"nextPage(activePage)\\\"> Save & Next </button>\\n                  </div>\\n                </div>\\n              </ng-container>\\n            </ng-container>\\n            <ng-container *ngIf=\\\"pageOrder[activePage].type == 'static'\\\">\\n              <ng-container staticPage [compId]=\\\"pageOrder[activePage].id\\\" [product]=\\\"item\\\" [editData]=\\\"editData\\\"\\n                [resourcesId]=\\\"resourceId\\\" [premiumAmt]=\\\"premiumAmt\\\" (eventOut)=\\\"staticEvent($event)\\\">\\n              </ng-container>\\n            </ng-container>\\n            <!-- <ng-container *ngIf=\\\"pageOrder[activePage].id == 'addon'\\\">\\n              <table class=\\\"table table-bordered\\\">\\n                <thead>\\n                  <tr>\\n                    <th>\\n                      AddOn\\n                    </th>\\n                    <th *ngIf=\\\"addon.isSum\\\">\\n                      Sum Insured\\n                    </th>\\n                    <th *ngIf=\\\"addon.isUnit\\\">\\n                      Unit\\n                    </th>\\n                    <th *ngIf=\\\"addon.isPremium\\\">\\n                      Premium\\n                    </th>\\n                  </tr>\\n                </thead>\\n                <tbody>\\n                  <tr *ngFor=\\\"let addOn of item.addOns;let i = index\\\">\\n                    <td>{{addOn.description}}</td>\\n                    <td *ngIf=\\\"addOn.sumInsured\\\">\\n                      <ng-container *ngIf=\\\"!addOn.sumInsuredStr\\\">\\n                        <input type=\\\"text\\\" class=\\\"form-control form-control-sm\\\" [(ngModel)]=\\\"addOnData[addOn.id].sum\\\">\\n                      </ng-container>\\n                      <ng-container *ngIf=\\\"addOn.sumInsuredStr\\\">\\n                        {{addOnData[addOn.id].sum}}\\n                      </ng-container>\\n                    </td>\\n                    <td *ngIf=\\\"addOn.unit\\\">\\n                      <ng-container *ngIf=\\\"!addOn.unitStr\\\">\\n                        <input type=\\\"text\\\" class=\\\"form-control form-control-sm\\\" [(ngModel)]=\\\"addOnData[addOn.id].unit\\\">\\n                      </ng-container>\\n                      <ng-container *ngIf=\\\"addOn.unitStr\\\">\\n                        {{addOnData[addOn.id].unit}}\\n                      </ng-container>\\n                    </td>\\n                    <td *ngIf=\\\"addOn.premium\\\">\\n                      <ng-container *ngIf=\\\"!addOn.premiumStr\\\">\\n                        <input type=\\\"text\\\" class=\\\"form-control form-control-sm\\\" [(ngModel)]=\\\"addOnData[addOn.id].premium\\\">\\n                      </ng-container>\\n                      <ng-container *ngIf=\\\"addOn.premiumStr\\\">\\n                        {{addOnData[addOn.id].premium}}\\n                      </ng-container>\\n                    </td>\\n                  </tr>\\n                </tbody>\\n              </table>\\n              <hr>\\n              <div class=\\\"row\\\">\\n                <div class=\\\"col-sm-3 mx-auto\\\">\\n                  <button class=\\\"btn btn-block btn-default\\\" (click)=\\\"backPage(activePage)\\\"> Back </button>\\n                </div>\\n                <div class=\\\"col-sm-3 mx-auto\\\">\\n                  <button class=\\\"btn btn-block btn-success\\\" (click)=\\\"nextPage(activePage,'addOns')\\\"> {{ activePage + 1 <\\n                      pageOrder.length ? \\\"Next\\\" : \\\"Save\\\" }} {{ activePage + 1 < pageOrder.length ? \\\"\\\" : (type |\\n                      titlecase) }} </button>\\n                </div>\\n              </div>\\n            </ng-container> -->\\n          </div>\\n        </ng-container>\\n      </div>\\n    </div>\\n  </div>\\n</div>\";"],"names":[],"sourceRoot":"webpack:///"}