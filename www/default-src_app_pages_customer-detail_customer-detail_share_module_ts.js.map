{"version":3,"file":"default-src_app_pages_customer-detail_customer-detail_share_module_ts.js","mappings":"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","sources":["./src/app/pages/activity-management-list/activity-manage.const.ts","./src/app/pages/customer-detail/customer-detail.component.ts","./src/app/pages/customer-detail/customer-detail.share.module.ts","./src/app/pages/customer-detail/customer.service.ts","./src/app/pages/fna-list/fna.list.const.ts","./src/app/pages/lead-detail/FNA-list.const.ts","./src/app/pages/policy/list/policy.const.ts","./src/app/pages/quotations/list/quotation.const.ts","./src/app/pages/customer-detail/customer-detail.component.html"],"sourcesContent":["import { COLTYPE, TableCol } from '../../_metronic/shared/crud-table/components/material-table-view/table-dto'\nexport const ActivityCol: TableCol[] = [\n  {\n    title: \"Activity No.\",\n    type: COLTYPE.FEILD,\n    field: \"activityNo\",\n    // amtFormat?: boolean,\n    // isTitle?: boolean\n    // isDate?: boolen\n  },\n  {\n    title: \"Activity Type\",\n    type: COLTYPE.FEILD,\n    field: \"activityType\",\n    // amtFormat?: boolean,\n    // isTitle?: boolean\n    // isDate?: boolen\n  },\n  {\n    title: \"Activity Title\",\n    type: COLTYPE.FEILD,\n    field: \"activityTitle\",\n    // amtFormat?: boolean,\n    // isTitle?: boolean\n    // isDate?: boolen\n  },\n  // {\n  //   title: \"Related Type\",\n  //   type: COLTYPE.FEILD,\n  //   field: \"relatedType\",\n  //   // amtFormat?: boolean,\n  //   isTitle: true\n  //   // isDate?: boolen\n  // },\n\n  {\n    title: \"Related To\",\n    type: COLTYPE.FEILD,\n    field: \"relatedTo\",\n    // amtFormat?: boolean,\n    // isTitle?: boolean\n    // isDate?: boolen\n  },\n  {\n    title: \"Assigned To\",\n    type: COLTYPE.FEILD,\n    field: \"assignName\",\n    // isTitle?: boolean\n    // isDate?: boolen\n  },\n  {\n    title: \"Due Date\",\n    type: COLTYPE.FEILD,\n    field: \"dueDate\",\n    isFromatDate: true\n  },\n  {\n    title: \"Status\",\n    type: COLTYPE.FEILD,\n    field: \"status\",\n    isActivityStatus: true,\n    // amtFormat?: boolean,\n    // isTitle?: boolean\n  },\n  {\n    title: \"Customer\",\n    type: COLTYPE.FEILD,\n    field: \"customerName\",\n    // amtFormat?: boolean,\n    // isTitle?: boolean\n  },\n  {\n    title: \"Actions\",\n    type: COLTYPE.ACTION,\n    field: \"actions\",\n    btn: {\n      edit: true\n    }\n    // amtFormat?: boolean,\n    // isTitle?: boolean\n    // isDate?: boolen\n  },\n]\n\nexport const ActivityDisplayCol: string[] = [\n  \"activityNo\",\n  \"activityType\",\n  \"activityTitle\",\n  // \"relatedType\",\n  \"relatedTo\",\n  \"assignName\",\n  \"dueDate\",\n  \"status\",\n  \"customerName\",\n  \"actions\",\n]","import { Location } from '@angular/common';\nimport { AfterViewInit, ChangeDetectorRef, Component, Input, OnInit, ViewChild } from '@angular/core';\nimport { FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\nimport { MAT_MOMENT_DATE_FORMATS, MomentDateAdapter } from '@angular/material-moment-adapter';\nimport { DateAdapter, MAT_DATE_FORMATS, MAT_DATE_LOCALE } from '@angular/material/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\nimport * as moment from 'moment';\nimport { map } from 'rxjs/operators';\nimport { validateAllFields } from 'src/app/core/valid-all-feild';\nimport { AlertService } from 'src/app/modules/loading-toast/alert-model/alert.service';\nimport { MasterDataService } from 'src/app/modules/master-data/master-data.service';\nimport { AttachmentDownloadService, AttachmentServiceRef, AttachmentUploadService } from 'src/app/_metronic/core/services/attachment-data.service';\nimport { MaterialTableViewComponent } from 'src/app/_metronic/shared/crud-table/components/material-table-view/material-table-view.component';\nimport { MY_FORMATS } from '../../core/is-json';\nimport { ActivityCol, ActivityDisplayCol } from '../activity-management-list/activity-manage.const';\nimport { FNAListCol } from '../fna-list/fna.list.const';\nimport { CustomInputAlertComponent } from '../form-component/custom-input-alert/custom-input-alert.component';\nimport { NrcPopupPage } from '../form-component/nrc-popup/nrc-popup.page';\nimport { AttachmentCol, AttachmentDisplayCol, FNACol, FNADisplayCol } from '../lead-detail/FNA-list.const';\nimport { PolicyCol, PolicyDisplayCol } from '../policy/list/policy.const';\nimport { ProductsComponent } from '../products/products.component';\nimport { ProductDataService } from '../products/services/products-data.service';\nimport { QuoDisplayCol, QuotationCol } from '../quotations/list/quotation.const';\nimport { District, Nationality, Occupation, State, Status, Township } from './custmer.dto';\nimport { GenderOption, TitleOption } from './customer.const';\nimport { CustomerService } from './customer.service';\n\n@Component({\n  selector: 'app-customer-detail',\n  templateUrl: './customer-detail.component.html',\n  styleUrls: ['./customer-detail.component.scss'],\n  providers: [\n    { provide: DateAdapter, useClass: MomentDateAdapter, deps: [MAT_DATE_LOCALE] },\n    { provide: MAT_DATE_FORMATS, useValue: MY_FORMATS },\n  ]\n})\n\nexport class CustomerDetailComponent implements OnInit, AfterViewInit {\n  @ViewChild('fna') fnamatTable: MaterialTableViewComponent;\n  @ViewChild('activity') activitymatTable: MaterialTableViewComponent;\n  @ViewChild('application') applicationmatTable: MaterialTableViewComponent;\n  @ViewChild('attachment') attachmentmatTable: MaterialTableViewComponent;\n  @ViewChild('quotation') quotationmatTable: MaterialTableViewComponent;\n  FNAELEMENT_COL: any[] = JSON.parse(JSON.stringify(FNAListCol));\n  FNAdisplayedColumns: any[] = JSON.parse(JSON.stringify(FNADisplayCol));\n  ACTIVITY_ELEMENT_COL: any[] = JSON.parse(JSON.stringify(ActivityCol));\n  ACTIVITYdisplayedColumns: any[] = JSON.parse(JSON.stringify(ActivityDisplayCol));\n  QUOTATION_ELEMENT_COL: any[] = JSON.parse(JSON.stringify(QuotationCol));\n  QuotationdisplayedColumns: any[] = JSON.parse(JSON.stringify(QuoDisplayCol));\n  APPLICATION_ELEMENT_COL: any[] = JSON.parse(JSON.stringify(PolicyCol));\n  ApplicationdisplayedColumns: any[] = JSON.parse(JSON.stringify(PolicyDisplayCol));\n  ATTACHMENT_ELEMENT_COL: any[] = JSON.parse(JSON.stringify(AttachmentCol))\n  AttachmentdisplayedColumns: any[] = JSON.parse(JSON.stringify(AttachmentDisplayCol))\n  // ATTACHMENT_ELEMENT_COL = JSON.parse(JSON.stringify(FNAListCol));\n  // AttachmentdisplayedColumns = JSON.parse(JSON.stringify(FNADisplayCol));\n\n  fnaList: any[] = [];\n  activityList: any[] = [];\n  quatationList: any[] = [];\n  applicationList: any[] = [];\n  attachmentList: any[] = [];\n  config: any = {\n    name: \"identityNumber\"\n  }\n  group: FormGroup;\n  toMinDate = null\n  fromMinDate = null\n  toMaxDate = null\n  fromMaxDate = null\n  @Input() isPopup: boolean = false\n  @Input() pageStatus: any;\n  @Input() isLead: boolean = false\n  customerForm: FormGroup;\n\n  nationalityOption: Nationality[] = [];\n  occupationOption: Occupation[] = [];\n  statusOption: Status[] = [];\n  stateOption: State[] = [];\n  districtOption: District[] = [];\n  townshipOption: Township[] = [];\n\n\n  genderOption = [];\n  titleOption = [];\n\n  oldId: any;\n  oldSecondaryId: any;\n  oldData: any;\n  public tabs: Array<\n    {\n      name: string,\n      active: boolean\n    }> = [\n      {\n        name: 'FNA',\n        active: false\n      },\n      {\n        name: 'Activity',\n        active: false\n      },\n      {\n        name: 'Quotation',\n        active: false\n      },\n      {\n        name: 'Application',\n        active: false\n      },\n      {\n        name: 'Attachment',\n        active: false\n      }\n    ]\n  isFNA: boolean = false\n  isApplication: boolean = false\n  isAttachment: boolean = false\n  isQuotation: boolean = false\n  isActivity: boolean = false\n  isMenuOpen: boolean = false\n  isMore: boolean = false\n  isDetail: boolean = true\n  description: string = \"\"\n  constructor(private fb: FormBuilder,\n    private location: Location,\n    private masterDataService: MasterDataService,\n    private route: ActivatedRoute,\n    private customerService: CustomerService,\n    private modalService: NgbModal,\n    private cdf: ChangeDetectorRef,\n    private prodctService: ProductDataService,\n    private router: Router,\n    private AttachmentUploadService: AttachmentUploadService,\n    private CustomerAttachmentService: AttachmentServiceRef,\n    private AttachmentDownloadService: AttachmentDownloadService,\n    private alertService:AlertService\n  ) {\n    this.ACTIVITYdisplayedColumns.splice(8,1)\n    this.QuotationdisplayedColumns.splice(7,2)\n    this.ApplicationdisplayedColumns.splice(7,1)\n  }\n\n  ngOnInit(): void {\n    this.getTitle();\n    this.getGender();\n    this.getOccupation();\n    this.getNationality();\n    this.getStatus();\n    this.getState();\n    this.loadForm();\n    this.route.queryParams\n      .subscribe(params => {\n        this.pageStatus = params.pageStatus;\n        if (this.pageStatus != 'create' && !this.isPopup) {\n          this.oldId = params.pageId;\n          this.oldSecondaryId = params.pageSecondaryId;\n          this.getOld()\n\n\n        } else {\n\n          this.loadForm(this.oldData);\n          if (this.isLead) {\n            this.customerForm.controls['statusCode'].setValue('A')\n          }\n        }\n      }\n      );\n\n\n  }\n\n\n\n  ngAfterViewInit() {\n    //  this.getNationality();\n\n  }\n\n  getNationality() {\n    this.masterDataService.getDataByType(\"NATIONALITY\").pipe(map(x => this.getFormatOpt(x))).toPromise().then((res: any) => {\n      if (res) {\n        this.nationalityOption = res\n        this.cdf.detectChanges()\n      }\n    });\n  }\n\n  getTitle() {\n    this.masterDataService.getDataByType(\"TITLE\").pipe(map(x => this.getFormatOpt(x))).toPromise().then((res: any) => {\n      if (res) {\n        this.titleOption = res\n        this.cdf.detectChanges()\n      }\n    })\n  }\n\n  getGender() {\n    this.masterDataService.getDataByType(\"TB_GENDER\").pipe(map(x => this.getFormatOpt(x))).toPromise().then((res: any) => {\n      if (res) {\n        this.genderOption = res\n        this.cdf.detectChanges()\n      }\n    })\n  }\n\n  getOccupation() {\n    this.masterDataService.getDataByType(\"OCCUPATION\").pipe(map(x => this.getFormatOpt(x))).toPromise().then((res: any) => {\n      if (res) {\n        this.occupationOption = res\n        this.cdf.detectChanges()\n      }\n    })\n  }\n\n  getStatus() {\n    this.masterDataService.getDataByType(\"CUST_STATUS\").pipe(map(x => this.getFormatOpt(x))).toPromise().then((res: any) => {\n      if (res) {\n        this.statusOption = res\n        console.log(\"  this.statusOption \", this.statusOption)\n        this.cdf.detectChanges()\n      }\n    })\n  }\n\n  getFormatOpt(res) {\n    return res.map(x => {\n      return { 'code': x.codeId, 'value': x.codeName || x.codeValue }\n    })\n  }\n\n  getState() {\n    this.masterDataService.getDataByType(\"STATE\", true).pipe(map(x => this.getFormatOpt(x))).toPromise().then((res: any) => {\n      if (res) {\n        this.stateOption = res\n        this.cdf.detectChanges()\n      }\n    });\n  }\n\n\n\n  getDistrict(parentId: string) {\n    this.masterDataService.getAddressDataByType(\"DISTRICT\", parentId).pipe(map(x => this.getFormatOpt(x))).toPromise().then((res: any) => {\n      if (res) {\n        this.districtOption = res\n        this.cdf.detectChanges()\n      }\n    });\n  }\n  getTownship(parentId: string) {\n    this.masterDataService.getAddressDataByType(\"TOWNSHIP\", parentId).pipe(map(x => this.getFormatOpt(x))).toPromise().then((res: any) => {\n      if (res) {\n        this.townshipOption = res\n        this.cdf.detectChanges()\n      }\n    });\n  }\n\n  getOld() {\n    this.customerService.findOne(this.oldId).toPromise().then((res) => {\n      if (res) {\n        console.log(\"RESSSS\", res)\n        this.oldData = res\n        // this.fnaList= this.oldData.fna\n        this.activityList = this.oldData.activities != null ? this.oldData.activities : []\n        this.quatationList = this.oldData.resourceQuotations != null ? this.oldData.resourceQuotations : []\n        this.applicationList = this.oldData.resourcePolicies != null ? this.oldData.resourcePolicies : []\n        this.attachmentList = this.oldData.attachments != null ? this.oldData.attachments : []\n        this.loadForm(res)\n        this.onInitAddress(this.oldData)\n        this.cdf.detectChanges()\n        this.activitymatTable.reChangeData()\n        this.fnamatTable.reChangeData()\n        this.attachmentmatTable.reChangeData()\n        this.quotationmatTable.reChangeData()\n        this.applicationmatTable.reChangeData()\n      }\n    })\n  }\n\n  loadForm(oldData?) {\n    let disabledForm = oldData ? oldData.partyCode ? true : false : false\n    this.customerForm = null\n    this.cdf.detectChanges()\n    this.customerForm = new FormGroup({\n      \"titleCode\": new FormControl({ value: oldData ? oldData.titleCode : '', disabled: disabledForm }, Validators.required),\n      \"firstName\": new FormControl({ value: oldData ? oldData.firstName : '', disabled: disabledForm }, Validators.required),\n      \"lastName\": new FormControl({ value: oldData ? oldData.lastName : '', disabled: disabledForm }, Validators.required),\n      \"middleName\": new FormControl({ value: oldData ? oldData.middleName : '', disabled: disabledForm },),\n      \"genderCode\": new FormControl({ value: oldData ? oldData.genderCode : '', disabled: disabledForm }, Validators.required),\n      \"nationalityCode\": new FormControl({ value: oldData ? oldData.nationalityCode : '', disabled: disabledForm }, Validators.required),\n      \"identityType\": new FormControl({ value: oldData ? oldData.identityType : '', disabled: disabledForm }, Validators.required),\n      \"identityNumber\": new FormControl({ value: oldData ? oldData.identityNumber : '', disabled: disabledForm }, Validators.required),\n      \"statusCode\": new FormControl({ value: oldData ? oldData.statusCode : 'A', disabled: disabledForm || this.isLead }, Validators.required),\n      \"partyCode\": new FormControl({ value: oldData ? oldData.partyCode : '', disabled: disabledForm }),\n      \"fatherName\": new FormControl({ value: oldData ? oldData.fatherName : '', disabled: disabledForm }),\n      \"phone\": new FormControl({ value: oldData ? oldData.phone : '', disabled: disabledForm }, [Validators.required, Validators.maxLength(11), Validators.minLength(9)]),\n      \"email\": new FormControl({ value: oldData ? oldData.email : '', disabled: disabledForm }, [Validators.email, Validators.required]),\n      \"dateOfBirth\": new FormControl({ value: !oldData ? null : oldData.dateOfBirth ? moment(oldData.dateOfBirth) : null, disabled: disabledForm, }, Validators.required),\n      \"occupationCode\": new FormControl({ value: oldData ? oldData.occupationCode : '', disabled: disabledForm }),\n      \"houseNumber\": new FormControl({ value: oldData ? oldData.houseNumber : '', disabled: disabledForm }, Validators.required),\n      \"road\": new FormControl({ value: oldData ? oldData.road : '', disabled: disabledForm }, Validators.required),\n      \"blockArea\": new FormControl({ value: oldData ? oldData.blockArea : '', disabled: disabledForm }, Validators.required),\n      \"townshipCode\": new FormControl({ value: oldData ? oldData.townshipCode : '', disabled: disabledForm }, Validators.required),\n      \"districtCode\": new FormControl({ value: oldData ? oldData.districtCode : '', disabled: disabledForm }, Validators.required),\n      \"stateCode\": new FormControl({ value: oldData ? oldData.stateCode : '', disabled: disabledForm }, Validators.required),\n      \"companyName\": new FormControl({ value: 'IKBZG', disabled: true })\n    });\n\n  }\n  clearDOB(type) {\n    if (type == 'dateOfBirth') {\n      this.customerForm.controls['dateOfBirth'].setValue(null);\n    }\n  }\n\n\n  onInitAddress(oldData) {\n    this.getState();\n    this.getDistrict(oldData.stateCode);\n    this.getTownship(oldData.districtCode)\n    this.cdf.detectChanges();\n  }\n\n  onChangeState() {\n    this.districtOption = [];\n    this.townshipOption = [];\n\n    this.customerForm.controls['districtCode'].setValue('');\n    this.customerForm.controls['townshipCode'].setValue('');\n    this.getDistrict(this.customerForm.controls['stateCode'].value);\n    this.cdf.detectChanges();\n\n  }\n\n  onChangeDistrict() {\n    this.customerForm.controls['townshipCode'].setValue('');\n    if (this.customerForm.controls['stateCode'].value == '') {\n      this.townshipOption = [];\n    } else {\n      this.getTownship(this.customerForm.controls['districtCode'].value);\n    }\n    this.cdf.detectChanges()\n  }\n\n  isIdentitiyType() {\n    this.customerForm.controls[\"identityNumber\"].setValue('');\n  }\n  backLocation() {\n    if (this.isPopup) {\n      this.modalService.dismissAll()\n    }\n    else {\n      this.loadForm(this.oldData)\n      this.onInitAddress(this.oldData);\n    }\n  }\n\n  doCustomer() {\n    console.log(this.customerForm.invalid);\n    if (this.customerForm.invalid) {\n      validateAllFields(this.customerForm)\n      return true\n    } else {\n      let postData = this.customerForm.getRawValue()\n      if (this.isPopup) {\n        this.create(postData)\n      }\n      else {\n        if (this.pageStatus == 'create') {\n          this.create(postData)\n        } else {\n          this.edit(postData)\n        }\n      }\n\n\n    }\n  }\n\n  create(postData) {\n    let data = { ...postData, customerId: null, individualId: null };\n    this.customerService.save(data).toPromise().then((res) => {\n      console.log(\"RESSS\", res)\n      if (res) {\n        if (this.isPopup) {\n          let name = data.firstName + ' ' + data.middleName + ' ' + data.lastName\n          this.modalService.dismissAll({ data: { name: name, customerId: res }, type: \"save\" })\n        } else {\n          this.alertService.activate('This record was created', 'Success Message');\n          this.location.back()\n        }\n      }\n    })\n  }\n\n  edit(postData) {\n    let data = { ...postData, customerId: this.oldId, individualId: this.oldSecondaryId };\n    this.customerService.updateNoID(data).toPromise().then((res) => {\n      if (res) {\n        this.alertService.activate('This record was updated', 'Success Message');\n        this.location.back()\n      }\n    })\n  }\n\n  toggleAccordion(type) {\n\n    if (type == 'FNA') {\n      this.isFNA = !this.isFNA\n    }\n    if (type == 'Application') {\n      this.isApplication = !this.isApplication\n    }\n    if (type == 'Quotation') {\n      this.isQuotation = !this.isQuotation\n    }\n    if (type == 'Attachment') {\n      this.isAttachment = !this.isAttachment\n      if (this.isAttachment) {\n        this.getCustomerAttachment()\n      }\n    }\n    if (type == 'Activity') {\n      this.isActivity = !this.isActivity\n    }\n    if (type == 'More') {\n      this.isMore = !this.isMore\n    }\n    if (type == 'Detail') {\n      this.isDetail = !this.isDetail\n    }\n  }\n\n\n  add(type) {\n    if (type == 'Application') {\n      const modalRef = this.modalService.open(ProductsComponent, { size: 'xl', backdrop: false });\n      modalRef.componentInstance.type = 'modal'\n      modalRef.result.then(() => { }, (res) => {\n        if (res) {\n          if (res.type == 'save') {\n            this.prodctService.creatingCustomer = this.oldData\n            this.prodctService.createingProd = res.data\n            this.prodctService.editData = null\n            this.prodctService.referenceID = null\n            this.prodctService.viewType = 'policy'\n            this.prodctService.type = 'policy'\n            this.router.navigateByUrl(\"/product-form\")\n          }\n        }\n      })\n    }\n    if (type == 'Quotation') {\n      const modalRef = this.modalService.open(ProductsComponent, { size: 'xl', backdrop: false });\n      modalRef.componentInstance.type = 'modal'\n      modalRef.result.then(() => { }, (res) => {\n        if (res) {\n          if (res.type == 'save') {\n            this.prodctService.createingProd = res.data\n            this.prodctService.creatingCustomer = this.oldData\n            this.prodctService.viewType = 'quotation'\n            this.prodctService.editData = null\n            this.prodctService.referenceID = null\n            this.prodctService.type = 'quotation'\n            this.router.navigateByUrl(\"/product-form\")\n          }\n        }\n      })\n    }\n    if (type == 'Activity') {\n      this.router.navigate([\"/activity/activity-management-detail\"], { queryParams: { customerId: this.oldData.customerId, name: this.oldData.firstName, pageStatus: 'create' } })\n\n    }\n  }\n\n\n  openModal() {\n    let modalRef;\n    modalRef = this.modalService.open(NrcPopupPage, { size: 'xl', backdrop: false });\n\n    modalRef.componentInstance.config = this.config\n    modalRef.componentInstance.group = this.customerForm\n  }\n\n  actionBtn(event) {\n    if (event.cmd == 'download') {\n      this.AttachmentDownloadService.getDownload(event.data.id, event.data.fileName)\n    }\n    if (event.cmd == 'delete') {\n      this.CustomerAttachmentService.delete(event.data.id).toPromise().then(res=>{\n        if(res){\n          this.getCustomerAttachment()\n        }\n      })\n    }\n\n  }\n\n  async addAttachment() {\n    let modalRef;\n    modalRef = this.modalService.open(CustomInputAlertComponent, { size: 'lg', backdrop: false });\n    modalRef.componentInstance.type = 'description'\n    modalRef.componentInstance.oldId = this.oldId\n    modalRef.result.then(() => { }, (res) => {\n      if (res) {\n        console.log(\"RESSS\", res)\n        this.description = res.description\n\n        this.AttachmentUploadService.save(res.data).toPromise().then((res) => {\n          if (res) {\n            console.log(\"RESFILE\", res)\n            let postData = {\n              attachmentId: res,\n              description: this.description,\n              refDocNo: this.oldId,\n              refDocType: 'CUST'\n            }\n            this.CustomerAttachmentService.save(postData).toPromise().then((res) => {\n              if (res) {\n                console.log(\"RESFILE\", res)\n                this.getCustomerAttachment()\n              }\n\n            })\n          }\n        }).catch(e => {\n        })\n\n      }\n\n    })\n\n    //   }\n    // })\n\n\n  }\n\n\n  async getCustomerAttachment() {\n    this.CustomerAttachmentService.getAttachmentListRef(this.oldId, 'CUST').toPromise().then((res: any) => {\n      if (res) {\n        console.log(\"RESFILE\", res)\n        this.attachmentList = res\n        this.attachmentmatTable.reChangeData()\n        this.cdf.detectChanges()\n      }\n\n    })\n  }\n\n  //for View\n  isControlValid(controlName: string): boolean {\n    const control = this.customerForm.controls[controlName];\n    return control.valid && (control.dirty || control.touched);\n  }\n\n  isControlInvalid(controlName: string): boolean {\n    const control = this.customerForm.controls[controlName];\n    return control.invalid && (control.dirty || control.touched);\n  }\n\n  controlHasError(validation, controlName): boolean {\n    const control = this.customerForm.controls[controlName];\n    return control.hasError(validation) && (control.dirty || control.touched);\n  }\n\n  isControlTouched(controlName): boolean {\n    const control = this.customerForm.controls[controlName];\n    return control.dirty || control.touched;\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule } from '@angular/router';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { InlineSVGModule } from 'ng-inline-svg';\nimport { CRUDTableModule } from '../../_metronic/shared/crud-table';\nimport { NgSelectModule } from '@ng-select/ng-select';\nimport { CustomerDetailComponent } from './customer-detail.component';\nimport { MatDatepickerModule } from '@angular/material/datepicker';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatRadioModule } from '@angular/material/radio';\n\n\n\n@NgModule({\n  declarations: [CustomerDetailComponent],\n  exports: [CustomerDetailComponent],\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    InlineSVGModule,\n    CRUDTableModule,\n    NgSelectModule,\n    NgSelectModule,\n    MatDatepickerModule,\n    MatRadioModule,\n    MatInputModule,\n  ]\n})\nexport class CustomerDetailShareModule { }\n","import { HttpClient } from \"@angular/common/http\";\nimport { Injectable } from \"@angular/core\";\nimport { environment } from \"../../../environments/environment\";\nimport { BizOperationService } from \"../../core/biz.operation.service\";\nimport { Customer } from \"./custmer.dto\";\n\nconst API_CUSTOMER_URL = `${environment.apiUrl}/customer`;\n@Injectable({\n  providedIn: 'root'\n})\nexport class CustomerService extends BizOperationService<Customer, number>{\n  constructor(protected httpClient: HttpClient) {\n    super(httpClient, API_CUSTOMER_URL);\n  }\n}","import { COLTYPE, TableCol } from '../../_metronic/shared/crud-table/components/material-table-view/table-dto'\nexport const FNAListCol: TableCol[] = [\n  {\n    title: \"Date\",\n    type: COLTYPE.FEILD,\n    field: \"createdAt\",\n    // amtFormat?: boolean,\n    // isTitle?: boolean\n    // isDate?: boolen\n  },\n  {\n    title: \"FNA Type\",\n    type: COLTYPE.FEILD,\n    field: \"fnaType\",\n    // amtFormat?: boolean,\n    // isTitle?: boolean\n    // isDate?: boolen\n  },\n  {\n    title: \"Conducted By\",\n    type: COLTYPE.FEILD,\n    field: \"conductedBy\",\n    // amtFormat?: boolean,\n    // isTitle?: boolean\n    // isDate?: boolen\n  },\n  {\n    title: \"Actions\",\n    type: COLTYPE.ACTION,\n    field: \"actions\",\n    btn: {\n      edit: true,\n      delete: true\n    }\n    // amtFormat?: boolean,\n    // isTitle?: boolean\n    // isDate?: boolen\n  },\n]\n\nexport const FNAListDisplayCol: string[] = [\n  \"createdAt\",\n  \"fnaType\",\n  \"conductedBy\",\n  \"actions\",\n]\n\n","import { COLTYPE, TableCol } from '../../_metronic/shared/crud-table/components/material-table-view/table-dto'\nexport const FNACol: TableCol[] = [\n  {\n    title: \"Date\",\n    type: COLTYPE.FEILD,\n    field: \"createdAt\",\n    isFromatDate:true\n  },\n  {\n    title: \"Type\",\n    type: COLTYPE.FEILD,\n    field: \"fnaType\"\n  },\n  {\n    title: \"Conducted By\",\n    type: COLTYPE.FEILD,\n    field: \"createdByName\"  \n  },\n  {\n    title: \"Actions\",\n    type: COLTYPE.ACTION,\n    field: \"actions\",  \n    btn: {\n      edit: true,\n      delete: true\n    }\n  },\n]\n\n\nexport const FNADisplayCol: string[] = [\n  \"createdAt\",\n  \"fnaType\",\n  \"createdByName\",\n  \"actions\"\n]\n\nexport const AttachmentCol: TableCol[] = [\n\n  {\n    title: \"Description\",\n    type: COLTYPE.FEILD,\n    field: \"description\",\n  },\n  {\n    title: \"Document\",\n    type: COLTYPE.FEILD,\n    field: \"fileName\"\n  },\n  {\n    title: \"Action\",\n    type: COLTYPE.ACTION,\n    field: \"action\",\n    btn: {\n      download: true,\n      delete: true,\n\n    }\n  },\n\n]\n\nexport const AttachmentDisplayCol: string[] = [\n  \"description\",\n  \"fileName\",\n  \"action\"\n]\n\nexport const CampaignCol: TableCol[] = [\n\n  {\n    title: \"Campaign Number\",\n    type: COLTYPE.FEILD,\n    field: \"cpmNumber\",\n  },\n  {\n    title: \"Campaign Name\",\n    type: COLTYPE.FEILD,\n    field: \"cpmName\"\n  },\n  {\n    title: \"Status\",\n    type: COLTYPE.FEILD,\n    field: \"cpmStatus\",\n  },\n  {\n    title: \"Owner\",\n    type: COLTYPE.FEILD,\n    field: \"cpmOwnerName\",\n  },\n\n]\n\nexport const CampaignDisplayCol: string[] = [\n  \"cpmNumber\",\n  \"cpmName\",\n  \"cpmStatus\",\n  \"cpmOwnerName\",\n]\n\nexport class FNAConstant {\n  public static LEAD_ID: string = '';\n}\n\n\n\n\n\n","import { COLTYPE, TableCol } from '../../../_metronic/shared/crud-table/components/material-table-view/table-dto'\nexport const PolicyCol: TableCol[] = [\n  {\n    title: \"Application ID\",\n    type: COLTYPE.FEILD,\n    field: \"id\",\n  },\n  {\n    title: \"Product Name\",\n    type: COLTYPE.FEILD,\n    field: \"productName\",\n  },\n  {\n    title: \"Product Code\",\n    type: COLTYPE.FEILD,\n    field: \"productCode\",\n  },\n  {\n    title: \"Quotation ID\",\n    type: COLTYPE.FEILD,\n    field: \"quotationId\",\n  },\n  {\n    title: \"Agent Name\",\n    type: COLTYPE.FEILD,\n    field: \"agentFirstName\",\n  },\n  {\n    title: \"Premium\",\n    type: COLTYPE.FEILD,\n    field: \"premium\",\n    amtFormat: true,\n  },\n  {\n    title: \"Status\",\n    type: COLTYPE.FEILD,\n    field: \"status\",\n    isStatus: true\n  },\n  {\n    title: \"Date\",\n    type: COLTYPE.FEILD,\n    field: \"createdAt\",\n    isDate: true\n  },\n  {\n    title: \"Actions\",\n    type: COLTYPE.ACTION,\n    field: \"actions\",\n    btn:{\n      view: true,\n      edit: true\n    }\n  },\n]\n\nexport const PolicyDisplayCol: string[] = [\n  \"id\",\n  \"productName\",\n  \"productCode\",\n  \"agentFirstName\",\n  \"premium\",\n  \"status\",\n  \"createdAt\",\n  \"actions\",\n]","import { COLTYPE, TableCol } from '../../../_metronic/shared/crud-table/components/material-table-view/table-dto'\nexport const QuotationCol: TableCol[] = [\n  {\n    title: \"Quotation ID\",\n    type: COLTYPE.FEILD,\n    field: \"id\",\n    // amtFormat?: boolean,\n    // isTitle?: boolean\n    // isDate?: boolen\n  },\n  {\n    title: \"Product Name\",\n    type: COLTYPE.FEILD,\n    field: \"productName\",\n    // amtFormat?: boolean,\n    // isTitle?: boolean\n    // isDate?: boolen\n  },\n  {\n    title: \"Product Code\",\n    type: COLTYPE.FEILD,\n    field: \"productCode\",\n    // amtFormat?: boolean,\n    // isTitle?: boolean\n    // isDate?: boolen\n  },\n  {\n    title: \"Agent Name\",\n    type: COLTYPE.FEILD,\n    field: \"agentFirstName\",\n    // amtFormat?: boolean,\n    // isTitle?: boolean\n    // isDate?: boolen\n  },\n  {\n    title: \"Premium\",\n    type: COLTYPE.FEILD,\n    field: \"premium\",\n    amtFormat: true,\n    // isTitle?: boolean\n    // isDate?: boolen\n  },\n  {\n    title: \"Status\",\n    type: COLTYPE.FEILD,\n    field: \"status\",\n    isStatus: true\n  },\n  {\n    title: \"Date\",\n    type: COLTYPE.FEILD,\n    field: \"createdAt\",\n    // amtFormat?: boolean,\n    // isTitle?: boolean\n    isDate: true\n  },\n  {\n    title: \"Application\",\n    type: COLTYPE.TEXT,\n    field: \"create application\",\n    // amtFormat?: boolean,\n    // isTitle?: boolean\n    isDate: true\n  },\n  {\n    title: \"Actions\",\n    type: COLTYPE.ACTION,\n    field: \"actions\",\n    btn:{\n      view: true,\n      edit: true\n    }\n    // amtFormat?: boolean,\n    // isTitle?: boolean\n    // isDate?: boolen\n  },\n]\n\nexport const QuoDisplayCol: string[] = [\n  \"id\",\n  \"productName\",\n  \"productCode\",\n  \"agentFirstName\",\n  \"premium\",\n  \"status\",\n  \"createdAt\",\n  \"create application\",\n  \"actions\",\n]","export default \"<div class=\\\"row\\\" *ngIf=\\\"customerForm\\\">\\n    <div class=\\\"col-12\\\">\\n        <div class=\\\"card card-custom\\\" [class.gutter-b]=\\\"!isPopup\\\">\\n            <div class=\\\"card-header\\\">\\n                <div class=\\\"card-title\\\">\\n                    <h3 class=\\\"card-label left-border-image\\\">{{pageStatus == \\\"create\\\" ? \\\"Create Customer\\\" : \\\"Customer Detail\\\"}}</h3>\\n                </div>\\n                <div class=\\\"card-toolbar\\\" *ngIf=\\\"!isPopup\\\">\\n                    <button type=\\\"button\\\" *ngIf=\\\"isDetail\\\" class=\\\"icon\\\" (click)=\\\"toggleAccordion('Detail')\\\">\\n                        <span class=\\\"flaticon2-back\\\"></span>\\n                    </button>\\n                    <button type=\\\"button\\\" *ngIf=\\\"!isDetail\\\" class=\\\"icon ml-2\\\" (click)=\\\"toggleAccordion('Detail')\\\">\\n                        <span class=\\\"flaticon2-down\\\"></span>\\n                    </button>\\n                </div>\\n            </div>\\n            <div class=\\\"card-body px-10 py-3\\\" [ngClass]=\\\"isDetail ? 'active' : 'inactive'\\\">\\n                <form action=\\\"#\\\" class=\\\"form\\\" [formGroup]=\\\"customerForm\\\" (ngSubmit)=\\\"doCustomer()\\\">\\n                    <div class=\\\"row\\\" style=\\\"align-items: center;\\\">\\n                        <div class=\\\"col-sm-6\\\">\\n                            <div class=\\\"form-group row\\\">\\n                                <label class=\\\"col-sm-4 col-form-label\\\">Title</label>\\n                                <div class=\\\"col-sm-8\\\">\\n                                    <ng-select class=\\\"ng-custom-select ng-custom-select-sm\\\" [class.is-invalid]=\\\"isControlInvalid('titleCode')\\\" [class.is-valid]=\\\"isControlValid('titleCode')\\\" [items]=\\\"titleOption\\\" bindLabel=\\\"value\\\" bindValue=\\\"code\\\" formControlName=\\\"titleCode\\\">\\n                                    </ng-select>\\n                                </div>\\n                            </div>\\n                        </div>\\n                        <div class=\\\"col-sm-6\\\">\\n                            <div class=\\\"form-group row\\\">\\n                                <label class=\\\"col-sm-4 col-form-label\\\">Father Name</label>\\n                                <div class=\\\"col-sm-8\\\">\\n                                    <input type=\\\"text\\\" class=\\\"form-control form-control-sm \\\" name=\\\"fatherName\\\" autocomplete=\\\"off\\\" [class.is-invalid]=\\\"isControlInvalid('fatherName')\\\" [class.is-valid]=\\\"isControlValid('fatherName')\\\" formControlName=\\\"fatherName\\\" />\\n                                </div>\\n                            </div>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"row\\\" style=\\\"align-items: center;\\\">\\n                        <div class=\\\"col-sm-6\\\">\\n                            <div class=\\\"form-group row\\\">\\n                                <label class=\\\"col-sm-4 col-form-label\\\">First Name</label>\\n                                <div class=\\\"col-sm-8\\\">\\n                                    <input type=\\\"text\\\" class=\\\"form-control form-control-sm \\\" name=\\\"firstName\\\" autocomplete=\\\"off\\\" [class.is-invalid]=\\\"isControlInvalid('firstName')\\\" [class.is-valid]=\\\"isControlValid('firstName')\\\" formControlName=\\\"firstName\\\" />\\n                                </div>\\n                            </div>\\n                        </div>\\n                        <div class=\\\"col-sm-6\\\">\\n                            <div class=\\\"form-group row\\\">\\n                                <label class=\\\"col-sm-4 col-form-label\\\">Mobile</label>\\n                                <div class=\\\"col-sm-8\\\">\\n                                    <input type=\\\"text\\\" class=\\\"form-control form-control-sm \\\" name=\\\"phone\\\" autocomplete=\\\"off\\\" [class.is-invalid]=\\\"isControlInvalid('phone')\\\" [class.is-valid]=\\\"isControlValid('phone')\\\" formControlName=\\\"phone\\\" />\\n                                </div>\\n                            </div>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"row\\\" style=\\\"align-items: center;\\\">\\n                        <div class=\\\"col-sm-6\\\">\\n                            <div class=\\\"form-group row\\\">\\n                                <label class=\\\"col-sm-4 col-form-label\\\">Middle Name</label>\\n                                <div class=\\\"col-sm-8\\\">\\n                                    <input type=\\\"text\\\" class=\\\"form-control form-control-sm \\\" name=\\\"middleName\\\" autocomplete=\\\"off\\\" [class.is-invalid]=\\\"isControlInvalid('middleName')\\\" [class.is-valid]=\\\"isControlValid('middleName')\\\" formControlName=\\\"middleName\\\" />\\n                                </div>\\n                            </div>\\n                        </div>\\n                        <div class=\\\"col-sm-6\\\">\\n                            <div class=\\\"form-group row\\\">\\n                                <label class=\\\"col-sm-4 col-form-label\\\">Email</label>\\n                                <div class=\\\"col-sm-8\\\">\\n                                    <input type=\\\"email\\\" class=\\\"form-control form-control-sm \\\" name=\\\"email\\\" autocomplete=\\\"off\\\" [class.is-invalid]=\\\"isControlInvalid('email')\\\" [class.is-valid]=\\\"isControlValid('email')\\\" formControlName=\\\"email\\\" />\\n                                </div>\\n                            </div>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"row\\\" style=\\\"align-items: center;\\\">\\n                        <div class=\\\"col-sm-6\\\">\\n                            <div class=\\\"form-group row\\\">\\n                                <label class=\\\"col-sm-4 col-form-label\\\">Last Name</label>\\n                                <div class=\\\"col-sm-8\\\">\\n                                    <input type=\\\"text\\\" class=\\\"form-control form-control-sm \\\" name=\\\"lastName\\\" autocomplete=\\\"off\\\" [class.is-invalid]=\\\"isControlInvalid('lastName')\\\" [class.is-valid]=\\\"isControlValid('lastName')\\\" formControlName=\\\"lastName\\\" />\\n                                </div>\\n                            </div>\\n                        </div>\\n                        <div class=\\\"col-sm-6\\\">\\n                            <div class=\\\"form-group row\\\">\\n                                <label class=\\\"col-sm-4 col-form-label\\\">Date of Birth</label>\\n                                <div class=\\\"col-sm-8\\\">\\n                                    <div class=\\\"input-group input-group-sm \\\">\\n                                        <input matInput class=\\\"form-control-sm date-input\\\" style=\\\"width: 100%;\\\" formControlName=\\\"dateOfBirth\\\" [class.is-invalid]=\\\"isControlInvalid('dateOfBirth')\\\" [class.is-valid]=\\\"isControlValid('dateOfBirth')\\\" [matDatepicker]=\\\"picker\\\" readonly>\\n                                        <mat-datepicker-toggle matSuffix [for]=\\\"picker\\\"></mat-datepicker-toggle>\\n                                        <mat-datepicker #picker disabled=\\\"false\\\"></mat-datepicker>\\n\\n                                    </div>\\n                                </div>\\n\\n                            </div>\\n                        </div>\\n                        <!-- <div class=\\\"col-1\\\">\\n                            <button type=\\\"button\\\" style=\\\"width: auto;\\n                            float: right;\\n                            margin: 0 !important;\\\" (click)=\\\"clearDOB('dateOfBirth')\\\" class=\\\"btn btn-primary btn-elevate mx-2\\\">Clear</button>\\n                        </div> -->\\n                    </div>\\n                    <div class=\\\"row\\\" style=\\\"align-items: center;\\\">\\n                        <div class=\\\"col-sm-6\\\">\\n                            <div class=\\\"form-group row\\\">\\n                                <label class=\\\"col-sm-4 col-form-label\\\">Nationality</label>\\n                                <div class=\\\"col-sm-8\\\">\\n                                    <ng-select class=\\\"ng-custom-select ng-custom-select-sm\\\" [class.is-invalid]=\\\"isControlInvalid('nationalityCode')\\\" [class.is-valid]=\\\"isControlValid('nationalityCode')\\\" [items]=\\\"nationalityOption\\\" bindLabel=\\\"value\\\" bindValue=\\\"code\\\" formControlName=\\\"nationalityCode\\\">\\n                                    </ng-select>\\n                                </div>\\n                            </div>\\n                        </div>\\n                        <div class=\\\"col-sm-6\\\">\\n                            <div class=\\\"form-group row\\\">\\n                                <label class=\\\"col-sm-4 col-form-label\\\">Occupation</label>\\n                                <div class=\\\"col-sm-8\\\">\\n                                    <ng-select class=\\\"ng-custom-select ng-custom-select-sm\\\" [class.is-invalid]=\\\"isControlInvalid('occupationCode')\\\" [class.is-valid]=\\\"isControlValid('occupationCode')\\\" [items]=\\\"occupationOption\\\" bindLabel=\\\"value\\\" bindValue=\\\"code\\\" formControlName=\\\"occupationCode\\\">\\n                                    </ng-select>\\n                                </div>\\n                            </div>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"row\\\">\\n                        <div class=\\\"col-sm-12\\\">\\n                            <div class=\\\"form-group row\\\">\\n                                <label class=\\\"col-sm-2 col-form-label\\\">ID Type</label>\\n                                <div class=\\\"col-sm-10\\\">\\n                                    <div class=\\\"\\\">\\n                                        <mat-radio-group name=\\\"identityType\\\" formControlName=\\\"identityType\\\" (click)=\\\"isIdentitiyType()\\\">\\n                                            <mat-radio-button class=\\\"example-margin\\\" value=\\\"NRC\\\">NRC</mat-radio-button>\\n                                            <mat-radio-button class=\\\"example-margin\\\" value=\\\"FRC\\\">FRC</mat-radio-button>\\n                                            <mat-radio-button class=\\\"example-margin\\\" value=\\\"PASSPORT\\\">Passport\\n                                            </mat-radio-button>\\n                                            <mat-radio-button class=\\\"example-margin\\\" value=\\\"OTHER\\\">Others\\n                                            </mat-radio-button>\\n                                        </mat-radio-group>\\n                                    </div>\\n                                </div>\\n                            </div>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"row\\\">\\n                        <div class=\\\"col-sm-6\\\">\\n\\n                            <div class=\\\"form-group row\\\">\\n                                <label class=\\\"col-sm-4 col-form-label\\\">ID No.</label>\\n                                <div class=\\\"col-sm-8\\\">\\n                                    <input type=\\\"text\\\" *ngIf=\\\"customerForm.get('identityType').value == 'NRC'\\\" class=\\\"form-control form-control-sm \\\" name=\\\"identityNumber\\\" autocomplete=\\\"off\\\" [class.is-invalid]=\\\"isControlInvalid('identityNumber')\\\" (click)=\\\"openModal()\\\" [class.is-valid]=\\\"isControlValid('identityNumber')\\\"\\n                                        formControlName=\\\"identityNumber\\\" readonly />\\n                                    <input type=\\\"text\\\" *ngIf=\\\"customerForm.get('identityType').value != 'NRC'\\\" class=\\\"form-control form-control-sm \\\" name=\\\"identityNumber\\\" autocomplete=\\\"off\\\" [class.is-invalid]=\\\"isControlInvalid('identityNumber')\\\" [class.is-valid]=\\\"isControlValid('identityNumber')\\\"\\n                                        formControlName=\\\"identityNumber\\\" />\\n                                </div>\\n                            </div>\\n                            <div class=\\\"form-group row\\\">\\n                                <label class=\\\"col-sm-4 col-form-label\\\">Gender</label>\\n                                <div class=\\\"col-sm-8\\\">\\n                                    <ng-select class=\\\"ng-custom-select ng-custom-select-sm\\\" [class.is-invalid]=\\\"isControlInvalid('genderCode')\\\" [class.is-valid]=\\\"isControlValid('genderCode')\\\" [items]=\\\"genderOption\\\" bindLabel=\\\"value\\\" bindValue=\\\"code\\\" formControlName=\\\"genderCode\\\">\\n                                    </ng-select>\\n                                </div>\\n                            </div>\\n                            <div class=\\\"form-group row\\\">\\n                                <label class=\\\"col-sm-4 col-form-label\\\">Status</label>\\n                                <div class=\\\"col-sm-8\\\">\\n                                    <ng-select class=\\\"ng-custom-select ng-custom-select-sm\\\" [class.is-invalid]=\\\"isControlInvalid('statusCode')\\\" [class.is-valid]=\\\"isControlValid('statusCode')\\\" [items]=\\\"statusOption\\\" bindLabel=\\\"value\\\" bindValue=\\\"code\\\" formControlName=\\\"statusCode\\\">\\n                                    </ng-select>\\n                                </div>\\n                            </div>\\n                            <div class=\\\"form-group row\\\">\\n                                <label class=\\\"col-sm-4 col-form-label\\\">State</label>\\n                                <div class=\\\"col-sm-8\\\">\\n                                    <ng-select class=\\\"ng-custom-select ng-custom-select-sm\\\" [class.is-invalid]=\\\"isControlInvalid('stateCode')\\\" (change)=\\\"onChangeState()\\\" [class.is-valid]=\\\"isControlValid('stateCode')\\\" [items]=\\\"stateOption\\\" bindLabel=\\\"value\\\" bindValue=\\\"code\\\" formControlName=\\\"stateCode\\\">\\n                                    </ng-select>\\n                                </div>\\n                            </div>\\n                            <div class=\\\"form-group row\\\">\\n                                <label class=\\\"col-sm-4 col-form-label\\\">District</label>\\n                                <div class=\\\"col-sm-8\\\">\\n                                    <ng-select class=\\\"ng-custom-select ng-custom-select-sm\\\" [class.is-invalid]=\\\"isControlInvalid('districtCode')\\\" (change)=\\\"onChangeDistrict()\\\" [class.is-valid]=\\\"isControlValid('districtCode')\\\" [items]=\\\"districtOption\\\" bindLabel=\\\"value\\\" bindValue=\\\"code\\\" formControlName=\\\"districtCode\\\">\\n                                    </ng-select>\\n                                </div>\\n                            </div>\\n                        </div>\\n                        <div class=\\\"col-sm-6\\\">\\n                            <div class=\\\"form-group row\\\">\\n                                <label class=\\\"col-sm-4 col-form-label\\\">Party Code</label>\\n                                <div class=\\\"col-sm-8\\\">\\n                                    <input type=\\\"text\\\" class=\\\"form-control form-control-sm \\\" readonly=\\\"true\\\" name=\\\"partyCode\\\" autocomplete=\\\"off\\\" [class.is-invalid]=\\\"isControlInvalid('partyCode')\\\" [class.is-valid]=\\\"isControlValid('partyCode')\\\" formControlName=\\\"partyCode\\\" />\\n                                </div>\\n                            </div>\\n                            <div class=\\\"form-group row\\\">\\n                                <label class=\\\"col-sm-4 col-form-label\\\">House</label>\\n                                <div class=\\\"col-sm-8\\\">\\n                                    <input type=\\\"text\\\" class=\\\"form-control form-control-sm \\\" name=\\\"houseNumber\\\" autocomplete=\\\"off\\\" [class.is-invalid]=\\\"isControlInvalid('houseNumber')\\\" [class.is-valid]=\\\"isControlValid('houseNumber')\\\" formControlName=\\\"houseNumber\\\" />\\n                                </div>\\n                            </div>\\n                            <div class=\\\"form-group row\\\">\\n                                <label class=\\\"col-sm-4 col-form-label\\\">Road</label>\\n                                <div class=\\\"col-sm-8\\\">\\n                                    <input type=\\\"text\\\" class=\\\"form-control form-control-sm \\\" name=\\\"road\\\" autocomplete=\\\"off\\\" [class.is-invalid]=\\\"isControlInvalid('road')\\\" [class.is-valid]=\\\"isControlValid('road')\\\" formControlName=\\\"road\\\" />\\n                                </div>\\n                            </div>\\n                            <div class=\\\"form-group row\\\">\\n                                <label class=\\\"col-sm-4 col-form-label\\\">Block Area</label>\\n                                <div class=\\\"col-sm-8\\\">\\n                                    <input type=\\\"text\\\" class=\\\"form-control form-control-sm \\\" name=\\\"blockArea\\\" autocomplete=\\\"off\\\" [class.is-invalid]=\\\"isControlInvalid('blockArea')\\\" [class.is-valid]=\\\"isControlValid('blockArea')\\\" formControlName=\\\"blockArea\\\" />\\n                                </div>\\n                            </div>\\n\\n                            <div class=\\\"form-group row\\\">\\n                                <label class=\\\"col-sm-4 col-form-label\\\">Township </label>\\n                                <div class=\\\"col-sm-8\\\">\\n                                    <ng-select class=\\\"ng-custom-select ng-custom-select-sm\\\" [class.is-invalid]=\\\"isControlInvalid('townshipCode')\\\" [class.is-valid]=\\\"isControlValid('townshipCode')\\\" [items]=\\\"townshipOption\\\" bindLabel=\\\"value\\\" bindValue=\\\"code\\\" formControlName=\\\"townshipCode\\\">\\n                                    </ng-select>\\n                                </div>\\n                            </div>\\n\\n                        </div>\\n                    </div>\\n                    <div class=\\\"row\\\" style=\\\"align-items: center;\\\">\\n                        <div class=\\\"col-sm-6\\\">\\n                            <div class=\\\"form-group row\\\">\\n                                <label class=\\\"col-sm-4 col-form-label\\\">Company Name</label>\\n                                <div class=\\\"col-sm-8\\\">\\n                                    <input type=\\\"text\\\" class=\\\"form-control form-control-sm \\\" name=\\\"companyName\\\" autocomplete=\\\"off\\\" [class.is-invalid]=\\\"isControlInvalid('companyName')\\\" [class.is-valid]=\\\"isControlValid('companyName')\\\" formControlName=\\\"companyName\\\" />\\n                                </div>\\n                            </div>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"form-group\\\" style=\\\"text-align: right;\\\">\\n                        <button type=\\\"submit\\\" class=\\\"btn btn-primary btn-elevate mx-2\\\">Save</button>\\n                        <button type=\\\"button\\\" class=\\\"btn btn-default btn-elevate\\\" (click)=\\\"backLocation()\\\">Cancel</button>\\n                    </div>\\n                </form>\\n\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n<ng-container *ngIf=\\\"!isPopup && oldId\\\">\\n    <div class=\\\"card card-custom gutter-b\\\">\\n        <div class=\\\"card-header\\\" *ngIf=\\\"!isPopup\\\">\\n            <div class=\\\"card-title\\\">\\n                <h3 class=\\\"card-label left-border-image\\\">FNA</h3>\\n            </div>\\n            <div class=\\\"card-toolbar\\\">\\n                <!-- <button type=\\\"button\\\" class=\\\"btn btn-primary btn-circle\\\" (click)=\\\"add('FNA')\\\">\\n                    <span class=\\\"flaticon2-plus\\\"></span>\\n                </button> -->\\n                <button type=\\\"button\\\" *ngIf=\\\"isFNA\\\" class=\\\"icon\\\" (click)=\\\"toggleAccordion('FNA')\\\">\\n                    <span class=\\\"flaticon2-back\\\"></span>\\n                </button>\\n                <button type=\\\"button\\\" *ngIf=\\\"!isFNA\\\" class=\\\"icon ml-2\\\" (click)=\\\"toggleAccordion('FNA')\\\">\\n                    <span class=\\\"flaticon2-down\\\"></span>\\n                </button>\\n            </div>\\n        </div>\\n        <div class=\\\"card-body px-10 py-3\\\" [ngClass]=\\\"isFNA ? 'active' : 'inactive'\\\">\\n\\n\\n            <section>\\n\\n                <app-material-table-view #fna [data]=\\\"fnaList\\\" [colum]=\\\"FNAELEMENT_COL\\\" [displayedColumns]=\\\"FNAdisplayedColumns\\\" [selectable]=\\\"isPopup\\\">\\n                </app-material-table-view>\\n\\n            </section>\\n\\n        </div>\\n\\n    </div>\\n\\n    <div class=\\\"card card-custom gutter-b\\\">\\n        <div class=\\\"card-header\\\" *ngIf=\\\"!isPopup\\\">\\n            <div class=\\\"card-title\\\">\\n                <h3 class=\\\"card-label left-border-image\\\">Activity</h3>\\n            </div>\\n            <div class=\\\"card-toolbar\\\">\\n                <!-- <button type=\\\"button\\\" class=\\\"btn btn-primary btn-circle\\\" (click)=\\\"add('Activity')\\\">\\n                    <span class=\\\"flaticon2-plus\\\"></span>\\n                </button> -->\\n                <button type=\\\"button\\\" *ngIf=\\\"isActivity\\\" class=\\\"icon\\\" (click)=\\\"toggleAccordion('Activity')\\\">\\n                    <span class=\\\"flaticon2-back icon\\\"></span>\\n                </button>\\n                <button type=\\\"button\\\" *ngIf=\\\"!isActivity\\\" class=\\\"icon ml-2\\\" (click)=\\\"toggleAccordion('Activity')\\\">\\n                    <span class=\\\"flaticon2-down icon\\\"></span>\\n                </button>\\n            </div>\\n        </div>\\n        <div class=\\\"card-body px-10 py-3\\\" [ngClass]=\\\"isActivity ? 'active' : 'inactive'\\\">\\n\\n            <section>\\n\\n                <app-material-table-view #activity [data]=\\\"activityList\\\" [colum]=\\\"ACTIVITY_ELEMENT_COL\\\" [displayedColumns]=\\\"ACTIVITYdisplayedColumns\\\" [selectable]=\\\"isPopup\\\">\\n                </app-material-table-view>\\n\\n            </section>\\n\\n        </div>\\n\\n    </div>\\n    <div class=\\\"card card-custom gutter-b\\\">\\n        <div class=\\\"card-header\\\" *ngIf=\\\"!isPopup\\\">\\n            <div class=\\\"card-title\\\">\\n                <h3 class=\\\"card-label left-border-image\\\">Quotation</h3>\\n            </div>\\n            <div class=\\\"card-toolbar\\\">\\n                <!-- <button type=\\\"button\\\" class=\\\"btn btn-primary btn-circle\\\" (click)=\\\"add('Quotation')\\\">\\n                    <span class=\\\"flaticon2-plus\\\"></span>\\n                </button> -->\\n                <button type=\\\"button\\\" *ngIf=\\\"isQuotation\\\" class=\\\"icon\\\" (click)=\\\"toggleAccordion('Quotation')\\\">\\n                    <span class=\\\"flaticon2-back icon\\\"></span>\\n                </button>\\n                <button type=\\\"button\\\" *ngIf=\\\"!isQuotation\\\" class=\\\"icon ml-2\\\" (click)=\\\"toggleAccordion('Quotation')\\\">\\n                    <span class=\\\"flaticon2-down icon\\\"></span>\\n                </button>\\n            </div>\\n        </div>\\n        <div class=\\\"card-body px-10 py-3\\\" [ngClass]=\\\"isQuotation ? 'active' : 'inactive'\\\">\\n\\n\\n            <section>\\n\\n                <app-material-table-view #quotation [data]=\\\"quatationList\\\" [colum]=\\\"QUOTATION_ELEMENT_COL\\\" [displayedColumns]=\\\"QuotationdisplayedColumns\\\" [selectable]=\\\"isPopup\\\">\\n                </app-material-table-view>\\n\\n            </section>\\n\\n        </div>\\n\\n    </div>\\n\\n    <div class=\\\"card card-custom gutter-b\\\">\\n        <div class=\\\"card-header\\\" *ngIf=\\\"!isPopup\\\">\\n            <div class=\\\"card-title\\\">\\n                <h3 class=\\\"card-label left-border-image\\\">Application</h3>\\n            </div>\\n            <div class=\\\"card-toolbar\\\">\\n                <!-- <button type=\\\"button\\\" class=\\\"btn btn-primary btn-circle\\\" (click)=\\\"add('Application')\\\">\\n                    <span class=\\\"flaticon2-plus\\\"></span>\\n                </button> -->\\n                <button type=\\\"button\\\" *ngIf=\\\"isApplication\\\" class=\\\"icon\\\" (click)=\\\"toggleAccordion('Application')\\\">\\n                    <span class=\\\"flaticon2-back icon\\\"></span>\\n                </button>\\n                <button type=\\\"button\\\" *ngIf=\\\"!isApplication\\\" class=\\\"icon ml-2\\\" (click)=\\\"toggleAccordion('Application')\\\">\\n                    <span class=\\\"flaticon2-down icon\\\"></span>\\n                </button>\\n            </div>\\n        </div>\\n        <div class=\\\"card-body px-10 py-3\\\">\\n\\n            <section [ngClass]=\\\"isApplication ? 'active' : 'inactive'\\\">\\n\\n                <app-material-table-view #application [data]=\\\"applicationList\\\" [colum]=\\\"APPLICATION_ELEMENT_COL\\\" [displayedColumns]=\\\"ApplicationdisplayedColumns\\\" [selectable]=\\\"isPopup\\\">\\n                </app-material-table-view>\\n\\n            </section>\\n\\n        </div>\\n\\n    </div>\\n\\n    <div class=\\\"card card-custom gutter-b\\\">\\n        <div class=\\\"card-header\\\" *ngIf=\\\"!isPopup\\\">\\n            <div class=\\\"card-title\\\">\\n                <h3 class=\\\"card-label left-border-image\\\">Attachment</h3>\\n            </div>\\n            <div class=\\\"card-toolbar\\\">\\n                <!-- <button type=\\\"button\\\" class=\\\"btn btn-primary btn-circle\\\" (click)=\\\"addAttachment()\\\">\\n                    <span class=\\\"flaticon2-plus\\\"></span>\\n                </button> -->\\n                <button type=\\\"button\\\" *ngIf=\\\"isAttachment\\\" class=\\\"icon\\\" (click)=\\\"toggleAccordion('Attachment')\\\">\\n                    <span class=\\\"flaticon2-back icon\\\"></span>\\n\\n                </button>\\n                <button type=\\\"button\\\" *ngIf=\\\"!isAttachment\\\" class=\\\"icon ml-2\\\" (click)=\\\"toggleAccordion('Attachment')\\\">\\n                    <span class=\\\"flaticon2-down icon\\\"></span>\\n                </button>\\n            </div>\\n        </div>\\n        <div class=\\\"card-body px-10 py-3\\\">\\n\\n\\n            <section [ngClass]=\\\"isAttachment ? 'active' : 'inactive'\\\">\\n\\n                <app-material-table-view #attachment [data]=\\\"attachmentList\\\" [colum]=\\\"ATTACHMENT_ELEMENT_COL\\\" [displayedColumns]=\\\"AttachmentdisplayedColumns\\\" (emitter)=\\\"actionBtn($event)\\\" [selectable]=\\\"isPopup\\\">\\n                </app-material-table-view>\\n            </section>\\n\\n        </div>\\n\\n    </div>\\n</ng-container>\";"],"names":[],"sourceRoot":"webpack:///"}