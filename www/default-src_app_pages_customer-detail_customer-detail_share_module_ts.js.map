{"version":3,"file":"default-src_app_pages_customer-detail_customer-detail_share_module_ts.js","mappings":";;;;;;;;;;;;;AAAO,SAAS,aAAa;IAC3B,MAAM,UAAU,GAAG,IAAI,UAAU,EAAE,CAAC;IACpC,MAAM,oBAAoB,GAAI,UAAkB,CAAC,iCAAiC,CAAC,CAAC;IACpF,OAAO,oBAAoB,IAAI,UAAU,CAAC;AAC5C,CAAC;;;;;;;;;;;;;;;;;ACJ6G;AACvG,MAAM,WAAW,GAAe;IACrC;QACE,KAAK,EAAE,cAAc;QACrB,IAAI,EAAE,+GAAa;QACnB,KAAK,EAAE,YAAY;QACnB,uBAAuB;QACvB,oBAAoB;QACpB,kBAAkB;KACnB;IACD;QACE,KAAK,EAAE,eAAe;QACtB,IAAI,EAAE,+GAAa;QACnB,KAAK,EAAE,cAAc;QACrB,uBAAuB;QACvB,oBAAoB;QACpB,kBAAkB;KACnB;IACD;QACE,KAAK,EAAE,gBAAgB;QACvB,IAAI,EAAE,+GAAa;QACnB,KAAK,EAAE,eAAe;QACtB,uBAAuB;QACvB,oBAAoB;QACpB,kBAAkB;KACnB;IACD,IAAI;IACJ,2BAA2B;IAC3B,yBAAyB;IACzB,0BAA0B;IAC1B,4BAA4B;IAC5B,kBAAkB;IAClB,uBAAuB;IACvB,KAAK;IAEL;QACE,KAAK,EAAE,YAAY;QACnB,IAAI,EAAE,+GAAa;QACnB,KAAK,EAAE,WAAW;QAClB,uBAAuB;QACvB,oBAAoB;QACpB,kBAAkB;KACnB;IACD;QACE,KAAK,EAAE,aAAa;QACpB,IAAI,EAAE,+GAAa;QACnB,KAAK,EAAE,YAAY;QACnB,oBAAoB;QACpB,kBAAkB;KACnB;IACD;QACE,KAAK,EAAE,UAAU;QACjB,IAAI,EAAE,+GAAa;QACnB,KAAK,EAAE,SAAS;QAChB,YAAY,EAAE,IAAI;KACnB;IACD;QACE,KAAK,EAAE,QAAQ;QACf,IAAI,EAAE,+GAAa;QACnB,KAAK,EAAE,QAAQ;QACf,gBAAgB,EAAE,IAAI;QACtB,uBAAuB;QACvB,oBAAoB;KACrB;IACD;QACE,KAAK,EAAE,UAAU;QACjB,IAAI,EAAE,+GAAa;QACnB,KAAK,EAAE,cAAc;QACrB,uBAAuB;QACvB,oBAAoB;KACrB;IACD;QACE,KAAK,EAAE,SAAS;QAChB,IAAI,EAAE,gHAAc;QACpB,KAAK,EAAE,SAAS;QAChB,GAAG,EAAE;YACH,IAAI,EAAE,IAAI;SACX;QACD,uBAAuB;QACvB,oBAAoB;QACpB,kBAAkB;KACnB;CACF;AAEM,MAAM,kBAAkB,GAAa;IAC1C,YAAY;IACZ,cAAc;IACd,eAAe;IACf,iBAAiB;IACjB,WAAW;IACX,YAAY;IACZ,SAAS;IACT,QAAQ;IACR,cAAc;IACd,SAAS;CACV;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC/F0C;AAC2D;AACrB;AACa;AACN;AAC/B;AACH;AACrB;AACe;AACX;AAC4B;AACsB;AACH;AAC+D;AAEnG;AACiC;AACmB;AAC5C;AACsD;AACpC;AACiC;AACjC;AACP;AACa;AACC;AAG5B;IAYxC,uBAAuB,SAAvB,uBAAuB;IA4FlC,YAAoB,EAAe,EACzB,QAAkB,EAClB,iBAAoC,EACpC,KAAqB,EACrB,eAAgC,EAChC,YAAsB,EACtB,GAAsB,EACtB,aAAiC,EACjC,MAAc,EACd,uBAAgD,EAChD,yBAA+C,EAC/C,yBAAoD,EACpD,YAA0B,EAC1B,WAA4B;QAblB,OAAE,GAAF,EAAE,CAAa;QACzB,aAAQ,GAAR,QAAQ,CAAU;QAClB,sBAAiB,GAAjB,iBAAiB,CAAmB;QACpC,UAAK,GAAL,KAAK,CAAgB;QACrB,oBAAe,GAAf,eAAe,CAAiB;QAChC,iBAAY,GAAZ,YAAY,CAAU;QACtB,QAAG,GAAH,GAAG,CAAmB;QACtB,kBAAa,GAAb,aAAa,CAAoB;QACjC,WAAM,GAAN,MAAM,CAAQ;QACd,4BAAuB,GAAvB,uBAAuB,CAAyB;QAChD,8BAAyB,GAAzB,yBAAyB,CAAsB;QAC/C,8BAAyB,GAAzB,yBAAyB,CAA2B;QACpD,iBAAY,GAAZ,YAAY,CAAc;QAC1B,gBAAW,GAAX,WAAW,CAAiB;QAnGtC,mBAAc,GAAU,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,iEAAU,CAAC,CAAC,CAAC;QAC/D,wBAAmB,GAAU,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,uEAAa,CAAC,CAAC,CAAC;QACvE,yBAAoB,GAAU,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,wFAAW,CAAC,CAAC,CAAC;QACtE,6BAAwB,GAAU,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,+FAAkB,CAAC,CAAC,CAAC;QACjF,0BAAqB,GAAU,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,2EAAY,CAAC,CAAC,CAAC;QACxE,8BAAyB,GAAU,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,4EAAa,CAAC,CAAC,CAAC;QAC7E,4BAAuB,GAAU,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,iEAAS,CAAC,CAAC,CAAC;QACvE,gCAA2B,GAAU,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,wEAAgB,CAAC,CAAC,CAAC;QAClF,2BAAsB,GAAU,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,uEAAa,CAAC,CAAC;QACzE,+BAA0B,GAAU,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,8EAAoB,CAAC,CAAC;QACpF,mEAAmE;QACnE,0EAA0E;QAE1E,YAAO,GAAU,EAAE,CAAC;QACpB,iBAAY,GAAU,EAAE,CAAC;QACzB,kBAAa,GAAU,EAAE,CAAC;QAC1B,oBAAe,GAAU,EAAE,CAAC;QAC5B,mBAAc,GAAU,EAAE,CAAC;QAC3B,WAAM,GAAQ;YACZ,IAAI,EAAE,gBAAgB;SACvB;QAED,cAAS,GAAG,IAAI;QAChB,gBAAW,GAAG,IAAI;QAClB,cAAS,GAAG,IAAI;QAChB,gBAAW,GAAG,IAAI;QACT,YAAO,GAAY,KAAK;QAExB,WAAM,GAAY,KAAK;QAGhC,sBAAiB,GAAkB,EAAE,CAAC;QACtC,qBAAgB,GAAiB,EAAE,CAAC;QACpC,iBAAY,GAAa,EAAE,CAAC;QAC5B,gBAAW,GAAY,EAAE,CAAC;QAC1B,mBAAc,GAAe,EAAE,CAAC;QAChC,mBAAc,GAAe,EAAE,CAAC;QAGhC,iBAAY,GAAG,EAAE,CAAC;QAClB,gBAAW,GAAG,EAAE,CAAC;QAKV,SAAI,GAIJ;YACH;gBACE,IAAI,EAAE,KAAK;gBACX,MAAM,EAAE,KAAK;aACd;YACD;gBACE,IAAI,EAAE,UAAU;gBAChB,MAAM,EAAE,KAAK;aACd;YACD;gBACE,IAAI,EAAE,WAAW;gBACjB,MAAM,EAAE,KAAK;aACd;YACD;gBACE,IAAI,EAAE,aAAa;gBACnB,MAAM,EAAE,KAAK;aACd;YACD;gBACE,IAAI,EAAE,YAAY;gBAClB,MAAM,EAAE,KAAK;aACd;SACF;QACH,UAAK,GAAY,KAAK;QACtB,kBAAa,GAAY,KAAK;QAC9B,iBAAY,GAAY,KAAK;QAC7B,gBAAW,GAAY,KAAK;QAC5B,eAAU,GAAY,KAAK;QAC3B,eAAU,GAAY,KAAK;QAC3B,WAAM,GAAY,KAAK;QACvB,aAAQ,GAAY,IAAI;QACxB,gBAAW,GAAW,EAAE;QACxB,cAAS,GAAG,qEAAgB;QAC5B,mBAAc,GAAG,qEAAgB;QACjC,iBAAY,GAAG,qEAAgB;QAC/B,cAAS,GAAG,qEAAgB;QAC5B,iBAAY,GAAG,qEAAgB;QAC/B,cAAS,GAAG,qEAAgB;QAgB1B,IAAI,CAAC,wBAAwB,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC;QAC1C,IAAI,CAAC,yBAAyB,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC;QAC3C,IAAI,CAAC,2BAA2B,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC;IAC/C,CAAC;IAED,QAAQ;QAGN,IAAI,CAAC,QAAQ,EAAE,CAAC;QAChB,IAAI,CAAC,KAAK,CAAC,WAAW;aACnB,SAAS,CAAC,MAAM,CAAC,EAAE;YAClB,IAAI,CAAC,UAAU,GAAG,MAAM,CAAC,UAAU,CAAC;YACpC,IAAI,IAAI,CAAC,UAAU,IAAI,QAAQ,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE;gBAChD,IAAI,CAAC,KAAK,GAAG,MAAM,CAAC,MAAM,CAAC;gBAC3B,IAAI,CAAC,cAAc,GAAG,MAAM,CAAC,eAAe,CAAC;gBAC7C,IAAI,CAAC,MAAM,EAAE;aAGd;iBAAM;gBAEL,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;gBAC5B,IAAI,IAAI,CAAC,MAAM,EAAE;oBACf,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,YAAY,CAAC,CAAC,QAAQ,CAAC,GAAG,CAAC;iBACvD;aACF;QACH,CAAC,CACA,CAAC;IACN,CAAC;IACD,eAAe;QACb,IAAI,CAAC,WAAW,CAAC,UAAU,CAAC,SAAS,CAAC,CAAC,GAAG,EAAE,EAAE;YAC5C,IAAI,GAAG,EAAE;gBACP,IAAI,CAAC,SAAS,GAAG,GAAG,CAAC,UAAU,CAAC;gBAChC,IAAI,CAAC,cAAc,GAAG,GAAG,CAAC,UAAU,CAAC;gBACrC,IAAI,CAAC,YAAY,GAAG,GAAG,CAAC,aAAa,CAAC;gBACtC,IAAI,CAAC,SAAS,GAAG,GAAG,CAAC,WAAW,CAAC;gBACjC,IAAI,CAAC,SAAS,GAAG,GAAG,CAAC,KAAK,CAAC;gBAC3B,sBAAsB;gBACtB,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,EAAE;oBACxB,IAAI,CAAC,QAAQ,CAAC,IAAI,EAAE;iBACrB;gBACD,IAAI,CAAC,GAAG,CAAC,aAAa,EAAE;aACzB;QACH,CAAC,CAAC;IACJ,CAAC;IAGD,eAAe;QACb,IAAI,CAAC,SAAS,EAAE;IAClB,CAAC;IAED,cAAc;QACZ,OAAO,IAAI,CAAC,iBAAiB,CAAC,aAAa,CAAC,aAAa,CAAC,CAAC,IAAI,CAAC,oDAAG,CAAC,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,EAAE,iDAAU,CAAC,CAAC,CAAC,EAAE;YAC7G,OAAO,yCAAE,CAAC,EAAE,CAAC;QACf,CAAC,CAAC,CAAC;QAEH,oCAAoC;QACpC,eAAe;QACf,mCAAmC;QACnC,+BAA+B;QAC/B,MAAM;QACN,MAAM;IACR,CAAC;IAED,SAAS;QACP,+CAAQ,CAAC;YACP,IAAI,CAAC,QAAQ,EAAE;YACf,IAAI,CAAC,SAAS,EAAE;YAChB,IAAI,CAAC,aAAa,EAAE;YACpB,IAAI,CAAC,SAAS,EAAE;YAChB,IAAI,CAAC,QAAQ,EAAE;YACf,IAAI,CAAC,cAAc,EAAE;SACtB,CAAC,CAAC,SAAS,EAAE,CAAC,IAAI,CAAC,CAAC,GAAQ,EAAE,EAAE;YAC/B,IAAI,GAAG,EAAE;gBACP,IAAI,CAAC,WAAW,GAAG,GAAG,CAAC,CAAC,CAAC;gBACzB,IAAI,CAAC,YAAY,GAAG,GAAG,CAAC,CAAC,CAAC;gBAC1B,IAAI,CAAC,gBAAgB,GAAG,GAAG,CAAC,CAAC,CAAC;gBAC9B,IAAI,CAAC,YAAY,GAAG,GAAG,CAAC,CAAC,CAAC;gBAC1B,IAAI,CAAC,WAAW,GAAG,GAAG,CAAC,CAAC,CAAC;gBACzB,IAAI,CAAC,iBAAiB,GAAG,GAAG,CAAC,CAAC,CAAC;gBAC/B,IAAI,CAAC,GAAG,CAAC,aAAa,EAAE;aACzB;QACH,CAAC,CAAC;IACJ,CAAC;IAED,QAAQ;QACN,OAAO,IAAI,CAAC,iBAAiB,CAAC,aAAa,CAAC,OAAO,CAAC,CAAC,IAAI,CAAC,oDAAG,CAAC,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,EAAE,iDAAU,CAAC,CAAC,CAAC,EAAE;YACvG,OAAO,yCAAE,CAAC,EAAE,CAAC;QACf,CAAC,CAAC,CAAC;QACH,oCAAoC;QACpC,eAAe;QACf,6BAA6B;QAC7B,+BAA+B;QAC/B,MAAM;QACN,KAAK;IACP,CAAC;IAED,SAAS;QACP,OAAO,IAAI,CAAC,iBAAiB,CAAC,aAAa,CAAC,WAAW,CAAC,CAAC,IAAI,CAAC,oDAAG,CAAC,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,EAAE,iDAAU,CAAC,CAAC,CAAC,EAAE;YAC3G,OAAO,yCAAE,CAAC,EAAE,CAAC;QACf,CAAC,CAAC,CAAC;QAEH,qCAAqC;QACrC,iBAAiB;QACjB,gCAAgC;QAChC,iCAAiC;QACjC,QAAQ;QACR,OAAO;IACT,CAAC;IAED,aAAa;QACX,OAAO,IAAI,CAAC,iBAAiB,CAAC,aAAa,CAAC,YAAY,CAAC,CAAC,IAAI,CAAC,oDAAG,CAAC,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,EAAE,iDAAU,CAAC,CAAC,CAAC,EAAE;YAC5G,OAAO,yCAAE,CAAC,EAAE,CAAC;QACf,CAAC,CAAC,CAAC;QAEH,oCAAoC;QACpC,eAAe;QACf,kCAAkC;QAClC,+BAA+B;QAC/B,MAAM;QACN,KAAK;IACP,CAAC;IAED,SAAS;QACP,OAAO,IAAI,CAAC,iBAAiB,CAAC,aAAa,CAAC,aAAa,CAAC,CAAC,IAAI,CAAC,oDAAG,CAAC,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,EAAE,iDAAU,CAAC,CAAC,CAAC,EAAE;YAC7G,OAAO,yCAAE,CAAC,EAAE,CAAC;QACf,CAAC,CAAC,CAAC;QAEH,oCAAoC;QACpC,eAAe;QACf,8BAA8B;QAC9B,6DAA6D;QAC7D,+BAA+B;QAC/B,MAAM;QACN,KAAK;IACP,CAAC;IAED,YAAY,CAAC,GAAG;QACd,OAAO,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE;YACjB,OAAO,EAAE,MAAM,EAAE,CAAC,CAAC,MAAM,EAAE,OAAO,EAAE,CAAC,CAAC,QAAQ,IAAI,CAAC,CAAC,SAAS,EAAE;QACjE,CAAC,CAAC;IACJ,CAAC;IAED,QAAQ;QACN,OAAO,IAAI,CAAC,iBAAiB,CAAC,aAAa,CAAC,UAAU,EAAE,IAAI,CAAC,CAAC,IAAI,CAAC,oDAAG,CAAC,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,EAAE,iDAAU,CAAC,CAAC,CAAC,EAAE;YAChH,OAAO,yCAAE,CAAC,EAAE,CAAC;QACf,CAAC,CAAC,CAAC;QAEH,oCAAoC;QACpC,eAAe;QACf,6BAA6B;QAC7B,+BAA+B;QAC/B,MAAM;QACN,MAAM;IACR,CAAC;IAID,WAAW,CAAC,QAAgB;QAC1B,IAAI,CAAC,iBAAiB,CAAC,oBAAoB,CAAC,aAAa,EAAE,QAAQ,CAAC,CAAC,IAAI,CAAC,oDAAG,CAAC,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,CAAC;aACtG,SAAS,EAAE,CAAC,IAAI,CAAC,CAAC,GAAQ,EAAE,EAAE;YAC7B,IAAI,GAAG,EAAE;gBACP,IAAI,CAAC,cAAc,GAAG,GAAG;gBACzB,IAAI,CAAC,GAAG,CAAC,aAAa,EAAE;aACzB;QACH,CAAC,CAAC,CAAC;IACP,CAAC;IACD,WAAW,CAAC,QAAgB;QAC1B,IAAI,CAAC,iBAAiB,CAAC,oBAAoB,CAAC,aAAa,EAAE,QAAQ,CAAC,CAAC,IAAI,CAAC,oDAAG,CAAC,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,CAAC;aACtG,SAAS,EAAE,CAAC,IAAI,CAAC,CAAC,GAAQ,EAAE,EAAE;YAC7B,IAAI,GAAG,EAAE;gBACP,IAAI,CAAC,cAAc,GAAG,GAAG;gBACzB,IAAI,CAAC,GAAG,CAAC,aAAa,EAAE;aACzB;QACH,CAAC,CAAC,CAAC;IACP,CAAC;IAED,MAAM;QACJ,IAAI,CAAC,eAAe,CAAC,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,SAAS,EAAE,CAAC,IAAI,CAAC,CAAC,GAAG,EAAE,EAAE;YAChE,IAAI,GAAG,EAAE;gBACP,6BAA6B;gBAC7B,IAAI,CAAC,OAAO,GAAG,GAAG;gBAClB,iCAAiC;gBACjC,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,OAAO,CAAC,UAAU,IAAI,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,CAAC,CAAC,EAAE;gBAClF,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,OAAO,CAAC,kBAAkB,IAAI,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,kBAAkB,CAAC,CAAC,CAAC,EAAE;gBACnG,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,OAAO,CAAC,gBAAgB,IAAI,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,gBAAgB,CAAC,CAAC,CAAC,EAAE;gBACjG,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,OAAO,CAAC,WAAW,IAAI,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,WAAW,CAAC,CAAC,CAAC,EAAE;gBACtF,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC;gBAClB,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,OAAO,CAAC;gBAChC,IAAI,CAAC,GAAG,CAAC,aAAa,EAAE;gBACxB,IAAI,CAAC,gBAAgB,CAAC,YAAY,EAAE;gBACpC,IAAI,CAAC,WAAW,CAAC,YAAY,EAAE;gBAC/B,IAAI,CAAC,kBAAkB,CAAC,YAAY,EAAE;gBACtC,IAAI,CAAC,iBAAiB,CAAC,YAAY,EAAE;gBACrC,IAAI,CAAC,mBAAmB,CAAC,YAAY,EAAE;aACxC;QACH,CAAC,CAAC;IACJ,CAAC;IAED,QAAQ,CAAC,OAAQ;QACf,IAAI,YAAY,GAAG,OAAO,CAAC,CAAC,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,KAAK;QACrE,IAAI,CAAC,YAAY,GAAG,IAAI;QACxB,IAAI,CAAC,GAAG,CAAC,aAAa,EAAE;QACxB,IAAI,CAAC,YAAY,GAAG,IAAI,sDAAS,CAAC;YAChC,WAAW,EAAE,IAAI,wDAAW,CAAC,EAAE,KAAK,EAAE,OAAO,CAAC,CAAC,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,EAAE,QAAQ,EAAE,YAAY,EAAE,EAAE,gEAAmB,CAAC;YACtH,WAAW,EAAE,IAAI,wDAAW,CAAC,EAAE,KAAK,EAAE,OAAO,CAAC,CAAC,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,EAAE,QAAQ,EAAE,YAAY,EAAE,EAAE,gEAAmB,CAAC;YACtH,UAAU,EAAE,IAAI,wDAAW,CAAC,EAAE,KAAK,EAAE,OAAO,CAAC,CAAC,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,CAAC,EAAE,EAAE,QAAQ,EAAE,YAAY,EAAE,EAAE,gEAAmB,CAAC;YACpH,YAAY,EAAE,IAAI,wDAAW,CAAC,EAAE,KAAK,EAAE,OAAO,CAAC,CAAC,CAAC,OAAO,CAAC,UAAU,CAAC,CAAC,CAAC,EAAE,EAAE,QAAQ,EAAE,YAAY,EAAE,CAAE;YACpG,YAAY,EAAE,IAAI,wDAAW,CAAC,EAAE,KAAK,EAAE,OAAO,CAAC,CAAC,CAAC,OAAO,CAAC,UAAU,CAAC,CAAC,CAAC,EAAE,EAAE,QAAQ,EAAE,YAAY,EAAE,EAAE,gEAAmB,CAAC;YACxH,iBAAiB,EAAE,IAAI,wDAAW,CAAC,EAAE,KAAK,EAAE,OAAO,CAAC,CAAC,CAAC,OAAO,CAAC,eAAe,CAAC,CAAC,CAAC,EAAE,EAAE,QAAQ,EAAE,YAAY,EAAE,EAAE,gEAAmB,CAAC;YAClI,cAAc,EAAE,IAAI,wDAAW,CAAC,EAAE,KAAK,EAAE,OAAO,CAAC,CAAC,CAAC,OAAO,CAAC,YAAY,IAAI,OAAO,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,OAAO,CAAC,YAAY,CAAC,CAAC,CAAC,KAAK,EAAE,QAAQ,EAAE,YAAY,EAAE,EAAE,gEAAmB,CAAC;YAC5K,gBAAgB,EAAE,IAAI,wDAAW,CAAC,EAAE,KAAK,EAAE,OAAO,CAAC,CAAC,CAAC,OAAO,CAAC,cAAc,CAAC,CAAC,CAAC,EAAE,EAAE,QAAQ,EAAE,YAAY,EAAE,EAAE,gEAAmB,CAAC;YAChI,YAAY,EAAE,IAAI,wDAAW,CAAC,EAAE,KAAK,EAAE,OAAO,CAAC,CAAC,CAAC,OAAO,CAAC,UAAU,CAAC,CAAC,CAAC,GAAG,EAAE,QAAQ,EAAE,YAAY,IAAI,IAAI,CAAC,MAAM,EAAE,EAAE,gEAAmB,CAAC;YACxI,WAAW,EAAE,IAAI,wDAAW,CAAC,EAAE,KAAK,EAAE,OAAO,CAAC,CAAC,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,EAAE,QAAQ,EAAE,YAAY,EAAE,CAAC;YACjG,YAAY,EAAE,IAAI,wDAAW,CAAC,EAAE,KAAK,EAAE,OAAO,CAAC,CAAC,CAAC,OAAO,CAAC,UAAU,CAAC,CAAC,CAAC,EAAE,EAAE,QAAQ,EAAE,YAAY,EAAE,EAAC,CAAC,gEAAmB,CAAC,CAAC;YACzH,OAAO,EAAE,IAAI,wDAAW,CAAC,EAAE,KAAK,EAAE,OAAO,CAAC,CAAC,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,EAAE,QAAQ,EAAE,YAAY,EAAE,EAAE,CAAC,gEAAmB,EAAE,iEAAoB,CAAC,EAAE,CAAC,EAAE,iEAAoB,CAAC,CAAC,CAAC,CAAC,CAAC;YACnK,OAAO,EAAE,IAAI,wDAAW,CAAC,EAAE,KAAK,EAAE,OAAO,CAAC,CAAC,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,EAAE,QAAQ,EAAE,YAAY,EAAE,EAAE,CAAC,6DAAgB,EAAE,gEAAmB,CAAC,CAAC;YAClI,aAAa,EAAE,IAAI,wDAAW,CAAC,EAAE,KAAK,EAAE,CAAC,OAAO,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,OAAO,CAAC,WAAW,CAAC,CAAC,CAAC,mCAAM,CAAC,OAAO,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,IAAI,EAAE,QAAQ,EAAE,YAAY,GAAG,EAAE,gEAAmB,CAAC;YACnK,gBAAgB,EAAE,IAAI,wDAAW,CAAC,EAAE,KAAK,EAAE,OAAO,CAAC,CAAC,CAAC,OAAO,CAAC,cAAc,CAAC,CAAC,CAAC,EAAE,EAAE,QAAQ,EAAE,YAAY,EAAE,CAAC;YAC3G,aAAa,EAAE,IAAI,wDAAW,CAAC,EAAE,KAAK,EAAE,OAAO,CAAC,CAAC,CAAC,OAAO,CAAC,WAAW,CAAC,CAAC,CAAC,EAAE,EAAE,QAAQ,EAAE,YAAY,EAAE,EAAE,gEAAmB,CAAC;YAC1H,MAAM,EAAE,IAAI,wDAAW,CAAC,EAAE,KAAK,EAAE,OAAO,CAAC,CAAC,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,EAAE,QAAQ,EAAE,YAAY,EAAE,EAAE,gEAAmB,CAAC;YAC5G,WAAW,EAAE,IAAI,wDAAW,CAAC,EAAE,KAAK,EAAE,OAAO,CAAC,CAAC,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,EAAE,QAAQ,EAAE,YAAY,EAAE,EAAE,gEAAmB,CAAC;YACtH,cAAc,EAAE,IAAI,wDAAW,CAAC,EAAE,KAAK,EAAE,OAAO,CAAC,CAAC,CAAC,OAAO,CAAC,YAAY,CAAC,CAAC,CAAC,EAAE,EAAE,QAAQ,EAAE,YAAY,EAAE,EAAE,gEAAmB,CAAC;YAC5H,cAAc,EAAE,IAAI,wDAAW,CAAC,EAAE,KAAK,EAAE,OAAO,CAAC,CAAC,CAAC,OAAO,CAAC,YAAY,CAAC,CAAC,CAAC,EAAE,EAAE,QAAQ,EAAE,YAAY,EAAE,EAAE,gEAAmB,CAAC;YAC5H,WAAW,EAAE,IAAI,wDAAW,CAAC,EAAE,KAAK,EAAE,OAAO,CAAC,CAAC,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,EAAE,QAAQ,EAAE,YAAY,EAAE,EAAE,gEAAmB,CAAC;YACtH,aAAa,EAAE,IAAI,wDAAW,CAAC,EAAE,KAAK,EAAE,OAAO,CAAC,CAAC,CAAC,OAAO,CAAC,WAAW,IAAI,OAAO,CAAC,CAAC,QAAO,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC;SAC7G,CAAC,CAAC;IAEL,CAAC;IACD,QAAQ,CAAC,IAAI;QACX,IAAI,IAAI,IAAI,aAAa,EAAE;YACzB,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,aAAa,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;SAC1D;IACH,CAAC;IAGD,aAAa,CAAC,OAAO;QACnB,mBAAmB;QACnB,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC;QACpC,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,YAAY,CAAC;QACtC,IAAI,CAAC,GAAG,CAAC,aAAa,EAAE,CAAC;IAC3B,CAAC;IAED,aAAa;QACX,IAAI,CAAC,cAAc,GAAG,EAAE,CAAC;QACzB,IAAI,CAAC,cAAc,GAAG,EAAE,CAAC;QAEzB,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,cAAc,CAAC,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC;QACxD,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,cAAc,CAAC,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC;QACxD,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,WAAW,CAAC,CAAC,KAAK,CAAC,CAAC;QAChE,IAAI,CAAC,GAAG,CAAC,aAAa,EAAE,CAAC;IAE3B,CAAC;IAED,gBAAgB;QACd,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,cAAc,CAAC,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC;QACxD,IAAI,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,WAAW,CAAC,CAAC,KAAK,IAAI,EAAE,EAAE;YACvD,IAAI,CAAC,cAAc,GAAG,EAAE,CAAC;SAC1B;aAAM;YACL,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,cAAc,CAAC,CAAC,KAAK,CAAC,CAAC;SACpE;QACD,IAAI,CAAC,GAAG,CAAC,aAAa,EAAE;IAC1B,CAAC;IAED,eAAe;QACb,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,gBAAgB,CAAC,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC;IAC5D,CAAC;IACD,YAAY;QACV,IAAI,IAAI,CAAC,OAAO,EAAE;YAChB,IAAI,CAAC,YAAY,CAAC,UAAU,EAAE;SAC/B;aACI;YACH,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,OAAO,CAAC;YAC3B,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;SAClC;IACH,CAAC;IAED,UAAU;QACR,0CAA0C;QAC1C,IAAI,IAAI,CAAC,YAAY,CAAC,OAAO,EAAE;YAC7B,+EAAiB,CAAC,IAAI,CAAC,YAAY,CAAC;YACpC,OAAO,IAAI;SACZ;aAAM;YACL,IAAI,QAAQ,GAAG,IAAI,CAAC,YAAY,CAAC,WAAW,EAAE;YAC9C,IAAI,IAAI,CAAC,OAAO,EAAE;gBAChB,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC;aACtB;iBACI;gBACH,IAAI,IAAI,CAAC,UAAU,IAAI,QAAQ,EAAE;oBAC/B,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC;iBACtB;qBAAM;oBACL,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC;iBACpB;aACF;SAGF;IACH,CAAC;IAED,MAAM,CAAC,QAAQ;QACb,IAAI,IAAI,mCAAQ,QAAQ,KAAE,UAAU,EAAE,IAAI,EAAE,YAAY,EAAE,IAAI,GAAE,CAAC;QACjE,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,SAAS,EAAE,CAAC,IAAI,CAAC,CAAC,GAAG,EAAE,EAAE;YACvD,4BAA4B;YAC5B,IAAI,GAAG,EAAE;gBACP,IAAI,IAAI,CAAC,OAAO,EAAE;oBAChB,IAAI,IAAI,GAAG,IAAI,CAAC,SAAS,GAAG,GAAG,GAAG,IAAI,CAAC,UAAU,GAAG,GAAG,GAAG,IAAI,CAAC,QAAQ;oBACvE,IAAI,CAAC,YAAY,CAAC,UAAU,CAAC,EAAE,IAAI,EAAE,EAAE,IAAI,EAAE,IAAI,EAAE,UAAU,EAAE,GAAG,EAAE,EAAE,IAAI,EAAE,MAAM,EAAE,CAAC;iBACtF;qBAAM;oBACL,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,yBAAyB,EAAE,iBAAiB,CAAC,CAAC;oBACzE,IAAI,CAAC,QAAQ,CAAC,IAAI,EAAE;iBACrB;aACF;QACH,CAAC,CAAC;IACJ,CAAC;IAED,IAAI,CAAC,QAAQ;QACX,IAAI,IAAI,mCAAQ,QAAQ,KAAE,UAAU,EAAE,IAAI,CAAC,KAAK,EAAE,YAAY,EAAE,IAAI,CAAC,cAAc,GAAE,CAAC;QACtF,IAAI,CAAC,eAAe,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC,SAAS,EAAE,CAAC,IAAI,CAAC,CAAC,GAAG,EAAE,EAAE;YAC7D,IAAI,GAAG,EAAE;gBACP,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,yBAAyB,EAAE,iBAAiB,CAAC,CAAC;gBACzE,IAAI,CAAC,QAAQ,CAAC,IAAI,EAAE;aACrB;QACH,CAAC,CAAC;IACJ,CAAC;IAED,eAAe,CAAC,IAAI;QAElB,IAAI,IAAI,IAAI,KAAK,EAAE;YACjB,IAAI,CAAC,KAAK,GAAG,CAAC,IAAI,CAAC,KAAK;SACzB;QACD,IAAI,IAAI,IAAI,aAAa,EAAE;YACzB,IAAI,CAAC,aAAa,GAAG,CAAC,IAAI,CAAC,aAAa;SACzC;QACD,IAAI,IAAI,IAAI,WAAW,EAAE;YACvB,IAAI,CAAC,WAAW,GAAG,CAAC,IAAI,CAAC,WAAW;SACrC;QACD,IAAI,IAAI,IAAI,YAAY,EAAE;YACxB,IAAI,CAAC,YAAY,GAAG,CAAC,IAAI,CAAC,YAAY;YACtC,IAAI,IAAI,CAAC,YAAY,EAAE;gBACrB,IAAI,CAAC,qBAAqB,EAAE;aAC7B;SACF;QACD,IAAI,IAAI,IAAI,UAAU,EAAE;YACtB,IAAI,CAAC,UAAU,GAAG,CAAC,IAAI,CAAC,UAAU;SACnC;QACD,IAAI,IAAI,IAAI,MAAM,EAAE;YAClB,IAAI,CAAC,MAAM,GAAG,CAAC,IAAI,CAAC,MAAM;SAC3B;QACD,IAAI,IAAI,IAAI,QAAQ,EAAE;YACpB,IAAI,CAAC,QAAQ,GAAG,CAAC,IAAI,CAAC,QAAQ;SAC/B;IACH,CAAC;IAGD,GAAG,CAAC,IAAI;QACN,IAAI,IAAI,IAAI,aAAa,EAAE;YACzB,MAAM,QAAQ,GAAG,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,4EAAiB,EAAE,EAAE,IAAI,EAAE,IAAI,EAAE,QAAQ,EAAE,KAAK,EAAE,CAAC,CAAC;YAC5F,QAAQ,CAAC,iBAAiB,CAAC,IAAI,GAAG,OAAO;YACzC,QAAQ,CAAC,MAAM,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,EAAE,CAAC,GAAG,EAAE,EAAE;gBACtC,IAAI,GAAG,EAAE;oBACP,IAAI,GAAG,CAAC,IAAI,IAAI,MAAM,EAAE;wBACtB,IAAI,CAAC,aAAa,CAAC,gBAAgB,GAAG,IAAI,CAAC,OAAO;wBAClD,IAAI,CAAC,aAAa,CAAC,aAAa,GAAG,GAAG,CAAC,IAAI;wBAC3C,IAAI,CAAC,aAAa,CAAC,QAAQ,GAAG,IAAI;wBAClC,IAAI,CAAC,aAAa,CAAC,WAAW,GAAG,IAAI;wBACrC,IAAI,CAAC,aAAa,CAAC,QAAQ,GAAG,QAAQ;wBACtC,IAAI,CAAC,aAAa,CAAC,IAAI,GAAG,QAAQ;wBAClC,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,eAAe,CAAC;qBAC3C;iBACF;YACH,CAAC,CAAC;SACH;QACD,IAAI,IAAI,IAAI,WAAW,EAAE;YACvB,MAAM,QAAQ,GAAG,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,4EAAiB,EAAE,EAAE,IAAI,EAAE,IAAI,EAAE,QAAQ,EAAE,KAAK,EAAE,CAAC,CAAC;YAC5F,QAAQ,CAAC,iBAAiB,CAAC,IAAI,GAAG,OAAO;YACzC,QAAQ,CAAC,MAAM,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,EAAE,CAAC,GAAG,EAAE,EAAE;gBACtC,IAAI,GAAG,EAAE;oBACP,IAAI,GAAG,CAAC,IAAI,IAAI,MAAM,EAAE;wBACtB,IAAI,CAAC,aAAa,CAAC,aAAa,GAAG,GAAG,CAAC,IAAI;wBAC3C,IAAI,CAAC,aAAa,CAAC,gBAAgB,GAAG,IAAI,CAAC,OAAO;wBAClD,IAAI,CAAC,aAAa,CAAC,QAAQ,GAAG,WAAW;wBACzC,IAAI,CAAC,aAAa,CAAC,QAAQ,GAAG,IAAI;wBAClC,IAAI,CAAC,aAAa,CAAC,WAAW,GAAG,IAAI;wBACrC,IAAI,CAAC,aAAa,CAAC,IAAI,GAAG,WAAW;wBACrC,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,eAAe,CAAC;qBAC3C;iBACF;YACH,CAAC,CAAC;SACH;QACD,IAAI,IAAI,IAAI,UAAU,EAAE;YACtB,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,sCAAsC,CAAC,EAAE,EAAE,WAAW,EAAE,EAAE,UAAU,EAAE,IAAI,CAAC,OAAO,CAAC,UAAU,EAAE,IAAI,EAAE,IAAI,CAAC,OAAO,CAAC,SAAS,EAAE,UAAU,EAAE,QAAQ,EAAE,EAAE,CAAC;SAE7K;IACH,CAAC;IAGD,SAAS;QACP,IAAI,QAAQ,CAAC;QACb,QAAQ,GAAG,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,mFAAY,EAAE,EAAE,IAAI,EAAE,IAAI,EAAE,QAAQ,EAAE,KAAK,EAAE,CAAC,CAAC;QAEjF,QAAQ,CAAC,iBAAiB,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM;QAC/C,QAAQ,CAAC,iBAAiB,CAAC,KAAK,GAAG,IAAI,CAAC,YAAY;IACtD,CAAC;IAED,SAAS,CAAC,KAAK;QACb,IAAI,KAAK,CAAC,GAAG,IAAI,UAAU,EAAE;YAC3B,IAAI,CAAC,yBAAyB,CAAC,WAAW,CAAC,KAAK,CAAC,IAAI,CAAC,EAAE,EAAE,KAAK,CAAC,IAAI,CAAC,QAAQ,CAAC;SAC/E;QACD,IAAI,KAAK,CAAC,GAAG,IAAI,QAAQ,EAAE;YACzB,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,8BAA8B,EAAE,iBAAiB,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,EAAE;gBAC1F,IAAI,MAAM,EAAE;oBACV,IAAI,CAAC,yBAAyB,CAAC,MAAM,CAAC,KAAK,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,SAAS,EAAE,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE;wBAC1E,IAAI,GAAG,EAAE;4BACP,IAAI,CAAC,qBAAqB,EAAE,CAAC;4BAC7B,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,yBAAyB,EAAE,iBAAiB,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,EAAE;4BAEvF,CAAC,CAAC,CAAC;yBACJ;oBACH,CAAC,CAAC;iBACH;YACH,CAAC,CAAC,CAAC;SACJ;IAEH,CAAC;IAEK,aAAa;;YACjB,IAAI,QAAQ,CAAC;YACb,QAAQ,GAAG,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,uHAAyB,EAAE,EAAE,IAAI,EAAE,IAAI,EAAE,QAAQ,EAAE,KAAK,EAAE,CAAC,CAAC;YAC9F,QAAQ,CAAC,iBAAiB,CAAC,IAAI,GAAG,aAAa;YAC/C,QAAQ,CAAC,iBAAiB,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK;YAC7C,QAAQ,CAAC,MAAM,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,EAAE,CAAC,GAAG,EAAE,EAAE;gBACtC,IAAI,GAAG,EAAE;oBACP,4BAA4B;oBAC5B,IAAI,CAAC,WAAW,GAAG,GAAG,CAAC,WAAW;oBAElC,IAAI,CAAC,uBAAuB,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,SAAS,EAAE,CAAC,IAAI,CAAC,CAAC,GAAG,EAAE,EAAE;wBACnE,IAAI,GAAG,EAAE;4BACP,8BAA8B;4BAC9B,IAAI,QAAQ,GAAG;gCACb,YAAY,EAAE,GAAG;gCACjB,WAAW,EAAE,IAAI,CAAC,WAAW;gCAC7B,QAAQ,EAAE,IAAI,CAAC,KAAK;gCACpB,UAAU,EAAE,MAAM;6BACnB;4BACD,IAAI,CAAC,yBAAyB,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,SAAS,EAAE,CAAC,IAAI,CAAC,CAAC,GAAG,EAAE,EAAE;gCACrE,IAAI,GAAG,EAAE;oCACP,8BAA8B;oCAC9B,IAAI,CAAC,qBAAqB,EAAE;iCAC7B;4BAEH,CAAC,CAAC;yBACH;oBACH,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE;oBACb,CAAC,CAAC;iBAEH;YAEH,CAAC,CAAC;YAEF,MAAM;YACN,KAAK;QAGP,CAAC;KAAA;IAGK,qBAAqB;;YACzB,IAAI,CAAC,yBAAyB,CAAC,oBAAoB,CAAC,IAAI,CAAC,KAAK,EAAE,MAAM,CAAC,CAAC,SAAS,EAAE,CAAC,IAAI,CAAC,CAAC,GAAQ,EAAE,EAAE;gBACpG,IAAI,GAAG,EAAE;oBACP,8BAA8B;oBAC9B,IAAI,CAAC,cAAc,GAAG,GAAG;oBACzB,IAAI,CAAC,kBAAkB,CAAC,YAAY,EAAE;oBACtC,IAAI,CAAC,GAAG,CAAC,aAAa,EAAE;iBACzB;YAEH,CAAC,CAAC;QACJ,CAAC;KAAA;IAED,UAAU;IACV,cAAc,CAAC,WAAmB;QAChC,MAAM,OAAO,GAAG,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,WAAW,CAAC,CAAC;QACxD,OAAO,OAAO,CAAC,KAAK,IAAI,CAAC,OAAO,CAAC,KAAK,IAAI,OAAO,CAAC,OAAO,CAAC,CAAC;IAC7D,CAAC;IAED,gBAAgB,CAAC,WAAmB;QAClC,MAAM,OAAO,GAAG,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,WAAW,CAAC,CAAC;QACxD,OAAO,OAAO,CAAC,OAAO,IAAI,CAAC,OAAO,CAAC,KAAK,IAAI,OAAO,CAAC,OAAO,CAAC,CAAC;IAC/D,CAAC;IAED,eAAe,CAAC,UAAU,EAAE,WAAW;QACrC,MAAM,OAAO,GAAG,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,WAAW,CAAC,CAAC;QACxD,OAAO,OAAO,CAAC,QAAQ,CAAC,UAAU,CAAC,IAAI,CAAC,OAAO,CAAC,KAAK,IAAI,OAAO,CAAC,OAAO,CAAC,CAAC;IAC5E,CAAC;IAED,gBAAgB,CAAC,WAAW;QAC1B,MAAM,OAAO,GAAG,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,WAAW,CAAC,CAAC;QACxD,OAAO,OAAO,CAAC,KAAK,IAAI,OAAO,CAAC,OAAO,CAAC;IAC1C,CAAC;CACF;;YAloBQ,wDAAW;YAFX,sDAAQ;YAYR,8FAAiB;YAPjB,4DAAc;YAuBd,+DAAe;YAtBf,iEAAQ;YALO,6DAAiB;YAuBhC,yFAAkB;YAnBF,oDAAM;YAQ2B,2GAAuB;YAA7C,wGAAoB;YAA/C,6GAAyB;YAFzB,iGAAY;YAKM,oEAAe;;;0BAyBvC,qDAAS,SAAC,KAAK;+BACf,qDAAS,SAAC,UAAU;kCACpB,qDAAS,SAAC,aAAa;iCACvB,qDAAS,SAAC,YAAY;gCACtB,qDAAS,SAAC,WAAW;sBA2BrB,iDAAK;yBACL,iDAAK;qBACL,iDAAK;;AAlCK,uBAAuB;IAVnC,yDAAS,CAAC;QACT,QAAQ,EAAE,qBAAqB;QAC/B,gMAA+C;QAE/C,SAAS,EAAE;YACT,EAAE,OAAO,EAAE,gEAAW,EAAE,QAAQ,EAAE,gFAAiB,EAAE,IAAI,EAAE,CAAC,oEAAe,CAAC,EAAE;YAC9E,EAAE,OAAO,EAAE,qEAAgB,EAAE,QAAQ,EAAE,qDAAU,EAAE;SACpD;;KACF,CAAC;GAEW,uBAAuB,CA4lBnC;AA5lBmC;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACxCK;AACM;AAEmB;AAClB;AACoB;AACd;AACgB;AACH;AACV;AACA;AAEoB;IAsBhE,yBAAyB,SAAzB,yBAAyB;CAAI;AAA7B,yBAAyB;IAlBrC,uDAAQ,CAAC;QACR,YAAY,EAAE,CAAC,+EAAuB,CAAC;QACvC,OAAO,EAAE,CAAC,+EAAuB,CAAC;QAClC,OAAO,EAAE;YACP,yDAAY;YACZ,uDAAW;YACX,+DAAmB;YACnB,0DAAe;YACf,wEAAe;YACf,gEAAc;YACd,gEAAc;YACd,6EAAmB;YACnB,oEAAc;YACd,oEAAc;YACd,uFAAc;YACd,sBAAsB;SACvB;KACF,CAAC;GACW,yBAAyB,CAAI;AAAJ;;;;;;;;;;;;;;;;;AClCwE;AACvG,MAAM,UAAU,GAAe;IACpC;QACE,KAAK,EAAE,MAAM;QACb,IAAI,EAAE,+GAAa;QACnB,KAAK,EAAE,WAAW;QAClB,uBAAuB;QACvB,oBAAoB;QACpB,kBAAkB;KACnB;IACD;QACE,KAAK,EAAE,UAAU;QACjB,IAAI,EAAE,+GAAa;QACnB,KAAK,EAAE,SAAS;QAChB,uBAAuB;QACvB,oBAAoB;QACpB,kBAAkB;KACnB;IACD;QACE,KAAK,EAAE,cAAc;QACrB,IAAI,EAAE,+GAAa;QACnB,KAAK,EAAE,aAAa;QACpB,uBAAuB;QACvB,oBAAoB;QACpB,kBAAkB;KACnB;IACD;QACE,KAAK,EAAE,SAAS;QAChB,IAAI,EAAE,gHAAc;QACpB,KAAK,EAAE,SAAS;QAChB,GAAG,EAAE;YACH,IAAI,EAAE,IAAI;YACV,MAAM,EAAE,IAAI;SACb;QACD,uBAAuB;QACvB,oBAAoB;QACpB,kBAAkB;KACnB;CACF;AAEM,MAAM,iBAAiB,GAAa;IACzC,WAAW;IACX,SAAS;IACT,aAAa;IACb,SAAS;CACV;;;;;;;;;;;;;;;;;;;;;;;;;;AC7CkG;AACtD;AACyB;AAE4B;AACpC;IAQjD,yBAAyB,SAAzB,yBAAyB;IAWpC,YACU,EAAe,EAAS,KAAqB,EAAS,uBAA+C,EAAS,GAAsB;QAApI,OAAE,GAAF,EAAE,CAAa;QAAS,UAAK,GAAL,KAAK,CAAgB;QAAS,4BAAuB,GAAvB,uBAAuB,CAAwB;QAAS,QAAG,GAAH,GAAG,CAAmB;QARrI,UAAK,GAAQ,EAAE;QAIxB,aAAQ,GAAQ,EAAE;QAEV,kBAAa,GAAmB,EAAE,CAAC;IAGvC,CAAC;IAEL,QAAQ;IACR,CAAC;IAED,WAAW;IAEX,CAAC;IAED,IAAI;QACF,IAAI,IAAI,CAAC,IAAI,IAAE,QAAQ,EAAE;YACvB,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,UAAU,CAAC;SACpC;QACD,IAAG,IAAI,CAAC,IAAI,IAAE,aAAa,EAAC;YAC1B,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,EAAC,IAAI,EAAC,IAAI,CAAC,QAAQ,EAAC,WAAW,EAAC,IAAI,CAAC,WAAW,EAAC,CAAC;SACtE;IACH,CAAC;IAEK,cAAc,CAAC,KAAK;;YACxB,IAAI,KAAK,EAAE;gBACT,MAAM,IAAI,GAAG,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;gBACnC,qBAAqB;gBACrB,MAAM,MAAM,GAAG,oEAAa,EAAE,CAAC;gBAC/B,MAAM,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC;gBAC3B,MAAM,CAAC,MAAM,GAAG,GAAG,EAAE;oBACnB,uBAAuB;oBACvB,IAAI,MAAM,CAAC,MAAM,EAAE;wBACjB,IAAI,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC,QAAQ,EAAE,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;wBACpD,IAAI,IAAI,GAAG;4BACT,OAAO,EAAE,MAAM;4BACf,QAAQ,EAAE,IAAI,CAAC,IAAI;4BACnB,QAAQ,EAAE,IAAI,CAAC,IAAI;4BACnB,QAAQ,EAAE,IAAI,CAAC,IAAI;4BACnB,WAAW,EAAE,IAAI,CAAC,IAAI;4BACtB,aAAa,EAAE,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,GAAG,EAAE;yBAC1C;wBACD,IAAI,CAAC,QAAQ,GAAC,IAAI,CAAC,IAAI;wBACvB,IAAI,CAAC,QAAQ,GAAC,IAAI;wBAClB,IAAI,CAAC,GAAG,CAAC,aAAa,EAAE;qBACzB;oBAAA,CAAC;gBACJ,CAAC;aAGF;QAGH,CAAC;KAAA;IACD,QAAQ;QACN,IAAI,CAAC,cAAc,CAAC,aAAa,CAAC,KAAK,EAAE;IAC3C,CAAC;CACF;;YA3EQ,uDAAW;YACX,sEAAc;YAEd,2GAAuB;YAJvB,4DAAiB;;;qBAcvB,gDAAK;mBACL,gDAAK;qBACL,gDAAK;oBACL,gDAAK;6BAKL,oDAAS,SAAC,cAAc;;AATd,yBAAyB;IALrC,wDAAS,CAAC;QACT,QAAQ,EAAE,wBAAwB;QAClC,mMAAkD;;KAEnD,CAAC;GACW,yBAAyB,CA+DrC;AA/DqC;;;;;;;;;;;;;;;;;;;;;;ACbwE;AACvG,MAAM,MAAM,GAAe;IAChC;QACE,KAAK,EAAE,QAAQ;QACf,IAAI,EAAE,+GAAa;QACnB,KAAK,EAAE,IAAI;KACZ;IACD;QACE,KAAK,EAAE,MAAM;QACb,IAAI,EAAE,+GAAa;QACnB,KAAK,EAAE,WAAW;QAClB,YAAY,EAAC,IAAI;KAClB;IACD;QACE,KAAK,EAAE,MAAM;QACb,IAAI,EAAE,+GAAa;QACnB,KAAK,EAAE,SAAS;KACjB;IACD;QACE,KAAK,EAAE,cAAc;QACrB,IAAI,EAAE,+GAAa;QACnB,KAAK,EAAE,eAAe;KACvB;IACD;QACE,KAAK,EAAE,SAAS;QAChB,IAAI,EAAE,gHAAc;QACpB,KAAK,EAAE,SAAS;QAChB,GAAG,EAAE;YACH,IAAI,EAAE,IAAI;YACV,MAAM,EAAE,IAAI;SACb;KACF;CACF;AAGM,MAAM,aAAa,GAAa;IACrC,IAAI;IACJ,WAAW;IACX,SAAS;IACT,eAAe;IACf,SAAS;CACV;AAEM,MAAM,aAAa,GAAe;IAEvC;QACE,KAAK,EAAE,aAAa;QACpB,IAAI,EAAE,+GAAa;QACnB,KAAK,EAAE,aAAa;KACrB;IACD;QACE,KAAK,EAAE,UAAU;QACjB,IAAI,EAAE,+GAAa;QACnB,KAAK,EAAE,UAAU;KAClB;IACD;QACE,KAAK,EAAE,QAAQ;QACf,IAAI,EAAE,gHAAc;QACpB,KAAK,EAAE,QAAQ;QACf,GAAG,EAAE;YACH,QAAQ,EAAE,IAAI;YACd,MAAM,EAAE,IAAI;SAEb;KACF;CAEF;AAEM,MAAM,oBAAoB,GAAa;IAC5C,aAAa;IACb,UAAU;IACV,QAAQ;CACT;AAEM,MAAM,WAAW,GAAe;IAErC;QACE,KAAK,EAAE,iBAAiB;QACxB,IAAI,EAAE,+GAAa;QACnB,KAAK,EAAE,WAAW;KACnB;IACD;QACE,KAAK,EAAE,eAAe;QACtB,IAAI,EAAE,+GAAa;QACnB,KAAK,EAAE,SAAS;KACjB;IACD;QACE,KAAK,EAAE,QAAQ;QACf,IAAI,EAAE,+GAAa;QACnB,KAAK,EAAE,WAAW;KACnB;IACD;QACE,KAAK,EAAE,OAAO;QACd,IAAI,EAAE,+GAAa;QACnB,KAAK,EAAE,cAAc;KACtB;CAEF;AAEM,MAAM,kBAAkB,GAAa;IAC1C,WAAW;IACX,SAAS;IACT,WAAW;IACX,cAAc;CACf;AAEM,MAAM,WAAW;;AACR,mBAAO,GAAW,EAAE,CAAC;;;;;;;;;;;;;;;;;AC3G4E;AAC1G,MAAM,SAAS,GAAe;IACnC;QACE,KAAK,EAAE,gBAAgB;QACvB,IAAI,EAAE,+GAAa;QACnB,KAAK,EAAE,IAAI;KACZ;IACD;QACE,KAAK,EAAE,cAAc;QACrB,IAAI,EAAE,+GAAa;QACnB,KAAK,EAAE,aAAa;KACrB;IACD;QACE,KAAK,EAAE,cAAc;QACrB,IAAI,EAAE,+GAAa;QACnB,KAAK,EAAE,aAAa;KACrB;IACD;QACE,KAAK,EAAE,cAAc;QACrB,IAAI,EAAE,+GAAa;QACnB,KAAK,EAAE,aAAa;KACrB;IACD;QACE,KAAK,EAAE,YAAY;QACnB,IAAI,EAAE,+GAAa;QACnB,KAAK,EAAE,gBAAgB;KACxB;IACD;QACE,KAAK,EAAE,SAAS;QAChB,IAAI,EAAE,+GAAa;QACnB,KAAK,EAAE,SAAS;QAChB,SAAS,EAAE,IAAI;KAChB;IACD;QACE,KAAK,EAAE,QAAQ;QACf,IAAI,EAAE,+GAAa;QACnB,KAAK,EAAE,QAAQ;QACf,QAAQ,EAAE,IAAI;KACf;IACD;QACE,KAAK,EAAE,mBAAmB;QAC1B,IAAI,EAAE,+GAAa;QACnB,KAAK,EAAE,WAAW;QAClB,QAAQ,EAAE,IAAI;KACf;IACD;QACE,KAAK,EAAE,MAAM;QACb,IAAI,EAAE,+GAAa;QACnB,KAAK,EAAE,WAAW;QAClB,MAAM,EAAE,IAAI;KACb;IACD;QACE,KAAK,EAAE,SAAS;QAChB,IAAI,EAAE,gHAAc;QACpB,KAAK,EAAE,SAAS;QAChB,GAAG,EAAE;YACH,IAAI,EAAE,IAAI;YACV,IAAI,EAAE,IAAI;YACV,WAAW,EAAE,IAAI;SAClB;KACF;CACF;AAEM,MAAM,gBAAgB,GAAa;IACxC,IAAI;IACJ,aAAa;IACb,aAAa;IACb,gBAAgB;IAChB,SAAS;IACT,QAAQ;IACR,WAAW;IACX,WAAW;IACX,SAAS;CACV;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACzE6G;AAC1C;AACR;AAE2B;AACpB;AACL;AAC0B;AACW;AAE5B;IAS1D,sBAAsB,SAAtB,sBAAsB;IAuBjC,YACU,EAAe,EAAS,KAAqB,EAC7C,cAAkC,EAClC,UAAmC,EACnC,OAAuB,EACvB,YAA0B,EAC1B,GAAsB;QALtB,OAAE,GAAF,EAAE,CAAa;QAAS,UAAK,GAAL,KAAK,CAAgB;QAC7C,mBAAc,GAAd,cAAc,CAAoB;QAClC,eAAU,GAAV,UAAU,CAAyB;QACnC,YAAO,GAAP,OAAO,CAAgB;QACvB,iBAAY,GAAZ,YAAY,CAAc;QAC1B,QAAG,GAAH,GAAG,CAAmB;QA5BhC,WAAM,GAAW,EAAE;QACnB,aAAQ,GAAW,EAAE;QAGrB,SAAI,GAAY,KAAK;QACrB,aAAQ,GAAY,KAAK;QACjB,kBAAa,GAAmB,EAAE,CAAC;QAC3C,YAAO,GAAY,EAAE;QACrB,yBAAoB,GAAG,GAAG,yEAAkB,wBAAwB,CAAC;QACrE,mBAAc,GAAG;YACf;gBACE,IAAI,EAAE,IAAI;gBACV,KAAK,EAAE,OAAO;aACf;YACD;gBACE,IAAI,EAAE,IAAI;gBACV,KAAK,EAAE,QAAQ;aAChB;SACF;IAWG,CAAC;IAEL,QAAQ;QACN,IAAI,CAAC,QAAQ,EAAE,CAAC;IAClB,CAAC;IAED,QAAQ;QACN,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC;YAC7B,WAAW,EAAE,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,IAAI,IAAI,EAAE,8DAAkB,CAAC,CAAC,+DAAmB,EAAE,oEAAwB,CAAC,CAAC,CAAC;YAC7G,WAAW,EAAE,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,IAAI,IAAI,EAAE,8DAAkB,CAAC,CAAC,+DAAmB,EAAE,oEAAwB,CAAC,CAAC,CAAC;YAC7G,SAAS,EAAE,CAAC,IAAI,CAAC,OAAO,CAAC,SAAS,IAAI,IAAI,EAAE,8DAAkB,CAAC,CAAC,+DAAmB,EAAE,oEAAwB,CAAC,CAAC,CAAC;YAChH,IAAI,EAAE,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,IAAI,SAAS,EAAE,8DAAkB,CAAC,CAAC,+DAAmB,EAAE,oEAAwB,CAAC,CAAC,CAAC;YAC3G,QAAQ,EAAE,CAAC,IAAI,CAAC,OAAO,CAAC,QAAQ,IAAI,KAAK,EAAE,8DAAkB,CAAC,CAAC,+DAAmB,EAAE,oEAAwB,CAAC,CAAC,CAAC;YAC/G,eAAe,EAAE,CAAC,IAAI,CAAC,OAAO,CAAC,eAAe,IAAI,IAAI,EAAE,8DAAkB,CAAC,CAAC,+DAAmB,EAAE,oEAAwB,CAAC,CAAC,CAAC;YAC5H,SAAS,EAAE,CAAC,IAAI,CAAC,OAAO,CAAC,SAAS,IAAI,IAAI,CAAC;YAC3C,QAAQ,EAAE,CAAC,IAAI,CAAC,OAAO,CAAC,YAAY,IAAI,IAAI,EAAE,8DAAkB,CAAC,CAAC,+DAAmB,EAAE,oEAAwB,CAAC,CAAC,CAAC;YAClH,QAAQ,EAAE,CAAC,IAAI,CAAC,OAAO,CAAC,aAAa,IAAI,IAAI,EAAE,8DAAkB,CAAC,CAAC,+DAAmB,EAAE,oEAAwB,CAAC,CAAC,CAAC;YACnH,SAAS,EAAE,CAAC,IAAI,CAAC,OAAO,CAAC,SAAS,IAAI,IAAI,EAAE,8DAAkB,CAAC,CAAC,+DAAmB,EAAE,oEAAwB,CAAC,CAAC,CAAC;YAChH,UAAU,EAAE,CAAC,IAAI,CAAC,OAAO,CAAC,UAAU,IAAI,IAAI,EAAE,8DAAkB,CAAC,CAAC,+DAAmB,EAAE,oEAAwB,CAAC,CAAC,CAAC;YAClH,QAAQ,EAAE,CAAC,IAAI,CAAC,OAAO,CAAC,QAAQ,IAAI,IAAI,EAAE,8DAAkB,CAAC,CAAC,+DAAmB,EAAE,oEAAwB,CAAC,CAAC,CAAC;YAC9G,gBAAgB,EAAE,CAAC,IAAI,CAAC,OAAO,CAAC,oBAAoB,CAAC,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,oBAAoB,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC;YAC3G,IAAI,EAAE,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC;YACpD,SAAS,EAAE,CAAC,IAAI,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC,CAAC,IAAI,CAAC;YACnE,SAAS,EAAE,CAAC,IAAI,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC,CAAC,IAAI,CAAC;SACpE,CAAC,CAAC;IAEL,CAAC;IAED,IAAI;QACF,IAAI,IAAI,CAAC,SAAS,CAAC,KAAK,EAAE;YACxB,IAAI,QAAQ,GAAG,IAAI,CAAC,SAAS,CAAC,KAAK;YACnC,IAAI,IAAI,GAAG;gBACT,IAAI,EAAE,QAAQ,CAAC,WAAW;gBAC1B,IAAI,EAAE,QAAQ,CAAC,WAAW;gBAC1B,SAAS,EAAE,QAAQ,CAAC,SAAS;gBAC7B,IAAI,EAAE,QAAQ,CAAC,IAAI;gBACnB,YAAY,EAAE,QAAQ,CAAC,QAAQ;gBAC/B,aAAa,EAAE,QAAQ,CAAC,QAAQ;gBAChC,SAAS,EAAE,QAAQ,CAAC,SAAS;gBAC7B,UAAU,EAAE,QAAQ,CAAC,UAAU;gBAC/B,oBAAoB,EAAE,EAAE;gBACxB,WAAW,EAAE,KAAK;gBAClB,SAAS,EAAE,KAAK;gBAChB,eAAe,EAAE,QAAQ,CAAC,eAAe;gBACzC,SAAS,EAAE,QAAQ,CAAC,WAAW;gBAC/B,QAAQ,EAAE,QAAQ,CAAC,QAAQ;gBAC3B,QAAQ,EAAE,QAAQ,CAAC,QAAQ;aAC5B;YACD,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,SAAS,EAAE,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE;gBACpD,IAAI,GAAG,EAAE;oBACP,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,EAAE,IAAI,EAAE,IAAI,CAAC,SAAS,CAAC,KAAK,EAAE,IAAI,EAAE,MAAM,EAAE,CAAC;iBACjE;YACH,CAAC,CAAC;SACH;IACH,CAAC;IAGD,WAAW;QACT,IAAI,CAAC,aAAa,CAAC,OAAO,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,WAAW,EAAE,CAAC,CAAC;IACrD,CAAC;IAED,mBAAmB;IACnB,cAAc,CAAC,WAAmB;QAChC,MAAM,OAAO,GAAG,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,WAAW,CAAC,CAAC;QACrD,OAAO,OAAO,CAAC,KAAK,IAAI,CAAC,OAAO,CAAC,KAAK,IAAI,OAAO,CAAC,OAAO,CAAC,CAAC;IAC7D,CAAC;IAED,gBAAgB,CAAC,WAAmB;QAClC,MAAM,OAAO,GAAG,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,WAAW,CAAC,CAAC;QACrD,OAAO,OAAO,CAAC,OAAO,IAAI,CAAC,OAAO,CAAC,KAAK,IAAI,OAAO,CAAC,OAAO,CAAC,CAAC;IAC/D,CAAC;IAED,eAAe,CAAC,UAAU,EAAE,WAAW;QACrC,MAAM,OAAO,GAAG,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,WAAW,CAAC,CAAC;QACrD,OAAO,OAAO,CAAC,QAAQ,CAAC,UAAU,CAAC,IAAI,CAAC,OAAO,CAAC,KAAK,IAAI,OAAO,CAAC,OAAO,CAAC,CAAC;IAC5E,CAAC;IAED,gBAAgB,CAAC,WAAW;QAC1B,MAAM,OAAO,GAAG,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,WAAW,CAAC,CAAC;QACrD,OAAO,OAAO,CAAC,KAAK,IAAI,OAAO,CAAC,OAAO,CAAC;IAC1C,CAAC;IAED,aAAa,CAAC,IAAI;QAChB,IAAI,KAAK,GAAG,IAAI,CAAC,IAAI,CAAC;QACtB,IAAI,IAAI,GAAU,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,kBAAkB,CAAC,IAAI,EAAE;QAChE,IAAI,KAAK,EAAE;YACT,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC;SAChB;aAAM;YACL,IAAI,KAAK,GAAG,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,IAAI,IAAI,CAAC;YAC1C,IAAI,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC,CAAC;SACtB;QACD,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,kBAAkB,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;IAC7D,CAAC;IAED,QAAQ,CAAC,IAAY;QACnB,IAAI,IAAI,IAAI,OAAO;YACjB,IAAI,CAAC,eAAe,CAAC,aAAa,CAAC,KAAK,EAAE;aACvC,IAAI,IAAI,IAAI,OAAO;YACtB,IAAI,CAAC,eAAe,CAAC,aAAa,CAAC,KAAK,EAAE;;YAE1C,IAAI,CAAC,eAAe,CAAC,aAAa,CAAC,KAAK,EAAE;IAC9C,CAAC;IAED,YAAY,CAAC,KAAK,EAAE,IAAY;QAC9B,IAAI,KAAK,EAAE;YACT,MAAM,IAAI,GAAG,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;YACnC,qBAAqB;YACrB,MAAM,MAAM,GAAG,oEAAa,EAAE,CAAC;YAC/B,MAAM,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC;YAC3B,MAAM,CAAC,MAAM,GAAG,GAAG,EAAE;gBACnB,uBAAuB;gBACvB,IAAI,MAAM,CAAC,MAAM,EAAE;oBACjB,IAAI,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC,QAAQ,EAAE,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;oBACpD,IAAI,IAAI,GAAG;wBACT,OAAO,EAAE,MAAM;wBACf,QAAQ,EAAE,IAAI,CAAC,IAAI;wBACnB,QAAQ,EAAE,IAAI,CAAC,IAAI;wBACnB,QAAQ,EAAE,IAAI,CAAC,IAAI;wBACnB,WAAW,EAAE,IAAI,CAAC,IAAI;wBACtB,aAAa,EAAE,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,GAAG,EAAE;qBAC1C;oBACD,IAAI,CAAC,OAAO,CAAC,QAAQ,EAAE;oBACvB,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,SAAS,EAAE,CAAC,IAAI,CAAC,CAAC,GAAG,EAAE,EAAE;wBAClD,IAAI,GAAG,EAAE;4BACP,IAAI,IAAI,IAAI,OAAO,EAAE;gCACnB,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,WAAW,CAAC,CAAC,QAAQ,CAAC,GAAG,CAAC;6BACnD;iCAAM,IAAI,IAAI,IAAI,OAAO,EAAE;gCAC1B,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,WAAW,CAAC,CAAC,QAAQ,CAAC,GAAG,CAAC;6BACnD;iCAAM;gCACL,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,QAAQ,CAAC,GAAG,CAAC;6BAC9C;yBACF;wBACD,IAAI,CAAC,GAAG,CAAC,aAAa,EAAE;wBACxB,IAAI,CAAC,OAAO,CAAC,UAAU,EAAE;oBAC3B,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,GAAE;wBACV,IAAI,CAAC,OAAO,CAAC,UAAU,EAAE;oBAC3B,CAAC,CAAC;iBACH;gBAAA,CAAC;YACJ,CAAC;SACF;IACH,CAAC;IAED,eAAe;QACb,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,8BAA8B,EAAE,iBAAiB,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,EAAE;YAC1F,IAAI,MAAM,EAAE;gBACV,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,EAAE,IAAI,EAAE,QAAQ,EAAE,CAAC,CAAC;aACxC;QACH,CAAC,CAAC,CAAC;IACL,CAAC;CAEF;;YAtMQ,uDAAW;YACX,sEAAc;YAQd,+EAAkB;YAFlB,oGAAuB;YADvB,0FAAc;YAHd,iGAAY;YAJZ,6DAAiB;;;8BAuCvB,qDAAS,SAAC,eAAe;8BACzB,qDAAS,SAAC,eAAe;8BACzB,qDAAS,SAAC,eAAe;;AAtBf,sBAAsB;IAPlC,yDAAS,CAAC;QACT,QAAQ,EAAE,oBAAoB;QAC9B,+LAA8C;;KAI/C,CAAC;GACW,sBAAsB,CAoLlC;AApLkC;;;;;;;;;;;;;;;;;ACnB2E;AACvG,MAAM,UAAU,GAAe;IACpC,IAAI;IACJ,mBAAmB;IACnB,yBAAyB;IACzB,mBAAmB;IACnB,iBAAiB;IACjB,KAAK;IACL;QACE,KAAK,EAAE,YAAY;QACnB,IAAI,EAAE,+GAAa;QACnB,KAAK,EAAE,WAAW;QAClB,KAAK,EAAE,IAAI;KACZ;IACD;QACE,KAAK,EAAE,cAAc;QACrB,IAAI,EAAE,+GAAa;QACnB,KAAK,EAAE,MAAM;KACd;IACD;QACE,KAAK,EAAE,cAAc;QACrB,IAAI,EAAE,+GAAa;QACnB,KAAK,EAAE,MAAM;KACd;IACD;QACE,KAAK,EAAE,MAAM;QACb,IAAI,EAAE,+GAAa;QACnB,KAAK,EAAE,MAAM;QACb,OAAO,EAAE,IAAI;KACd;IACD,IAAI;IACJ,yBAAyB;IACzB,yBAAyB;IACzB,uBAAuB;IACvB,mBAAmB;IACnB,KAAK;IACL;QACE,KAAK,EAAE,iBAAiB;QACxB,IAAI,EAAE,+GAAa;QACnB,KAAK,EAAE,iBAAiB;QACxB,eAAe,EAAE,IAAI;KACtB;IACD;QACE,KAAK,EAAE,2BAA2B;QAClC,IAAI,EAAE,+GAAa;QACnB,KAAK,EAAE,cAAc;QACrB,cAAc,EAAE,IAAI;KACrB;IACD;QACE,KAAK,EAAE,6BAA6B;QACpC,IAAI,EAAE,+GAAa;QACnB,KAAK,EAAE,WAAW;QAClB,WAAW,EAAE,IAAI;KAClB;IACD;QACE,KAAK,EAAE,QAAQ;QACf,IAAI,EAAE,+GAAa;QACnB,KAAK,EAAE,UAAU;QACjB,YAAY,EAAE,IAAI;KACnB;IACD;QACE,KAAK,EAAE,SAAS;QAChB,IAAI,EAAE,gHAAc;QACpB,KAAK,EAAE,SAAS;QAChB,GAAG,EAAE;YACH,cAAc;YACd,IAAI,EAAE,IAAI;SACX;KACF;CAEF;AAEM,MAAM,iBAAiB,GAAa;IACzC,QAAQ;IACR,UAAU;IACV,WAAW;IACX,MAAM;IACN,MAAM;IACN,MAAM;IACN,cAAc;IACd,iBAAiB;IACjB,cAAc;IACd,WAAW;IACX,UAAU;IACV,SAAS;CACV;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACrF+E;AACG;AAIA;AAE1C;AAC6B;AAGC;AACqE;AAE3D;IAOpE,iBAAiB,SAAjB,iBAAiB;IAW5B,YAAoB,YAAsB,EAAU,WAA+B,EAAU,MAAc,EAAU,KAAwB,EAAU,WAA4B;QAA/J,iBAAY,GAAZ,YAAY,CAAU;QAAU,gBAAW,GAAX,WAAW,CAAoB;QAAU,WAAM,GAAN,MAAM,CAAQ;QAAU,UAAK,GAAL,KAAK,CAAmB;QAAU,gBAAW,GAAX,WAAW,CAAiB;QATnL,SAAI,GAAW,MAAM;QACrB,aAAQ,GAAc,EAAE;QACxB,gBAAW,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,6DAAU,CAAC,CAAC;QACpD,qBAAgB,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,oEAAiB,CAAC,CAAC;QAChE,wBAAwB;QACxB,gBAAW,GAAmB,EAAE;QAChC,SAAI,GAAY,KAAK;QACrB,eAAU,GAAG,qEAAgB;IAE0J,CAAC;IAExL,QAAQ;QACN,IAAI,IAAI,CAAC,IAAI,IAAI,MAAM,EAAE;YACvB,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC;YAC7B,IAAI,CAAC,gBAAgB,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC;SACnC;QACD,SAAS;QACT,2BAA2B;QAC3B,IAAI;QACJ,IAAI,CAAC,IAAI,GAAG,IAAI;QAChB,IAAI,CAAC,WAAW,EAAE;QAClB,8DAA8D;QAC9D,kCAAkC;QAClC,KAAK;QACL,kCAAkC;IACpC,CAAC;IACD,eAAe;QACb,IAAI,CAAC,WAAW,CAAC,UAAU,CAAC,SAAS,CAAC,CAAC,GAAG,EAAE,EAAE;YAC5C,IAAI,GAAG,EAAE;gBACP,IAAI,CAAC,UAAU,GAAG,GAAG,CAAC,oBAAoB,CAAC;gBAC3C,IAAI,IAAI,CAAC,UAAU,CAAC,IAAI,EAAE;oBACxB,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,IAAI,GAAG,KAAK;iBACrC;aACF;QACH,CAAC,CAAC;IACJ,CAAC;IACD,WAAW;QACT,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,WAAW,EAAE,CAAC,CAAC;IACrD,CAAC;IAED,UAAU,CAAC,IAAa;QACtB,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,SAAS,EAAE,CAAC,IAAI,CAAC,CAAC,GAAG,EAAE,EAAE;YACzD,IAAI,GAAG,EAAE;gBACP,IAAI,CAAC,WAAW,CAAC,aAAa,GAAG,GAAG;gBACpC,IAAI,CAAC,WAAW,CAAC,IAAI,GAAG,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC,aAAa,CAAC,CAAC,CAAC,WAAW;gBACtE,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,eAAe,CAAC;aAC3C;QACH,CAAC,CAAC;IACJ,CAAC;IAED,IAAI,QAAQ;QACV,IAAI,IAAI;QACR,IAAI,IAAI,CAAC,QAAQ,EAAE;YACjB,IAAI,GAAG,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,QAAQ,CAAC,CAAC,CAAC;SAC3C;QACD,OAAO,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE;IAChC,CAAC;IAGD,YAAY,CAAC,IAAK,EAAE,EAAW;QAC7B,MAAM,QAAQ,GAAG,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,4FAAsB,EAAE,EAAE,IAAI,EAAE,IAAI,EAAE,QAAQ,EAAE,KAAK,EAAE,CAAC,CAAC;QACjG,QAAQ,CAAC,iBAAiB,CAAC,MAAM,GAAG,EAAE;QACtC,QAAQ,CAAC,iBAAiB,CAAC,OAAO,GAAG,IAAI,IAAI,EAAE;QAC/C,QAAQ,CAAC,MAAM,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,EAAE,CAAC,GAAG,EAAE,EAAE;YACtC,IAAI,GAAG,EAAE;gBACP,IAAI,GAAG,CAAC,IAAI,IAAI,MAAM,EAAE;oBACtB,IAAI,CAAC,WAAW,EAAE;oBAClB,IAAI,CAAC,KAAK,CAAC,aAAa,EAAE,CAAC;iBAC5B;aACF;QACH,CAAC,CAAC;IACJ,CAAC;IAED,UAAU;QACR,IAAI,CAAC,YAAY,CAAC,UAAU,EAAE;IAChC,CAAC;IAED,QAAQ;QACN,IAAI,IAAI,CAAC,QAAQ,CAAC,EAAE,EAAE;YACpB,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,IAAI,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC,SAAS,EAAE,CAAC,IAAI,CAAC,CAAC,GAAG,EAAE,EAAE;gBAClE,oBAAoB;gBAEpB,IAAI,GAAG,EAAE;oBACP,IAAI,CAAC,YAAY,CAAC,UAAU,CAAC,EAAE,IAAI,EAAE,GAAG,EAAE,IAAI,EAAE,MAAM,EAAE,CAAC;iBAC1D;YACH,CAAC,CAAC;SACH;IACH,CAAC;IAED,WAAW;QACT,IAAI,CAAC,WAAW,CAAC,MAAM,EAAE,CAAC,SAAS,EAAE,CAAC,IAAI,CAAC,CAAC,GAAQ,EAAE,EAAE;YACtD,mBAAmB;YACnB,IAAI,GAAG,EAAE;gBACP,IAAI,CAAC,QAAQ,GAAG,GAAG;gBACnB,IAAI,CAAC,KAAK,CAAC,aAAa,EAAE;gBAC1B,IAAI,CAAC,QAAQ,CAAC,YAAY,EAAE;aAC7B;QACH,CAAC,CAAC;IACJ,CAAC;IAED,UAAU,CAAC,IAAS;QAClB,IAAI,CAAC,WAAW,CAAC,YAAY,GAAG,IAAI;QACpC,sCAAsC;QACtC,IAAI,CAAC,WAAW,CAAC,QAAQ,GAAG,MAAM;QAClC,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,iCAAiC,CAAC;IAC9D,CAAC;IAED,OAAO,CAAC,IAAY;QAClB,IAAI,GAAG,GAAG,EAAE;QACZ,IAAI,GAAG,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC;QAC1B,KAAK,MAAM,IAAI,IAAI,GAAG,EAAE;YACtB,IAAI,IAAI,IAAI,MAAM,EAAE;gBAClB,GAAG,GAAG,GAAG,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,YAAY,CAAC,CAAC,CAAC,UAAU;aACvD;iBAAM,IAAI,IAAI,IAAI,UAAU,EAAE;gBAC7B,GAAG,GAAG,GAAG,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,iBAAiB,CAAC,CAAC,CAAC,eAAe;aACjE;SACF;QAED,OAAO,GAAG;IACZ,CAAC;IAED,SAAS,CAAC,KAAK;QACb,IAAI,KAAK,CAAC,GAAG,IAAI,MAAM,EAAE;YACvB,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,IAAI,CAAC;SAC5B;aAAM,IAAI,KAAK,CAAC,GAAG,IAAI,MAAM,EAAE;YAC9B,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,IAAI,CAAC;SAC5B;IACH,CAAC;CAEF;;YAvJwB,gEAAQ;YAOxB,+EAAkB;YADlB,mDAAM;YAPN,4DAAiB;YAcC,oEAAe;;;uBAQvC,oDAAS,SAAC,gJAA0B;;AAD1B,iBAAiB;IAL7B,wDAAS,CAAC;QACT,QAAQ,EAAE,cAAc;QACxB,yLAAwC;;KAEzC,CAAC;GACW,iBAAiB,CAmI7B;AAnI6B;;;;;;;;;;;;;;;;;ACrBmF;AAC1G,MAAM,YAAY,GAAe;IACtC;QACE,KAAK,EAAE,cAAc;QACrB,IAAI,EAAE,+GAAa;QACnB,KAAK,EAAE,IAAI;QACX,uBAAuB;QACvB,oBAAoB;QACpB,kBAAkB;KACnB;IACD;QACE,KAAK,EAAE,cAAc;QACrB,IAAI,EAAE,+GAAa;QACnB,KAAK,EAAE,aAAa;QACpB,uBAAuB;QACvB,oBAAoB;QACpB,kBAAkB;KACnB;IACD;QACE,KAAK,EAAE,cAAc;QACrB,IAAI,EAAE,+GAAa;QACnB,KAAK,EAAE,aAAa;QACpB,uBAAuB;QACvB,oBAAoB;QACpB,kBAAkB;KACnB;IACD;QACE,KAAK,EAAE,YAAY;QACnB,IAAI,EAAE,+GAAa;QACnB,KAAK,EAAE,gBAAgB;QACvB,uBAAuB;QACvB,oBAAoB;QACpB,kBAAkB;KACnB;IACD;QACE,KAAK,EAAE,SAAS;QAChB,IAAI,EAAE,+GAAa;QACnB,KAAK,EAAE,SAAS;QAChB,SAAS,EAAE,IAAI;QACf,oBAAoB;QACpB,kBAAkB;KACnB;IACD;QACE,KAAK,EAAE,QAAQ;QACf,IAAI,EAAE,+GAAa;QACnB,KAAK,EAAE,QAAQ;QACf,QAAQ,EAAE,IAAI;KACf;IACD;QACE,KAAK,EAAE,MAAM;QACb,IAAI,EAAE,+GAAa;QACnB,KAAK,EAAE,WAAW;QAClB,uBAAuB;QACvB,oBAAoB;QACpB,MAAM,EAAE,IAAI;KACb;IACD;QACE,KAAK,EAAE,aAAa;QACpB,IAAI,EAAE,8GAAY;QAClB,KAAK,EAAE,oBAAoB;QAC3B,uBAAuB;QACvB,oBAAoB;QACpB,eAAe;KAChB;IACD;QACE,KAAK,EAAE,SAAS;QAChB,IAAI,EAAE,gHAAc;QACpB,KAAK,EAAE,SAAS;QAChB,GAAG,EAAC;YACF,IAAI,EAAE,IAAI;YACV,IAAI,EAAE,IAAI;SACX;QACD,uBAAuB;QACvB,oBAAoB;QACpB,kBAAkB;KACnB;CACF;AAEM,MAAM,aAAa,GAAa;IACrC,IAAI;IACJ,aAAa;IACb,aAAa;IACb,gBAAgB;IAChB,SAAS;IACT,QAAQ;IACR,WAAW;IACX,oBAAoB;IACpB,SAAS;CACV;;;;;;;;;;;;;;;ACxFD,iEAAe,uSAAuS,+EAA+E,60BAA60B,8LAA8L,+BAA+B,8rBAA8rB,kCAAkC,oiBAAoiB,8LAA8L,iCAAiC,0nBAA0nB,6BAA6B,ghBAAghB,8LAA8L,kCAAkC,8nBAA8nB,4BAA4B,ihBAAihB,8LAA8L,gCAAgC,snBAAsnB,oCAAoC,sQAAsQ,qqBAAqqB,2CAA2C,mDAAmD,qOAAqO,8LAA8L,kCAAkC,stBAAstB,iCAAiC,wxBAAwxB,8BAA8B,+zCAA+zC,4BAA4B,wkCAAwkC,6BAA6B,gnBAAgnB,6BAA6B,gnBAAgnB,4BAA4B,yoBAAyoB,+BAA+B,0uBAA0uB,iCAAiC,0jBAA0jB,4BAA4B,gjBAAgjB,2BAA2B,ohBAAohB,iCAAiC,0iBAA0iB,gCAAgC,knBAAknB,8LAA8L,mCAAmC,6iBAA6iB,sHAAsH,iCAAiC,iIAAiI,+BAA+B,+6NAA+6N;;;;;;;;;;;;;;ACAz0yB,iEAAe,ywCAAywC,gCAAgC,gJAAgJ,uHAAuH,ubAAub,iCAAiC,kkBAAkkB,+BAA+B,qKAAqK,+BAA+B,uGAAuG,iCAAiC,8DAA8D;;;;;;;;;;;;;;ACAlgG,iEAAe,wKAAwK,iDAAiD,UAAU,gXAAgX,kCAAkC,yHAAyH,gCAAgC,4cAA4c,kCAAkC,yHAAyH,gCAAgC,+yDAA+yD,qCAAqC,+mDAA+mD,+CAA+C,ihDAAihD,uYAAuY,iDAAiD,6hDAA6hD,y2DAAy2D,4jBAA4jB,6jBAA6jB,8eAA8e,kCAAkC,8IAA8I,gCAAgC,gCAAgC;;;;;;;;;;;;;;ACA5jY,iEAAe,usCAAusC,kCAAkC,qJAAqJ,gCAAgC,+EAA+E","sources":["./src/app/core/get-file-reader.ts","./src/app/pages/activity-management-list/activity-manage.const.ts","./src/app/pages/customer-detail/customer-detail.component.ts","./src/app/pages/customer-detail/customer-detail.share.module.ts","./src/app/pages/fna-list/fna.list.const.ts","./src/app/pages/form-component/custom-input-alert/custom-input-alert.component.ts","./src/app/pages/lead-detail/FNA-list.const.ts","./src/app/pages/policy/list/policy.const.ts","./src/app/pages/products/products-modal/products-modal.component.ts","./src/app/pages/products/products-table.const.ts","./src/app/pages/products/products.component.ts","./src/app/pages/quotations/list/quotation.const.ts","./src/app/pages/customer-detail/customer-detail.component.html","./src/app/pages/form-component/custom-input-alert/custom-input-alert.component.html","./src/app/pages/products/products-modal/products-modal.component.html","./src/app/pages/products/products.component.html"],"sourcesContent":["export function getFileReader(): FileReader {\n  const fileReader = new FileReader();\n  const zoneOriginalInstance = (fileReader as any)[\"__zone_symbol__originalInstance\"];\n  return zoneOriginalInstance || fileReader;\n}","import { COLTYPE, TableCol } from '../../_metronic/shared/crud-table/components/material-table-view/table-dto'\nexport const ActivityCol: TableCol[] = [\n  {\n    title: \"Activity No.\",\n    type: COLTYPE.FEILD,\n    field: \"activityNo\",\n    // amtFormat?: boolean,\n    // isTitle?: boolean\n    // isDate?: boolen\n  },\n  {\n    title: \"Activity Type\",\n    type: COLTYPE.FEILD,\n    field: \"activityType\",\n    // amtFormat?: boolean,\n    // isTitle?: boolean\n    // isDate?: boolen\n  },\n  {\n    title: \"Activity Title\",\n    type: COLTYPE.FEILD,\n    field: \"activityTitle\",\n    // amtFormat?: boolean,\n    // isTitle?: boolean\n    // isDate?: boolen\n  },\n  // {\n  //   title: \"Related Type\",\n  //   type: COLTYPE.FEILD,\n  //   field: \"relatedType\",\n  //   // amtFormat?: boolean,\n  //   isTitle: true\n  //   // isDate?: boolen\n  // },\n\n  {\n    title: \"Related To\",\n    type: COLTYPE.FEILD,\n    field: \"relatedTo\",\n    // amtFormat?: boolean,\n    // isTitle?: boolean\n    // isDate?: boolen\n  },\n  {\n    title: \"Assigned To\",\n    type: COLTYPE.FEILD,\n    field: \"assignName\",\n    // isTitle?: boolean\n    // isDate?: boolen\n  },\n  {\n    title: \"Due Date\",\n    type: COLTYPE.FEILD,\n    field: \"dueDate\",\n    isFromatDate: true\n  },\n  {\n    title: \"Status\",\n    type: COLTYPE.FEILD,\n    field: \"status\",\n    isActivityStatus: true,\n    // amtFormat?: boolean,\n    // isTitle?: boolean\n  },\n  {\n    title: \"Customer\",\n    type: COLTYPE.FEILD,\n    field: \"customerName\",\n    // amtFormat?: boolean,\n    // isTitle?: boolean\n  },\n  {\n    title: \"Actions\",\n    type: COLTYPE.ACTION,\n    field: \"actions\",\n    btn: {\n      edit: true\n    }\n    // amtFormat?: boolean,\n    // isTitle?: boolean\n    // isDate?: boolen\n  },\n]\n\nexport const ActivityDisplayCol: string[] = [\n  \"activityNo\",\n  \"activityType\",\n  \"activityTitle\",\n  // \"relatedType\",\n  \"relatedTo\",\n  \"assignName\",\n  \"dueDate\",\n  \"status\",\n  \"customerName\",\n  \"actions\",\n]","import { Location } from '@angular/common';\nimport { AfterViewInit, ChangeDetectorRef, Component, Input, OnInit, ViewChild } from '@angular/core';\nimport { FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\nimport { MAT_MOMENT_DATE_FORMATS, MomentDateAdapter } from '@angular/material-moment-adapter';\nimport { DateAdapter, MAT_DATE_FORMATS, MAT_DATE_LOCALE } from '@angular/material/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\nimport * as moment from 'moment';\nimport { forkJoin, catchError, of } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { validateAllFields } from 'src/app/core/valid-all-feild';\nimport { AlertService } from 'src/app/modules/loading-toast/alert-model/alert.service';\nimport { MasterDataService } from 'src/app/modules/master-data/master-data.service';\nimport { AttachmentDownloadService, AttachmentServiceRef, AttachmentUploadService } from 'src/app/_metronic/core/services/attachment-data.service';\nimport { MaterialTableViewComponent } from 'src/app/_metronic/shared/crud-table/components/material-table-view/material-table-view.component';\nimport { MY_FORMATS } from '../../core/is-json';\nimport { defaultAccessObj, MenuDataService } from '../../core/menu-data.service';\nimport { ActivityCol, ActivityDisplayCol } from '../activity-management-list/activity-manage.const';\nimport { FNAListCol } from '../fna-list/fna.list.const';\nimport { CustomInputAlertComponent } from '../form-component/custom-input-alert/custom-input-alert.component';\nimport { NrcPopupPage } from '../form-component/nrc-popup/nrc-popup.page';\nimport { AttachmentCol, AttachmentDisplayCol, FNACol, FNADisplayCol } from '../lead-detail/FNA-list.const';\nimport { PolicyCol, PolicyDisplayCol } from '../policy/list/policy.const';\nimport { ProductsComponent } from '../products/products.component';\nimport { ProductDataService } from '../products/services/products-data.service';\nimport { QuoDisplayCol, QuotationCol } from '../quotations/list/quotation.const';\nimport { District, Nationality, Occupation, State, Status, Township } from './custmer.dto';\nimport { GenderOption, TitleOption } from './customer.const';\nimport { CustomerService } from './customer.service';\n\n@Component({\n  selector: 'app-customer-detail',\n  templateUrl: './customer-detail.component.html',\n  styleUrls: ['./customer-detail.component.scss'],\n  providers: [\n    { provide: DateAdapter, useClass: MomentDateAdapter, deps: [MAT_DATE_LOCALE] },\n    { provide: MAT_DATE_FORMATS, useValue: MY_FORMATS },\n  ]\n})\n\nexport class CustomerDetailComponent implements OnInit, AfterViewInit {\n  @ViewChild('fna') fnamatTable: MaterialTableViewComponent;\n  @ViewChild('activity') activitymatTable: MaterialTableViewComponent;\n  @ViewChild('application') applicationmatTable: MaterialTableViewComponent;\n  @ViewChild('attachment') attachmentmatTable: MaterialTableViewComponent;\n  @ViewChild('quotation') quotationmatTable: MaterialTableViewComponent;\n  FNAELEMENT_COL: any[] = JSON.parse(JSON.stringify(FNAListCol));\n  FNAdisplayedColumns: any[] = JSON.parse(JSON.stringify(FNADisplayCol));\n  ACTIVITY_ELEMENT_COL: any[] = JSON.parse(JSON.stringify(ActivityCol));\n  ACTIVITYdisplayedColumns: any[] = JSON.parse(JSON.stringify(ActivityDisplayCol));\n  QUOTATION_ELEMENT_COL: any[] = JSON.parse(JSON.stringify(QuotationCol));\n  QuotationdisplayedColumns: any[] = JSON.parse(JSON.stringify(QuoDisplayCol));\n  APPLICATION_ELEMENT_COL: any[] = JSON.parse(JSON.stringify(PolicyCol));\n  ApplicationdisplayedColumns: any[] = JSON.parse(JSON.stringify(PolicyDisplayCol));\n  ATTACHMENT_ELEMENT_COL: any[] = JSON.parse(JSON.stringify(AttachmentCol))\n  AttachmentdisplayedColumns: any[] = JSON.parse(JSON.stringify(AttachmentDisplayCol))\n  // ATTACHMENT_ELEMENT_COL = JSON.parse(JSON.stringify(FNAListCol));\n  // AttachmentdisplayedColumns = JSON.parse(JSON.stringify(FNADisplayCol));\n\n  fnaList: any[] = [];\n  activityList: any[] = [];\n  quatationList: any[] = [];\n  applicationList: any[] = [];\n  attachmentList: any[] = [];\n  config: any = {\n    name: \"identityNumber\"\n  }\n  group: FormGroup;\n  toMinDate = null\n  fromMinDate = null\n  toMaxDate = null\n  fromMaxDate = null\n  @Input() isPopup: boolean = false\n  @Input() pageStatus: any;\n  @Input() isLead: boolean = false\n  customerForm: FormGroup;\n\n  nationalityOption: Nationality[] = [];\n  occupationOption: Occupation[] = [];\n  statusOption: Status[] = [];\n  stateOption: State[] = [];\n  districtOption: District[] = [];\n  townshipOption: Township[] = [];\n\n\n  genderOption = [];\n  titleOption = [];\n\n  oldId: any;\n  oldSecondaryId: any;\n  oldData: any;\n  public tabs: Array<\n    {\n      name: string,\n      active: boolean\n    }> = [\n      {\n        name: 'FNA',\n        active: false\n      },\n      {\n        name: 'Activity',\n        active: false\n      },\n      {\n        name: 'Quotation',\n        active: false\n      },\n      {\n        name: 'Application',\n        active: false\n      },\n      {\n        name: 'Attachment',\n        active: false\n      }\n    ]\n  isFNA: boolean = false\n  isApplication: boolean = false\n  isAttachment: boolean = false\n  isQuotation: boolean = false\n  isActivity: boolean = false\n  isMenuOpen: boolean = false\n  isMore: boolean = false\n  isDetail: boolean = true\n  description: string = \"\"\n  cusAccess = defaultAccessObj\n  activityAccess = defaultAccessObj\n  policyAccess = defaultAccessObj\n  quoAccess = defaultAccessObj\n  attachAccess = defaultAccessObj\n  fnaAccess = defaultAccessObj\n  constructor(private fb: FormBuilder,\n    private location: Location,\n    private masterDataService: MasterDataService,\n    private route: ActivatedRoute,\n    private customerService: CustomerService,\n    private modalService: NgbModal,\n    private cdf: ChangeDetectorRef,\n    private prodctService: ProductDataService,\n    private router: Router,\n    private AttachmentUploadService: AttachmentUploadService,\n    private CustomerAttachmentService: AttachmentServiceRef,\n    private AttachmentDownloadService: AttachmentDownloadService,\n    private alertService: AlertService,\n    private menuService: MenuDataService\n  ) {\n    this.ACTIVITYdisplayedColumns.splice(8, 1)\n    this.QuotationdisplayedColumns.splice(7, 2)\n    this.ApplicationdisplayedColumns.splice(7, 1)\n  }\n\n  ngOnInit(): void {\n\n\n    this.loadForm();\n    this.route.queryParams\n      .subscribe(params => {\n        this.pageStatus = params.pageStatus;\n        if (this.pageStatus != 'create' && !this.isPopup) {\n          this.oldId = params.pageId;\n          this.oldSecondaryId = params.pageSecondaryId;\n          this.getOld()\n\n\n        } else {\n\n          this.loadForm(this.oldData);\n          if (this.isLead) {\n            this.customerForm.controls['statusCode'].setValue('A')\n          }\n        }\n      }\n      );\n  }\n  checkPremission() {\n    this.menuService.dataAccess.subscribe((res) => {\n      if (res) {\n        this.cusAccess = res['customer']\n        this.activityAccess = res['activity']\n        this.policyAccess = res['application']\n        this.quoAccess = res['quotation']\n        this.fnaAccess = res['fna']\n        // this.attachAccess= \n        if (!this.cusAccess.view) {\n          this.location.back()\n        }\n        this.cdf.detectChanges()\n      }\n    })\n  }\n\n\n  ngAfterViewInit() {\n    this.getMaster()\n  }\n\n  getNationality() {\n    return this.masterDataService.getDataByType(\"NATIONALITY\").pipe(map(x => this.getFormatOpt(x)), catchError(e => {\n      return of([])\n    }))\n\n    // .toPromise().then((res: any) => {\n    //   if (res) {\n    //     this.nationalityOption = res\n    //     this.cdf.detectChanges()\n    //   }\n    // });\n  }\n\n  getMaster() {\n    forkJoin([\n      this.getTitle(),\n      this.getGender(),\n      this.getOccupation(),\n      this.getStatus(),\n      this.getState(),\n      this.getNationality(),\n    ]).toPromise().then((res: any) => {\n      if (res) {\n        this.titleOption = res[0]\n        this.genderOption = res[1]\n        this.occupationOption = res[2]\n        this.statusOption = res[3]\n        this.stateOption = res[4]\n        this.nationalityOption = res[5]\n        this.cdf.detectChanges()\n      }\n    })\n  }\n\n  getTitle() {\n    return this.masterDataService.getDataByType(\"TITLE\").pipe(map(x => this.getFormatOpt(x)), catchError(e => {\n      return of([])\n    }))\n    // .toPromise().then((res: any) => {\n    //   if (res) {\n    //     this.titleOption = res\n    //     this.cdf.detectChanges()\n    //   }\n    // })\n  }\n\n  getGender() {\n    return this.masterDataService.getDataByType(\"TB_GENDER\").pipe(map(x => this.getFormatOpt(x)), catchError(e => {\n      return of([])\n    }))\n\n    //  .toPromise().then((res: any) => {\n    //     if (res) {\n    //       this.genderOption = res\n    //       this.cdf.detectChanges()\n    //     }\n    //   })\n  }\n\n  getOccupation() {\n    return this.masterDataService.getDataByType(\"OCCUPATION\").pipe(map(x => this.getFormatOpt(x)), catchError(e => {\n      return of([])\n    }))\n\n    // .toPromise().then((res: any) => {\n    //   if (res) {\n    //     this.occupationOption = res\n    //     this.cdf.detectChanges()\n    //   }\n    // })\n  }\n\n  getStatus() {\n    return this.masterDataService.getDataByType(\"CUST_STATUS\").pipe(map(x => this.getFormatOpt(x)), catchError(e => {\n      return of([])\n    }))\n\n    // .toPromise().then((res: any) => {\n    //   if (res) {\n    //     this.statusOption = res\n    //     console.log(\"  this.statusOption \", this.statusOption)\n    //     this.cdf.detectChanges()\n    //   }\n    // })\n  }\n\n  getFormatOpt(res) {\n    return res.map(x => {\n      return { 'code': x.codeId, 'value': x.codeName || x.codeValue }\n    })\n  }\n\n  getState() {\n    return this.masterDataService.getDataByType(\"PT_STATE\", true).pipe(map(x => this.getFormatOpt(x)), catchError(e => {\n      return of([])\n    }))\n\n    // .toPromise().then((res: any) => {\n    //   if (res) {\n    //     this.stateOption = res\n    //     this.cdf.detectChanges()\n    //   }\n    // });\n  }\n\n\n\n  getDistrict(parentId: string) {\n    this.masterDataService.getAddressDataByType(\"PT_DISTRICT\", parentId).pipe(map(x => this.getFormatOpt(x)))\n      .toPromise().then((res: any) => {\n        if (res) {\n          this.districtOption = res\n          this.cdf.detectChanges()\n        }\n      });\n  }\n  getTownship(parentId: string) {\n    this.masterDataService.getAddressDataByType(\"PT_TOWNSHIP\", parentId).pipe(map(x => this.getFormatOpt(x)))\n      .toPromise().then((res: any) => {\n        if (res) {\n          this.townshipOption = res\n          this.cdf.detectChanges()\n        }\n      });\n  }\n\n  getOld() {\n    this.customerService.findOne(this.oldId).toPromise().then((res) => {\n      if (res) {\n        // console.log(\"RESSSS\", res)\n        this.oldData = res\n        // this.fnaList= this.oldData.fna\n        this.activityList = this.oldData.activities != null ? this.oldData.activities : []\n        this.quatationList = this.oldData.resourceQuotations != null ? this.oldData.resourceQuotations : []\n        this.applicationList = this.oldData.resourcePolicies != null ? this.oldData.resourcePolicies : []\n        this.attachmentList = this.oldData.attachments != null ? this.oldData.attachments : []\n        this.loadForm(res)\n        this.onInitAddress(this.oldData)\n        this.cdf.detectChanges()\n        this.activitymatTable.reChangeData()\n        this.fnamatTable.reChangeData()\n        this.attachmentmatTable.reChangeData()\n        this.quotationmatTable.reChangeData()\n        this.applicationmatTable.reChangeData()\n      }\n    })\n  }\n\n  loadForm(oldData?) {\n    let disabledForm = oldData ? oldData.partyCode ? true : false : false\n    this.customerForm = null\n    this.cdf.detectChanges()\n    this.customerForm = new FormGroup({\n      \"titleCode\": new FormControl({ value: oldData ? oldData.titleCode : '', disabled: disabledForm }, Validators.required),\n      \"firstName\": new FormControl({ value: oldData ? oldData.firstName : '', disabled: disabledForm }, Validators.required),\n      \"lastName\": new FormControl({ value: oldData ? oldData.lastName : '', disabled: disabledForm }, Validators.required),\n      \"middleName\": new FormControl({ value: oldData ? oldData.middleName : '', disabled: disabledForm },),\n      \"genderCode\": new FormControl({ value: oldData ? oldData.genderCode : '', disabled: disabledForm }, Validators.required),\n      \"nationalityCode\": new FormControl({ value: oldData ? oldData.nationalityCode : '', disabled: disabledForm }, Validators.required),\n      \"identityType\": new FormControl({ value: oldData ? oldData.identityType == 'OTHER' ? \"OTHERS\" : oldData.identityType : 'NRC', disabled: disabledForm }, Validators.required),\n      \"identityNumber\": new FormControl({ value: oldData ? oldData.identityNumber : '', disabled: disabledForm }, Validators.required),\n      \"statusCode\": new FormControl({ value: oldData ? oldData.statusCode : 'A', disabled: disabledForm || this.isLead }, Validators.required),\n      \"partyCode\": new FormControl({ value: oldData ? oldData.partyCode : '', disabled: disabledForm }),\n      \"fatherName\": new FormControl({ value: oldData ? oldData.fatherName : '', disabled: disabledForm },[Validators.required]),\n      \"phone\": new FormControl({ value: oldData ? oldData.phone : '', disabled: disabledForm }, [Validators.required, Validators.maxLength(11), Validators.minLength(9)]),\n      \"email\": new FormControl({ value: oldData ? oldData.email : '', disabled: disabledForm }, [Validators.email, Validators.required]),\n      \"dateOfBirth\": new FormControl({ value: !oldData ? null : oldData.dateOfBirth ? moment(oldData.dateOfBirth) : null, disabled: disabledForm, }, Validators.required),\n      \"occupationCode\": new FormControl({ value: oldData ? oldData.occupationCode : '', disabled: disabledForm }),\n      \"houseNumber\": new FormControl({ value: oldData ? oldData.houseNumber : '', disabled: disabledForm }, Validators.required),\n      \"road\": new FormControl({ value: oldData ? oldData.road : '', disabled: disabledForm }, Validators.required),\n      \"blockArea\": new FormControl({ value: oldData ? oldData.blockArea : '', disabled: disabledForm }, Validators.required),\n      \"townshipCode\": new FormControl({ value: oldData ? oldData.townshipCode : '', disabled: disabledForm }, Validators.required),\n      \"districtCode\": new FormControl({ value: oldData ? oldData.districtCode : '', disabled: disabledForm }, Validators.required),\n      \"stateCode\": new FormControl({ value: oldData ? oldData.stateCode : '', disabled: disabledForm }, Validators.required),\n      \"companyName\": new FormControl({ value: oldData ? oldData.companyName || \"KBZMS\" :'KBZMS', disabled: true })\n    });\n\n  }\n  clearDOB(type) {\n    if (type == 'dateOfBirth') {\n      this.customerForm.controls['dateOfBirth'].setValue(null);\n    }\n  }\n\n\n  onInitAddress(oldData) {\n    // this.getState();\n    this.getDistrict(oldData.stateCode);\n    this.getTownship(oldData.districtCode)\n    this.cdf.detectChanges();\n  }\n\n  onChangeState() {\n    this.districtOption = [];\n    this.townshipOption = [];\n\n    this.customerForm.controls['districtCode'].setValue('');\n    this.customerForm.controls['townshipCode'].setValue('');\n    this.getDistrict(this.customerForm.controls['stateCode'].value);\n    this.cdf.detectChanges();\n\n  }\n\n  onChangeDistrict() {\n    this.customerForm.controls['townshipCode'].setValue('');\n    if (this.customerForm.controls['stateCode'].value == '') {\n      this.townshipOption = [];\n    } else {\n      this.getTownship(this.customerForm.controls['districtCode'].value);\n    }\n    this.cdf.detectChanges()\n  }\n\n  isIdentitiyType() {\n    this.customerForm.controls[\"identityNumber\"].setValue('');\n  }\n  backLocation() {\n    if (this.isPopup) {\n      this.modalService.dismissAll()\n    }\n    else {\n      this.loadForm(this.oldData)\n      this.onInitAddress(this.oldData);\n    }\n  }\n\n  doCustomer() {\n    // console.log(this.customerForm.invalid);\n    if (this.customerForm.invalid) {\n      validateAllFields(this.customerForm)\n      return true\n    } else {\n      let postData = this.customerForm.getRawValue()\n      if (this.isPopup) {\n        this.create(postData)\n      }\n      else {\n        if (this.pageStatus == 'create') {\n          this.create(postData)\n        } else {\n          this.edit(postData)\n        }\n      }\n\n\n    }\n  }\n\n  create(postData) {\n    let data = { ...postData, customerId: null, individualId: null };\n    this.customerService.save(data).toPromise().then((res) => {\n      // console.log(\"RESSS\", res)\n      if (res) {\n        if (this.isPopup) {\n          let name = data.firstName + ' ' + data.middleName + ' ' + data.lastName\n          this.modalService.dismissAll({ data: { name: name, customerId: res }, type: \"save\" })\n        } else {\n          this.alertService.activate('This record was created', 'Success Message');\n          this.location.back()\n        }\n      }\n    })\n  }\n\n  edit(postData) {\n    let data = { ...postData, customerId: this.oldId, individualId: this.oldSecondaryId };\n    this.customerService.updateNoID(data).toPromise().then((res) => {\n      if (res) {\n        this.alertService.activate('This record was updated', 'Success Message');\n        this.location.back()\n      }\n    })\n  }\n\n  toggleAccordion(type) {\n\n    if (type == 'FNA') {\n      this.isFNA = !this.isFNA\n    }\n    if (type == 'Application') {\n      this.isApplication = !this.isApplication\n    }\n    if (type == 'Quotation') {\n      this.isQuotation = !this.isQuotation\n    }\n    if (type == 'Attachment') {\n      this.isAttachment = !this.isAttachment\n      if (this.isAttachment) {\n        this.getCustomerAttachment()\n      }\n    }\n    if (type == 'Activity') {\n      this.isActivity = !this.isActivity\n    }\n    if (type == 'More') {\n      this.isMore = !this.isMore\n    }\n    if (type == 'Detail') {\n      this.isDetail = !this.isDetail\n    }\n  }\n\n\n  add(type) {\n    if (type == 'Application') {\n      const modalRef = this.modalService.open(ProductsComponent, { size: 'xl', backdrop: false });\n      modalRef.componentInstance.type = 'modal'\n      modalRef.result.then(() => { }, (res) => {\n        if (res) {\n          if (res.type == 'save') {\n            this.prodctService.creatingCustomer = this.oldData\n            this.prodctService.createingProd = res.data\n            this.prodctService.editData = null\n            this.prodctService.referenceID = null\n            this.prodctService.viewType = 'policy'\n            this.prodctService.type = 'policy'\n            this.router.navigateByUrl(\"/product-form\")\n          }\n        }\n      })\n    }\n    if (type == 'Quotation') {\n      const modalRef = this.modalService.open(ProductsComponent, { size: 'xl', backdrop: false });\n      modalRef.componentInstance.type = 'modal'\n      modalRef.result.then(() => { }, (res) => {\n        if (res) {\n          if (res.type == 'save') {\n            this.prodctService.createingProd = res.data\n            this.prodctService.creatingCustomer = this.oldData\n            this.prodctService.viewType = 'quotation'\n            this.prodctService.editData = null\n            this.prodctService.referenceID = null\n            this.prodctService.type = 'quotation'\n            this.router.navigateByUrl(\"/product-form\")\n          }\n        }\n      })\n    }\n    if (type == 'Activity') {\n      this.router.navigate([\"/activity/activity-management-detail\"], { queryParams: { customerId: this.oldData.customerId, name: this.oldData.firstName, pageStatus: 'create' } })\n\n    }\n  }\n\n\n  openModal() {\n    let modalRef;\n    modalRef = this.modalService.open(NrcPopupPage, { size: 'xl', backdrop: false });\n\n    modalRef.componentInstance.config = this.config\n    modalRef.componentInstance.group = this.customerForm\n  }\n\n  actionBtn(event) {\n    if (event.cmd == 'download') {\n      this.AttachmentDownloadService.getDownload(event.data.id, event.data.fileName)\n    }\n    if (event.cmd == 'delete') {\n      this.alertService.activate('Are you sure want to delete?', 'Warning Message').then(result => {\n        if (result) {\n          this.CustomerAttachmentService.delete(event.data.id).toPromise().then(res => {\n            if (res) {\n              this.getCustomerAttachment();\n              this.alertService.activate('This record was deleted', 'Success Message').then(result => {\n\n              });\n            }\n          })\n        }\n      });\n    }\n\n  }\n\n  async addAttachment() {\n    let modalRef;\n    modalRef = this.modalService.open(CustomInputAlertComponent, { size: 'lg', backdrop: false });\n    modalRef.componentInstance.type = 'description'\n    modalRef.componentInstance.oldId = this.oldId\n    modalRef.result.then(() => { }, (res) => {\n      if (res) {\n        // console.log(\"RESSS\", res)\n        this.description = res.description\n\n        this.AttachmentUploadService.save(res.data).toPromise().then((res) => {\n          if (res) {\n            // console.log(\"RESFILE\", res)\n            let postData = {\n              attachmentId: res,\n              description: this.description,\n              refDocNo: this.oldId,\n              refDocType: 'CUST'\n            }\n            this.CustomerAttachmentService.save(postData).toPromise().then((res) => {\n              if (res) {\n                // console.log(\"RESFILE\", res)\n                this.getCustomerAttachment()\n              }\n\n            })\n          }\n        }).catch(e => {\n        })\n\n      }\n\n    })\n\n    //   }\n    // })\n\n\n  }\n\n\n  async getCustomerAttachment() {\n    this.CustomerAttachmentService.getAttachmentListRef(this.oldId, 'CUST').toPromise().then((res: any) => {\n      if (res) {\n        // console.log(\"RESFILE\", res)\n        this.attachmentList = res\n        this.attachmentmatTable.reChangeData()\n        this.cdf.detectChanges()\n      }\n\n    })\n  }\n\n  //for View\n  isControlValid(controlName: string): boolean {\n    const control = this.customerForm.controls[controlName];\n    return control.valid && (control.dirty || control.touched);\n  }\n\n  isControlInvalid(controlName: string): boolean {\n    const control = this.customerForm.controls[controlName];\n    return control.invalid && (control.dirty || control.touched);\n  }\n\n  controlHasError(validation, controlName): boolean {\n    const control = this.customerForm.controls[controlName];\n    return control.hasError(validation) && (control.dirty || control.touched);\n  }\n\n  isControlTouched(controlName): boolean {\n    const control = this.customerForm.controls[controlName];\n    return control.dirty || control.touched;\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule } from '@angular/router';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { InlineSVGModule } from 'ng-inline-svg';\nimport { CRUDTableModule } from '../../_metronic/shared/crud-table';\nimport { NgSelectModule } from '@ng-select/ng-select';\nimport { CustomerDetailComponent } from './customer-detail.component';\nimport { MatDatepickerModule } from '@angular/material/datepicker';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatRadioModule } from '@angular/material/radio';\nimport { FormComponentModule } from '../form-component/form-component.module';\nimport { LanguageModule } from 'src/app/modules/languages/languages.modules';\n\n\n\n@NgModule({\n  declarations: [CustomerDetailComponent],\n  exports: [CustomerDetailComponent],\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    InlineSVGModule,\n    CRUDTableModule,\n    NgSelectModule,\n    NgSelectModule,\n    MatDatepickerModule,\n    MatRadioModule,\n    MatInputModule,\n    LanguageModule,\n    // FormComponentModule\n  ]\n})\nexport class CustomerDetailShareModule { }\n","import { COLTYPE, TableCol } from '../../_metronic/shared/crud-table/components/material-table-view/table-dto'\nexport const FNAListCol: TableCol[] = [\n  {\n    title: \"Date\",\n    type: COLTYPE.FEILD,\n    field: \"createdAt\",\n    // amtFormat?: boolean,\n    // isTitle?: boolean\n    // isDate?: boolen\n  },\n  {\n    title: \"FNA Type\",\n    type: COLTYPE.FEILD,\n    field: \"fnaType\",\n    // amtFormat?: boolean,\n    // isTitle?: boolean\n    // isDate?: boolen\n  },\n  {\n    title: \"Conducted By\",\n    type: COLTYPE.FEILD,\n    field: \"conductedBy\",\n    // amtFormat?: boolean,\n    // isTitle?: boolean\n    // isDate?: boolen\n  },\n  {\n    title: \"Actions\",\n    type: COLTYPE.ACTION,\n    field: \"actions\",\n    btn: {\n      edit: true,\n      delete: true\n    }\n    // amtFormat?: boolean,\n    // isTitle?: boolean\n    // isDate?: boolen\n  },\n]\n\nexport const FNAListDisplayCol: string[] = [\n  \"createdAt\",\n  \"fnaType\",\n  \"conductedBy\",\n  \"actions\",\n]\n\n","import { ChangeDetectorRef, Component, ElementRef, Input, OnInit, ViewChild } from '@angular/core';\nimport { FormBuilder } from '@angular/forms';\nimport { NgbActiveModal, NgbModal } from '@ng-bootstrap/ng-bootstrap';\nimport { Subscription } from 'rxjs';\nimport { AttachmentUploadService } from 'src/app/_metronic/core/services/attachment-data.service';\nimport { getFileReader } from '../../../core/get-file-reader';\nimport { ConfigInput } from '../field.interface';\n\n@Component({\n  selector: 'app-custom-input-alert',\n  templateUrl: './custom-input-alert.component.html',\n  styleUrls: ['./custom-input-alert.component.scss']\n})\nexport class CustomInputAlertComponent implements OnInit {\n  @Input() config: ConfigInput\n  @Input() type\n  @Input() status\n  @Input() oldId:string=\"\"\n  lostReason: any\n  description:any\n  fileData:any\n  fileName:string=\"\"\n  @ViewChild('selectedFile') selectedFileEl: ElementRef;\n  private subscriptions: Subscription[] = [];\n  constructor(\n    private fb: FormBuilder, public modal: NgbActiveModal,private AttachmentUploadService:AttachmentUploadService,private cdf: ChangeDetectorRef\n  ) { }\n\n  ngOnInit(): void {\n  }\n\n  ngOnDestroy(): void {\n\n  }\n\n  save() {\n    if (this.type=='reason') {\n      this.modal.dismiss(this.lostReason)\n    }\n    if(this.type=='description'){\n      this.modal.dismiss({data:this.fileData,description:this.description})\n    }\n  }\n\n  async importDocument(event) {\n    if (event) {\n      const file = event.target.files[0];\n      // console.log(file);\n      const reader = getFileReader();\n      reader.readAsDataURL(file);\n      reader.onload = () => {\n        // console.log(reader);\n        if (reader.result) {\n          let base64 = reader.result.toString().split(\",\")[1];\n          let data = {\n            fileStr: base64,\n            fileName: file.name,\n            fileType: file.type,\n            fileSize: file.size,\n            contentType: file.type,\n            fileExtension: file.name.split('.').pop(),\n          }\n          this.fileName=file.name\n          this.fileData=data\n          this.cdf.detectChanges()\n        };\n      }\n      \n      \n    }\n      \n\n  }\n  openFile(){\n    this.selectedFileEl.nativeElement.click()\n  }\n}\n","import { COLTYPE, TableCol } from '../../_metronic/shared/crud-table/components/material-table-view/table-dto'\nexport const FNACol: TableCol[] = [\n  {\n    title: \"FNA ID\",\n    type: COLTYPE.FEILD,\n    field: \"id\"\n  },\n  {\n    title: \"Date\",\n    type: COLTYPE.FEILD,\n    field: \"createdAt\",\n    isFromatDate:true\n  },\n  {\n    title: \"Type\",\n    type: COLTYPE.FEILD,\n    field: \"fnaType\"\n  },\n  {\n    title: \"Conducted By\",\n    type: COLTYPE.FEILD,\n    field: \"createdByName\"  \n  },\n  {\n    title: \"Actions\",\n    type: COLTYPE.ACTION,\n    field: \"actions\",  \n    btn: {\n      edit: true,\n      delete: true\n    }\n  },\n]\n\n\nexport const FNADisplayCol: string[] = [\n  \"id\",\n  \"createdAt\",\n  \"fnaType\",\n  \"createdByName\",\n  \"actions\"\n]\n\nexport const AttachmentCol: TableCol[] = [\n\n  {\n    title: \"Description\",\n    type: COLTYPE.FEILD,\n    field: \"description\",\n  },\n  {\n    title: \"Document\",\n    type: COLTYPE.FEILD,\n    field: \"fileName\"\n  },\n  {\n    title: \"Action\",\n    type: COLTYPE.ACTION,\n    field: \"action\",\n    btn: {\n      download: true,\n      delete: true,\n\n    }\n  },\n\n]\n\nexport const AttachmentDisplayCol: string[] = [\n  \"description\",\n  \"fileName\",\n  \"action\"\n]\n\nexport const CampaignCol: TableCol[] = [\n\n  {\n    title: \"Campaign Number\",\n    type: COLTYPE.FEILD,\n    field: \"cpmNumber\",\n  },\n  {\n    title: \"Campaign Name\",\n    type: COLTYPE.FEILD,\n    field: \"cpmName\"\n  },\n  {\n    title: \"Status\",\n    type: COLTYPE.FEILD,\n    field: \"cpmStatus\",\n  },\n  {\n    title: \"Owner\",\n    type: COLTYPE.FEILD,\n    field: \"cpmOwnerName\",\n  },\n\n]\n\nexport const CampaignDisplayCol: string[] = [\n  \"cpmNumber\",\n  \"cpmName\",\n  \"cpmStatus\",\n  \"cpmOwnerName\",\n]\n\nexport class FNAConstant {\n  public static LEAD_ID: string = '';\n}\n\n\n\n\n\n","import { COLTYPE, TableCol } from '../../../_metronic/shared/crud-table/components/material-table-view/table-dto'\nexport const PolicyCol: TableCol[] = [\n  {\n    title: \"Application ID\",\n    type: COLTYPE.FEILD,\n    field: \"id\",\n  },\n  {\n    title: \"Product Name\",\n    type: COLTYPE.FEILD,\n    field: \"productName\",\n  },\n  {\n    title: \"Product Code\",\n    type: COLTYPE.FEILD,\n    field: \"productCode\",\n  },\n  {\n    title: \"Quotation ID\",\n    type: COLTYPE.FEILD,\n    field: \"quotationId\",\n  },\n  {\n    title: \"Agent Name\",\n    type: COLTYPE.FEILD,\n    field: \"agentFirstName\",\n  },\n  {\n    title: \"Premium\",\n    type: COLTYPE.FEILD,\n    field: \"premium\",\n    amtFormat: true,\n  },\n  {\n    title: \"Status\",\n    type: COLTYPE.FEILD,\n    field: \"status\",\n    isStatus: true\n  },\n  {\n    title: \"Submission Status\",\n    type: COLTYPE.FEILD,\n    field: \"apiStatus\",\n    isStatus: true\n  },\n  {\n    title: \"Date\",\n    type: COLTYPE.FEILD,\n    field: \"createdAt\",\n    isDate: true\n  },\n  {\n    title: \"Actions\",\n    type: COLTYPE.ACTION,\n    field: \"actions\",\n    btn: {\n      view: true,\n      edit: true,\n      editOnState: true\n    }\n  },\n]\n\nexport const PolicyDisplayCol: string[] = [\n  \"id\",\n  \"productName\",\n  \"productCode\",\n  \"agentFirstName\",\n  \"premium\",\n  \"status\",\n  \"apiStatus\",\n  \"createdAt\",\n  \"actions\",\n]","import { ChangeDetectorRef, Component, ElementRef, Input, OnDestroy, OnInit, ViewChild } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { NgbActiveModal } from '@ng-bootstrap/ng-bootstrap';\r\nimport { of, Subscription } from 'rxjs';\r\nimport { AlertService } from 'src/app/modules/loading-toast/alert-model/alert.service';\r\nimport { environment } from '../../../../environments/environment';\r\nimport { getFileReader } from '../../../core/get-file-reader';\r\nimport { LoadingService } from '../../../modules/loading-toast/loading/loading.service';\r\nimport { AttachmentUploadService } from '../../../_metronic/core/services/attachment-data.service';\r\nimport { Product } from '../models/product.dto'\r\nimport { ProductDataService } from '../services/products-data.service';\r\n\r\n@Component({\r\n  selector: 'app-products-modal',\r\n  templateUrl: './products-modal.component.html',\r\n  styleUrls: ['./products-modal.component.scss'],\r\n  // NOTE: For this example we are only providing current component, but probably\r\n  // NOTE: you will w  ant to provide your main App Module\r\n})\r\nexport class ProductsModalComponent implements OnInit, OnDestroy {\r\n  prodId: string = \"\"\r\n  prodName: string = \"\"\r\n  isLoading$;\r\n  formGroup: FormGroup;\r\n  lump: boolean = false\r\n  annually: boolean = false\r\n  private subscriptions: Subscription[] = [];\r\n  oldData: Product = {}\r\n  Default_DOWNLOAD_URL = `${environment.apiUrl}/attachment-downloader`;\r\n  statusCdOption = [\r\n    {\r\n      code: \"01\",\r\n      value: \"Draft\"\r\n    },\r\n    {\r\n      code: \"02\",\r\n      value: \"Active\"\r\n    },\r\n  ]\r\n  @ViewChild('selectedFile1') selectedFileEl1: ElementRef;\r\n  @ViewChild('selectedFile2') selectedFileEl2: ElementRef;\r\n  @ViewChild('selectedFile3') selectedFileEl3: ElementRef;\r\n  constructor(\r\n    private fb: FormBuilder, public modal: NgbActiveModal,\r\n    private productService: ProductDataService,\r\n    private fileUpload: AttachmentUploadService,\r\n    private loading: LoadingService,\r\n    private alertService: AlertService,\r\n    private cdf: ChangeDetectorRef\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.loadForm();\r\n  }\r\n\r\n  loadForm() {\r\n    this.formGroup = this.fb.group({\r\n      productName: [this.oldData.name || null, Validators.compose([Validators.required, Validators.nullValidator])],\r\n      productCode: [this.oldData.code || null, Validators.compose([Validators.required, Validators.nullValidator])],\r\n      coverName: [this.oldData.coverName || null, Validators.compose([Validators.required, Validators.nullValidator])],\r\n      type: [this.oldData.type || 'GENERAL', Validators.compose([Validators.required, Validators.nullValidator])],\r\n      stamDuty: [this.oldData.stamDuty || false, Validators.compose([Validators.required, Validators.nullValidator])],\r\n      isAllowBackDate: [this.oldData.isAllowBackDate || null, Validators.compose([Validators.required, Validators.nullValidator])],\r\n      allowDays: [this.oldData.allowDays || null],\r\n      ruleDate: [this.oldData.quotationDay || null, Validators.compose([Validators.required, Validators.nullValidator])],\r\n      ruleType: [this.oldData.quotationRule || null, Validators.compose([Validators.required, Validators.nullValidator])],\r\n      policyDay: [this.oldData.policyDay || null, Validators.compose([Validators.required, Validators.nullValidator])],\r\n      policyRule: [this.oldData.policyRule || null, Validators.compose([Validators.required, Validators.nullValidator])],\r\n      statusCd: [this.oldData.statusCd || \"02\", Validators.compose([Validators.required, Validators.nullValidator])],\r\n      paymentFrequency: [this.oldData.paymentFrequencyType ? this.oldData.paymentFrequencyType.split(',') : null],\r\n      icon: [this.oldData.icon ? this.oldData.icon : null],\r\n      smallIcon: [this.oldData.smallIcon ? this.oldData.smallIcon : null],\r\n      coverIcon: [this.oldData.coverIcon ? this.oldData.coverIcon : null],\r\n    });\r\n\r\n  }\r\n\r\n  save() {\r\n    if (this.formGroup.valid) {\r\n      let formData = this.formGroup.value\r\n      let data = {\r\n        name: formData.productName,\r\n        code: formData.productCode,\r\n        coverName: formData.coverName,\r\n        type: formData.type,\r\n        quotationDay: formData.ruleDate,\r\n        quotationRule: formData.ruleType,\r\n        policyDay: formData.policyDay,\r\n        policyRule: formData.policyRule,\r\n        paymentFrequencyType: \"\",\r\n        application: false,\r\n        quotation: false,\r\n        isAllowBackDate: formData.isAllowBackDate,\r\n        allowDays: formData.isAllowDays,\r\n        stamDuty: formData.stamDuty,\r\n        statusCd: formData.statusCd\r\n      }\r\n      this.productService.save(data).toPromise().then(res => {\r\n        if (res) {\r\n          this.modal.dismiss({ data: this.formGroup.value, type: 'save' })\r\n        }\r\n      })\r\n    }\r\n  }\r\n\r\n\r\n  ngOnDestroy(): void {\r\n    this.subscriptions.forEach(sb => sb.unsubscribe());\r\n  }\r\n\r\n  // helpers for View\r\n  isControlValid(controlName: string): boolean {\r\n    const control = this.formGroup.controls[controlName];\r\n    return control.valid && (control.dirty || control.touched);\r\n  }\r\n\r\n  isControlInvalid(controlName: string): boolean {\r\n    const control = this.formGroup.controls[controlName];\r\n    return control.invalid && (control.dirty || control.touched);\r\n  }\r\n\r\n  controlHasError(validation, controlName): boolean {\r\n    const control = this.formGroup.controls[controlName];\r\n    return control.hasError(validation) && (control.dirty || control.touched);\r\n  }\r\n\r\n  isControlTouched(controlName): boolean {\r\n    const control = this.formGroup.controls[controlName];\r\n    return control.dirty || control.touched;\r\n  }\r\n\r\n  changePayment(type) {\r\n    let value = this[type]\r\n    let data: any[] = this.formGroup.value['paymentFrequency'] || []\r\n    if (value) {\r\n      data.push(type)\r\n    } else {\r\n      let index = data.findIndex(x => x == type)\r\n      data.splice(index, 1)\r\n    }\r\n    this.formGroup.controls['paymentFrequency'].setValue(data);\r\n  }\r\n\r\n  openFile(type: string) {\r\n    if (type == \"cover\")\r\n      this.selectedFileEl3.nativeElement.click()\r\n    else if (type == \"small\")\r\n      this.selectedFileEl2.nativeElement.click()\r\n    else\r\n      this.selectedFileEl1.nativeElement.click()\r\n  }\r\n  \r\n  handleUpload(event, type: string) {\r\n    if (event) {\r\n      const file = event.target.files[0];\r\n      // console.log(file);\r\n      const reader = getFileReader();\r\n      reader.readAsDataURL(file);\r\n      reader.onload = () => {\r\n        // console.log(reader);\r\n        if (reader.result) {\r\n          let base64 = reader.result.toString().split(\",\")[1];\r\n          let data = {\r\n            fileStr: base64,\r\n            fileName: file.name,\r\n            fileType: file.type,\r\n            fileSize: file.size,\r\n            contentType: file.type,\r\n            fileExtension: file.name.split('.').pop(),\r\n          }\r\n          this.loading.activate()\r\n          this.fileUpload.save(data).toPromise().then((res) => {\r\n            if (res) {\r\n              if (type == \"cover\") {\r\n                this.formGroup.controls['coverIcon'].setValue(res)\r\n              } else if (type == \"small\") {\r\n                this.formGroup.controls['smallIcon'].setValue(res)\r\n              } else {\r\n                this.formGroup.controls['icon'].setValue(res)\r\n              }\r\n            }\r\n            this.cdf.detectChanges()\r\n            this.loading.deactivate()\r\n          }).catch(e=>{\r\n            this.loading.deactivate()\r\n          })\r\n        };\r\n      }\r\n    }\r\n  }\r\n\r\n  deleteEditModal() {\r\n    this.alertService.activate('Are you sure want to delete?', 'Warning Message').then(result => {\r\n      if (result) {\r\n        this.modal.dismiss({ type: 'delete' });\r\n      }\r\n    });\r\n  }\r\n\r\n}\r\n","import { COLTYPE, TableCol } from '../../_metronic/shared/crud-table/components/material-table-view/table-dto'\nexport const ProductCol: TableCol[] = [\n  // {\n  //   title: \"Logo\",\n  //   type: COLTYPE.FEILD,\n  //   field: \"icon\",\n  //   isImg: true,\n  // },\n  {\n    title: \"Small Icon\",\n    type: COLTYPE.FEILD,\n    field: \"smallIcon\",\n    isImg: true,\n  },\n  {\n    title: \"Product Name\",\n    type: COLTYPE.FEILD,\n    field: \"name\",\n  },\n  {\n    title: \"Product Code\",\n    type: COLTYPE.FEILD,\n    field: \"code\",\n  },\n  {\n    title: \"Type\",\n    type: COLTYPE.FEILD,\n    field: \"type\",\n    isTitle: true,\n  },\n  // {\n  //   title: \"Stamp Duty\",\n  //   type: COLTYPE.FEILD,\n  //   field: \"stamDuty\",\n  //   isTitle: true,\n  // },\n  {\n    title: \"Allow Back Date\",\n    type: COLTYPE.FEILD,\n    field: \"isAllowBackDate\",\n    isAllowBackDate: true\n  },\n  {\n    title: \"Quotation Auto Lapse Rule\",\n    type: COLTYPE.FEILD,\n    field: \"quotationDay\",\n    isQuotationDay: true\n  },\n  {\n    title: \"Application Auto Lapse Rule\",\n    type: COLTYPE.FEILD,\n    field: \"policyDay\",\n    isPolicyDay: true\n  },\n  {\n    title: \"Status\",\n    type: COLTYPE.FEILD,\n    field: \"statusCd\",\n    isProdStatus: true\n  },\n  {\n    title: \"Actions\",\n    type: COLTYPE.ACTION,\n    field: \"actions\",\n    btn: {\n      // view: true,\n      edit: true\n    }\n  },\n\n]\n\nexport const ProductDisplayCol: string[] = [\n  // \"id\",\n  // \"icon\",\n  \"smallIcon\",\n  \"name\",\n  \"code\",\n  \"type\",\n  // \"stamDuty\",\n  \"isAllowBackDate\",\n  \"quotationDay\",\n  'policyDay',\n  \"statusCd\",\n  \"actions\",\n]","import { ChangeDetectorRef, Component, OnInit, ViewChild } from '@angular/core';\nimport { NgbActiveModal, NgbModal, NgbModalRef } from '@ng-bootstrap/ng-bootstrap';\nimport { Subscription } from 'rxjs';\nimport { ProductsService } from '../../_metronic/core/services/products.service';\nimport { CoverageModalComponent } from './coverage-modal/coverage-modal.component';\nimport { ProductsModalComponent } from './products-modal/products-modal.component';\nimport { v4 } from 'uuid';\nimport { Router } from '@angular/router';\nimport { ProductDataService } from './services/products-data.service';\nimport { Product } from './models/product.dto';\nimport * as moment from 'moment'\nimport { ProductCol, ProductDisplayCol } from './products-table.const';\nimport { MaterialTableViewComponent } from '../../_metronic/shared/crud-table/components/material-table-view/material-table-view.component';\nimport { Customer } from '../customer-detail/custmer.dto';\nimport { defaultAccessObj, MenuDataService } from '../../core/menu-data.service';\n\n@Component({\n  selector: 'app-products',\n  templateUrl: './products.component.html',\n  styleUrls: ['./products.component.scss'],\n})\nexport class ProductsComponent implements OnInit {\n  @ViewChild(MaterialTableViewComponent) matTable: MaterialTableViewComponent\n  type: string = 'page'\n  products: Product[] = []\n  ELEMENT_COL = JSON.parse(JSON.stringify(ProductCol))\n  displayedColumns = JSON.parse(JSON.stringify(ProductDisplayCol))\n  // selected: number = -1\n  unsubscribe: Subscription[] = []\n  show: boolean = false\n  prodAccess = defaultAccessObj\n\n  constructor(private modalService: NgbModal, private itemService: ProductDataService, private router: Router, private cdRef: ChangeDetectorRef, private menuService: MenuDataService) { }\n\n  ngOnInit(): void {\n    if (this.type != 'page') {\n      this.ELEMENT_COL.splice(8, 1)\n      this.displayedColumns.splice(8, 1)\n    } \n    // else {\n    //   this.checkPremission()\n    // }\n    this.show = true\n    this.getProducts()\n    // const itemScb = this.itemService.items$.subscribe(data => {\n    //   this.products = data.products\n    // })\n    // this.unsubscribe.push(itemScb);\n  }\n  checkPremission() {\n    this.menuService.dataAccess.subscribe((res) => {\n      if (res) {\n        this.prodAccess = res['product_definition']\n        if (this.prodAccess.edit) {\n          this.ELEMENT_COL[8].btn.edit = false\n        }\n      }\n    })\n  }\n  ngOnDestroy(): void {\n    this.unsubscribe.forEach((sb) => sb.unsubscribe());\n  }\n\n  editLayout(prod: Product) {\n    this.itemService.findOne(prod.id).toPromise().then((res) => {\n      if (res) {\n        this.itemService.createingProd = res\n        this.itemService.type = prod.application ? 'application' : 'quotation'\n        this.router.navigateByUrl(\"/product-form\")\n      }\n    })\n  }\n\n  get selected() {\n    let prod\n    if (this.matTable) {\n      prod = this.matTable.selection.selected[0]\n    }\n    return prod ? prod : { id: 0 }\n  }\n\n\n  createOrEdit(data?, id?: string) {\n    const modalRef = this.modalService.open(ProductsModalComponent, { size: 'xl', backdrop: false });\n    modalRef.componentInstance.prodId = id\n    modalRef.componentInstance.oldData = data || {}\n    modalRef.result.then(() => { }, (res) => {\n      if (res) {\n        if (res.type == 'save') {\n          this.getProducts()\n          this.cdRef.detectChanges();\n        }\n      }\n    })\n  }\n\n  closeModal() {\n    this.modalService.dismissAll()\n  }\n\n  nextProd() {\n    if (this.selected.id) {\n      this.itemService.findOne(this.selected.id).toPromise().then((res) => {\n        // console.log(res);\n\n        if (res) {\n          this.modalService.dismissAll({ data: res, type: \"save\" })\n        }\n      })\n    }\n  }\n\n  getProducts() {\n    this.itemService.getAll().toPromise().then((res: any) => {\n      //console.log(res);\n      if (res) {\n        this.products = res\n        this.cdRef.detectChanges()\n        this.matTable.reChangeData()\n      }\n    })\n  }\n\n  viewDetail(item: any) {\n    this.itemService.selectedProd = item\n    // this.itemService.type = 'quotation'\n    this.itemService.viewType = 'view'\n    this.router.navigateByUrl(\"/product/products-config/detail\")\n  }\n\n  getFreq(data: string) {\n    let val = \"\"\n    let ary = data.split(\", \")\n    for (const item of ary) {\n      if (item == \"lump\") {\n        val = val.length > 2 ? val + \", Lump Sum\" : \"Lump Sum\"\n      } else if (item == \"annually\") {\n        val = val.length > 2 ? val + \", Semi Annually\" : \"Semi Annually\"\n      }\n    }\n\n    return val\n  }\n\n  actionBtn(event) {\n    if (event.cmd == 'edit') {\n      this.viewDetail(event.data)\n    } else if (event.cmd == 'view') {\n      this.editLayout(event.data)\n    }\n  }\n\n}\n","import { COLTYPE, TableCol } from '../../../_metronic/shared/crud-table/components/material-table-view/table-dto'\nexport const QuotationCol: TableCol[] = [\n  {\n    title: \"Quotation ID\",\n    type: COLTYPE.FEILD,\n    field: \"id\",\n    // amtFormat?: boolean,\n    // isTitle?: boolean\n    // isDate?: boolen\n  },\n  {\n    title: \"Product Name\",\n    type: COLTYPE.FEILD,\n    field: \"productName\",\n    // amtFormat?: boolean,\n    // isTitle?: boolean\n    // isDate?: boolen\n  },\n  {\n    title: \"Product Code\",\n    type: COLTYPE.FEILD,\n    field: \"productCode\",\n    // amtFormat?: boolean,\n    // isTitle?: boolean\n    // isDate?: boolen\n  },\n  {\n    title: \"Agent Name\",\n    type: COLTYPE.FEILD,\n    field: \"agentFirstName\",\n    // amtFormat?: boolean,\n    // isTitle?: boolean\n    // isDate?: boolen\n  },\n  {\n    title: \"Premium\",\n    type: COLTYPE.FEILD,\n    field: \"premium\",\n    amtFormat: true,\n    // isTitle?: boolean\n    // isDate?: boolen\n  },\n  {\n    title: \"Status\",\n    type: COLTYPE.FEILD,\n    field: \"status\",\n    isStatus: true\n  },\n  {\n    title: \"Date\",\n    type: COLTYPE.FEILD,\n    field: \"createdAt\",\n    // amtFormat?: boolean,\n    // isTitle?: boolean\n    isDate: true\n  },\n  {\n    title: \"Application\",\n    type: COLTYPE.TEXT,\n    field: \"create application\",\n    // amtFormat?: boolean,\n    // isTitle?: boolean\n    // isDate: true\n  },\n  {\n    title: \"Actions\",\n    type: COLTYPE.ACTION,\n    field: \"actions\",\n    btn:{\n      view: true,\n      edit: true\n    }\n    // amtFormat?: boolean,\n    // isTitle?: boolean\n    // isDate?: boolen\n  },\n]\n\nexport const QuoDisplayCol: string[] = [\n  \"id\",\n  \"productName\",\n  \"productCode\",\n  \"agentFirstName\",\n  \"premium\",\n  \"status\",\n  \"createdAt\",\n  \"create application\",\n  \"actions\",\n]","export default \"<div class=\\\"row\\\" *ngIf=\\\"customerForm\\\">\\n    <div class=\\\"col-12\\\">\\n        <div class=\\\"card card-custom\\\" [class.gutter-b]=\\\"!isPopup\\\">\\n            <div class=\\\"card-header\\\">\\n                <div class=\\\"card-title\\\">\\n                    <h3 class=\\\"card-label left-border-image\\\">{{pageStatus == \\\"create\\\" ? \\\"Create Prospect Customer\\\" : \\\"Customer Detail\\\"}}</h3>\\n                </div>\\n                <div class=\\\"card-toolbar\\\" *ngIf=\\\"!isPopup\\\">\\n                    <button type=\\\"button\\\" *ngIf=\\\"isDetail\\\" class=\\\"icon\\\" (click)=\\\"toggleAccordion('Detail')\\\">\\n                        <span class=\\\"flaticon2-back\\\"></span>\\n                    </button>\\n                    <button type=\\\"button\\\" *ngIf=\\\"!isDetail\\\" class=\\\"icon ml-2\\\" (click)=\\\"toggleAccordion('Detail')\\\">\\n                        <span class=\\\"flaticon2-down\\\"></span>\\n                    </button>\\n                </div>\\n            </div>\\n            <div class=\\\"card-body px-10 py-3\\\" [ngClass]=\\\"isDetail ? 'active' : 'inactive'\\\">\\n                <form action=\\\"#\\\" class=\\\"form\\\" [formGroup]=\\\"customerForm\\\" (ngSubmit)=\\\"doCustomer()\\\">\\n                    <div class=\\\"row\\\" style=\\\"align-items: center;\\\">\\n                        <div class=\\\"col-sm-6\\\">\\n                            <div class=\\\"form-group row\\\">\\n                                <label class=\\\"col-sm-4 col-form-label\\\">{{\\\"FORM.cs_title\\\" | translate}}</label>\\n                                <div class=\\\"col-sm-8\\\">\\n                                    <ng-select class=\\\"ng-custom-select ng-custom-select-sm\\\" [class.is-invalid]=\\\"isControlInvalid('titleCode')\\\" [class.is-valid]=\\\"isControlValid('titleCode')\\\" [items]=\\\"titleOption\\\" bindLabel=\\\"value\\\" bindValue=\\\"code\\\" formControlName=\\\"titleCode\\\">\\n                                    </ng-select>\\n                                </div>\\n                            </div>\\n                        </div>\\n                        <div class=\\\"col-sm-6\\\">\\n                            <div class=\\\"form-group row\\\">\\n                                <label class=\\\"col-sm-4 col-form-label\\\">{{\\\"FORM.father_name\\\" | translate}}</label>\\n                                <div class=\\\"col-sm-8\\\">\\n                                    <input type=\\\"text\\\" class=\\\"form-control form-control-sm \\\" name=\\\"fatherName\\\" autocomplete=\\\"off\\\" [class.is-invalid]=\\\"isControlInvalid('fatherName')\\\" [class.is-valid]=\\\"isControlValid('fatherName')\\\" formControlName=\\\"fatherName\\\" />\\n                                </div>\\n                            </div>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"row\\\" style=\\\"align-items: center;\\\">\\n                        <div class=\\\"col-sm-6\\\">\\n                            <div class=\\\"form-group row\\\">\\n                                <label class=\\\"col-sm-4 col-form-label\\\">{{\\\"FORM.first_name\\\" | translate}}</label>\\n                                <div class=\\\"col-sm-8\\\">\\n                                    <input type=\\\"text\\\" class=\\\"form-control form-control-sm \\\" name=\\\"firstName\\\" autocomplete=\\\"off\\\" [class.is-invalid]=\\\"isControlInvalid('firstName')\\\" [class.is-valid]=\\\"isControlValid('firstName')\\\" formControlName=\\\"firstName\\\" />\\n                                </div>\\n                            </div>\\n                        </div>\\n                        <div class=\\\"col-sm-6\\\">\\n                            <div class=\\\"form-group row\\\">\\n                                <label class=\\\"col-sm-4 col-form-label\\\">{{\\\"FORM.mobile\\\" | translate}}</label>\\n                                <div class=\\\"col-sm-8\\\">\\n                                    <input type=\\\"text\\\" class=\\\"form-control form-control-sm \\\" name=\\\"phone\\\" autocomplete=\\\"off\\\" [class.is-invalid]=\\\"isControlInvalid('phone')\\\" [class.is-valid]=\\\"isControlValid('phone')\\\" formControlName=\\\"phone\\\" />\\n                                </div>\\n                            </div>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"row\\\" style=\\\"align-items: center;\\\">\\n                        <div class=\\\"col-sm-6\\\">\\n                            <div class=\\\"form-group row\\\">\\n                                <label class=\\\"col-sm-4 col-form-label\\\">{{\\\"FORM.middle_name\\\" | translate}}</label>\\n                                <div class=\\\"col-sm-8\\\">\\n                                    <input type=\\\"text\\\" class=\\\"form-control form-control-sm \\\" name=\\\"middleName\\\" autocomplete=\\\"off\\\" [class.is-invalid]=\\\"isControlInvalid('middleName')\\\" [class.is-valid]=\\\"isControlValid('middleName')\\\" formControlName=\\\"middleName\\\" />\\n                                </div>\\n                            </div>\\n                        </div>\\n                        <div class=\\\"col-sm-6\\\">\\n                            <div class=\\\"form-group row\\\">\\n                                <label class=\\\"col-sm-4 col-form-label\\\">{{\\\"FORM.email\\\" | translate}}</label>\\n                                <div class=\\\"col-sm-8\\\">\\n                                    <input type=\\\"email\\\" class=\\\"form-control form-control-sm \\\" name=\\\"email\\\" autocomplete=\\\"off\\\" [class.is-invalid]=\\\"isControlInvalid('email')\\\" [class.is-valid]=\\\"isControlValid('email')\\\" formControlName=\\\"email\\\" />\\n                                </div>\\n                            </div>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"row\\\" style=\\\"align-items: center;\\\">\\n                        <div class=\\\"col-sm-6\\\">\\n                            <div class=\\\"form-group row\\\">\\n                                <label class=\\\"col-sm-4 col-form-label\\\">{{\\\"FORM.last_name\\\" | translate}}</label>\\n                                <div class=\\\"col-sm-8\\\">\\n                                    <input type=\\\"text\\\" class=\\\"form-control form-control-sm \\\" name=\\\"lastName\\\" autocomplete=\\\"off\\\" [class.is-invalid]=\\\"isControlInvalid('lastName')\\\" [class.is-valid]=\\\"isControlValid('lastName')\\\" formControlName=\\\"lastName\\\" />\\n                                </div>\\n                            </div>\\n                        </div>\\n                        <div class=\\\"col-sm-6\\\">\\n                            <div class=\\\"form-group row\\\">\\n                                <label class=\\\"col-sm-4 col-form-label\\\">{{\\\"FORM.date_of_birth\\\" | translate}}</label>\\n                                <div class=\\\"col-sm-8\\\">\\n                                    <div class=\\\"input-group input-group-sm \\\">\\n                                        <input matInput class=\\\"form-control-sm date-input\\\" style=\\\"width: 100%;\\\" formControlName=\\\"dateOfBirth\\\" [class.is-invalid]=\\\"isControlInvalid('dateOfBirth')\\\" [class.is-valid]=\\\"isControlValid('dateOfBirth')\\\" [matDatepicker]=\\\"picker\\\" readonly>\\n                                        <mat-datepicker-toggle matSuffix [for]=\\\"picker\\\"></mat-datepicker-toggle>\\n                                        <mat-datepicker #picker disabled=\\\"false\\\"></mat-datepicker>\\n\\n                                    </div>\\n                                </div>\\n\\n                            </div>\\n                        </div>\\n                        <!-- <div class=\\\"col-1\\\">\\n                            <button type=\\\"button\\\" style=\\\"width: auto;\\n                            float: right;\\n                            margin: 0 !important;\\\" (click)=\\\"clearDOB('dateOfBirth')\\\" class=\\\"btn btn-primary btn-elevate mx-2\\\">Clear</button>\\n                        </div> -->\\n                    </div>\\n                    <div class=\\\"row\\\" style=\\\"align-items: center;\\\">\\n                        <div class=\\\"col-sm-6\\\">\\n                            <div class=\\\"form-group row\\\">\\n                                <label class=\\\"col-sm-4 col-form-label\\\">{{\\\"FORM.natoinality\\\" | translate}}</label>\\n                                <div class=\\\"col-sm-8\\\">\\n                                    <ng-select class=\\\"ng-custom-select ng-custom-select-sm\\\" [class.is-invalid]=\\\"isControlInvalid('nationalityCode')\\\" [class.is-valid]=\\\"isControlValid('nationalityCode')\\\" [items]=\\\"nationalityOption\\\" bindLabel=\\\"value\\\" bindValue=\\\"code\\\" formControlName=\\\"nationalityCode\\\">\\n                                    </ng-select>\\n                                </div>\\n                            </div>\\n                        </div>\\n                        <div class=\\\"col-sm-6\\\">\\n                            <div class=\\\"form-group row\\\">\\n                                <label class=\\\"col-sm-4 col-form-label\\\">{{\\\"FORM.occupation\\\" | translate}}</label>\\n                                <div class=\\\"col-sm-8\\\">\\n                                    <ng-select class=\\\"ng-custom-select ng-custom-select-sm\\\" [class.is-invalid]=\\\"isControlInvalid('occupationCode')\\\" [class.is-valid]=\\\"isControlValid('occupationCode')\\\" [items]=\\\"occupationOption\\\" bindLabel=\\\"value\\\" bindValue=\\\"code\\\" formControlName=\\\"occupationCode\\\">\\n                                    </ng-select>\\n                                </div>\\n                            </div>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"row\\\">\\n                        <div class=\\\"col-sm-12\\\">\\n                            <div class=\\\"form-group row\\\">\\n                                <label class=\\\"col-sm-2 col-form-label\\\">{{\\\"FORM.id_type\\\" | translate}}</label>\\n                                <div class=\\\"col-sm-10\\\">\\n                                    <div class=\\\"\\\">\\n                                        <mat-radio-group name=\\\"identityType\\\" formControlName=\\\"identityType\\\" (click)=\\\"isIdentitiyType()\\\">\\n                                            <mat-radio-button class=\\\"example-margin\\\" value=\\\"NRC\\\">NRC</mat-radio-button>\\n                                            <mat-radio-button class=\\\"example-margin\\\" value=\\\"FRC\\\">FRC</mat-radio-button>\\n                                            <mat-radio-button class=\\\"example-margin\\\" value=\\\"PASSPORT\\\">Passport\\n                                            </mat-radio-button>\\n                                            <mat-radio-button class=\\\"example-margin\\\" value=\\\"OTHERS\\\">Others\\n                                            </mat-radio-button>\\n                                        </mat-radio-group>\\n                                    </div>\\n                                </div>\\n                            </div>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"row\\\">\\n                        <div class=\\\"col-sm-6\\\">\\n\\n                            <div class=\\\"form-group row\\\">\\n                                <label class=\\\"col-sm-4 col-form-label\\\">{{\\\"FORM.id_no\\\" | translate}}</label>\\n                                <div class=\\\"col-sm-8\\\">\\n                                    <input type=\\\"text\\\" *ngIf=\\\"customerForm.get('identityType').value == 'NRC'\\\" class=\\\"form-control form-control-sm \\\" name=\\\"identityNumber\\\" autocomplete=\\\"off\\\" [class.is-invalid]=\\\"isControlInvalid('identityNumber')\\\" (click)=\\\"openModal()\\\" [class.is-valid]=\\\"isControlValid('identityNumber')\\\"\\n                                        formControlName=\\\"identityNumber\\\" readonly />\\n                                    <input type=\\\"text\\\" *ngIf=\\\"customerForm.get('identityType').value != 'NRC'\\\" class=\\\"form-control form-control-sm \\\" name=\\\"identityNumber\\\" autocomplete=\\\"off\\\" [class.is-invalid]=\\\"isControlInvalid('identityNumber')\\\" [class.is-valid]=\\\"isControlValid('identityNumber')\\\"\\n                                        formControlName=\\\"identityNumber\\\" />\\n                                </div>\\n                            </div>\\n                            <div class=\\\"form-group row\\\">\\n                                <label class=\\\"col-sm-4 col-form-label\\\">{{\\\"FORM.gender\\\" | translate}}</label>\\n                                <div class=\\\"col-sm-8\\\">\\n                                    <ng-select class=\\\"ng-custom-select ng-custom-select-sm\\\" [class.is-invalid]=\\\"isControlInvalid('genderCode')\\\" [class.is-valid]=\\\"isControlValid('genderCode')\\\" [items]=\\\"genderOption\\\" bindLabel=\\\"value\\\" bindValue=\\\"code\\\" formControlName=\\\"genderCode\\\">\\n                                    </ng-select>\\n                                </div>\\n                            </div>\\n                            <div class=\\\"form-group row\\\">\\n                                <label class=\\\"col-sm-4 col-form-label\\\">{{\\\"FORM.status\\\" | translate}}</label>\\n                                <div class=\\\"col-sm-8\\\">\\n                                    <ng-select class=\\\"ng-custom-select ng-custom-select-sm\\\" [class.is-invalid]=\\\"isControlInvalid('statusCode')\\\" [class.is-valid]=\\\"isControlValid('statusCode')\\\" [items]=\\\"statusOption\\\" bindLabel=\\\"value\\\" bindValue=\\\"code\\\" formControlName=\\\"statusCode\\\">\\n                                    </ng-select>\\n                                </div>\\n                            </div>\\n                            <div class=\\\"form-group row\\\">\\n                                <label class=\\\"col-sm-4 col-form-label\\\">{{\\\"FORM.state\\\" | translate}}</label>\\n                                <div class=\\\"col-sm-8\\\">\\n                                    <ng-select class=\\\"ng-custom-select ng-custom-select-sm\\\" [class.is-invalid]=\\\"isControlInvalid('stateCode')\\\" (change)=\\\"onChangeState()\\\" [class.is-valid]=\\\"isControlValid('stateCode')\\\" [items]=\\\"stateOption\\\" bindLabel=\\\"value\\\" bindValue=\\\"code\\\" formControlName=\\\"stateCode\\\">\\n                                    </ng-select>\\n                                </div>\\n                            </div>\\n                            <div class=\\\"form-group row\\\">\\n                                <label class=\\\"col-sm-4 col-form-label\\\">{{\\\"FORM.district\\\" | translate}}</label>\\n                                <div class=\\\"col-sm-8\\\">\\n                                    <ng-select class=\\\"ng-custom-select ng-custom-select-sm\\\" [class.is-invalid]=\\\"isControlInvalid('districtCode')\\\" (change)=\\\"onChangeDistrict()\\\" [class.is-valid]=\\\"isControlValid('districtCode')\\\" [items]=\\\"districtOption\\\" bindLabel=\\\"value\\\" bindValue=\\\"code\\\" formControlName=\\\"districtCode\\\">\\n                                    </ng-select>\\n                                </div>\\n                            </div>\\n                        </div>\\n                        <div class=\\\"col-sm-6\\\">\\n                            <div class=\\\"form-group row\\\">\\n                                <label class=\\\"col-sm-4 col-form-label\\\">{{\\\"FORM.party_code\\\" | translate}}</label>\\n                                <div class=\\\"col-sm-8\\\">\\n                                    <input type=\\\"text\\\" class=\\\"form-control form-control-sm \\\" readonly=\\\"true\\\" name=\\\"partyCode\\\" autocomplete=\\\"off\\\" [class.is-invalid]=\\\"isControlInvalid('partyCode')\\\" [class.is-valid]=\\\"isControlValid('partyCode')\\\" formControlName=\\\"partyCode\\\" />\\n                                </div>\\n                            </div>\\n                            <div class=\\\"form-group row\\\">\\n                                <label class=\\\"col-sm-4 col-form-label\\\">{{\\\"FORM.house\\\" | translate}}</label>\\n                                <div class=\\\"col-sm-8\\\">\\n                                    <input type=\\\"text\\\" class=\\\"form-control form-control-sm \\\" name=\\\"houseNumber\\\" autocomplete=\\\"off\\\" [class.is-invalid]=\\\"isControlInvalid('houseNumber')\\\" [class.is-valid]=\\\"isControlValid('houseNumber')\\\" formControlName=\\\"houseNumber\\\" />\\n                                </div>\\n                            </div>\\n                            <div class=\\\"form-group row\\\">\\n                                <label class=\\\"col-sm-4 col-form-label\\\">{{\\\"FORM.road\\\" | translate}}</label>\\n                                <div class=\\\"col-sm-8\\\">\\n                                    <input type=\\\"text\\\" class=\\\"form-control form-control-sm \\\" name=\\\"road\\\" autocomplete=\\\"off\\\" [class.is-invalid]=\\\"isControlInvalid('road')\\\" [class.is-valid]=\\\"isControlValid('road')\\\" formControlName=\\\"road\\\" />\\n                                </div>\\n                            </div>\\n                            <div class=\\\"form-group row\\\">\\n                                <label class=\\\"col-sm-4 col-form-label\\\">{{\\\"FORM.block_area\\\" | translate}}</label>\\n                                <div class=\\\"col-sm-8\\\">\\n                                    <input type=\\\"text\\\" class=\\\"form-control form-control-sm \\\" name=\\\"blockArea\\\" autocomplete=\\\"off\\\" [class.is-invalid]=\\\"isControlInvalid('blockArea')\\\" [class.is-valid]=\\\"isControlValid('blockArea')\\\" formControlName=\\\"blockArea\\\" />\\n                                </div>\\n                            </div>\\n\\n                            <div class=\\\"form-group row\\\">\\n                                <label class=\\\"col-sm-4 col-form-label\\\">{{\\\"FORM.township\\\" | translate}} </label>\\n                                <div class=\\\"col-sm-8\\\">\\n                                    <ng-select class=\\\"ng-custom-select ng-custom-select-sm\\\" [class.is-invalid]=\\\"isControlInvalid('townshipCode')\\\" [class.is-valid]=\\\"isControlValid('townshipCode')\\\" [items]=\\\"townshipOption\\\" bindLabel=\\\"value\\\" bindValue=\\\"code\\\" formControlName=\\\"townshipCode\\\">\\n                                    </ng-select>\\n                                </div>\\n                            </div>\\n\\n                        </div>\\n                    </div>\\n                    <div class=\\\"row\\\" style=\\\"align-items: center;\\\">\\n                        <div class=\\\"col-sm-6\\\">\\n                            <div class=\\\"form-group row\\\">\\n                                <label class=\\\"col-sm-4 col-form-label\\\">{{\\\"FORM.company_name\\\" | translate}}</label>\\n                                <div class=\\\"col-sm-8\\\">\\n                                    <input type=\\\"text\\\" class=\\\"form-control form-control-sm \\\" name=\\\"companyName\\\" autocomplete=\\\"off\\\" [class.is-invalid]=\\\"isControlInvalid('companyName')\\\" [class.is-valid]=\\\"isControlValid('companyName')\\\" formControlName=\\\"companyName\\\" />\\n                                </div>\\n                            </div>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"form-group\\\" style=\\\"text-align: right;\\\">\\n                        <button type=\\\"button\\\" class=\\\"btn btn-light btn-elevate\\\" (click)=\\\"backLocation()\\\">{{\\\"FORM.btn_cancel\\\" | translate}}</button>\\n                        <button type=\\\"submit\\\" class=\\\"btn btn-primary btn-elevate mx-2\\\" *ngIf=\\\"cusAccess.edit\\\">{{\\\"FORM.btn_save\\\" | translate}}</button>\\n                    </div>\\n                </form>\\n\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n<ng-container *ngIf=\\\"!isPopup && oldId\\\">\\n    <div class=\\\"card card-custom gutter-b\\\" *ngIf=\\\"fnaAccess.view\\\">\\n        <div class=\\\"card-header\\\" *ngIf=\\\"!isPopup\\\">\\n            <div class=\\\"card-title\\\">\\n                <h3 class=\\\"card-label left-border-image\\\">FNA</h3>\\n            </div>\\n            <div class=\\\"card-toolbar\\\">\\n                <!-- <button type=\\\"button\\\" class=\\\"btn btn-primary btn-circle\\\" (click)=\\\"add('FNA')\\\">\\n                    <span class=\\\"flaticon2-plus\\\"></span>\\n                </button> -->\\n                <button type=\\\"button\\\" *ngIf=\\\"isFNA\\\" class=\\\"icon\\\" (click)=\\\"toggleAccordion('FNA')\\\">\\n                    <span class=\\\"flaticon2-back\\\"></span>\\n                </button>\\n                <button type=\\\"button\\\" *ngIf=\\\"!isFNA\\\" class=\\\"icon ml-2\\\" (click)=\\\"toggleAccordion('FNA')\\\">\\n                    <span class=\\\"flaticon2-down\\\"></span>\\n                </button>\\n            </div>\\n        </div>\\n        <div class=\\\"card-body px-10 py-3\\\" [ngClass]=\\\"isFNA ? 'active' : 'inactive'\\\">\\n\\n\\n            <section>\\n\\n                <app-material-table-view #fna [data]=\\\"fnaList\\\" [colum]=\\\"FNAELEMENT_COL\\\" [displayedColumns]=\\\"FNAdisplayedColumns\\\" [selectable]=\\\"isPopup\\\">\\n                </app-material-table-view>\\n\\n            </section>\\n\\n        </div>\\n\\n    </div>\\n\\n    <div class=\\\"card card-custom gutter-b\\\" *ngIf=\\\"activityAccess.view\\\">\\n        <div class=\\\"card-header\\\" *ngIf=\\\"!isPopup\\\">\\n            <div class=\\\"card-title\\\">\\n                <h3 class=\\\"card-label left-border-image\\\">Activity</h3>\\n            </div>\\n            <div class=\\\"card-toolbar\\\">\\n                <!-- <button type=\\\"button\\\" class=\\\"btn btn-primary btn-circle\\\" (click)=\\\"add('Activity')\\\">\\n                    <span class=\\\"flaticon2-plus\\\"></span>\\n                </button> -->\\n                <button type=\\\"button\\\" *ngIf=\\\"isActivity\\\" class=\\\"icon\\\" (click)=\\\"toggleAccordion('Activity')\\\">\\n                    <span class=\\\"flaticon2-back icon\\\"></span>\\n                </button>\\n                <button type=\\\"button\\\" *ngIf=\\\"!isActivity\\\" class=\\\"icon ml-2\\\" (click)=\\\"toggleAccordion('Activity')\\\">\\n                    <span class=\\\"flaticon2-down icon\\\"></span>\\n                </button>\\n            </div>\\n        </div>\\n        <div class=\\\"card-body px-10 py-3\\\" [ngClass]=\\\"isActivity ? 'active' : 'inactive'\\\">\\n\\n            <section>\\n\\n                <app-material-table-view #activity [data]=\\\"activityList\\\" [colum]=\\\"ACTIVITY_ELEMENT_COL\\\" [displayedColumns]=\\\"ACTIVITYdisplayedColumns\\\" [selectable]=\\\"isPopup\\\">\\n                </app-material-table-view>\\n\\n            </section>\\n\\n        </div>\\n\\n    </div>\\n    <div class=\\\"card card-custom gutter-b\\\" *ngIf=\\\"quoAccess.view\\\">\\n        <div class=\\\"card-header\\\" *ngIf=\\\"!isPopup\\\">\\n            <div class=\\\"card-title\\\">\\n                <h3 class=\\\"card-label left-border-image\\\">Quotation</h3>\\n            </div>\\n            <div class=\\\"card-toolbar\\\">\\n                <!-- <button type=\\\"button\\\" class=\\\"btn btn-primary btn-circle\\\" (click)=\\\"add('Quotation')\\\">\\n                    <span class=\\\"flaticon2-plus\\\"></span>\\n                </button> -->\\n                <button type=\\\"button\\\" *ngIf=\\\"isQuotation\\\" class=\\\"icon\\\" (click)=\\\"toggleAccordion('Quotation')\\\">\\n                    <span class=\\\"flaticon2-back icon\\\"></span>\\n                </button>\\n                <button type=\\\"button\\\" *ngIf=\\\"!isQuotation\\\" class=\\\"icon ml-2\\\" (click)=\\\"toggleAccordion('Quotation')\\\">\\n                    <span class=\\\"flaticon2-down icon\\\"></span>\\n                </button>\\n            </div>\\n        </div>\\n        <div class=\\\"card-body px-10 py-3\\\" [ngClass]=\\\"isQuotation ? 'active' : 'inactive'\\\">\\n\\n\\n            <section>\\n\\n                <app-material-table-view #quotation [data]=\\\"quatationList\\\" [colum]=\\\"QUOTATION_ELEMENT_COL\\\" [displayedColumns]=\\\"QuotationdisplayedColumns\\\" [selectable]=\\\"isPopup\\\">\\n                </app-material-table-view>\\n\\n            </section>\\n\\n        </div>\\n\\n    </div>\\n\\n    <div class=\\\"card card-custom gutter-b\\\" *ngIf=\\\"policyAccess.view\\\">\\n        <div class=\\\"card-header\\\" *ngIf=\\\"!isPopup\\\">\\n            <div class=\\\"card-title\\\">\\n                <h3 class=\\\"card-label left-border-image\\\">Application</h3>\\n            </div>\\n            <div class=\\\"card-toolbar\\\">\\n                <!-- <button type=\\\"button\\\" class=\\\"btn btn-primary btn-circle\\\" (click)=\\\"add('Application')\\\">\\n                    <span class=\\\"flaticon2-plus\\\"></span>\\n                </button> -->\\n                <button type=\\\"button\\\" *ngIf=\\\"isApplication\\\" class=\\\"icon\\\" (click)=\\\"toggleAccordion('Application')\\\">\\n                    <span class=\\\"flaticon2-back icon\\\"></span>\\n                </button>\\n                <button type=\\\"button\\\" *ngIf=\\\"!isApplication\\\" class=\\\"icon ml-2\\\" (click)=\\\"toggleAccordion('Application')\\\">\\n                    <span class=\\\"flaticon2-down icon\\\"></span>\\n                </button>\\n            </div>\\n        </div>\\n        <div class=\\\"card-body px-10 py-3\\\">\\n\\n            <section [ngClass]=\\\"isApplication ? 'active' : 'inactive'\\\">\\n\\n                <app-material-table-view #application [data]=\\\"applicationList\\\" [colum]=\\\"APPLICATION_ELEMENT_COL\\\" [displayedColumns]=\\\"ApplicationdisplayedColumns\\\" [selectable]=\\\"isPopup\\\">\\n                </app-material-table-view>\\n\\n            </section>\\n\\n        </div>\\n\\n    </div>\\n\\n    <div class=\\\"card card-custom gutter-b\\\">\\n        <div class=\\\"card-header\\\" *ngIf=\\\"!isPopup\\\">\\n            <div class=\\\"card-title\\\">\\n                <h3 class=\\\"card-label left-border-image\\\">Attachment</h3>\\n            </div>\\n            <div class=\\\"card-toolbar\\\">\\n                <!-- <button type=\\\"button\\\" class=\\\"btn btn-primary btn-circle\\\" (click)=\\\"addAttachment()\\\">\\n                    <span class=\\\"flaticon2-plus\\\"></span>\\n                </button> -->\\n                <button type=\\\"button\\\" *ngIf=\\\"isAttachment\\\" class=\\\"icon\\\" (click)=\\\"toggleAccordion('Attachment')\\\">\\n                    <span class=\\\"flaticon2-back icon\\\"></span>\\n\\n                </button>\\n                <button type=\\\"button\\\" *ngIf=\\\"!isAttachment\\\" class=\\\"icon ml-2\\\" (click)=\\\"toggleAccordion('Attachment')\\\">\\n                    <span class=\\\"flaticon2-down icon\\\"></span>\\n                </button>\\n            </div>\\n        </div>\\n        <div class=\\\"card-body px-10 py-3\\\">\\n\\n\\n            <section [ngClass]=\\\"isAttachment ? 'active' : 'inactive'\\\">\\n\\n                <app-material-table-view #attachment [data]=\\\"attachmentList\\\" [colum]=\\\"ATTACHMENT_ELEMENT_COL\\\" [displayedColumns]=\\\"AttachmentdisplayedColumns\\\" (emitter)=\\\"actionBtn($event)\\\" [selectable]=\\\"isPopup\\\">\\n                </app-material-table-view>\\n            </section>\\n\\n        </div>\\n\\n    </div>\\n</ng-container>\";","export default \"<div class=\\\"modal-content\\\">\\n    <div class=\\\"modal-header\\\">\\n        <div class=\\\"modal-title h4 left-border-image\\\" *ngIf=\\\"type=='reason'&& status=='04'\\\">\\n            <span class=\\\"text-muted font-weight-bold font-size-sm mt-1\\\">Please add Reject Reason</span>\\n        </div>\\n        <div class=\\\"modal-title h4 left-border-image\\\" *ngIf=\\\"type=='reason'&& status=='06'\\\">\\n            <span class=\\\"text-muted font-weight-bold font-size-sm mt-1\\\">Please add Lost Reason</span>\\n        </div>\\n        <div class=\\\"modal-title h4 left-border-image\\\" *ngIf=\\\"type=='description'\\\">\\n            <span class=\\\"text-muted font-weight-bold font-size-sm mt-1\\\">Please add Attachment Description</span>\\n        </div>\\n    </div>\\n\\n    <div class=\\\"overlay overlay-block cursor-default modal-body\\\">\\n        <div class=\\\"row\\\">\\n            <div class=\\\"col-sm-12\\\" *ngIf=\\\"type=='reason'\\\">\\n                <textarea type=\\\"text\\\" class=\\\" form-control form-control-sm\\\" name=\\\"lostReason\\\" placeholder=\\\"Reason\\\" autocomplete=\\\"off\\\" [(ngModel)]=\\\"lostReason\\\"></textarea>\\n            </div>\\n            <div class=\\\"col-sm-12\\\" *ngIf=\\\"type=='description'\\\">\\n                <input type=\\\"text\\\" class=\\\" form-control form-control-sm\\\" name=\\\"description\\\" placeholder=\\\"{{'FORM.description' | translate}}\\\" autocomplete=\\\"off\\\" [(ngModel)]=\\\"description\\\">\\n            </div>\\n\\n        </div>\\n        <div class=\\\"row\\\" style=\\\"margin-top: 25px;\\\">\\n            <div class=\\\"col-sm-12\\\" *ngIf=\\\"type=='description'\\\">\\n                <input style=\\\"display: none;\\\" type=\\\"file\\\" class=\\\"form-control form-control-sm\\\" name=\\\"phone\\\" #selectedFile (change)=\\\"importDocument($event)\\\" />\\n                <div class=\\\"input-group\\\">\\n                    <input type=\\\"text\\\" class=\\\"form-control form-control-sm\\\" [(ngModel)]=\\\"fileName\\\">\\n                    <div class=\\\"input-group-append\\\">\\n                        <button class=\\\"btn btn-primary btn-sm\\\" type=\\\"button\\\" (click)=\\\"openFile()\\\">{{\\\"FORM.btn_browse\\\" | translate}}</button>\\n                    </div>\\n                </div>\\n                <!-- <div class=\\\"col-sm-12\\\" *ngIf=\\\"type=='description'\\\">\\n                    <input type=\\\"file\\\" #selectedFile (change)=\\\"importHCPDocument($event)\\\" />\\n                </div> -->\\n            </div>\\n        </div>\\n    </div>\\n\\n    <div class=\\\"row\\\">\\n        <div class=\\\"col-12\\\">\\n\\n            <div class=\\\"modal-footer\\\">\\n                <button type=\\\"button\\\" *ngIf=\\\"type=='description'\\\" class=\\\"btn btn-light btn-elevate mr-2\\\" [disabled]=\\\"!description\\\" (click)=\\\"save()\\\">{{\\\"FORM.btn_save\\\" | translate}}</button>\\n                <button type=\\\"button\\\" *ngIf=\\\"type=='reason'\\\" class=\\\"btn btn-light btn-elevate mr-2\\\" [disabled]=\\\"!lostReason\\\" (click)=\\\"save()\\\">{{\\\"FORM.btn_save\\\" | translate}}</button>\\n                <button class=\\\"btn btn-primary btn-elevate\\\" (click)=\\\"modal.dismiss()\\\">{{\\\"FORM.btn_cancel\\\" | translate}}</button>\\n            </div>\\n\\n        </div>\\n\\n    </div>\";","export default \"<div class=\\\"modal-content\\\">\\r\\n  <div class=\\\"modal-header\\\">\\r\\n    <div class=\\\"modal-title h4 left-border-image\\\" id=\\\"example-modal-sizes-title-lg\\\">\\r\\n      {{prodId ? \\\"Edit\\\" : \\\"Create a new product\\\"}} {{prodName}}\\r\\n    </div>\\r\\n\\r\\n  </div>\\r\\n  <div class=\\\"overlay overlay-block cursor-default modal-body\\\">\\r\\n    <form action=\\\"#\\\" class=\\\"form form-label-right\\\" [formGroup]=\\\"formGroup\\\">\\r\\n      <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-12\\\">\\r\\n          <!-- Product name -->\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <label class=\\\"form-label\\\">{{\\\"TABLE.Product Name\\\"|translate}}</label>\\r\\n            <input type=\\\"text\\\" class=\\\"form-control form-control-sm\\\" name=\\\"productName\\\" placeholder=\\\"{{'TABLE.Product Name'|translate}}\\\"\\r\\n              autocomplete=\\\"off\\\" [class.is-invalid]=\\\"isControlInvalid('productName')\\\"\\r\\n              [class.is-valid]=\\\"isControlValid('productName')\\\" formControlName=\\\"productName\\\" />\\r\\n            <!-- <div class=\\\"feedback\\\">Enter Your <b>Product Name</b> </div> -->\\r\\n          </div>\\r\\n          <!-- Product name -->\\r\\n          <!-- Product code -->\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <label class=\\\"form-label\\\">{{\\\"TABLE.Product Code\\\"|translate}}</label>\\r\\n            <input type=\\\"text\\\" class=\\\"form-control form-control-sm\\\" name=\\\"productCode\\\" placeholder=\\\"{{'TABLE.Product Code'|translate}}\\\"\\r\\n              autocomplete=\\\"off\\\" [class.is-invalid]=\\\"isControlInvalid('productCode')\\\"\\r\\n              [class.is-valid]=\\\"isControlValid('productCode')\\\" formControlName=\\\"productCode\\\" />\\r\\n            <!-- <div class=\\\"feedback\\\">Enter Your <b>Product Code</b></div> -->\\r\\n          </div>\\r\\n          <!-- Product code -->\\r\\n          <!-- Cover name -->\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <label class=\\\"form-label\\\">Cover Name</label>\\r\\n            <input type=\\\"text\\\" class=\\\"form-control form-control-sm\\\" name=\\\"coverName\\\" placeholder=\\\"Cover Name\\\"\\r\\n              autocomplete=\\\"off\\\" [class.is-invalid]=\\\"isControlInvalid('coverName')\\\"\\r\\n              [class.is-valid]=\\\"isControlValid('coverName')\\\" formControlName=\\\"coverName\\\" />\\r\\n            <!-- <div class=\\\"feedback\\\">Enter Your <b>Product Code</b></div> -->\\r\\n          </div>\\r\\n          <!-- Cover name -->\\r\\n          <!-- Product Type -->\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <label class=\\\"form-label\\\">Product Type</label>\\r\\n            <select class=\\\"form-control form-control-sm\\\" name=\\\"type\\\" placeholder=\\\"Product code\\\" autocomplete=\\\"off\\\"\\r\\n              [class.is-invalid]=\\\"isControlInvalid('type')\\\" [class.is-valid]=\\\"isControlValid('type')\\\"\\r\\n              formControlName=\\\"type\\\">\\r\\n              <option value=\\\"GENERAL\\\">General Insurance</option>\\r\\n              <option value=\\\"LIFE\\\">Life Insurance</option>\\r\\n            </select>\\r\\n            <!-- <div class=\\\"feedback\\\">Select Your <b>Product type</b></div> -->\\r\\n          </div>\\r\\n          <!-- Product Type -->\\r\\n        </div>\\r\\n      </div>\\r\\n      <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-sm-6\\\">\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <label class=\\\"example-margin form-label\\\">{{\\\"TABLE.Allow Back Date\\\"|translate}}</label>\\r\\n            <mat-radio-group formControlName=\\\"isAllowBackDate\\\">\\r\\n              <mat-radio-button class=\\\"example-margin\\\" value=\\\"no\\\">No</mat-radio-button>\\r\\n              <mat-radio-button class=\\\"example-margin\\\" value=\\\"yes\\\">Yes</mat-radio-button>\\r\\n              <!-- <mat-radio-button class=\\\"example-margin\\\" value=\\\"30days\\\">Yes and max 30 days</mat-radio-button> -->\\r\\n            </mat-radio-group>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"col-sm-6\\\">\\r\\n          <div class=\\\"form-group row\\\">\\r\\n            <label class=\\\"col-md-6 col-form-label text-md-right\\\">Stamp Duty</label>\\r\\n            <div class=\\\"col-md-6 col-xl-4\\\">\\r\\n              <span class=\\\"switch switch-icon\\\">\\r\\n                <label>\\r\\n                  <input type=\\\"checkbox\\\" name=\\\"stamDuty\\\" formControlName=\\\"stamDuty\\\" />\\r\\n                  <span></span>\\r\\n                </label>\\r\\n              </span>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n\\r\\n      </div>\\r\\n      <div class=\\\"row\\\" *ngIf=\\\"formGroup.value.isAllowBackDate == 'yes'\\\">\\r\\n        <div class=\\\"col-sm-12\\\">\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <label class=\\\"form-label\\\">Rule Days</label>\\r\\n            <input type=\\\"number\\\" class=\\\"form-control form-control-sm\\\" name=\\\"allowDays\\\" placeholder=\\\"Days\\\"\\r\\n              autocomplete=\\\"off\\\" formControlName=\\\"allowDays\\\" />\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n\\r\\n      <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-sm-4\\\">\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <label class=\\\"form-label\\\">{{\\\"TABLE.Quotation Auto Lapse Rule\\\"|translate}}</label>\\r\\n            <input type=\\\"number\\\" class=\\\"form-control form-control-sm\\\" name=\\\"ruleDate\\\" placeholder=\\\"Dates\\\"\\r\\n              autocomplete=\\\"off\\\" [class.is-invalid]=\\\"isControlInvalid('ruleDate')\\\"\\r\\n              [class.is-valid]=\\\"isControlValid('ruleDate')\\\" formControlName=\\\"ruleDate\\\" />\\r\\n            <div class=\\\"feedback\\\">Enter Rule<b> Period</b></div>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"col-sm-4\\\">\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <label class=\\\"form-label\\\">Period Type</label>\\r\\n            <!-- <input type=\\\"text\\\" class=\\\"form-control form-control-sm\\\" name=\\\"ruleType\\\"\\r\\n              placeholder=\\\"Date Type\\\" autocomplete=\\\"off\\\" [class.is-invalid]=\\\"isControlInvalid('ruleType')\\\"\\r\\n              [class.is-valid]=\\\"isControlValid('ruleType')\\\" formControlName=\\\"ruleType\\\" /> -->\\r\\n            <select class=\\\"form-control form-control-sm\\\" name=\\\"ruleType\\\"\\r\\n              [class.is-invalid]=\\\"isControlInvalid('ruleType')\\\" [class.is-valid]=\\\"isControlValid('ruleType')\\\"\\r\\n              formControlName=\\\"ruleType\\\">\\r\\n              <option value=\\\"\\\">Please Select</option>\\r\\n              <option value=\\\"DAY\\\">Days</option>\\r\\n              <option value=\\\"MONTH\\\">Months</option>\\r\\n            </select>\\r\\n            <div class=\\\"feedback\\\">Select Rule <b>Period Type</b></div>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"col-sm-4\\\">\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <label class=\\\"form-label\\\"> &nbsp;</label>\\r\\n            <input type=\\\"text\\\" class=\\\"form-control form-control-sm\\\" name=\\\"ruleDate\\\" autocomplete=\\\"off\\\"\\r\\n              value=\\\"after creation dates\\\" readonly />\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-sm-4\\\">\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <label class=\\\"form-label\\\">{{\\\"TABLE.Application Auto Lapse Rule\\\"|translate}}</label>\\r\\n            <input type=\\\"number\\\" class=\\\"form-control form-control-sm\\\" name=\\\"policyDay\\\" placeholder=\\\"Dates\\\"\\r\\n              autocomplete=\\\"off\\\" [class.is-invalid]=\\\"isControlInvalid('policyDay')\\\"\\r\\n              [class.is-valid]=\\\"isControlValid('policyDay')\\\" formControlName=\\\"policyDay\\\" />\\r\\n            <div class=\\\"feedback\\\">Enter Rule<b> Period</b></div>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"col-sm-4\\\">\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <label class=\\\"form-label\\\">Period Type</label>\\r\\n            <!-- <input type=\\\"text\\\" class=\\\"form-control form-control-sm\\\" name=\\\"ruleType\\\"\\r\\n              placeholder=\\\"Date Type\\\" autocomplete=\\\"off\\\" [class.is-invalid]=\\\"isControlInvalid('ruleType')\\\"\\r\\n              [class.is-valid]=\\\"isControlValid('ruleType')\\\" formControlName=\\\"ruleType\\\" /> -->\\r\\n            <select class=\\\"form-control form-control-sm\\\" name=\\\"policyRule\\\"\\r\\n              [class.is-invalid]=\\\"isControlInvalid('policyRule')\\\" [class.is-valid]=\\\"isControlValid('policyRule')\\\"\\r\\n              formControlName=\\\"policyRule\\\">\\r\\n              <option value=\\\"\\\">Please Select</option>\\r\\n              <option value=\\\"DAY\\\">Days</option>\\r\\n              <option value=\\\"MONTH\\\">Months</option>\\r\\n            </select>\\r\\n            <div class=\\\"feedback\\\">Select Rule <b>Period Type</b></div>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"col-sm-4\\\">\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <label class=\\\"form-label\\\"> &nbsp;</label>\\r\\n            <input type=\\\"text\\\" class=\\\"form-control form-control-sm\\\" name=\\\"ruleDate\\\" autocomplete=\\\"off\\\"\\r\\n              value=\\\"after creation dates\\\" readonly />\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n      \\r\\n      <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-sm-12\\\">\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <label class=\\\"form-label\\\">Product Status</label>\\r\\n            <!-- <select class=\\\"form-control form-control-sm\\\" name=\\\"status\\\" placeholder=\\\"Product Status\\\"\\r\\n              autocomplete=\\\"off\\\" [class.is-invalid]=\\\"isControlInvalid('statusCd')\\\"\\r\\n              [class.is-valid]=\\\"isControlValid('statusCd')\\\" formControlName=\\\"statusCd\\\">\\r\\n              <option value=\\\"01\\\">Draft</option>\\r\\n              <option value=\\\"02\\\">Active</option>\\r\\n            </select> -->\\r\\n            <ng-select class=\\\"ng-custom-select\\\" [class.is-invalid]=\\\"isControlInvalid('statusCd')\\\"\\r\\n              [class.is-valid]=\\\"isControlValid('statusCd')\\\" [items]=\\\"statusCdOption\\\" bindLabel=\\\"value\\\" bindValue=\\\"code\\\"\\r\\n              formControlName=\\\"statusCd\\\">\\r\\n            </ng-select>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-12\\\">\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <label class=\\\"form-label\\\">Upload Product Icon</label>\\r\\n            <div class=\\\"upload-icon-group\\\">\\r\\n              <div class=\\\"upload-icon\\\" (click)=\\\"openFile('icon')\\\">\\r\\n                <img *ngIf=\\\"formGroup.value.icon\\\" [src]=\\\"Default_DOWNLOAD_URL+'/'+formGroup.value.icon\\\" alt=\\\"\\\" >\\r\\n                <ng-container *ngIf=\\\"!formGroup.value.icon\\\">\\r\\n                  <i class=\\\"flaticon-upload-1 icon-lg\\\"></i>\\r\\n                  <label>Icon</label>\\r\\n                </ng-container>\\r\\n                <input style=\\\"display: none;\\\" type=\\\"file\\\" #selectedFile1 (change)=\\\"handleUpload($event,'icon')\\\" />\\r\\n              </div>\\r\\n              <div class=\\\"upload-icon\\\" (click)=\\\"openFile('small')\\\">\\r\\n                <img *ngIf=\\\"formGroup.value.smallIcon\\\" [src]=\\\"Default_DOWNLOAD_URL+'/'+formGroup.value.smallIcon\\\" alt=\\\"\\\">\\r\\n                <ng-container *ngIf=\\\"!formGroup.value.smallIcon\\\">\\r\\n                  <i class=\\\"flaticon-upload-1 icon-lg\\\"></i>\\r\\n                  <label>Small Icon</label>\\r\\n                </ng-container>\\r\\n                <input style=\\\"display: none;\\\" type=\\\"file\\\" #selectedFile2 (change)=\\\"handleUpload($event,'small')\\\" />\\r\\n              </div>\\r\\n              <div class=\\\"upload-icon\\\" (click)=\\\"openFile('cover')\\\">\\r\\n                <img *ngIf=\\\"formGroup.value.coverIcon\\\" [src]=\\\"Default_DOWNLOAD_URL+'/'+formGroup.value.coverIcon\\\" alt=\\\"\\\">\\r\\n                <ng-container *ngIf=\\\"!formGroup.value.coverIcon\\\">\\r\\n                  <i class=\\\"flaticon-upload-1 icon-lg\\\"></i>\\r\\n                  <label>Cover Icon</label>\\r\\n                </ng-container>\\r\\n                <input style=\\\"display: none;\\\" type=\\\"file\\\" #selectedFile3 (change)=\\\"handleUpload($event,'cover')\\\" />\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n    </form>\\r\\n  </div>\\r\\n  <div class=\\\"modal-footer\\\">\\r\\n    <!-- <button type=\\\"button\\\" *ngIf=\\\"id\\\" class=\\\"btn btn-danger btn-elevate mr-2\\\"\\r\\n      (click)=\\\"deleteEditModal()\\\">Delete</button> -->\\r\\n    <button type=\\\"button\\\" class=\\\"btn btn-light btn-elevate mr-2\\\" (click)=\\\"modal.dismiss()\\\">{{\\\"FORM.btn_cancel\\\" | translate }}</button>\\r\\n    <button type=\\\"submit\\\" class=\\\"btn btn-primary btn-elevate\\\" (click)=\\\"save()\\\"\\r\\n      [disabled]=\\\"formGroup.invalid\\\">{{\\\"FORM.btn_save\\\" | translate }}</button>\\r\\n  </div>\\r\\n</div>\";","export default \"<div class=\\\"row\\\">\\n  <div class=\\\"col-12\\\">\\n    <div class=\\\"card card-custom \\\">\\n      <div class=\\\"card-header\\\">\\n        <div class=\\\"card-title\\\">\\n          <h3 class=\\\"card-label left-border-image\\\">List of Products</h3>\\n        </div>\\n        <div class=\\\"card-toolbar\\\" *ngIf=\\\"type == 'page'\\\">\\n          <button type=\\\"button\\\" class=\\\"btn btn-primary btn-circle\\\" (click)=\\\"createOrEdit()\\\">\\n            <span class=\\\"flaticon2-plus\\\"></span>\\n          </button>\\n          <!-- <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"createOrEdit()\\\">Create New Product</button> -->\\n        </div>\\n      </div>\\n      <div class=\\\"card-body customer-card-body\\\">\\n        <!-- begin:Table -->\\n        <ng-container *ngIf=\\\"show\\\">\\n          <app-material-table-view [selectable]=\\\"type != 'page'\\\" [data]=\\\"products\\\" [colum]=\\\"ELEMENT_COL\\\"\\n            [displayedColumns]=\\\"displayedColumns\\\" (emitter)=\\\"actionBtn($event)\\\">\\n          </app-material-table-view>\\n        </ng-container>\\n      </div>\\n      <ng-container *ngIf=\\\"type != 'page'\\\">\\n        <div class=\\\"card-footer\\\">\\n          <button type=\\\"button\\\" class=\\\"btn btn-light btn-elevate mr-2\\\" (click)=\\\"closeModal()\\\">{{\\\"FORM.btn_cancel\\\" | translate }}</button>\\n          <button type=\\\"button\\\" class=\\\"btn btn-primary btn-elevate\\\" (click)=\\\"nextProd()\\\"\\n            [disabled]=\\\"!selected.id\\\">{{\\\"FORM.btn_next\\\" | translate }}</button>\\n        </div>\\n      </ng-container>\\n    </div>\\n  </div>\\n</div>\";"],"names":[],"sourceRoot":"webpack:///"}