{"version":3,"file":"src_app_pages_renew-management-detail_renew-management-detail_module_ts.js","mappings":"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","sources":["./src/app/pages/renew-management-detail/renew-management-detail.component.ts","./src/app/pages/renew-management-detail/renew-management-detail.module.ts","./src/app/pages/renew-management-detail/renew-management-detail.component.html"],"sourcesContent":["import { Location } from '@angular/common';\nimport { ChangeDetectorRef, Component, NgZone, OnInit } from '@angular/core';\nimport { FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport * as moment from 'moment'\nimport { DateAdapter, MAT_DATE_FORMATS, MAT_DATE_LOCALE } from '@angular/material/core';\nimport { MAT_MOMENT_DATE_FORMATS, MomentDateAdapter } from '@angular/material-moment-adapter';\nimport { AlertService } from 'src/app/modules/loading-toast/alert-model/alert.service';\nimport { MY_FORMATS } from '../../core/is-json';\nimport { MenuDataService } from '../../core/menu-data.service';\nimport { validateAllFields } from '../../core/valid-all-feild';\nimport { RenewManageService } from '../renew-management-list/renew-manage.service';\nimport { Subscription } from 'rxjs';\n@Component({\n  selector: 'app-renew-management-detail',\n  templateUrl: './renew-management-detail.component.html',\n  styleUrls: ['./renew-management-detail.component.scss'],\n  providers: [\n    { provide: DateAdapter, useClass: MomentDateAdapter, deps: [MAT_DATE_LOCALE] },\n    { provide: MAT_DATE_FORMATS, useValue: MY_FORMATS },\n  ]\n})\nexport class RenewManagementDetailComponent implements OnInit {\n  actForm: FormGroup;\n  pageStatus: any;\n  isLead: boolean = false\n  oldId: any\n  // activityStatus = {\n  //   \"01\": \"Open\",\n  //   \"02\": \"Complete\",\n  //   \"03\": \"Cancel\",\n  // }\n  // activityType: string[] = [\n  //   \"Face to Face\",\n  //   \"Online\",\n  //   \"Phone Call\"\n  // ]\n  relatedType: string\n  oldData: any\n  leadId: any\n  dataAccess = {\n    view: true,\n    create: true,\n    edit: true,\n    delete: true\n  }\n  unsub: Subscription[] = []\n  constructor(\n    private route: ActivatedRoute,\n    private location: Location,\n    private cdf: ChangeDetectorRef,\n    private alertService: AlertService,\n    private menuService: MenuDataService,\n    private ngZone: NgZone,\n    private renewService: RenewManageService\n  ) {\n\n  }\n\n  ngOnInit(): void {\n    this.loadForm();\n    this.checkPremission()\n    this.unsub[0] = this.route.queryParams\n      .subscribe(params => {\n        let data = JSON.parse(params.data)\n        console.log(data);\n        \n        if (!data) this.location.back()\n        this.loadForm(data);\n      }\n      );\n  }\n\n  checkPremission() {\n    this.menuService.dataAccess.subscribe((res) => {\n      if (res) {\n        this.dataAccess = res['activity']\n        if (!this.dataAccess.view) {\n          this.location.back()\n        }\n      }\n    })\n  }\n\n  ngAfterViewInit() {\n\n  }\n  clearDate(key) {\n    this.actForm.controls[key].setValue(null)\n  }\n\n  loadForm(oldData?) {\n    // if(oldData)\n    // console.log(moment(oldData.dueDate).format('DD/MM/YYYY'));\n    console.log(oldData);\n    this.actForm = new FormGroup({\n      \"policyNumber\": new FormControl({ value: oldData ? oldData.policyNumber : null, disabled: true }),\n      // \"renewalPolicyNumber\": new FormControl({ value: oldData ? oldData.renewalPolicyNumber : null, disabled: true }),\n      \"policyInceptionDate\": new FormControl({ value: oldData ? moment(oldData.policyInceptionDate,\"DD/MM/YYYY\") : null, disabled: true }),\n      \"status\": new FormControl({ value: oldData ? oldData.policyStatus : null, disabled: true }),\n      \"policyExpiryDate\": new FormControl({ value: oldData ? moment(oldData.policyExpiryDate,\"DD/MM/YYYY\") : null, disabled: true }),\n      \"quoteNumber\": new FormControl({ value: oldData ? oldData.quoteNumber : null, disabled: true }),\n      \"grossPremium\": new FormControl({ value: oldData ? oldData.grossPremium : null, disabled: true }),\n      \"policyHolderCode\": new FormControl({ value: oldData ? oldData.policyHolderCode : null, disabled: true }),\n      \"netPremium\": new FormControl({ value: oldData ? oldData.netPremium : null, disabled: true }),\n      \"policyHolder\": new FormControl({ value: oldData ? oldData.policyHolder : null, disabled: true }),\n    })\n    this.cdf.detectChanges()\n  }\n\n\n  // helpers for View\n  isControlValid(controlName: string): boolean {\n    const control = this.actForm.controls[controlName];\n    return control.valid && (control.dirty || control.touched);\n  }\n\n  isControlInvalid(controlName: string): boolean {\n    const control = this.actForm.controls[controlName];\n    return control.invalid && (control.dirty || control.touched);\n  }\n\n  controlHasError(validation, controlName): boolean {\n    const control = this.actForm.controls[controlName];\n    return control.hasError(validation) && (control.dirty || control.touched);\n  }\n\n  isControlTouched(controlName): boolean {\n    const control = this.actForm.controls[controlName];\n    return control.dirty || control.touched;\n  }\n\n\n  backLocation() {\n    this.ngZone.run(() => {\n      this.location.back()\n    })\n  }\n\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule } from '@angular/router';\nimport { RenewManagementDetailComponent } from './renew-management-detail.component';\nimport { NgbDatepickerModule, NgbModalModule } from '@ng-bootstrap/ng-bootstrap';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { OverlayModule } from '@angular/cdk/overlay';\nimport { NgSelectModule } from '@ng-select/ng-select';\nimport { MatDatepickerModule } from '@angular/material/datepicker';\nimport { MatInputModule } from '@angular/material/input';\nimport { LanguageModule } from 'src/app/modules/languages/languages.modules';\nimport { CRUDTableModule } from '../../_metronic/shared/crud-table';\nimport { NgxCurrencyModule } from 'ngx-currency';\n\n\n@NgModule({\n  declarations: [RenewManagementDetailComponent,],\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    OverlayModule,\n    CRUDTableModule,\n    NgbDatepickerModule,\n    MatDatepickerModule,\n    MatInputModule,\n    NgSelectModule,\n    NgbModalModule,\n    NgxCurrencyModule,\n    LanguageModule,\n    RouterModule.forChild([\n      {\n        path: '',\n        component: RenewManagementDetailComponent,\n      },\n    ]),\n  ],\n})\nexport class RenewManagementDetailModule { }\n","export default \"<div class=\\\"row\\\" *ngIf=\\\"actForm\\\">\\n    <div class=\\\"col-12\\\">\\n        <div class=\\\"card card-custom gutter-b\\\">\\n            <div class=\\\"card-body\\\">\\n                <form action=\\\"#\\\" class=\\\"form\\\" [formGroup]=\\\"actForm\\\" (ngSubmit)=\\\"backLocation()\\\">\\n                    <div class=\\\"row\\\">\\n\\n                        <div class=\\\"col-sm-6\\\">\\n                            <div class=\\\"form-group\\\">\\n                                <label class=\\\"form-label\\\">{{\\\"FORM.policy_no\\\" | translate}}</label>\\n                                <input type=\\\"text\\\" class=\\\"form-control form-control-sm\\\" name=\\\"policyNumber\\\"\\n                                    autocomplete=\\\"off\\\" [class.is-invalid]=\\\"isControlInvalid('policyNumber')\\\"\\n                                    [class.is-valid]=\\\"isControlValid('policyNumber')\\\" formControlName=\\\"policyNumber\\\" />\\n                            </div>\\n                        </div>\\n\\n                        <!-- <div class=\\\"col-sm-6\\\">\\n                            <div class=\\\"form-group\\\">\\n                                <label class=\\\"form-label\\\">{{\\\"FORM.renew_policy_no\\\" | translate}}</label>\\n                                <input type=\\\"text\\\" class=\\\"form-control form-control-sm\\\" name=\\\"renewalPolicyNumber\\\"\\n                                    autocomplete=\\\"off\\\" [class.is-invalid]=\\\"isControlInvalid('renewalPolicyNumber')\\\"\\n                                    [class.is-valid]=\\\"isControlValid('renewalPolicyNumber')\\\" formControlName=\\\"renewalPolicyNumber\\\" />\\n                            </div>\\n                        </div> -->\\n\\n                        <div class=\\\"col-sm-6\\\">\\n                            <div class=\\\"form-group\\\">\\n                                <label class=\\\"form-label\\\">{{\\\"FORM.policy_date\\\" | translate}}</label>\\n                                <div class=\\\"input-group \\\">\\n                                    <input matInput class=\\\"form-control-sm date-input\\\" style=\\\"width: 100%;\\\"\\n                                        formControlName=\\\"policyInceptionDate\\\" [matDatepicker]=\\\"policyInceptionDate\\\"\\n                                        readonly>\\n                                    <mat-datepicker-toggle matSuffix [for]=\\\"policyInceptionDate\\\">\\n                                    </mat-datepicker-toggle>\\n                                    <mat-datepicker #policyInceptionDate disabled=\\\"false\\\"></mat-datepicker>\\n                                </div>\\n                            </div>\\n                        </div>\\n                        <!--  -->\\n                        <div class=\\\"col-sm-6\\\">\\n                            <div class=\\\"form-group\\\">\\n                                <label class=\\\"form-label\\\">{{\\\"FORM.policy_status\\\" | translate}}</label>\\n                                <input type=\\\"text\\\" class=\\\"form-control form-control-sm\\\" name=\\\"actTitle\\\"\\n                                    autocomplete=\\\"off\\\" [class.is-invalid]=\\\"isControlInvalid('status')\\\"\\n                                    [class.is-valid]=\\\"isControlValid('status')\\\" formControlName=\\\"status\\\" />\\n                            </div>\\n                        </div>\\n\\n                        <div class=\\\"col-sm-6\\\">\\n                            <div class=\\\"form-group\\\">\\n                                <label class=\\\"form-label\\\">{{\\\"FORM.policy_edate\\\" | translate}}</label>\\n                                <div class=\\\"input-group \\\">\\n                                    <input matInput class=\\\"form-control-sm date-input\\\" style=\\\"width: 100%;\\\"\\n                                        formControlName=\\\"policyExpiryDate\\\" [matDatepicker]=\\\"policyExpiryDate\\\" readonly>\\n                                    <mat-datepicker-toggle matSuffix [for]=\\\"policyExpiryDate\\\"></mat-datepicker-toggle>\\n                                    <mat-datepicker #policyExpiryDate disabled=\\\"false\\\"></mat-datepicker>\\n                                </div>\\n                            </div>\\n                        </div>\\n                        <!--  -->\\n                        <div class=\\\"col-sm-6\\\">\\n                            <div class=\\\"form-group \\\">\\n                                <label class=\\\"form-label\\\">{{\\\"FORM.qoute_no\\\" | translate}} </label>\\n                                <div class=\\\"input-group \\\">\\n                                    <input type=\\\"text\\\" class=\\\"form-control form-control-sm\\\" name=\\\"quoteNumber\\\"\\n                                        autocomplete=\\\"off\\\" [class.is-invalid]=\\\"isControlInvalid('quoteNumber')\\\"\\n                                        [class.is-valid]=\\\"isControlValid('quoteNumber')\\\"\\n                                        formControlName=\\\"quoteNumber\\\" />\\n\\n                                </div>\\n                            </div>\\n                        </div>\\n\\n                        <div class=\\\"col-sm-6\\\">\\n                            <div class=\\\"form-group\\\">\\n                                <label class=\\\"form-label\\\">{{\\\"FORM.gross_premium\\\" | translate}}</label>\\n                                <input type=\\\"tel\\\" currencyMask\\n                                    [options]=\\\"{ prefix: '', thousands: ',',allowNegative:false,align:'left' }\\\"\\n                                    class=\\\"form-control form-control-sm currency-input-tag\\\" name=\\\"grossPremium\\\"\\n                                    autocomplete=\\\"off\\\" [class.is-invalid]=\\\"isControlInvalid('grossPremium')\\\"\\n                                    [class.is-valid]=\\\"isControlValid('grossPremium')\\\" formControlName=\\\"grossPremium\\\" />\\n                            </div>\\n                        </div>\\n                        <!--  -->\\n                        <div class=\\\"col-sm-6\\\">\\n                            <div class=\\\"form-group\\\">\\n                                <label class=\\\"form-label\\\">{{\\\"FORM.policy_holder_code\\\" | translate}}</label>\\n                                <input type=\\\"text\\\" class=\\\"form-control form-control-sm\\\" name=\\\"policyHolderCode\\\"\\n                                    autocomplete=\\\"off\\\" [class.is-invalid]=\\\"isControlInvalid('policyHolderCode')\\\"\\n                                    [class.is-valid]=\\\"isControlValid('policyHolderCode')\\\"\\n                                    formControlName=\\\"policyHolderCode\\\" />\\n                            </div>\\n                        </div>\\n                        <div class=\\\"col-sm-6\\\">\\n                            <div class=\\\"form-group\\\">\\n                                <label class=\\\"form-label\\\">{{\\\"FORM.net_premium\\\" | translate}}</label>\\n                                <input type=\\\"tel\\\" currencyMask\\n                                    [options]=\\\"{ prefix: '', thousands: ',',allowNegative:false,align:'left' }\\\"\\n                                    class=\\\"form-control form-control-sm currency-input-tag\\\" name=\\\"netPremium\\\"\\n                                    autocomplete=\\\"off\\\" [class.is-invalid]=\\\"isControlInvalid('netPremium')\\\"\\n                                    [class.is-valid]=\\\"isControlValid('netPremium')\\\" formControlName=\\\"netPremium\\\" />\\n                            </div>\\n                        </div>\\n                        <!--  -->\\n                        <div class=\\\"col-sm-6\\\">\\n                            <div class=\\\"form-group\\\">\\n                                <label class=\\\"form-label\\\">{{\\\"FORM.policy_holder\\\" | translate}}</label>\\n                                <input type=\\\"text\\\" class=\\\"form-control form-control-sm\\\" name=\\\"policyHolder\\\"\\n                                    autocomplete=\\\"off\\\" [class.is-invalid]=\\\"isControlInvalid('policyHolder')\\\"\\n                                    [class.is-valid]=\\\"isControlValid('policyHolder')\\\" formControlName=\\\"policyHolder\\\" />\\n                            </div>\\n                        </div>\\n\\n                    </div>\\n                    <button type=\\\"button\\\" class=\\\"btn btn-default btn-elevate mt-2\\\"\\n                        (click)=\\\"backLocation()\\\">{{\\\"FORM.btn_back\\\" | translate}}</button>\\n                    <!-- <button type=\\\"button\\\" class=\\\"btn btn-primary btn-elevate mx-2\\\"\\n                        (click)=\\\"backLocation()\\\">{{\\\"FORM.btn_save\\\" | translate}}</button> -->\\n                </form>\\n            </div>\\n        </div>\\n    </div>\\n</div>\";"],"names":[],"sourceRoot":"webpack:///"}