{"version":3,"file":"src_app_pages_renew-management-detail_renew-management-detail_module_ts.js","mappings":"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","sources":["./src/app/pages/renew-management-detail/renew-management-detail.component.ts","./src/app/pages/renew-management-detail/renew-management-detail.module.ts"],"sourcesContent":["import { Location } from '@angular/common';\r\nimport { ChangeDetectorRef, Component, NgZone, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport * as moment from 'moment'\r\nimport { DateAdapter, MAT_DATE_FORMATS, MAT_DATE_LOCALE } from '@angular/material/core';\r\nimport { MAT_MOMENT_DATE_FORMATS, MomentDateAdapter } from '@angular/material-moment-adapter';\r\nimport { AlertService } from 'src/app/modules/loading-toast/alert-model/alert.service';\r\nimport { MY_FORMATS } from '../../core/is-json';\r\nimport { MenuDataService } from '../../core/menu-data.service';\r\nimport { validateAllFields } from '../../core/valid-all-feild';\r\nimport { RenewManageService } from '../renew-management-list/renew-manage.service';\r\nimport { Subscription } from 'rxjs';\r\n@Component({\r\n  selector: 'app-renew-management-detail',\r\n  templateUrl: './renew-management-detail.component.html',\r\n  styleUrls: ['./renew-management-detail.component.scss'],\r\n  providers: [\r\n    { provide: DateAdapter, useClass: MomentDateAdapter, deps: [MAT_DATE_LOCALE] },\r\n    { provide: MAT_DATE_FORMATS, useValue: MY_FORMATS },\r\n  ]\r\n})\r\nexport class RenewManagementDetailComponent implements OnInit {\r\n  actForm: FormGroup;\r\n  pageStatus: any;\r\n  isLead: boolean = false\r\n  oldId: any\r\n  // activityStatus = {\r\n  //   \"01\": \"Open\",\r\n  //   \"02\": \"Complete\",\r\n  //   \"03\": \"Cancel\",\r\n  // }\r\n  // activityType: string[] = [\r\n  //   \"Face to Face\",\r\n  //   \"Online\",\r\n  //   \"Phone Call\"\r\n  // ]\r\n  relatedType: string\r\n  oldData: any\r\n  leadId: any\r\n  dataAccess = {\r\n    view: true,\r\n    create: true,\r\n    edit: true,\r\n    delete: true\r\n  }\r\n  unsub: Subscription[] = []\r\n  constructor(\r\n    private route: ActivatedRoute,\r\n    private location: Location,\r\n    private cdf: ChangeDetectorRef,\r\n    private alertService: AlertService,\r\n    private menuService: MenuDataService,\r\n    private ngZone: NgZone,\r\n    private renewService: RenewManageService\r\n  ) {\r\n\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.loadForm();\r\n    this.checkPremission()\r\n    this.unsub[0] = this.route.queryParams\r\n      .subscribe(params => {\r\n        let data = JSON.parse(params.data)\r\n        console.log(data);\r\n        \r\n        if (!data) this.location.back()\r\n        this.loadForm(data);\r\n      }\r\n      );\r\n  }\r\n\r\n  checkPremission() {\r\n    this.menuService.dataAccess.subscribe((res) => {\r\n      if (res) {\r\n        this.dataAccess = res['activity']\r\n        if (!this.dataAccess.view) {\r\n          this.location.back()\r\n        }\r\n      }\r\n    })\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n\r\n  }\r\n  clearDate(key) {\r\n    this.actForm.controls[key].setValue(null)\r\n  }\r\n\r\n  loadForm(oldData?) {\r\n    // if(oldData)\r\n    // console.log(moment(oldData.dueDate).format('DD/MM/YYYY'));\r\n    console.log(oldData);\r\n    this.actForm = new FormGroup({\r\n      \"policyNumber\": new FormControl({ value: oldData ? oldData.policyNumber : null, disabled: true }),\r\n      // \"renewalPolicyNumber\": new FormControl({ value: oldData ? oldData.renewalPolicyNumber : null, disabled: true }),\r\n      \"policyInceptionDate\": new FormControl({ value: oldData ? moment(oldData.policyInceptionDate,\"DD/MM/YYYY\") : null, disabled: true }),\r\n      \"status\": new FormControl({ value: oldData ? oldData.policyStatus : null, disabled: true }),\r\n      \"policyExpiryDate\": new FormControl({ value: oldData ? moment(oldData.policyExpiryDate,\"DD/MM/YYYY\") : null, disabled: true }),\r\n      \"quoteNumber\": new FormControl({ value: oldData ? oldData.quoteNumber : null, disabled: true }),\r\n      \"grossPremium\": new FormControl({ value: oldData ? oldData.grossPremium : null, disabled: true }),\r\n      \"policyHolderCode\": new FormControl({ value: oldData ? oldData.policyHolderCode : null, disabled: true }),\r\n      \"netPremium\": new FormControl({ value: oldData ? oldData.netPremium : null, disabled: true }),\r\n      \"policyHolder\": new FormControl({ value: oldData ? oldData.policyHolder : null, disabled: true }),\r\n    })\r\n    this.cdf.detectChanges()\r\n  }\r\n\r\n\r\n  // helpers for View\r\n  isControlValid(controlName: string): boolean {\r\n    const control = this.actForm.controls[controlName];\r\n    return control.valid && (control.dirty || control.touched);\r\n  }\r\n\r\n  isControlInvalid(controlName: string): boolean {\r\n    const control = this.actForm.controls[controlName];\r\n    return control.invalid && (control.dirty || control.touched);\r\n  }\r\n\r\n  controlHasError(validation, controlName): boolean {\r\n    const control = this.actForm.controls[controlName];\r\n    return control.hasError(validation) && (control.dirty || control.touched);\r\n  }\r\n\r\n  isControlTouched(controlName): boolean {\r\n    const control = this.actForm.controls[controlName];\r\n    return control.dirty || control.touched;\r\n  }\r\n\r\n\r\n  backLocation() {\r\n    this.ngZone.run(() => {\r\n      this.location.back()\r\n    })\r\n  }\r\n\r\n  confirmRenew() {\r\n    if (this.actForm.value.status != 'confirm') {\r\n      this.alertService\r\n        .activate('Are you sure want to confirm?', 'Warning Message')\r\n        .then(async (result) => {\r\n          if (result) {\r\n            this.actForm.value.status = 'confirm';\r\n            this.renewService\r\n              .confirmRenew(this.actForm.value.policyNumber)\r\n              .toPromise()\r\n              .then((res) => {\r\n                if (res) {\r\n                  this.alertService.activate(\r\n                    'This record was updated',\r\n                    'Success Message'\r\n                  );\r\n                }\r\n              });\r\n          }\r\n        });\r\n    }\r\n  }\r\n\r\n\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { RouterModule } from '@angular/router';\r\nimport { RenewManagementDetailComponent } from './renew-management-detail.component';\r\nimport { NgbDatepickerModule, NgbModalModule } from '@ng-bootstrap/ng-bootstrap';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { OverlayModule } from '@angular/cdk/overlay';\r\nimport { NgSelectModule } from '@ng-select/ng-select';\r\nimport { MatDatepickerModule } from '@angular/material/datepicker';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { LanguageModule } from 'src/app/modules/languages/languages.modules';\r\nimport { CRUDTableModule } from '../../_metronic/shared/crud-table';\r\nimport { NgxCurrencyModule } from 'ngx-currency';\r\n\r\n\r\n@NgModule({\r\n  declarations: [RenewManagementDetailComponent,],\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    OverlayModule,\r\n    CRUDTableModule,\r\n    NgbDatepickerModule,\r\n    MatDatepickerModule,\r\n    MatInputModule,\r\n    NgSelectModule,\r\n    NgbModalModule,\r\n    NgxCurrencyModule,\r\n    LanguageModule,\r\n    RouterModule.forChild([\r\n      {\r\n        path: '',\r\n        component: RenewManagementDetailComponent,\r\n      },\r\n    ]),\r\n  ],\r\n})\r\nexport class RenewManagementDetailModule { }\r\n"],"names":[],"sourceRoot":"webpack:///"}