{"version":3,"file":"default-src_app_pages_customer-list_customer-list_share_module_ts-src_app_pages_share-compone-a9f04a.js","mappings":"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CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,yDAAc;;AAEzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,0EAAkB,CAAC,qEAAa;AAC9D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,yCAAO;AACnC;AACA,4BAA4B,yCAAO;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,kBAAkB;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA,qDAAqD,8BAA8B,+DAAwB,CAAC,qDAAiB,GAAG,+DAAwB,CAAC,qDAAQ,GAAG,+DAAwB,CAAC,2DAAmB,GAAG,+DAAwB;AAC3O,iCAAiC,+DAAwB,GAAG,2KAA2K;AACvO,QAAQ,wDAAiB,kEAAkE,oCAAoC,uEAAuE,iCAAiC;AACvO,MAAM;AACN,QAAQ,yDAAkB;AAC1B,QAAQ,yDAAkB;AAC1B,OAAO,YAAY,oEAAoE,wCAAwC,wEAAiC,6MAA6M;AAC7W,QAAQ,6DAAsB;AAC9B,QAAQ,0DAAmB;AAC3B,QAAQ,uDAAgB;AACxB,MAAM;AACN,QAAQ,uDAAgB;AACxB,QAAQ,wDAAiB;AACzB,OAAO,eAAe,6DAAgB,yCAAyC;AAC/E;AACA,MAAM,MAAM,qDAAU,EAAE;AACxB,MAAM,gCAAgC,MAAM,iDAAM,SAAS,qDAAQ,IAAI,GAAG;AAC1E,MAAM,MAAM,2DAAY,EAAE;AAC1B,MAAM,gCAAgC,MAAM,iDAAM,2BAA2B,IAAI,MAAM,mDAAQ,EAAE;AACjG;AACA;AACA,aAAa,MAAM,gDAAK,EAAE;AAC1B,uBAAuB,MAAM,uDAAY,gCAAgC;AACzE,0BAA0B,MAAM,uDAAY,yBAAyB;AACrE;AACA,eAAe,mDAAmD,+DAAwB;AAC1F,cAAc,oDAAS;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,iCAAiC,yEAA8B;AAC/D,+BAA+B,iEAAsB;AACrD;AACA,aAAa;AACb,KAAK,iBAAiB,UAAU,MAAM,qDAAiB,EAAE,IAAI;AAC7D,sBAAsB,iDAAM;AAC5B,uBAAuB,qDAAQ;AAC/B,aAAa,GAAG,IAAI,MAAM,2DAAmB,EAAE,IAAI;AACnD,sBAAsB,iDAAM;AAC5B;AACA,aAAa;AACb,sBAAsB,mDAAQ;AAC9B,aAAa,GAAG,IAAI,IAAI;AACxB,kBAAkB,gDAAK;AACvB,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,uDAAY;AAC9B;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,uDAAY;AAC9B;AACA,SAAS,GAAG,IAAI;;AAEhB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC,yDAAc;AACnD;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0CAA0C,oDAAS;AACnD;AACA,gCAAgC,oDAAkB;AAClD;AACA;AACA;AACA;AACA;AACA,kCAAkC,yCAAO;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B,uDAAY;AACtC;AACA;AACA;AACA;AACA;AACA;AACA,yCAAyC,eAAe;AACxD;AACA;AACA,sBAAsB;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B;AAC3B;AACA,+BAA+B,4EAAqB;AACpD;AACA;AACA,wBAAwB;AACxB;AACA,4BAA4B,4EAAqB;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB;AACtB,6BAA6B;AAC7B;AACA;AACA;AACA;AACA;AACA,+BAA+B,8DAAe;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iDAAiD,yDAAS,+BAA+B,0DAAS,UAAU,4CAAK;AACjH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC,yDAAS,+BAA+B,0DAAS,UAAU,4CAAK;AAChG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,0DAAM;AACvB,qBAAqB,sEAAc;AACnC;AACA;AACA;AACA;AACA,iBAAiB,8DAAU;AAC3B;AACA;AACA;AACA;AACA,iBAAiB,+DAAW;AAC5B;AACA;AACA;AACA;AACA;AACA,gCAAgC,4DAAQ,gBAAgB,8DAAU;AAClE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,qDAAI;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+CAA+C,UAAU;AACzD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,yDAAS;AAC3B;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,uDAAuD,+BAA+B,+DAAwB,CAAC,qDAAiB,GAAG,+DAAwB,CAAC,iDAAa,GAAG,+DAAwB;AACpM,kCAAkC,+DAAwB,GAAG,8FAA8F;AAC3J,QAAQ,4DAAqB;AAC7B,QAAQ,4DAAqB;AAC7B,QAAQ,4DAAqB;AAC7B,MAAM;AACN;AACA,QAAQ,4DAAqB,MAAM,yDAAkB;AACrD,QAAQ,4DAAqB,MAAM,yDAAkB;AACrD,QAAQ,4DAAqB,MAAM,yDAAkB;AACrD,OAAO,oDAAoD;AAC3D,QAAQ,yDAAkB,CAAC,sDAAW;AACtC,MAAM;AACN;AACA,QAAQ,4DAAqB,MAAM,yDAAkB;AACrD,OAAO,YAAY,oWAAoW,aAAa,oCAAoC;AACxa;AACA,MAAM,MAAM,qDAAU,EAAE;AACxB,MAAM,MAAM,iDAAM,EAAE;AACpB,MAAM,gCAAgC,MAAM,iDAAM,qCAAqC;AACvF;AACA;AACA,kBAAkB,MAAM,0DAAe,wBAAwB,mBAAmB,IAAI;AACtF,sBAAsB,MAAM,gDAAK,EAAE;AACnC,kBAAkB,MAAM,gDAAK,yBAAyB;AACtD,uBAAuB,MAAM,gDAAK,8BAA8B;AAChE,wBAAwB,MAAM,gDAAK,+BAA+B;AAClE,kBAAkB,MAAM,gDAAK,EAAE;AAC/B,kBAAkB,MAAM,gDAAK,EAAE;AAC/B,oBAAoB,MAAM,oDAAS,SAAS,sDAAW,IAAI;AAC3D,cAAc,MAAM,0DAAe,wBAAwB,oBAAoB,IAAI;AACnF,oBAAoB,MAAM,uDAAY,6BAA6B;AACnE,uBAAuB,MAAM,gDAAK,EAAE;AACpC,oBAAoB,MAAM,gDAAK,EAAE;AACjC,mBAAmB,MAAM,gDAAK,oBAAoB;AAClD,kBAAkB,MAAM,gDAAK,EAAE;AAC/B,eAAe,MAAM,iDAAM,EAAE;AAC7B,cAAc,MAAM,iDAAM,EAAE;AAC5B;AACA,eAAe,mDAAmD,+DAAwB;AAC1F,cAAc,oDAAS;AACvB,KAAK,iBAAiB,UAAU,MAAM,qDAAiB,EAAE,IAAI,MAAM,iDAAa,EAAE,IAAI;AACtF,sBAAsB,iDAAM;AAC5B;AACA,aAAa,GAAG,IAAI,IAAI;AACxB,kBAAkB,gDAAK;AACvB,SAAS;AACT,kBAAkB,iDAAM;AACxB,SAAS;AACT,kBAAkB,iDAAM;AACxB,SAAS;AACT,kBAAkB,gDAAK;AACvB,SAAS;AACT,kBAAkB,gDAAK;AACvB,SAAS;AACT,kBAAkB,gDAAK;AACvB,SAAS;AACT,kBAAkB,gDAAK;AACvB,SAAS;AACT,kBAAkB,gDAAK;AACvB;AACA,SAAS;AACT,kBAAkB,gDAAK;AACvB,SAAS;AACT,kBAAkB,0DAAe;AACjC,kCAAkC,mBAAmB;AACrD,SAAS;AACT,kBAAkB,gDAAK;AACvB;AACA,SAAS;AACT,kBAAkB,gDAAK;AACvB;AACA,SAAS;AACT,kBAAkB,gDAAK;AACvB;AACA,SAAS;AACT,kBAAkB,oDAAS;AAC3B,mBAAmB,sDAAW;AAC9B,SAAS;AACT,kBAAkB,0DAAe;AACjC,kCAAkC,oBAAoB;AACtD,SAAS;AACT,kBAAkB,uDAAY;AAC9B;AACA,SAAS,GAAG,IAAI;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,6CAA6C,0BAA0B,+DAAwB,CAAC,qDAAiB,GAAG,+DAAwB,CAAC,iDAAa,GAAG,+DAAwB;AACrL,6BAA6B,+DAAwB,GAAG,8GAA8G;AACtK,QAAQ,yDAAkB;AAC1B,OAAO,oCAAoC,gEAAyB;AACpE,cAAc,+CAA+C;AAC7D,YAAY,wEAAiC,kOAAkO;AAC/Q,QAAQ,6DAAsB;AAC9B,QAAQ,wDAAiB;AACzB,OAAO,eAAe,oDAAc,sBAAsB,aAAa,gBAAgB,gBAAgB,gBAAgB,cAAc,iCAAiC,8BAA8B,kBAAkB,UAAU,gBAAgB,6BAA6B,oBAAoB,0CAA0C,kBAAkB,8BAA8B,gBAAgB,mBAAmB,eAAe,yBAAyB,sBAAsB,qBAAqB,iBAAiB,eAAe,aAAa,YAAY,wCAAwC,mBAAmB,gBAAgB,uBAAuB,cAAc,iBAAiB,YAAY,eAAe,gBAAgB,qBAAqB,eAAe,kBAAkB,iCAAiC,SAAS,yBAAyB,eAAe,yBAAyB,iBAAiB,yBAAyB,kBAAkB,sBAAsB,6BAA6B,mBAAmB,mCAAmC,iBAAiB,eAAe,yBAAyB,oBAAoB,yCAAyC,eAAe,gLAAgL,mBAAmB,+BAA+B,mBAAmB,sCAAsC,QAAQ,SAAS,mBAAmB,2BAA2B,8DAA8D,aAAa,qBAAqB,kBAAkB,QAAQ,WAAW,2BAA2B,yCAAyC,mBAAmB,kBAAkB,gDAAgD,WAAW,UAAU,2CAA2C,qBAAqB,WAAW,gCAAgC,MAAM,OAAO,QAAQ,SAAS,kBAAkB,oBAAoB,gCAAgC;AAC7/D;AACA;AACA,WAAW,sBAAsB;AACjC;AACA,MAAM,MAAM,qDAAU,EAAE;AACxB,MAAM,MAAM,iDAAM,EAAE;AACpB,MAAM,gCAAgC,MAAM,iDAAM,qCAAqC;AACvF;AACA,eAAe,mDAAmD,+DAAwB;AAC1F,cAAc,oDAAS;AACvB;AACA;AACA;AACA,iCAAiC,yEAA8B;AAC/D,+BAA+B,iEAAsB;AACrD;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA,sBAAsB,+CAA+C;AACrE;AACA,mCAAmC,aAAa,gBAAgB,gBAAgB,gBAAgB,cAAc,iCAAiC,8BAA8B,kBAAkB,UAAU,gBAAgB,6BAA6B,oBAAoB,0CAA0C,kBAAkB,8BAA8B,gBAAgB,mBAAmB,eAAe,yBAAyB,sBAAsB,qBAAqB,iBAAiB,eAAe,aAAa,YAAY,wCAAwC,mBAAmB,gBAAgB,uBAAuB,cAAc,iBAAiB,YAAY,eAAe,gBAAgB,qBAAqB,eAAe,kBAAkB,iCAAiC,SAAS,yBAAyB,eAAe,yBAAyB,iBAAiB,yBAAyB,kBAAkB,sBAAsB,6BAA6B,mBAAmB,mCAAmC,iBAAiB,eAAe,yBAAyB,oBAAoB,yCAAyC,eAAe,gLAAgL,mBAAmB,+BAA+B,mBAAmB,sCAAsC,QAAQ,SAAS,mBAAmB,2BAA2B,8DAA8D,aAAa,qBAAqB,kBAAkB,QAAQ,WAAW,2BAA2B,yCAAyC,mBAAmB,kBAAkB,gDAAgD,WAAW,UAAU,2CAA2C,qBAAqB,WAAW,gCAAgC,MAAM,OAAO,QAAQ,SAAS,kBAAkB,oBAAoB;AACt8D,aAAa;AACb,KAAK,iBAAiB,UAAU,MAAM,qDAAiB,EAAE,IAAI,MAAM,iDAAa,EAAE,IAAI;AACtF,sBAAsB,iDAAM;AAC5B;AACA,aAAa,GAAG,IAAI,UAAU;;AAE9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC,yDAAc;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,0DAAO;AAClB;AACA;AACA;AACA;AACA;AACA,oCAAoC,uFAA+B,GAAG,eAAe;AACrF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2CAA2C,oDAAkB;AAC7D,kCAAkC,oDAAkB;AACpD,sCAAsC,oDAAkB;AACxD;AACA;AACA;AACA;AACA;AACA,iBAAiB,mFAAgC;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,uDAAY;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,uDAAY;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yCAAyC;AACzC;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B,uDAAM,qCAAqC,qDAAI;AACzE;AACA,gBAAgB,0DAAS;AACzB;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,gEAAa;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,+CAA+C;AAC7D,cAAc,kFAAkF;AAChG;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yFAAyF,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","sources":["./node_modules/@angular/material/__ivy_ngcc__/fesm2015/menu.js","./src/app/pages/customer-list/customer-list.component.ts","./src/app/pages/customer-list/customer-list.const.ts","./src/app/pages/customer-list/customer-list.service.ts","./src/app/pages/customer-list/customer-list.share.module.ts","./src/app/pages/share-components/activity-item/activity-item.component.ts","./src/app/pages/share-components/application-item/application-item.component.ts","./src/app/pages/share-components/common-list/common-list.component.ts","./src/app/pages/share-components/customer-item/customer-item.component.ts","./src/app/pages/share-components/lead-item/lead-item.component.ts","./src/app/pages/share-components/list-field.interface.ts","./src/app/pages/share-components/listing-directive.ts","./src/app/pages/share-components/listing-sort.pipe.ts","./src/app/pages/share-components/quotation-item/quotation-item.component.ts","./src/app/pages/share-components/share-component.module.ts","./src/app/pages/static-pages/pager/pager.component.ts","./src/app/pages/customer-list/customer-list.component.html","./src/app/pages/share-components/activity-item/activity-item.component.html","./src/app/pages/share-components/application-item/application-item.component.html","./src/app/pages/share-components/common-list/common-list.component.html","./src/app/pages/share-components/customer-item/customer-item.component.html","./src/app/pages/share-components/lead-item/lead-item.component.html","./src/app/pages/share-components/quotation-item/quotation-item.component.html","./src/app/pages/static-pages/pager/pager.component.html"],"sourcesContent":["import { FocusMonitor, FocusKeyManager, isFakeTouchstartFromScreenReader, isFakeMousedownFromScreenReader } from '@angular/cdk/a11y';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { UP_ARROW, DOWN_ARROW, RIGHT_ARROW, LEFT_ARROW, ESCAPE, hasModifierKey, ENTER, SPACE } from '@angular/cdk/keycodes';\nimport { InjectionToken, Directive, TemplateRef, ComponentFactoryResolver, ApplicationRef, Injector, ViewContainerRef, Inject, ChangeDetectorRef, Component, ChangeDetectionStrategy, ViewEncapsulation, ElementRef, Optional, Input, HostListener, QueryList, EventEmitter, NgZone, ContentChildren, ViewChild, ContentChild, Output, Self, NgModule } from '@angular/core';\nimport { Subject, Subscription, merge, of, asapScheduler } from 'rxjs';\nimport { startWith, switchMap, take, filter, takeUntil, delay } from 'rxjs/operators';\nimport { trigger, state, style, transition, animate } from '@angular/animations';\nimport { TemplatePortal, DomPortalOutlet } from '@angular/cdk/portal';\nimport { DOCUMENT, CommonModule } from '@angular/common';\nimport { mixinDisableRipple, mixinDisabled, MatCommonModule, MatRippleModule } from '@angular/material/core';\nimport { Directionality } from '@angular/cdk/bidi';\nimport { Overlay, OverlayConfig, OverlayModule } from '@angular/cdk/overlay';\nimport { normalizePassiveListenerOptions } from '@angular/cdk/platform';\nimport { CdkScrollableModule } from '@angular/cdk/scrolling';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Animations used by the mat-menu component.\n * Animation duration and timing values are based on:\n * https://material.io/guidelines/components/menus.html#menus-usage\n * @docs-private\n */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/a11y';\nimport * as ɵngcc2 from '@angular/material/core';\nimport * as ɵngcc3 from '@angular/common';\nimport * as ɵngcc4 from '@angular/cdk/overlay';\nimport * as ɵngcc5 from '@angular/cdk/bidi';\n\nconst _c0 = [\"mat-menu-item\", \"\"];\nconst _c1 = [\"*\"];\nfunction MatMenu_ng_template_0_Template(rf, ctx) { if (rf & 1) {\n    const _r2 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"div\", 0);\n    ɵngcc0.ɵɵlistener(\"keydown\", function MatMenu_ng_template_0_Template_div_keydown_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r2); const ctx_r1 = ɵngcc0.ɵɵnextContext(); return ctx_r1._handleKeydown($event); })(\"click\", function MatMenu_ng_template_0_Template_div_click_0_listener() { ɵngcc0.ɵɵrestoreView(_r2); const ctx_r3 = ɵngcc0.ɵɵnextContext(); return ctx_r3.closed.emit(\"click\"); })(\"@transformMenu.start\", function MatMenu_ng_template_0_Template_div_animation_transformMenu_start_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r2); const ctx_r4 = ɵngcc0.ɵɵnextContext(); return ctx_r4._onAnimationStart($event); })(\"@transformMenu.done\", function MatMenu_ng_template_0_Template_div_animation_transformMenu_done_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r2); const ctx_r5 = ɵngcc0.ɵɵnextContext(); return ctx_r5._onAnimationDone($event); });\n    ɵngcc0.ɵɵelementStart(1, \"div\", 1);\n    ɵngcc0.ɵɵprojection(2);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"id\", ctx_r0.panelId)(\"ngClass\", ctx_r0._classList)(\"@transformMenu\", ctx_r0._panelAnimationState);\n    ɵngcc0.ɵɵattribute(\"aria-label\", ctx_r0.ariaLabel || null)(\"aria-labelledby\", ctx_r0.ariaLabelledby || null)(\"aria-describedby\", ctx_r0.ariaDescribedby || null);\n} }\nconst matMenuAnimations = {\n    /**\n     * This animation controls the menu panel's entry and exit from the page.\n     *\n     * When the menu panel is added to the DOM, it scales in and fades in its border.\n     *\n     * When the menu panel is removed from the DOM, it simply fades out after a brief\n     * delay to display the ripple.\n     */\n    transformMenu: trigger('transformMenu', [\n        state('void', style({\n            opacity: 0,\n            transform: 'scale(0.8)'\n        })),\n        transition('void => enter', animate('120ms cubic-bezier(0, 0, 0.2, 1)', style({\n            opacity: 1,\n            transform: 'scale(1)'\n        }))),\n        transition('* => void', animate('100ms 25ms linear', style({ opacity: 0 })))\n    ]),\n    /**\n     * This animation fades in the background color and content of the menu panel\n     * after its containing element is scaled in.\n     */\n    fadeInItems: trigger('fadeInItems', [\n        // TODO(crisbeto): this is inside the `transformMenu`\n        // now. Remove next time we do breaking changes.\n        state('showing', style({ opacity: 1 })),\n        transition('void => *', [\n            style({ opacity: 0 }),\n            animate('400ms 100ms cubic-bezier(0.55, 0, 0.55, 0.2)')\n        ])\n    ])\n};\n/**\n * @deprecated\n * @breaking-change 8.0.0\n * @docs-private\n */\nconst fadeInItems = matMenuAnimations.fadeInItems;\n/**\n * @deprecated\n * @breaking-change 8.0.0\n * @docs-private\n */\nconst transformMenu = matMenuAnimations.transformMenu;\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Injection token that can be used to reference instances of `MatMenuContent`. It serves\n * as alternative token to the actual `MatMenuContent` class which could cause unnecessary\n * retention of the class and its directive metadata.\n */\nconst MAT_MENU_CONTENT = new InjectionToken('MatMenuContent');\n/**\n * Menu content that will be rendered lazily once the menu is opened.\n */\nclass MatMenuContent {\n    constructor(_template, _componentFactoryResolver, _appRef, _injector, _viewContainerRef, _document, _changeDetectorRef) {\n        this._template = _template;\n        this._componentFactoryResolver = _componentFactoryResolver;\n        this._appRef = _appRef;\n        this._injector = _injector;\n        this._viewContainerRef = _viewContainerRef;\n        this._document = _document;\n        this._changeDetectorRef = _changeDetectorRef;\n        /** Emits when the menu content has been attached. */\n        this._attached = new Subject();\n    }\n    /**\n     * Attaches the content with a particular context.\n     * @docs-private\n     */\n    attach(context = {}) {\n        if (!this._portal) {\n            this._portal = new TemplatePortal(this._template, this._viewContainerRef);\n        }\n        this.detach();\n        if (!this._outlet) {\n            this._outlet = new DomPortalOutlet(this._document.createElement('div'), this._componentFactoryResolver, this._appRef, this._injector);\n        }\n        const element = this._template.elementRef.nativeElement;\n        // Because we support opening the same menu from different triggers (which in turn have their\n        // own `OverlayRef` panel), we have to re-insert the host element every time, otherwise we\n        // risk it staying attached to a pane that's no longer in the DOM.\n        element.parentNode.insertBefore(this._outlet.outletElement, element);\n        // When `MatMenuContent` is used in an `OnPush` component, the insertion of the menu\n        // content via `createEmbeddedView` does not cause the content to be seen as \"dirty\"\n        // by Angular. This causes the `@ContentChildren` for menu items within the menu to\n        // not be updated by Angular. By explicitly marking for check here, we tell Angular that\n        // it needs to check for new menu items and update the `@ContentChild` in `MatMenu`.\n        // @breaking-change 9.0.0 Make change detector ref required\n        if (this._changeDetectorRef) {\n            this._changeDetectorRef.markForCheck();\n        }\n        this._portal.attach(this._outlet, context);\n        this._attached.next();\n    }\n    /**\n     * Detaches the content.\n     * @docs-private\n     */\n    detach() {\n        if (this._portal.isAttached) {\n            this._portal.detach();\n        }\n    }\n    ngOnDestroy() {\n        if (this._outlet) {\n            this._outlet.dispose();\n        }\n    }\n}\nMatMenuContent.ɵfac = function MatMenuContent_Factory(t) { return new (t || MatMenuContent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.TemplateRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ComponentFactoryResolver), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ApplicationRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Injector), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ViewContainerRef), ɵngcc0.ɵɵdirectiveInject(DOCUMENT), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef)); };\nMatMenuContent.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: MatMenuContent, selectors: [[\"ng-template\", \"matMenuContent\", \"\"]], features: [ɵngcc0.ɵɵProvidersFeature([{ provide: MAT_MENU_CONTENT, useExisting: MatMenuContent }])] });\nMatMenuContent.ctorParameters = () => [\n    { type: TemplateRef },\n    { type: ComponentFactoryResolver },\n    { type: ApplicationRef },\n    { type: Injector },\n    { type: ViewContainerRef },\n    { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] },\n    { type: ChangeDetectorRef }\n];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatMenuContent, [{\n        type: Directive,\n        args: [{\n                selector: 'ng-template[matMenuContent]',\n                providers: [{ provide: MAT_MENU_CONTENT, useExisting: MatMenuContent }]\n            }]\n    }], function () { return [{ type: ɵngcc0.TemplateRef }, { type: ɵngcc0.ComponentFactoryResolver }, { type: ɵngcc0.ApplicationRef }, { type: ɵngcc0.Injector }, { type: ɵngcc0.ViewContainerRef }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [DOCUMENT]\n            }] }, { type: ɵngcc0.ChangeDetectorRef }]; }, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Throws an exception for the case when menu trigger doesn't have a valid mat-menu instance\n * @docs-private\n */\nfunction throwMatMenuMissingError() {\n    throw Error(`matMenuTriggerFor: must pass in an mat-menu instance.\n\n    Example:\n      <mat-menu #menu=\"matMenu\"></mat-menu>\n      <button [matMenuTriggerFor]=\"menu\"></button>`);\n}\n/**\n * Throws an exception for the case when menu's x-position value isn't valid.\n * In other words, it doesn't match 'before' or 'after'.\n * @docs-private\n */\nfunction throwMatMenuInvalidPositionX() {\n    throw Error(`xPosition value must be either 'before' or after'.\n      Example: <mat-menu xPosition=\"before\" #menu=\"matMenu\"></mat-menu>`);\n}\n/**\n * Throws an exception for the case when menu's y-position value isn't valid.\n * In other words, it doesn't match 'above' or 'below'.\n * @docs-private\n */\nfunction throwMatMenuInvalidPositionY() {\n    throw Error(`yPosition value must be either 'above' or below'.\n      Example: <mat-menu yPosition=\"above\" #menu=\"matMenu\"></mat-menu>`);\n}\n/**\n * Throws an exception for the case when a menu is assigned\n * to a trigger that is placed inside the same menu.\n * @docs-private\n */\nfunction throwMatMenuRecursiveError() {\n    throw Error(`matMenuTriggerFor: menu cannot contain its own trigger. Assign a menu that is ` +\n        `not a parent of the trigger or move the trigger outside of the menu.`);\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Injection token used to provide the parent menu to menu-specific components.\n * @docs-private\n */\nconst MAT_MENU_PANEL = new InjectionToken('MAT_MENU_PANEL');\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// Boilerplate for applying mixins to MatMenuItem.\n/** @docs-private */\nclass MatMenuItemBase {\n}\nconst _MatMenuItemMixinBase = mixinDisableRipple(mixinDisabled(MatMenuItemBase));\n/**\n * Single item inside of a `mat-menu`. Provides the menu item styling and accessibility treatment.\n */\nclass MatMenuItem extends _MatMenuItemMixinBase {\n    constructor(_elementRef, \n    /**\n     * @deprecated `_document` parameter is no longer being used and will be removed.\n     * @breaking-change 12.0.0\n     */\n    _document, _focusMonitor, _parentMenu) {\n        // @breaking-change 8.0.0 make `_focusMonitor` and `document` required params.\n        super();\n        this._elementRef = _elementRef;\n        this._focusMonitor = _focusMonitor;\n        this._parentMenu = _parentMenu;\n        /** ARIA role for the menu item. */\n        this.role = 'menuitem';\n        /** Stream that emits when the menu item is hovered. */\n        this._hovered = new Subject();\n        /** Stream that emits when the menu item is focused. */\n        this._focused = new Subject();\n        /** Whether the menu item is highlighted. */\n        this._highlighted = false;\n        /** Whether the menu item acts as a trigger for a sub-menu. */\n        this._triggersSubmenu = false;\n        if (_parentMenu && _parentMenu.addItem) {\n            _parentMenu.addItem(this);\n        }\n    }\n    /** Focuses the menu item. */\n    focus(origin, options) {\n        if (this._focusMonitor && origin) {\n            this._focusMonitor.focusVia(this._getHostElement(), origin, options);\n        }\n        else {\n            this._getHostElement().focus(options);\n        }\n        this._focused.next(this);\n    }\n    ngAfterViewInit() {\n        if (this._focusMonitor) {\n            // Start monitoring the element so it gets the appropriate focused classes. We want\n            // to show the focus style for menu items only when the focus was not caused by a\n            // mouse or touch interaction.\n            this._focusMonitor.monitor(this._elementRef, false);\n        }\n    }\n    ngOnDestroy() {\n        if (this._focusMonitor) {\n            this._focusMonitor.stopMonitoring(this._elementRef);\n        }\n        if (this._parentMenu && this._parentMenu.removeItem) {\n            this._parentMenu.removeItem(this);\n        }\n        this._hovered.complete();\n        this._focused.complete();\n    }\n    /** Used to set the `tabindex`. */\n    _getTabIndex() {\n        return this.disabled ? '-1' : '0';\n    }\n    /** Returns the host DOM element. */\n    _getHostElement() {\n        return this._elementRef.nativeElement;\n    }\n    /** Prevents the default element actions if it is disabled. */\n    // We have to use a `HostListener` here in order to support both Ivy and ViewEngine.\n    // In Ivy the `host` bindings will be merged when this class is extended, whereas in\n    // ViewEngine they're overwritten.\n    // TODO(crisbeto): we move this back into `host` once Ivy is turned on by default.\n    // tslint:disable-next-line:no-host-decorator-in-concrete\n    _checkDisabled(event) {\n        if (this.disabled) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n    }\n    /** Emits to the hover stream. */\n    // We have to use a `HostListener` here in order to support both Ivy and ViewEngine.\n    // In Ivy the `host` bindings will be merged when this class is extended, whereas in\n    // ViewEngine they're overwritten.\n    // TODO(crisbeto): we move this back into `host` once Ivy is turned on by default.\n    // tslint:disable-next-line:no-host-decorator-in-concrete\n    _handleMouseEnter() {\n        this._hovered.next(this);\n    }\n    /** Gets the label to be used when determining whether the option should be focused. */\n    getLabel() {\n        var _a, _b;\n        const clone = this._elementRef.nativeElement.cloneNode(true);\n        const icons = clone.querySelectorAll('mat-icon, .material-icons');\n        // Strip away icons so they don't show up in the text.\n        for (let i = 0; i < icons.length; i++) {\n            const icon = icons[i];\n            (_a = icon.parentNode) === null || _a === void 0 ? void 0 : _a.removeChild(icon);\n        }\n        return ((_b = clone.textContent) === null || _b === void 0 ? void 0 : _b.trim()) || '';\n    }\n}\nMatMenuItem.ɵfac = function MatMenuItem_Factory(t) { return new (t || MatMenuItem)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(DOCUMENT), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.FocusMonitor), ɵngcc0.ɵɵdirectiveInject(MAT_MENU_PANEL, 8)); };\nMatMenuItem.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: MatMenuItem, selectors: [[\"\", \"mat-menu-item\", \"\"]], hostAttrs: [1, \"mat-focus-indicator\"], hostVars: 10, hostBindings: function MatMenuItem_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"click\", function MatMenuItem_click_HostBindingHandler($event) { return ctx._checkDisabled($event); })(\"mouseenter\", function MatMenuItem_mouseenter_HostBindingHandler() { return ctx._handleMouseEnter(); });\n    } if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"role\", ctx.role)(\"tabindex\", ctx._getTabIndex())(\"aria-disabled\", ctx.disabled.toString())(\"disabled\", ctx.disabled || null);\n        ɵngcc0.ɵɵclassProp(\"mat-menu-item\", true)(\"mat-menu-item-highlighted\", ctx._highlighted)(\"mat-menu-item-submenu-trigger\", ctx._triggersSubmenu);\n    } }, inputs: { disabled: \"disabled\", disableRipple: \"disableRipple\", role: \"role\" }, exportAs: [\"matMenuItem\"], features: [ɵngcc0.ɵɵInheritDefinitionFeature], attrs: _c0, ngContentSelectors: _c1, decls: 2, vars: 2, consts: [[\"matRipple\", \"\", 1, \"mat-menu-ripple\", 3, \"matRippleDisabled\", \"matRippleTrigger\"]], template: function MatMenuItem_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵprojection(0);\n        ɵngcc0.ɵɵelement(1, \"div\", 0);\n    } if (rf & 2) {\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"matRippleDisabled\", ctx.disableRipple || ctx.disabled)(\"matRippleTrigger\", ctx._getHostElement());\n    } }, directives: [ɵngcc2.MatRipple], encapsulation: 2, changeDetection: 0 });\nMatMenuItem.ctorParameters = () => [\n    { type: ElementRef },\n    { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] },\n    { type: FocusMonitor },\n    { type: undefined, decorators: [{ type: Inject, args: [MAT_MENU_PANEL,] }, { type: Optional }] }\n];\nMatMenuItem.propDecorators = {\n    role: [{ type: Input }],\n    _checkDisabled: [{ type: HostListener, args: ['click', ['$event'],] }],\n    _handleMouseEnter: [{ type: HostListener, args: ['mouseenter',] }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatMenuItem, [{\n        type: Component,\n        args: [{\n                selector: '[mat-menu-item]',\n                exportAs: 'matMenuItem',\n                inputs: ['disabled', 'disableRipple'],\n                host: {\n                    '[attr.role]': 'role',\n                    '[class.mat-menu-item]': 'true',\n                    '[class.mat-menu-item-highlighted]': '_highlighted',\n                    '[class.mat-menu-item-submenu-trigger]': '_triggersSubmenu',\n                    '[attr.tabindex]': '_getTabIndex()',\n                    '[attr.aria-disabled]': 'disabled.toString()',\n                    '[attr.disabled]': 'disabled || null',\n                    'class': 'mat-focus-indicator'\n                },\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                encapsulation: ViewEncapsulation.None,\n                template: \"<ng-content></ng-content>\\n<div class=\\\"mat-menu-ripple\\\" matRipple\\n     [matRippleDisabled]=\\\"disableRipple || disabled\\\"\\n     [matRippleTrigger]=\\\"_getHostElement()\\\">\\n</div>\\n\"\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [DOCUMENT]\n            }] }, { type: ɵngcc1.FocusMonitor }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [MAT_MENU_PANEL]\n            }, {\n                type: Optional\n            }] }]; }, { role: [{\n            type: Input\n        }], \n    /** Prevents the default element actions if it is disabled. */\n    // We have to use a `HostListener` here in order to support both Ivy and ViewEngine.\n    // In Ivy the `host` bindings will be merged when this class is extended, whereas in\n    // ViewEngine they're overwritten.\n    // TODO(crisbeto): we move this back into `host` once Ivy is turned on by default.\n    // tslint:disable-next-line:no-host-decorator-in-concrete\n    _checkDisabled: [{\n            type: HostListener,\n            args: ['click', ['$event']]\n        }], \n    /** Emits to the hover stream. */\n    // We have to use a `HostListener` here in order to support both Ivy and ViewEngine.\n    // In Ivy the `host` bindings will be merged when this class is extended, whereas in\n    // ViewEngine they're overwritten.\n    // TODO(crisbeto): we move this back into `host` once Ivy is turned on by default.\n    // tslint:disable-next-line:no-host-decorator-in-concrete\n    _handleMouseEnter: [{\n            type: HostListener,\n            args: ['mouseenter']\n        }] }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Injection token to be used to override the default options for `mat-menu`. */\nconst MAT_MENU_DEFAULT_OPTIONS = new InjectionToken('mat-menu-default-options', {\n    providedIn: 'root',\n    factory: MAT_MENU_DEFAULT_OPTIONS_FACTORY\n});\n/** @docs-private */\nfunction MAT_MENU_DEFAULT_OPTIONS_FACTORY() {\n    return {\n        overlapTrigger: false,\n        xPosition: 'after',\n        yPosition: 'below',\n        backdropClass: 'cdk-overlay-transparent-backdrop',\n    };\n}\n/**\n * Start elevation for the menu panel.\n * @docs-private\n */\nconst MAT_MENU_BASE_ELEVATION = 4;\nlet menuPanelUid = 0;\n/** Base class with all of the `MatMenu` functionality. */\nclass _MatMenuBase {\n    constructor(_elementRef, _ngZone, _defaultOptions) {\n        this._elementRef = _elementRef;\n        this._ngZone = _ngZone;\n        this._defaultOptions = _defaultOptions;\n        this._xPosition = this._defaultOptions.xPosition;\n        this._yPosition = this._defaultOptions.yPosition;\n        /** Only the direct descendant menu items. */\n        this._directDescendantItems = new QueryList();\n        /** Subscription to tab events on the menu panel */\n        this._tabSubscription = Subscription.EMPTY;\n        /** Config object to be passed into the menu's ngClass */\n        this._classList = {};\n        /** Current state of the panel animation. */\n        this._panelAnimationState = 'void';\n        /** Emits whenever an animation on the menu completes. */\n        this._animationDone = new Subject();\n        /** Class or list of classes to be added to the overlay panel. */\n        this.overlayPanelClass = this._defaultOptions.overlayPanelClass || '';\n        /** Class to be added to the backdrop element. */\n        this.backdropClass = this._defaultOptions.backdropClass;\n        this._overlapTrigger = this._defaultOptions.overlapTrigger;\n        this._hasBackdrop = this._defaultOptions.hasBackdrop;\n        /** Event emitted when the menu is closed. */\n        this.closed = new EventEmitter();\n        /**\n         * Event emitted when the menu is closed.\n         * @deprecated Switch to `closed` instead\n         * @breaking-change 8.0.0\n         */\n        this.close = this.closed;\n        this.panelId = `mat-menu-panel-${menuPanelUid++}`;\n    }\n    /** Position of the menu in the X axis. */\n    get xPosition() { return this._xPosition; }\n    set xPosition(value) {\n        if (value !== 'before' && value !== 'after' &&\n            (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throwMatMenuInvalidPositionX();\n        }\n        this._xPosition = value;\n        this.setPositionClasses();\n    }\n    /** Position of the menu in the Y axis. */\n    get yPosition() { return this._yPosition; }\n    set yPosition(value) {\n        if (value !== 'above' && value !== 'below' && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throwMatMenuInvalidPositionY();\n        }\n        this._yPosition = value;\n        this.setPositionClasses();\n    }\n    /** Whether the menu should overlap its trigger. */\n    get overlapTrigger() { return this._overlapTrigger; }\n    set overlapTrigger(value) {\n        this._overlapTrigger = coerceBooleanProperty(value);\n    }\n    /** Whether the menu has a backdrop. */\n    get hasBackdrop() { return this._hasBackdrop; }\n    set hasBackdrop(value) {\n        this._hasBackdrop = coerceBooleanProperty(value);\n    }\n    /**\n     * This method takes classes set on the host mat-menu element and applies them on the\n     * menu template that displays in the overlay container.  Otherwise, it's difficult\n     * to style the containing menu from outside the component.\n     * @param classes list of class names\n     */\n    set panelClass(classes) {\n        const previousPanelClass = this._previousPanelClass;\n        if (previousPanelClass && previousPanelClass.length) {\n            previousPanelClass.split(' ').forEach((className) => {\n                this._classList[className] = false;\n            });\n        }\n        this._previousPanelClass = classes;\n        if (classes && classes.length) {\n            classes.split(' ').forEach((className) => {\n                this._classList[className] = true;\n            });\n            this._elementRef.nativeElement.className = '';\n        }\n    }\n    /**\n     * This method takes classes set on the host mat-menu element and applies them on the\n     * menu template that displays in the overlay container.  Otherwise, it's difficult\n     * to style the containing menu from outside the component.\n     * @deprecated Use `panelClass` instead.\n     * @breaking-change 8.0.0\n     */\n    get classList() { return this.panelClass; }\n    set classList(classes) { this.panelClass = classes; }\n    ngOnInit() {\n        this.setPositionClasses();\n    }\n    ngAfterContentInit() {\n        this._updateDirectDescendants();\n        this._keyManager = new FocusKeyManager(this._directDescendantItems)\n            .withWrap()\n            .withTypeAhead()\n            .withHomeAndEnd();\n        this._tabSubscription = this._keyManager.tabOut.subscribe(() => this.closed.emit('tab'));\n        // If a user manually (programmatically) focuses a menu item, we need to reflect that focus\n        // change back to the key manager. Note that we don't need to unsubscribe here because _focused\n        // is internal and we know that it gets completed on destroy.\n        this._directDescendantItems.changes.pipe(startWith(this._directDescendantItems), switchMap(items => merge(...items.map((item) => item._focused)))).subscribe(focusedItem => this._keyManager.updateActiveItem(focusedItem));\n    }\n    ngOnDestroy() {\n        this._directDescendantItems.destroy();\n        this._tabSubscription.unsubscribe();\n        this.closed.complete();\n    }\n    /** Stream that emits whenever the hovered menu item changes. */\n    _hovered() {\n        // Coerce the `changes` property because Angular types it as `Observable<any>`\n        const itemChanges = this._directDescendantItems.changes;\n        return itemChanges.pipe(startWith(this._directDescendantItems), switchMap(items => merge(...items.map((item) => item._hovered))));\n    }\n    /*\n     * Registers a menu item with the menu.\n     * @docs-private\n     * @deprecated No longer being used. To be removed.\n     * @breaking-change 9.0.0\n     */\n    addItem(_item) { }\n    /**\n     * Removes an item from the menu.\n     * @docs-private\n     * @deprecated No longer being used. To be removed.\n     * @breaking-change 9.0.0\n     */\n    removeItem(_item) { }\n    /** Handle a keyboard event from the menu, delegating to the appropriate action. */\n    _handleKeydown(event) {\n        const keyCode = event.keyCode;\n        const manager = this._keyManager;\n        switch (keyCode) {\n            case ESCAPE:\n                if (!hasModifierKey(event)) {\n                    event.preventDefault();\n                    this.closed.emit('keydown');\n                }\n                break;\n            case LEFT_ARROW:\n                if (this.parentMenu && this.direction === 'ltr') {\n                    this.closed.emit('keydown');\n                }\n                break;\n            case RIGHT_ARROW:\n                if (this.parentMenu && this.direction === 'rtl') {\n                    this.closed.emit('keydown');\n                }\n                break;\n            default:\n                if (keyCode === UP_ARROW || keyCode === DOWN_ARROW) {\n                    manager.setFocusOrigin('keyboard');\n                }\n                manager.onKeydown(event);\n        }\n    }\n    /**\n     * Focus the first item in the menu.\n     * @param origin Action from which the focus originated. Used to set the correct styling.\n     */\n    focusFirstItem(origin = 'program') {\n        // When the content is rendered lazily, it takes a bit before the items are inside the DOM.\n        if (this.lazyContent) {\n            this._ngZone.onStable\n                .pipe(take(1))\n                .subscribe(() => this._focusFirstItem(origin));\n        }\n        else {\n            this._focusFirstItem(origin);\n        }\n    }\n    /**\n     * Actual implementation that focuses the first item. Needs to be separated\n     * out so we don't repeat the same logic in the public `focusFirstItem` method.\n     */\n    _focusFirstItem(origin) {\n        const manager = this._keyManager;\n        manager.setFocusOrigin(origin).setFirstItemActive();\n        // If there's no active item at this point, it means that all the items are disabled.\n        // Move focus to the menu panel so keyboard events like Escape still work. Also this will\n        // give _some_ feedback to screen readers.\n        if (!manager.activeItem && this._directDescendantItems.length) {\n            let element = this._directDescendantItems.first._getHostElement().parentElement;\n            // Because the `mat-menu` is at the DOM insertion point, not inside the overlay, we don't\n            // have a nice way of getting a hold of the menu panel. We can't use a `ViewChild` either\n            // because the panel is inside an `ng-template`. We work around it by starting from one of\n            // the items and walking up the DOM.\n            while (element) {\n                if (element.getAttribute('role') === 'menu') {\n                    element.focus();\n                    break;\n                }\n                else {\n                    element = element.parentElement;\n                }\n            }\n        }\n    }\n    /**\n     * Resets the active item in the menu. This is used when the menu is opened, allowing\n     * the user to start from the first option when pressing the down arrow.\n     */\n    resetActiveItem() {\n        this._keyManager.setActiveItem(-1);\n    }\n    /**\n     * Sets the menu panel elevation.\n     * @param depth Number of parent menus that come before the menu.\n     */\n    setElevation(depth) {\n        // The elevation starts at the base and increases by one for each level.\n        // Capped at 24 because that's the maximum elevation defined in the Material design spec.\n        const elevation = Math.min(MAT_MENU_BASE_ELEVATION + depth, 24);\n        const newElevation = `mat-elevation-z${elevation}`;\n        const customElevation = Object.keys(this._classList).find(c => c.startsWith('mat-elevation-z'));\n        if (!customElevation || customElevation === this._previousElevation) {\n            if (this._previousElevation) {\n                this._classList[this._previousElevation] = false;\n            }\n            this._classList[newElevation] = true;\n            this._previousElevation = newElevation;\n        }\n    }\n    /**\n     * Adds classes to the menu panel based on its position. Can be used by\n     * consumers to add specific styling based on the position.\n     * @param posX Position of the menu along the x axis.\n     * @param posY Position of the menu along the y axis.\n     * @docs-private\n     */\n    setPositionClasses(posX = this.xPosition, posY = this.yPosition) {\n        const classes = this._classList;\n        classes['mat-menu-before'] = posX === 'before';\n        classes['mat-menu-after'] = posX === 'after';\n        classes['mat-menu-above'] = posY === 'above';\n        classes['mat-menu-below'] = posY === 'below';\n    }\n    /** Starts the enter animation. */\n    _startAnimation() {\n        // @breaking-change 8.0.0 Combine with _resetAnimation.\n        this._panelAnimationState = 'enter';\n    }\n    /** Resets the panel animation to its initial state. */\n    _resetAnimation() {\n        // @breaking-change 8.0.0 Combine with _startAnimation.\n        this._panelAnimationState = 'void';\n    }\n    /** Callback that is invoked when the panel animation completes. */\n    _onAnimationDone(event) {\n        this._animationDone.next(event);\n        this._isAnimating = false;\n    }\n    _onAnimationStart(event) {\n        this._isAnimating = true;\n        // Scroll the content element to the top as soon as the animation starts. This is necessary,\n        // because we move focus to the first item while it's still being animated, which can throw\n        // the browser off when it determines the scroll position. Alternatively we can move focus\n        // when the animation is done, however moving focus asynchronously will interrupt screen\n        // readers which are in the process of reading out the menu already. We take the `element`\n        // from the `event` since we can't use a `ViewChild` to access the pane.\n        if (event.toState === 'enter' && this._keyManager.activeItemIndex === 0) {\n            event.element.scrollTop = 0;\n        }\n    }\n    /**\n     * Sets up a stream that will keep track of any newly-added menu items and will update the list\n     * of direct descendants. We collect the descendants this way, because `_allItems` can include\n     * items that are part of child menus, and using a custom way of registering items is unreliable\n     * when it comes to maintaining the item order.\n     */\n    _updateDirectDescendants() {\n        this._allItems.changes\n            .pipe(startWith(this._allItems))\n            .subscribe((items) => {\n            this._directDescendantItems.reset(items.filter(item => item._parentMenu === this));\n            this._directDescendantItems.notifyOnChanges();\n        });\n    }\n}\n_MatMenuBase.ɵfac = function _MatMenuBase_Factory(t) { return new (t || _MatMenuBase)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(MAT_MENU_DEFAULT_OPTIONS)); };\n_MatMenuBase.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: _MatMenuBase, contentQueries: function _MatMenuBase_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MAT_MENU_CONTENT, 5);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatMenuItem, 5);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatMenuItem, 4);\n    } if (rf & 2) {\n        let _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.lazyContent = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._allItems = _t);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.items = _t);\n    } }, viewQuery: function _MatMenuBase_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(TemplateRef, 5);\n    } if (rf & 2) {\n        let _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.templateRef = _t.first);\n    } }, inputs: { backdropClass: \"backdropClass\", xPosition: \"xPosition\", yPosition: \"yPosition\", overlapTrigger: \"overlapTrigger\", hasBackdrop: \"hasBackdrop\", panelClass: [\"class\", \"panelClass\"], classList: \"classList\", ariaLabel: [\"aria-label\", \"ariaLabel\"], ariaLabelledby: [\"aria-labelledby\", \"ariaLabelledby\"], ariaDescribedby: [\"aria-describedby\", \"ariaDescribedby\"] }, outputs: { closed: \"closed\", close: \"close\" } });\n_MatMenuBase.ctorParameters = () => [\n    { type: ElementRef },\n    { type: NgZone },\n    { type: undefined, decorators: [{ type: Inject, args: [MAT_MENU_DEFAULT_OPTIONS,] }] }\n];\n_MatMenuBase.propDecorators = {\n    _allItems: [{ type: ContentChildren, args: [MatMenuItem, { descendants: true },] }],\n    backdropClass: [{ type: Input }],\n    ariaLabel: [{ type: Input, args: ['aria-label',] }],\n    ariaLabelledby: [{ type: Input, args: ['aria-labelledby',] }],\n    ariaDescribedby: [{ type: Input, args: ['aria-describedby',] }],\n    xPosition: [{ type: Input }],\n    yPosition: [{ type: Input }],\n    templateRef: [{ type: ViewChild, args: [TemplateRef,] }],\n    items: [{ type: ContentChildren, args: [MatMenuItem, { descendants: false },] }],\n    lazyContent: [{ type: ContentChild, args: [MAT_MENU_CONTENT,] }],\n    overlapTrigger: [{ type: Input }],\n    hasBackdrop: [{ type: Input }],\n    panelClass: [{ type: Input, args: ['class',] }],\n    classList: [{ type: Input }],\n    closed: [{ type: Output }],\n    close: [{ type: Output }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(_MatMenuBase, [{\n        type: Directive\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc0.NgZone }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [MAT_MENU_DEFAULT_OPTIONS]\n            }] }]; }, { backdropClass: [{\n            type: Input\n        }], closed: [{\n            type: Output\n        }], close: [{\n            type: Output\n        }], xPosition: [{\n            type: Input\n        }], yPosition: [{\n            type: Input\n        }], overlapTrigger: [{\n            type: Input\n        }], hasBackdrop: [{\n            type: Input\n        }], panelClass: [{\n            type: Input,\n            args: ['class']\n        }], classList: [{\n            type: Input\n        }], _allItems: [{\n            type: ContentChildren,\n            args: [MatMenuItem, { descendants: true }]\n        }], ariaLabel: [{\n            type: Input,\n            args: ['aria-label']\n        }], ariaLabelledby: [{\n            type: Input,\n            args: ['aria-labelledby']\n        }], ariaDescribedby: [{\n            type: Input,\n            args: ['aria-describedby']\n        }], templateRef: [{\n            type: ViewChild,\n            args: [TemplateRef]\n        }], items: [{\n            type: ContentChildren,\n            args: [MatMenuItem, { descendants: false }]\n        }], lazyContent: [{\n            type: ContentChild,\n            args: [MAT_MENU_CONTENT]\n        }] }); })();\n/** @docs-public MatMenu */\nclass MatMenu extends _MatMenuBase {\n    constructor(elementRef, ngZone, defaultOptions) {\n        super(elementRef, ngZone, defaultOptions);\n    }\n}\nMatMenu.ɵfac = function MatMenu_Factory(t) { return new (t || MatMenu)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(MAT_MENU_DEFAULT_OPTIONS)); };\nMatMenu.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: MatMenu, selectors: [[\"mat-menu\"]], hostVars: 3, hostBindings: function MatMenu_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"aria-label\", null)(\"aria-labelledby\", null)(\"aria-describedby\", null);\n    } }, exportAs: [\"matMenu\"], features: [ɵngcc0.ɵɵProvidersFeature([\n            { provide: MAT_MENU_PANEL, useExisting: MatMenu },\n        ]), ɵngcc0.ɵɵInheritDefinitionFeature], ngContentSelectors: _c1, decls: 1, vars: 0, consts: [[\"tabindex\", \"-1\", \"role\", \"menu\", 1, \"mat-menu-panel\", 3, \"id\", \"ngClass\", \"keydown\", \"click\"], [1, \"mat-menu-content\"]], template: function MatMenu_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵtemplate(0, MatMenu_ng_template_0_Template, 3, 6, \"ng-template\");\n    } }, directives: [ɵngcc3.NgClass], styles: [\"mat-menu{display:none}.mat-menu-panel{min-width:112px;max-width:280px;overflow:auto;-webkit-overflow-scrolling:touch;max-height:calc(100vh - 48px);border-radius:4px;outline:0;min-height:64px}.mat-menu-panel.ng-animating{pointer-events:none}.cdk-high-contrast-active .mat-menu-panel{outline:solid 1px}.mat-menu-content:not(:empty){padding-top:8px;padding-bottom:8px}.mat-menu-item{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:pointer;outline:none;border:none;-webkit-tap-highlight-color:transparent;white-space:nowrap;overflow:hidden;text-overflow:ellipsis;display:block;line-height:48px;height:48px;padding:0 16px;text-align:left;text-decoration:none;max-width:100%;position:relative}.mat-menu-item::-moz-focus-inner{border:0}.mat-menu-item[disabled]{cursor:default}[dir=rtl] .mat-menu-item{text-align:right}.mat-menu-item .mat-icon{margin-right:16px;vertical-align:middle}.mat-menu-item .mat-icon svg{vertical-align:top}[dir=rtl] .mat-menu-item .mat-icon{margin-left:16px;margin-right:0}.mat-menu-item[disabled]{pointer-events:none}.cdk-high-contrast-active .mat-menu-item{margin-top:1px}.cdk-high-contrast-active .mat-menu-item.cdk-program-focused,.cdk-high-contrast-active .mat-menu-item.cdk-keyboard-focused,.cdk-high-contrast-active .mat-menu-item-highlighted{outline:dotted 1px}.mat-menu-item-submenu-trigger{padding-right:32px}.mat-menu-item-submenu-trigger::after{width:0;height:0;border-style:solid;border-width:5px 0 5px 5px;border-color:transparent transparent transparent currentColor;content:\\\"\\\";display:inline-block;position:absolute;top:50%;right:16px;transform:translateY(-50%)}[dir=rtl] .mat-menu-item-submenu-trigger{padding-right:16px;padding-left:32px}[dir=rtl] .mat-menu-item-submenu-trigger::after{right:auto;left:16px;transform:rotateY(180deg) translateY(-50%)}button.mat-menu-item{width:100%}.mat-menu-item .mat-menu-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}\\n\"], encapsulation: 2, data: { animation: [\n            matMenuAnimations.transformMenu,\n            matMenuAnimations.fadeInItems\n        ] }, changeDetection: 0 });\nMatMenu.ctorParameters = () => [\n    { type: ElementRef },\n    { type: NgZone },\n    { type: undefined, decorators: [{ type: Inject, args: [MAT_MENU_DEFAULT_OPTIONS,] }] }\n];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatMenu, [{\n        type: Component,\n        args: [{\n                selector: 'mat-menu',\n                template: \"<ng-template>\\n  <div\\n    class=\\\"mat-menu-panel\\\"\\n    [id]=\\\"panelId\\\"\\n    [ngClass]=\\\"_classList\\\"\\n    (keydown)=\\\"_handleKeydown($event)\\\"\\n    (click)=\\\"closed.emit('click')\\\"\\n    [@transformMenu]=\\\"_panelAnimationState\\\"\\n    (@transformMenu.start)=\\\"_onAnimationStart($event)\\\"\\n    (@transformMenu.done)=\\\"_onAnimationDone($event)\\\"\\n    tabindex=\\\"-1\\\"\\n    role=\\\"menu\\\"\\n    [attr.aria-label]=\\\"ariaLabel || null\\\"\\n    [attr.aria-labelledby]=\\\"ariaLabelledby || null\\\"\\n    [attr.aria-describedby]=\\\"ariaDescribedby || null\\\">\\n    <div class=\\\"mat-menu-content\\\">\\n      <ng-content></ng-content>\\n    </div>\\n  </div>\\n</ng-template>\\n\",\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                encapsulation: ViewEncapsulation.None,\n                exportAs: 'matMenu',\n                host: {\n                    '[attr.aria-label]': 'null',\n                    '[attr.aria-labelledby]': 'null',\n                    '[attr.aria-describedby]': 'null'\n                },\n                animations: [\n                    matMenuAnimations.transformMenu,\n                    matMenuAnimations.fadeInItems\n                ],\n                providers: [\n                    { provide: MAT_MENU_PANEL, useExisting: MatMenu },\n                ],\n                styles: [\"mat-menu{display:none}.mat-menu-panel{min-width:112px;max-width:280px;overflow:auto;-webkit-overflow-scrolling:touch;max-height:calc(100vh - 48px);border-radius:4px;outline:0;min-height:64px}.mat-menu-panel.ng-animating{pointer-events:none}.cdk-high-contrast-active .mat-menu-panel{outline:solid 1px}.mat-menu-content:not(:empty){padding-top:8px;padding-bottom:8px}.mat-menu-item{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:pointer;outline:none;border:none;-webkit-tap-highlight-color:transparent;white-space:nowrap;overflow:hidden;text-overflow:ellipsis;display:block;line-height:48px;height:48px;padding:0 16px;text-align:left;text-decoration:none;max-width:100%;position:relative}.mat-menu-item::-moz-focus-inner{border:0}.mat-menu-item[disabled]{cursor:default}[dir=rtl] .mat-menu-item{text-align:right}.mat-menu-item .mat-icon{margin-right:16px;vertical-align:middle}.mat-menu-item .mat-icon svg{vertical-align:top}[dir=rtl] .mat-menu-item .mat-icon{margin-left:16px;margin-right:0}.mat-menu-item[disabled]{pointer-events:none}.cdk-high-contrast-active .mat-menu-item{margin-top:1px}.cdk-high-contrast-active .mat-menu-item.cdk-program-focused,.cdk-high-contrast-active .mat-menu-item.cdk-keyboard-focused,.cdk-high-contrast-active .mat-menu-item-highlighted{outline:dotted 1px}.mat-menu-item-submenu-trigger{padding-right:32px}.mat-menu-item-submenu-trigger::after{width:0;height:0;border-style:solid;border-width:5px 0 5px 5px;border-color:transparent transparent transparent currentColor;content:\\\"\\\";display:inline-block;position:absolute;top:50%;right:16px;transform:translateY(-50%)}[dir=rtl] .mat-menu-item-submenu-trigger{padding-right:16px;padding-left:32px}[dir=rtl] .mat-menu-item-submenu-trigger::after{right:auto;left:16px;transform:rotateY(180deg) translateY(-50%)}button.mat-menu-item{width:100%}.mat-menu-item .mat-menu-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}\\n\"]\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc0.NgZone }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [MAT_MENU_DEFAULT_OPTIONS]\n            }] }]; }, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Injection token that determines the scroll handling while the menu is open. */\nconst MAT_MENU_SCROLL_STRATEGY = new InjectionToken('mat-menu-scroll-strategy');\n/** @docs-private */\nfunction MAT_MENU_SCROLL_STRATEGY_FACTORY(overlay) {\n    return () => overlay.scrollStrategies.reposition();\n}\n/** @docs-private */\nconst MAT_MENU_SCROLL_STRATEGY_FACTORY_PROVIDER = {\n    provide: MAT_MENU_SCROLL_STRATEGY,\n    deps: [Overlay],\n    useFactory: MAT_MENU_SCROLL_STRATEGY_FACTORY,\n};\n/** Default top padding of the menu panel. */\nconst MENU_PANEL_TOP_PADDING = 8;\n/** Options for binding a passive event listener. */\nconst passiveEventListenerOptions = normalizePassiveListenerOptions({ passive: true });\n// TODO(andrewseguin): Remove the kebab versions in favor of camelCased attribute selectors\n/** Directive applied to an element that should trigger a `mat-menu`. */\nclass MatMenuTrigger {\n    constructor(_overlay, _element, _viewContainerRef, scrollStrategy, parentMenu, \n    // `MatMenuTrigger` is commonly used in combination with a `MatMenuItem`.\n    // tslint:disable-next-line: lightweight-tokens\n    _menuItemInstance, _dir, \n    // TODO(crisbeto): make the _focusMonitor required when doing breaking changes.\n    // @breaking-change 8.0.0\n    _focusMonitor) {\n        this._overlay = _overlay;\n        this._element = _element;\n        this._viewContainerRef = _viewContainerRef;\n        this._menuItemInstance = _menuItemInstance;\n        this._dir = _dir;\n        this._focusMonitor = _focusMonitor;\n        this._overlayRef = null;\n        this._menuOpen = false;\n        this._closingActionsSubscription = Subscription.EMPTY;\n        this._hoverSubscription = Subscription.EMPTY;\n        this._menuCloseSubscription = Subscription.EMPTY;\n        /**\n         * Handles touch start events on the trigger.\n         * Needs to be an arrow function so we can easily use addEventListener and removeEventListener.\n         */\n        this._handleTouchStart = (event) => {\n            if (!isFakeTouchstartFromScreenReader(event)) {\n                this._openedBy = 'touch';\n            }\n        };\n        // Tracking input type is necessary so it's possible to only auto-focus\n        // the first item of the list when the menu is opened via the keyboard\n        this._openedBy = undefined;\n        /**\n         * Whether focus should be restored when the menu is closed.\n         * Note that disabling this option can have accessibility implications\n         * and it's up to you to manage focus, if you decide to turn it off.\n         */\n        this.restoreFocus = true;\n        /** Event emitted when the associated menu is opened. */\n        this.menuOpened = new EventEmitter();\n        /**\n         * Event emitted when the associated menu is opened.\n         * @deprecated Switch to `menuOpened` instead\n         * @breaking-change 8.0.0\n         */\n        // tslint:disable-next-line:no-output-on-prefix\n        this.onMenuOpen = this.menuOpened;\n        /** Event emitted when the associated menu is closed. */\n        this.menuClosed = new EventEmitter();\n        /**\n         * Event emitted when the associated menu is closed.\n         * @deprecated Switch to `menuClosed` instead\n         * @breaking-change 8.0.0\n         */\n        // tslint:disable-next-line:no-output-on-prefix\n        this.onMenuClose = this.menuClosed;\n        this._scrollStrategy = scrollStrategy;\n        this._parentMaterialMenu = parentMenu instanceof _MatMenuBase ? parentMenu : undefined;\n        _element.nativeElement.addEventListener('touchstart', this._handleTouchStart, passiveEventListenerOptions);\n        if (_menuItemInstance) {\n            _menuItemInstance._triggersSubmenu = this.triggersSubmenu();\n        }\n    }\n    /**\n     * @deprecated\n     * @breaking-change 8.0.0\n     */\n    get _deprecatedMatMenuTriggerFor() { return this.menu; }\n    set _deprecatedMatMenuTriggerFor(v) {\n        this.menu = v;\n    }\n    /** References the menu instance that the trigger is associated with. */\n    get menu() { return this._menu; }\n    set menu(menu) {\n        if (menu === this._menu) {\n            return;\n        }\n        this._menu = menu;\n        this._menuCloseSubscription.unsubscribe();\n        if (menu) {\n            if (menu === this._parentMaterialMenu && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n                throwMatMenuRecursiveError();\n            }\n            this._menuCloseSubscription = menu.close.subscribe((reason) => {\n                this._destroyMenu(reason);\n                // If a click closed the menu, we should close the entire chain of nested menus.\n                if ((reason === 'click' || reason === 'tab') && this._parentMaterialMenu) {\n                    this._parentMaterialMenu.closed.emit(reason);\n                }\n            });\n        }\n    }\n    ngAfterContentInit() {\n        this._checkMenu();\n        this._handleHover();\n    }\n    ngOnDestroy() {\n        if (this._overlayRef) {\n            this._overlayRef.dispose();\n            this._overlayRef = null;\n        }\n        this._element.nativeElement.removeEventListener('touchstart', this._handleTouchStart, passiveEventListenerOptions);\n        this._menuCloseSubscription.unsubscribe();\n        this._closingActionsSubscription.unsubscribe();\n        this._hoverSubscription.unsubscribe();\n    }\n    /** Whether the menu is open. */\n    get menuOpen() {\n        return this._menuOpen;\n    }\n    /** The text direction of the containing app. */\n    get dir() {\n        return this._dir && this._dir.value === 'rtl' ? 'rtl' : 'ltr';\n    }\n    /** Whether the menu triggers a sub-menu or a top-level one. */\n    triggersSubmenu() {\n        return !!(this._menuItemInstance && this._parentMaterialMenu);\n    }\n    /** Toggles the menu between the open and closed states. */\n    toggleMenu() {\n        return this._menuOpen ? this.closeMenu() : this.openMenu();\n    }\n    /** Opens the menu. */\n    openMenu() {\n        if (this._menuOpen) {\n            return;\n        }\n        this._checkMenu();\n        const overlayRef = this._createOverlay();\n        const overlayConfig = overlayRef.getConfig();\n        this._setPosition(overlayConfig.positionStrategy);\n        overlayConfig.hasBackdrop = this.menu.hasBackdrop == null ? !this.triggersSubmenu() :\n            this.menu.hasBackdrop;\n        overlayRef.attach(this._getPortal());\n        if (this.menu.lazyContent) {\n            this.menu.lazyContent.attach(this.menuData);\n        }\n        this._closingActionsSubscription = this._menuClosingActions().subscribe(() => this.closeMenu());\n        this._initMenu();\n        if (this.menu instanceof _MatMenuBase) {\n            this.menu._startAnimation();\n        }\n    }\n    /** Closes the menu. */\n    closeMenu() {\n        this.menu.close.emit();\n    }\n    /**\n     * Focuses the menu trigger.\n     * @param origin Source of the menu trigger's focus.\n     */\n    focus(origin, options) {\n        if (this._focusMonitor && origin) {\n            this._focusMonitor.focusVia(this._element, origin, options);\n        }\n        else {\n            this._element.nativeElement.focus(options);\n        }\n    }\n    /** Closes the menu and does the necessary cleanup. */\n    _destroyMenu(reason) {\n        if (!this._overlayRef || !this.menuOpen) {\n            return;\n        }\n        const menu = this.menu;\n        this._closingActionsSubscription.unsubscribe();\n        this._overlayRef.detach();\n        // Always restore focus if the user is navigating using the keyboard or the menu was opened\n        // programmatically. We don't restore for non-root triggers, because it can prevent focus\n        // from making it back to the root trigger when closing a long chain of menus by clicking\n        // on the backdrop.\n        if (this.restoreFocus && (reason === 'keydown' || !this._openedBy || !this.triggersSubmenu())) {\n            this.focus(this._openedBy);\n        }\n        this._openedBy = undefined;\n        if (menu instanceof _MatMenuBase) {\n            menu._resetAnimation();\n            if (menu.lazyContent) {\n                // Wait for the exit animation to finish before detaching the content.\n                menu._animationDone\n                    .pipe(filter(event => event.toState === 'void'), take(1), \n                // Interrupt if the content got re-attached.\n                takeUntil(menu.lazyContent._attached))\n                    .subscribe({\n                    next: () => menu.lazyContent.detach(),\n                    // No matter whether the content got re-attached, reset the menu.\n                    complete: () => this._setIsMenuOpen(false)\n                });\n            }\n            else {\n                this._setIsMenuOpen(false);\n            }\n        }\n        else {\n            this._setIsMenuOpen(false);\n            if (menu.lazyContent) {\n                menu.lazyContent.detach();\n            }\n        }\n    }\n    /**\n     * This method sets the menu state to open and focuses the first item if\n     * the menu was opened via the keyboard.\n     */\n    _initMenu() {\n        this.menu.parentMenu = this.triggersSubmenu() ? this._parentMaterialMenu : undefined;\n        this.menu.direction = this.dir;\n        this._setMenuElevation();\n        this.menu.focusFirstItem(this._openedBy || 'program');\n        this._setIsMenuOpen(true);\n    }\n    /** Updates the menu elevation based on the amount of parent menus that it has. */\n    _setMenuElevation() {\n        if (this.menu.setElevation) {\n            let depth = 0;\n            let parentMenu = this.menu.parentMenu;\n            while (parentMenu) {\n                depth++;\n                parentMenu = parentMenu.parentMenu;\n            }\n            this.menu.setElevation(depth);\n        }\n    }\n    // set state rather than toggle to support triggers sharing a menu\n    _setIsMenuOpen(isOpen) {\n        this._menuOpen = isOpen;\n        this._menuOpen ? this.menuOpened.emit() : this.menuClosed.emit();\n        if (this.triggersSubmenu()) {\n            this._menuItemInstance._highlighted = isOpen;\n        }\n    }\n    /**\n     * This method checks that a valid instance of MatMenu has been passed into\n     * matMenuTriggerFor. If not, an exception is thrown.\n     */\n    _checkMenu() {\n        if (!this.menu && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throwMatMenuMissingError();\n        }\n    }\n    /**\n     * This method creates the overlay from the provided menu's template and saves its\n     * OverlayRef so that it can be attached to the DOM when openMenu is called.\n     */\n    _createOverlay() {\n        if (!this._overlayRef) {\n            const config = this._getOverlayConfig();\n            this._subscribeToPositions(config.positionStrategy);\n            this._overlayRef = this._overlay.create(config);\n            // Consume the `keydownEvents` in order to prevent them from going to another overlay.\n            // Ideally we'd also have our keyboard event logic in here, however doing so will\n            // break anybody that may have implemented the `MatMenuPanel` themselves.\n            this._overlayRef.keydownEvents().subscribe();\n        }\n        return this._overlayRef;\n    }\n    /**\n     * This method builds the configuration object needed to create the overlay, the OverlayState.\n     * @returns OverlayConfig\n     */\n    _getOverlayConfig() {\n        return new OverlayConfig({\n            positionStrategy: this._overlay.position()\n                .flexibleConnectedTo(this._element)\n                .withLockedPosition()\n                .withGrowAfterOpen()\n                .withTransformOriginOn('.mat-menu-panel, .mat-mdc-menu-panel'),\n            backdropClass: this.menu.backdropClass || 'cdk-overlay-transparent-backdrop',\n            panelClass: this.menu.overlayPanelClass,\n            scrollStrategy: this._scrollStrategy(),\n            direction: this._dir\n        });\n    }\n    /**\n     * Listens to changes in the position of the overlay and sets the correct classes\n     * on the menu based on the new position. This ensures the animation origin is always\n     * correct, even if a fallback position is used for the overlay.\n     */\n    _subscribeToPositions(position) {\n        if (this.menu.setPositionClasses) {\n            position.positionChanges.subscribe(change => {\n                const posX = change.connectionPair.overlayX === 'start' ? 'after' : 'before';\n                const posY = change.connectionPair.overlayY === 'top' ? 'below' : 'above';\n                this.menu.setPositionClasses(posX, posY);\n            });\n        }\n    }\n    /**\n     * Sets the appropriate positions on a position strategy\n     * so the overlay connects with the trigger correctly.\n     * @param positionStrategy Strategy whose position to update.\n     */\n    _setPosition(positionStrategy) {\n        let [originX, originFallbackX] = this.menu.xPosition === 'before' ? ['end', 'start'] : ['start', 'end'];\n        let [overlayY, overlayFallbackY] = this.menu.yPosition === 'above' ? ['bottom', 'top'] : ['top', 'bottom'];\n        let [originY, originFallbackY] = [overlayY, overlayFallbackY];\n        let [overlayX, overlayFallbackX] = [originX, originFallbackX];\n        let offsetY = 0;\n        if (this.triggersSubmenu()) {\n            // When the menu is a sub-menu, it should always align itself\n            // to the edges of the trigger, instead of overlapping it.\n            overlayFallbackX = originX = this.menu.xPosition === 'before' ? 'start' : 'end';\n            originFallbackX = overlayX = originX === 'end' ? 'start' : 'end';\n            offsetY = overlayY === 'bottom' ? MENU_PANEL_TOP_PADDING : -MENU_PANEL_TOP_PADDING;\n        }\n        else if (!this.menu.overlapTrigger) {\n            originY = overlayY === 'top' ? 'bottom' : 'top';\n            originFallbackY = overlayFallbackY === 'top' ? 'bottom' : 'top';\n        }\n        positionStrategy.withPositions([\n            { originX, originY, overlayX, overlayY, offsetY },\n            { originX: originFallbackX, originY, overlayX: overlayFallbackX, overlayY, offsetY },\n            {\n                originX,\n                originY: originFallbackY,\n                overlayX,\n                overlayY: overlayFallbackY,\n                offsetY: -offsetY\n            },\n            {\n                originX: originFallbackX,\n                originY: originFallbackY,\n                overlayX: overlayFallbackX,\n                overlayY: overlayFallbackY,\n                offsetY: -offsetY\n            }\n        ]);\n    }\n    /** Returns a stream that emits whenever an action that should close the menu occurs. */\n    _menuClosingActions() {\n        const backdrop = this._overlayRef.backdropClick();\n        const detachments = this._overlayRef.detachments();\n        const parentClose = this._parentMaterialMenu ? this._parentMaterialMenu.closed : of();\n        const hover = this._parentMaterialMenu ? this._parentMaterialMenu._hovered().pipe(filter(active => active !== this._menuItemInstance), filter(() => this._menuOpen)) : of();\n        return merge(backdrop, parentClose, hover, detachments);\n    }\n    /** Handles mouse presses on the trigger. */\n    _handleMousedown(event) {\n        if (!isFakeMousedownFromScreenReader(event)) {\n            // Since right or middle button clicks won't trigger the `click` event,\n            // we shouldn't consider the menu as opened by mouse in those cases.\n            this._openedBy = event.button === 0 ? 'mouse' : undefined;\n            // Since clicking on the trigger won't close the menu if it opens a sub-menu,\n            // we should prevent focus from moving onto it via click to avoid the\n            // highlight from lingering on the menu item.\n            if (this.triggersSubmenu()) {\n                event.preventDefault();\n            }\n        }\n    }\n    /** Handles key presses on the trigger. */\n    _handleKeydown(event) {\n        const keyCode = event.keyCode;\n        // Pressing enter on the trigger will trigger the click handler later.\n        if (keyCode === ENTER || keyCode === SPACE) {\n            this._openedBy = 'keyboard';\n        }\n        if (this.triggersSubmenu() && ((keyCode === RIGHT_ARROW && this.dir === 'ltr') ||\n            (keyCode === LEFT_ARROW && this.dir === 'rtl'))) {\n            this._openedBy = 'keyboard';\n            this.openMenu();\n        }\n    }\n    /** Handles click events on the trigger. */\n    _handleClick(event) {\n        if (this.triggersSubmenu()) {\n            // Stop event propagation to avoid closing the parent menu.\n            event.stopPropagation();\n            this.openMenu();\n        }\n        else {\n            this.toggleMenu();\n        }\n    }\n    /** Handles the cases where the user hovers over the trigger. */\n    _handleHover() {\n        // Subscribe to changes in the hovered item in order to toggle the panel.\n        if (!this.triggersSubmenu() || !this._parentMaterialMenu) {\n            return;\n        }\n        this._hoverSubscription = this._parentMaterialMenu._hovered()\n            // Since we might have multiple competing triggers for the same menu (e.g. a sub-menu\n            // with different data and triggers), we have to delay it by a tick to ensure that\n            // it won't be closed immediately after it is opened.\n            .pipe(filter(active => active === this._menuItemInstance && !active.disabled), delay(0, asapScheduler))\n            .subscribe(() => {\n            this._openedBy = 'mouse';\n            // If the same menu is used between multiple triggers, it might still be animating\n            // while the new trigger tries to re-open it. Wait for the animation to finish\n            // before doing so. Also interrupt if the user moves to another item.\n            if (this.menu instanceof _MatMenuBase && this.menu._isAnimating) {\n                // We need the `delay(0)` here in order to avoid\n                // 'changed after checked' errors in some cases. See #12194.\n                this.menu._animationDone\n                    .pipe(take(1), delay(0, asapScheduler), takeUntil(this._parentMaterialMenu._hovered()))\n                    .subscribe(() => this.openMenu());\n            }\n            else {\n                this.openMenu();\n            }\n        });\n    }\n    /** Gets the portal that should be attached to the overlay. */\n    _getPortal() {\n        // Note that we can avoid this check by keeping the portal on the menu panel.\n        // While it would be cleaner, we'd have to introduce another required method on\n        // `MatMenuPanel`, making it harder to consume.\n        if (!this._portal || this._portal.templateRef !== this.menu.templateRef) {\n            this._portal = new TemplatePortal(this.menu.templateRef, this._viewContainerRef);\n        }\n        return this._portal;\n    }\n}\nMatMenuTrigger.ɵfac = function MatMenuTrigger_Factory(t) { return new (t || MatMenuTrigger)(ɵngcc0.ɵɵdirectiveInject(ɵngcc4.Overlay), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ViewContainerRef), ɵngcc0.ɵɵdirectiveInject(MAT_MENU_SCROLL_STRATEGY), ɵngcc0.ɵɵdirectiveInject(MAT_MENU_PANEL, 8), ɵngcc0.ɵɵdirectiveInject(MatMenuItem, 10), ɵngcc0.ɵɵdirectiveInject(ɵngcc5.Directionality, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.FocusMonitor)); };\nMatMenuTrigger.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: MatMenuTrigger, selectors: [[\"\", \"mat-menu-trigger-for\", \"\"], [\"\", \"matMenuTriggerFor\", \"\"]], hostAttrs: [\"aria-haspopup\", \"true\", 1, \"mat-menu-trigger\"], hostVars: 2, hostBindings: function MatMenuTrigger_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"mousedown\", function MatMenuTrigger_mousedown_HostBindingHandler($event) { return ctx._handleMousedown($event); })(\"keydown\", function MatMenuTrigger_keydown_HostBindingHandler($event) { return ctx._handleKeydown($event); })(\"click\", function MatMenuTrigger_click_HostBindingHandler($event) { return ctx._handleClick($event); });\n    } if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"aria-expanded\", ctx.menuOpen || null)(\"aria-controls\", ctx.menuOpen ? ctx.menu.panelId : null);\n    } }, inputs: { restoreFocus: [\"matMenuTriggerRestoreFocus\", \"restoreFocus\"], _deprecatedMatMenuTriggerFor: [\"mat-menu-trigger-for\", \"_deprecatedMatMenuTriggerFor\"], menu: [\"matMenuTriggerFor\", \"menu\"], menuData: [\"matMenuTriggerData\", \"menuData\"] }, outputs: { menuOpened: \"menuOpened\", onMenuOpen: \"onMenuOpen\", menuClosed: \"menuClosed\", onMenuClose: \"onMenuClose\" }, exportAs: [\"matMenuTrigger\"] });\nMatMenuTrigger.ctorParameters = () => [\n    { type: Overlay },\n    { type: ElementRef },\n    { type: ViewContainerRef },\n    { type: undefined, decorators: [{ type: Inject, args: [MAT_MENU_SCROLL_STRATEGY,] }] },\n    { type: undefined, decorators: [{ type: Inject, args: [MAT_MENU_PANEL,] }, { type: Optional }] },\n    { type: MatMenuItem, decorators: [{ type: Optional }, { type: Self }] },\n    { type: Directionality, decorators: [{ type: Optional }] },\n    { type: FocusMonitor }\n];\nMatMenuTrigger.propDecorators = {\n    _deprecatedMatMenuTriggerFor: [{ type: Input, args: ['mat-menu-trigger-for',] }],\n    menu: [{ type: Input, args: ['matMenuTriggerFor',] }],\n    menuData: [{ type: Input, args: ['matMenuTriggerData',] }],\n    restoreFocus: [{ type: Input, args: ['matMenuTriggerRestoreFocus',] }],\n    menuOpened: [{ type: Output }],\n    onMenuOpen: [{ type: Output }],\n    menuClosed: [{ type: Output }],\n    onMenuClose: [{ type: Output }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatMenuTrigger, [{\n        type: Directive,\n        args: [{\n                selector: `[mat-menu-trigger-for], [matMenuTriggerFor]`,\n                host: {\n                    'class': 'mat-menu-trigger',\n                    'aria-haspopup': 'true',\n                    '[attr.aria-expanded]': 'menuOpen || null',\n                    '[attr.aria-controls]': 'menuOpen ? menu.panelId : null',\n                    '(mousedown)': '_handleMousedown($event)',\n                    '(keydown)': '_handleKeydown($event)',\n                    '(click)': '_handleClick($event)'\n                },\n                exportAs: 'matMenuTrigger'\n            }]\n    }], function () { return [{ type: ɵngcc4.Overlay }, { type: ɵngcc0.ElementRef }, { type: ɵngcc0.ViewContainerRef }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [MAT_MENU_SCROLL_STRATEGY]\n            }] }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [MAT_MENU_PANEL]\n            }, {\n                type: Optional\n            }] }, { type: MatMenuItem, decorators: [{\n                type: Optional\n            }, {\n                type: Self\n            }] }, { type: ɵngcc5.Directionality, decorators: [{\n                type: Optional\n            }] }, { type: ɵngcc1.FocusMonitor }]; }, { restoreFocus: [{\n            type: Input,\n            args: ['matMenuTriggerRestoreFocus']\n        }], menuOpened: [{\n            type: Output\n        }], onMenuOpen: [{\n            type: Output\n        }], menuClosed: [{\n            type: Output\n        }], onMenuClose: [{\n            type: Output\n        }], _deprecatedMatMenuTriggerFor: [{\n            type: Input,\n            args: ['mat-menu-trigger-for']\n        }], menu: [{\n            type: Input,\n            args: ['matMenuTriggerFor']\n        }], menuData: [{\n            type: Input,\n            args: ['matMenuTriggerData']\n        }] }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Used by both the current `MatMenuModule` and the MDC `MatMenuModule`\n * to declare the menu-related directives.\n */\nclass _MatMenuDirectivesModule {\n}\n_MatMenuDirectivesModule.ɵfac = function _MatMenuDirectivesModule_Factory(t) { return new (t || _MatMenuDirectivesModule)(); };\n_MatMenuDirectivesModule.ɵmod = /*@__PURE__*/ ɵngcc0.ɵɵdefineNgModule({ type: _MatMenuDirectivesModule });\n_MatMenuDirectivesModule.ɵinj = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjector({ providers: [MAT_MENU_SCROLL_STRATEGY_FACTORY_PROVIDER], imports: [MatCommonModule] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(_MatMenuDirectivesModule, [{\n        type: NgModule,\n        args: [{\n                exports: [MatMenuTrigger, MatMenuContent, MatCommonModule],\n                declarations: [\n                    MatMenuTrigger,\n                    MatMenuContent,\n                ],\n                providers: [MAT_MENU_SCROLL_STRATEGY_FACTORY_PROVIDER]\n            }]\n    }], null, null); })();\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(_MatMenuDirectivesModule, { declarations: function () { return [MatMenuTrigger, MatMenuContent]; }, exports: function () { return [MatMenuTrigger, MatMenuContent, MatCommonModule]; } }); })();\nclass MatMenuModule {\n}\nMatMenuModule.ɵfac = function MatMenuModule_Factory(t) { return new (t || MatMenuModule)(); };\nMatMenuModule.ɵmod = /*@__PURE__*/ ɵngcc0.ɵɵdefineNgModule({ type: MatMenuModule });\nMatMenuModule.ɵinj = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjector({ providers: [MAT_MENU_SCROLL_STRATEGY_FACTORY_PROVIDER], imports: [[\n            CommonModule,\n            MatCommonModule,\n            MatRippleModule,\n            OverlayModule,\n            _MatMenuDirectivesModule,\n        ], CdkScrollableModule, MatCommonModule, _MatMenuDirectivesModule] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatMenuModule, [{\n        type: NgModule,\n        args: [{\n                imports: [\n                    CommonModule,\n                    MatCommonModule,\n                    MatRippleModule,\n                    OverlayModule,\n                    _MatMenuDirectivesModule,\n                ],\n                exports: [CdkScrollableModule, MatCommonModule, MatMenu, MatMenuItem, _MatMenuDirectivesModule],\n                declarations: [MatMenu, MatMenuItem],\n                providers: [MAT_MENU_SCROLL_STRATEGY_FACTORY_PROVIDER]\n            }]\n    }], null, null); })();\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatMenuModule, { declarations: function () { return [MatMenu, MatMenuItem]; }, imports: function () { return [CommonModule,\n        MatCommonModule,\n        MatRippleModule,\n        OverlayModule, _MatMenuDirectivesModule]; }, exports: function () { return [CdkScrollableModule, MatCommonModule, MatMenu, MatMenuItem, _MatMenuDirectivesModule]; } }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_MENU_CONTENT, MAT_MENU_DEFAULT_OPTIONS, MAT_MENU_PANEL, MAT_MENU_SCROLL_STRATEGY, MatMenu, MatMenuContent, MatMenuItem, MatMenuModule, MatMenuTrigger, _MatMenuBase, _MatMenuDirectivesModule, fadeInItems, matMenuAnimations, transformMenu, MAT_MENU_DEFAULT_OPTIONS_FACTORY as ɵangular_material_src_material_menu_menu_a, MAT_MENU_SCROLL_STRATEGY_FACTORY as ɵangular_material_src_material_menu_menu_b, MAT_MENU_SCROLL_STRATEGY_FACTORY_PROVIDER as ɵangular_material_src_material_menu_menu_c };\n\n","import { ChangeDetectorRef, Component, EventEmitter, Input, OnInit, Output, ViewChild } from '@angular/core';\nimport { FormControl, FormGroup } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { MaterialTableViewComponent } from 'src/app/_metronic/shared/crud-table/components/material-table-view/material-table-view.component';\nimport { CustomerCol, CustomerDisplayCol, IdentityType, Status } from './customer-list.const';\nimport { CustomerListService } from './customer-list.service';\n\nimport { NgbDateAdapter, NgbDateParserFormatter, NgbModal } from '@ng-bootstrap/ng-bootstrap';\nimport { CustomAdapter, CustomDateParserFormatter } from '../../_metronic/core';\nimport { MAT_DATE_FORMATS, DateAdapter, MAT_DATE_LOCALE } from '@angular/material/core';\nimport { MAT_MOMENT_DATE_FORMATS, MomentDateAdapter } from '@angular/material-moment-adapter';\nimport { MY_FORMATS } from '../../core/is-json';\nimport { CommonList2Component } from '../share-components/common-list/common-list.component';\n\n@Component({\n  selector: 'app-customer-list',\n  templateUrl: './customer-list.component.html',\n  styleUrls: ['./customer-list.component.scss'],\n  providers: [\n    // { provide: MAT_DATE_FORMATS, useValue: MY_FORMATS },\n    { provide: DateAdapter, useClass: MomentDateAdapter, deps: [MAT_DATE_LOCALE] },\n    { provide: MAT_DATE_FORMATS, useValue: MY_FORMATS },\n  ]\n})\nexport class CustomerListComponent implements OnInit {\n  @ViewChild(CommonList2Component) commonList: CommonList2Component;\n  @ViewChild(MaterialTableViewComponent) matTable: MaterialTableViewComponent\n\n  ELEMENT_COL = JSON.parse(JSON.stringify(CustomerCol))\n  displayedColumns = JSON.parse(JSON.stringify(CustomerDisplayCol))\n\n  customerList: any[] = [];\n\n  statusOption = Status;\n  identityTypeOption = IdentityType;\n\n  customerForm: FormGroup;\n  @Output() selectedUser = new EventEmitter();\n  @Input() isPopup: boolean = false\n  @Input() party: boolean = true\n  @Input() isDynamic: boolean = false\n  @Input() isCustom: boolean = false\n  show: boolean = false\n  constructor(private router: Router, private cdf: ChangeDetectorRef, private customerListService: CustomerListService, private modalService: NgbModal) {\n    this.loadForm();\n  }\n\n  ngOnInit(): void {\n    if (this.isPopup) {\n      this.ELEMENT_COL.splice(9, 1)\n      this.displayedColumns.splice(9, 1)\n    }\n    console.log(this.isCustom);\n    \n    this.show = true\n  }\n  ngAfterViewInit() {\n    this.getList();\n  }\n  loadForm() {\n    this.customerForm = new FormGroup({\n      \"name\": new FormControl(null),\n      \"identityType\": new FormControl(null),\n      \"identityNumber\": new FormControl(null),\n      \"statusCode\": new FormControl(null),\n      \"partyCode\": new FormControl(null),\n      \"startDate\": new FormControl(null),\n      \"endDate\": new FormControl(null),\n    });\n  }\n\n  navigateToDetail(data, id?: string, secondaryId?: string) {\n    this.router.navigate([\"/customer/customer-detail\"], { queryParams: { pageStatus: data, pageId: id, pageSecondaryId: secondaryId } })\n  }\n\n  getList() {\n    let check = this.isPopup && !this.isDynamic ? true : false\n    this.customerListService.getCustomerList(this.customerForm.value, this.party, check,this.isCustom).toPromise().then((res: any) => {\n      if (res) {\n        this.customerList = res\n        // console.log(\"customerList\", this.customerList);\n        this.cdf.detectChanges()\n        if(this.commonList)\n        this.commonList.detchChange()\n        if (this.matTable)\n          this.matTable.reChangeData()\n      }\n    })\n  }\n\n  get selected() {\n    let user\n    if (this.matTable) {\n      user = this.matTable.selection.selected[0]\n    }\n    return user ? user : { customerId: 0 }\n  }\n\n  rowSelected(event) {\n    this.selectedUser.emit(event)\n  }\n\n  cancel() {\n    this.customerForm.reset();\n    this.getList();\n  }\n\n  actionBtn(event) {\n    if (event.cmd == 'edit') {\n      this.navigateToDetail('edit', event.data.customerId, event.data.individualId)\n    }\n  }\n\n  //for view\n  isControlValid(controlName: string): boolean {\n    const control = this.customerForm.controls[controlName];\n    return control.valid && (control.dirty || control.touched);\n  }\n\n  isControlInvalid(controlName: string): boolean {\n    const control = this.customerForm.controls[controlName];\n    return control.invalid && (control.dirty || control.touched);\n  }\n\n  controlHasError(validation, controlName): boolean {\n    const control = this.customerForm.controls[controlName];\n    return control.hasError(validation) && (control.dirty || control.touched);\n  }\n\n  isControlTouched(controlName): boolean {\n    const control = this.customerForm.controls[controlName];\n    return control.dirty || control.touched;\n  }\n\n  nextProd() {\n    if (this.selected.customerId) {\n      this.modalService.dismissAll({ data: this.selected, type: \"save\" })\n    }\n  }\n  closeModal() {\n    this.modalService.dismissAll()\n  }\n\n}\n","import { COLTYPE, TableCol } from '../../_metronic/shared/crud-table/components/material-table-view/table-dto'\nexport const CustomerCol: TableCol[] = [\n  {\n    title: \"First Name\",\n    type: COLTYPE.FEILD,\n    field: \"firstName\"\n  },\n  {\n    title: \"Middle Name\",\n    type: COLTYPE.FEILD,\n    field: \"middleName\"\n  },\n  {\n    title: \"Last Name\",\n    type: COLTYPE.FEILD,\n    field: \"lastName\"\n  },\n\n  {\n    title: \"Party Code\",\n    type: COLTYPE.FEILD,\n    field: \"partyCode\"\n  },\n  {\n    title: \"ID Type\",\n    type: COLTYPE.FEILD,\n    field: \"identityType\",\n  },\n  {\n    title: \"ID No.\",\n    type: COLTYPE.FEILD,\n    field: \"identityNumber\",\n  },\n  {\n    title: \"Date of Birth\",\n    type: COLTYPE.FEILD,\n    field: \"dateOfBirth\",\n    isFromatDate: true\n  },\n  {\n    title: \"Father Name\",\n    type: COLTYPE.FEILD,\n    field: \"fatherName\"\n  },\n  {\n    title: \"Status\",\n    type: COLTYPE.FEILD,\n    field: \"statusCode\",\n    isCustomerStatus: true\n  },\n  {\n    title: \"Actions\",\n    type: COLTYPE.ACTION,\n    field: \"actions\",\n    btn: {\n      edit: true\n    }\n  },\n]\n\nexport const CustomerDisplayCol: string[] = [\n  \"firstName\",\n  \"middleName\",\n  \"lastName\",\n  \"partyCode\",\n  \"identityType\",\n  \"identityNumber\",\n  \"dateOfBirth\",\n  \"fatherName\",\n  \"statusCode\",\n  \"actions\",\n]\n\nexport const Status: any[] = [\n  {\n    code : \"A\",\n    value : \"Active\"\n  },{\n    code : \"I\",\n    value : \"Inactive\"\n  }\n]\n\nexport const IdentityType: any[] = [\n  {\n    code : \"NRC\",\n    value : \"NRC\"\n  },{\n    code : \"FRC\",\n    value : \"FRC\"\n  },{\n    code : \"PASSPORT\",\n    value : \"Passport\"\n  },{\n    code : \"OTHERS\",\n    value : \"Others\"\n  }\n]","import { HttpClient } from \"@angular/common/http\";\nimport { Injectable } from \"@angular/core\";\nimport * as moment from \"moment\";\nimport { environment } from \"../../../environments/environment\";\n\nconst API_CUSTOMER_URL = `${environment.apiUrl}/customer`;\n@Injectable({\n  providedIn: 'root'\n})\nexport class CustomerListService {\n  constructor(protected httpClient: HttpClient) {\n  }\n\n  getCustomerList(search: any = {}, party: boolean, popup: boolean,isCustom?:boolean) {\n    let url = API_CUSTOMER_URL + \"?\"\n    if (search.name) {\n      url = url + \"name=\" + search.name + \"&\"\n    } if (search.partyCode) {\n      url = url + \"partyCode=\" + search.partyCode + \"&\"\n    } \n    if (search.startDate) {\n      url = url + \"startDate=\" + moment(search.startDate).format(\"YYYY-MM-DD\") + \"&\"\n    } \n    if (search.endDate) {\n      url = url + \"endDate=\" + moment(search.endDate).format(\"YYYY-MM-DD\") + \"&\"\n    } if (search.statusCode) {\n      url = url + \"statusCode=\" + search.statusCode + \"&\"\n    } if (search.identityType) {\n      url = url + \"identityType=\" + search.identityType + \"&\"\n    } if (search.identityNumber) {\n      url = url + \"identityNumber=\" + search.identityNumber + \"&\"\n    }\n    if (!isCustom) {\n      url = url + \"isPartyCode=\" + party\n    }else{\n      url = url + \"statusCode=A\"\n    }\n    return this.httpClient.get(url)\n  }\n}","import { NgModule, Optional, SkipSelf } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule } from '@angular/router';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { InlineSVGModule } from 'ng-inline-svg';\nimport { CRUDTableModule } from '../../_metronic/shared/crud-table';\nimport { CustomerListComponent } from './customer-list.component';\nimport { NgSelectModule } from '@ng-select/ng-select';\nimport { LanguageModule } from 'src/app/modules/languages/languages.modules';\n\n\nimport { ShareComponentModule } from '../share-components/share-component.module';\nimport { throwIfAlreadyLoaded } from 'src/app/modules/loading-toast/module-import-guard';\n\n@NgModule({\n  declarations: [CustomerListComponent],\n  exports: [CustomerListComponent],\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    InlineSVGModule,\n    CRUDTableModule,\n    NgSelectModule,\n    LanguageModule,\n    ShareComponentModule\n  ]\n})\nexport class CustomerListShareModule { \n  constructor(@Optional() @SkipSelf() parentModule: CustomerListShareModule) {\n    throwIfAlreadyLoaded(parentModule, 'CustomerListShareModule')\n  }\n}\n","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { ListActionType, ListItemAction } from '../list-field.interface';\n\n@Component({\n  selector: 'app-activity-item',\n  templateUrl: './activity-item.component.html',\n  styleUrls: ['./activity-item.component.scss'],\n})\nexport class ActivityItemComponent implements OnInit {\n  @Input() itemData: any = {};\n  @Output() btnEvent?: EventEmitter<ListItemAction> = new EventEmitter<ListItemAction>()\n  eventType = ListActionType\n  constructor() { }\n\n  ngOnInit() { }\n\n  actionBtn(event, type?: ListActionType) {\n    this.btnEvent.emit({ cmd: type, data: event })\n  }\n\n\n}\n","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { ListActionType, ListItemAction } from '../list-field.interface';\n\n@Component({\n  selector: 'app-application-item',\n  templateUrl: './application-item.component.html',\n  styleUrls: ['./application-item.component.scss'],\n})\nexport class ApplicationItemComponent implements OnInit {\n  @Input() itemData: any = {};\n  @Output() btnEvent?: EventEmitter<ListItemAction> = new EventEmitter<ListItemAction>()\n  eventType = ListActionType\n  constructor() { }\n\n  ngOnInit() {\n   }\n\n  actionBtn(event, type?: ListActionType) {\n    this.btnEvent.emit({ cmd: type, data: event })\n  }\n\n}\n","import { Component, OnInit, Input, OnChanges, ElementRef, Output, EventEmitter, AfterViewInit, ViewChild, ChangeDetectorRef, ChangeDetectionStrategy } from '@angular/core';\nimport { ListingsPagerComponent } from '../../static-pages/pager/pager.component';\nimport { ListItemAction } from '../list-field.interface';\n\n@Component({\n  selector: 'app-common-list-2',\n  templateUrl: './common-list.component.html',\n  styleUrls: ['./common-list.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\n\nexport class CommonList2Component implements OnInit, AfterViewInit {\n\n  @Output('responseListings') responseListings = new EventEmitter()\n  // @Output('edit') edit = new EventEmitter()\n  // @Output('delete') delete = new EventEmitter()\n  // @Output('view') view = new EventEmitter()\n  @Input('data') dataList: any = [];\n  // @Input('data') dataList: any[];\n  @Input() type: any;  // form type\n  @Input() colField: any; // col field\n  @Input() order: string = 'asc' //ascending,descending\n  // @Output() btnEvent?: EventEmitter<ListItemAction>;\n  @Output() btnEvent?: EventEmitter<ListItemAction> = new EventEmitter();\n  @ViewChild(ListingsPagerComponent) listpager: ListingsPagerComponent;\n  selectedPageSize = 5;\n  selectedPageBtn = 1;\n\n  start = 0;\n  end = 5;\n  listingargs;\n  constructor(private cdf: ChangeDetectorRef) { }\n\n  ngOnInit(): void {\n    this.listingargs = { direction: this.order, col: this.colField };\n  }\n\n  ngAfterViewInit() {\n    this.cdf.detectChanges();\n  }\n\n  detchChange() {\n    if (this.listpager) {\n      this.listpager.prepareBtnArray()\n    }\n    this.cdf.detectChanges()\n  }\n\n  reponseFromPager(event) {\n    this.selectedPageBtn = event.activePage;\n    this.selectedPageSize = event.pageSize;\n    this.start = (this.selectedPageBtn - 1) * this.selectedPageSize;\n    this.end = ((this.selectedPageBtn * this.selectedPageSize) - 1) < this.dataList.length ?\n      (this.selectedPageBtn * this.selectedPageSize) : this.dataList.length;\n  }\n\n  reponseFromAtom(obj) {\n\n  }\n\n  actionTrigger(event) {\n    this.btnEvent.emit(event)\n  }\n}","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { ListActionType, ListItemAction } from '../list-field.interface';\n\n@Component({\n  selector: 'app-customer-item',\n  templateUrl: './customer-item.component.html',\n  styleUrls: ['./customer-item.component.scss'],\n})\nexport class CustomerItemComponent implements OnInit {\n  @Input() itemData: any = {};\n  @Output() btnEvent?: EventEmitter<ListItemAction> = new EventEmitter<ListItemAction>()\n  eventType = ListActionType\n  constructor() { }\n\n  ngOnInit() { }\n\n  actionBtn(event, type?: ListActionType) {\n    this.btnEvent.emit({ cmd: type, data: event })\n  }\n\n\n}\n","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { ListActionType, ListItemAction } from '../list-field.interface';\n\n@Component({\n  selector: 'app-lead-item',\n  templateUrl: './lead-item.component.html',\n  styleUrls: ['./lead-item.component.scss'],\n})\nexport class LeadItemComponent implements OnInit {\n  @Input() itemData: any = {};\n  @Output() btnEvent?: EventEmitter<ListItemAction> = new EventEmitter<ListItemAction>()\n  eventType = ListActionType\n  constructor() { }\n\n  ngOnInit() { }\n\n  actionBtn(event, type?: ListActionType) {\n    this.btnEvent.emit({ cmd: type, data: event })\n  }\n\n\n}\n","import { EventEmitter } from \"@angular/core\";\nimport { PolicyDTO } from \"../policy/policy.dto\";\nimport { Product } from \"../products/models/product.dto\";\nimport { QuotationDTO } from \"../quotations/quotation.dto\";\n\nexport interface ListField {\n  itemData?: any\n  btnEvent?: EventEmitter<ListItemAction>\n}\n\nexport interface ListItemAction {\n  cmd?: ListActionType,\n  data?: any\n}\n\nexport enum ListActionType {\n  EDIT = 'edit',\n  DELETE = 'delete',\n  VIEW = 'view'\n}","import { ChangeDetectorRef, ComponentFactoryResolver, ComponentRef, Directive, EventEmitter, Input, OnDestroy, OnInit, Output, Renderer2, ViewContainerRef } from \"@angular/core\";\nimport { Subscription } from \"rxjs\";\nimport { ActivityItemComponent } from \"./activity-item/activity-item.component\";\nimport { ApplicationItemComponent } from \"./application-item/application-item.component\";\nimport { CustomerItemComponent } from \"./customer-item/customer-item.component\";\nimport { LeadItemComponent } from \"./lead-item/lead-item.component\";\nimport { ListField, ListItemAction } from \"./list-field.interface\";\nimport { QuotationItemComponent } from \"./quotation-item/quotation-item.component\";\nconst LIST_ITEM_COMPONENT = {\n  lead: LeadItemComponent,\n  policy: ApplicationItemComponent,\n  quotat: QuotationItemComponent,\n  customer: CustomerItemComponent,\n  activity: ActivityItemComponent,\n}\n@Directive({\n  selector: '[listDirective]'\n})\nexport class ListingDirective implements ListField, OnInit, OnDestroy {\n\n  @Input() viewType: string\n  @Input() itemData: any = {}\n  @Output() btnEvent?: EventEmitter<ListItemAction> = new EventEmitter<ListItemAction>();\n  component: ComponentRef<ListField>;\n  unsub: Subscription[] = []\n  constructor(\n    private resolver: ComponentFactoryResolver,\n    private container: ViewContainerRef,\n  ) { }\n\n  ngOnDestroy(): void {\n    this.unsub.forEach(x => x.unsubscribe())\n  }\n\n  ngOnInit(): void {\n    const component = this.resolver.resolveComponentFactory<ListField>(LIST_ITEM_COMPONENT[this.viewType]);\n    this.component = this.container.createComponent(component);\n    this.component.instance.itemData = this.itemData;\n    this.unsub[0] = this.component.instance.btnEvent.subscribe((eventData) => {\n      this.clickedEvent(eventData)\n    })\n  }\n\n  clickedEvent(event) {\n    this.btnEvent.emit(event)\n  }\n\n\n}","\nimport { Pipe, PipeTransform } from '@angular/core';\n@Pipe({\n  name: 'dataSort'\n})\n\nexport class ListingSortPipe implements PipeTransform {\n  transform(items: [], direction: any, field: any) {\n    if (!items || !direction || field) {\n      return items;\n    } else {\n      let sortedItems = items;\n      sortedItems = sortedItems.sort((n1, n2) => {\n        if (n1[field] > n2[field]) {\n          return 1;\n        }\n\n        if (n1[field] < n2[field]) {\n          return -1;\n        }\n\n        return 0;\n      });\n      return sortedItems;\n    }\n  }\n}\n","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { ListActionType, ListItemAction } from '../list-field.interface';\n\n@Component({\n  selector: 'app-quotation-item',\n  templateUrl: './quotation-item.component.html',\n  styleUrls: ['./quotation-item.component.scss'],\n})\nexport class QuotationItemComponent implements OnInit {\n  @Input() itemData?: any;\n  @Output() btnEvent?: EventEmitter<ListItemAction> = new EventEmitter<ListItemAction>()\n  eventType = ListActionType\n  \n  constructor() { }\n\n  ngOnInit() {\n    console.log('itemData', this.itemData)\n   }\n\n  actionBtn(event, type?: ListActionType) {\n    this.btnEvent.emit({ cmd: type, data: event })\n  }\n\n}\n","import { CommonModule } from \"@angular/common\";\nimport { NgModule, Optional, SkipSelf } from \"@angular/core\";\nimport { FormsModule, ReactiveFormsModule } from \"@angular/forms\";\nimport { MatMenuModule } from \"@angular/material/menu\";\nimport { NgbModalModule } from \"@ng-bootstrap/ng-bootstrap\";\nimport { NgSelectModule } from \"@ng-select/ng-select\";\nimport { throwIfAlreadyLoaded } from \"src/app/modules/loading-toast/module-import-guard\";\nimport { CustomerListShareModule } from \"../customer-list/customer-list.share.module\";\nimport { FormComponentModule } from \"../form-component/form-component.module\";\nimport { NrcPopupPage } from \"../form-component/nrc-popup/nrc-popup.page\";\nimport { ListingsPagerComponent } from \"../static-pages/pager/pager.component\";\nimport { ActivityItemComponent } from \"./activity-item/activity-item.component\";\nimport { ApplicationItemComponent } from \"./application-item/application-item.component\";\nimport { CommonList2Component } from \"./common-list/common-list.component\";\nimport { CustomerItemComponent } from \"./customer-item/customer-item.component\";\nimport { LeadItemComponent } from \"./lead-item/lead-item.component\";\nimport { ListingDirective } from \"./listing-directive\";\nimport { ListingSortPipe } from \"./listing-sort.pipe\";\nimport { QuotationItemComponent } from \"./quotation-item/quotation-item.component\";\n\n@NgModule({\n  declarations: [\n    ListingSortPipe,\n    ListingDirective,\n    LeadItemComponent,\n    ActivityItemComponent,\n    CustomerItemComponent,\n    ApplicationItemComponent,\n    QuotationItemComponent,\n    CommonList2Component,\n    ListingsPagerComponent,\n    NrcPopupPage\n  ],\n  exports: [\n    ListingSortPipe,\n    ListingDirective,\n    LeadItemComponent,\n    ActivityItemComponent,\n    CustomerItemComponent,\n    ApplicationItemComponent,\n    QuotationItemComponent,\n    CommonList2Component,\n    ListingsPagerComponent,\n    NrcPopupPage\n  ],\n  entryComponents:[ \n    NrcPopupPage\n  ],\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    NgbModalModule,\n    // FormComponentModule,\n    NgSelectModule,\n    MatMenuModule\n  ],\n  providers: []\n})\nexport class ShareComponentModule {\n  constructor(@Optional() @SkipSelf() parentModule: CustomerListShareModule) {\n    throwIfAlreadyLoaded(parentModule, 'CustomerListShareModule')\n  }\n }\n","import { Component, OnInit, Input, OnChanges, ElementRef, Output, EventEmitter, AfterViewInit, ViewChild, ChangeDetectorRef, ChangeDetectionStrategy } from '@angular/core';\nimport { Subject } from 'rxjs';\nimport { ActivityStatus, TableCol } from '../../../_metronic/shared/crud-table/components/material-table-view/table-dto';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { MatSort } from '@angular/material/sort';\nimport * as moment from 'moment';\nimport { SelectionModel } from '@angular/cdk/collections';\nimport { StylePaginatorDirective } from '../../../_metronic/shared/crud-table/components/material-table-view/custom-paginator.directive';\nimport { PRODUCT_STATUS } from './../../products/models/product.dto';\nimport { environment } from '../../../../environments/environment';\n\n@Component({\n  selector: 'app-pager',\n  templateUrl: './pager.component.html',\n  styleUrls: ['./pager.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\n\nexport class ListingsPagerComponent implements OnInit, AfterViewInit {\n\n  @Output('activePage') activePage = new EventEmitter()\n  @Input() sourceData: any[] = [];\n  @Input() formType;\n\n  displayBtnCount = 3;\n  pageSizeArray = [5, 10, 15];\n  selectedPageSize = 5;\n  no_of_pages;\n  viewPageButtonArray = [];\n  responseData = [];\n  selectedPageBtn;\n\n  startPageIndex;\n  endPageIndex;\n  started\n  constructor(private cdf: ChangeDetectorRef) { }\n\n  ngOnInit(): void {\n    if (this.sourceData.length > 0)\n      this.prepareBtnArray();\n  }\n\n  prepareBtnArray() {\n    this.no_of_pages = this.sourceData.length % this.selectedPageSize == 0 ?\n      Math.floor(this.sourceData.length / this.selectedPageSize) :\n      Math.floor(this.sourceData.length / this.selectedPageSize) + 1;\n    this.selectedPageBtn = this.startPageIndex = 1;\n    this.showingListCnt()\n    this.setPageBtnArray();\n  }\n\n  showingListCnt() {\n    let count = this.selectedPageBtn * this.selectedPageSize\n    this.started = count - this.selectedPageSize + 1\n    this.endPageIndex = count > this.sourceData.length ? this.sourceData.length : count\n  }\n\n  ngAfterViewInit() {\n    this.cdf.detectChanges();\n  }\n\n  ngOnDestroy() {\n    this.activePage.unsubscribe();\n  }\n\n  clickMenuItem(pageSize: number) {\n    this.selectedPageSize = pageSize;\n    this.prepareBtnArray();\n  }\n\n  pageBtnClicked(btn: number) {\n    this.selectedPageBtn = btn;\n    this.calPageBtn();\n    //this.prepareCalDataRows(this.selectedPageBtn);\n  }\n\n  pageIncreased() {\n    this.selectedPageBtn = this.selectedPageBtn == this.no_of_pages ? this.no_of_pages : this.selectedPageBtn + 1;\n    //this.prepareCalDataRows(this.selectedPageBtn);\n    this.calPageBtn();\n  }\n\n  pageDecresed() {\n    this.selectedPageBtn = this.selectedPageBtn == 1 ? 1 : this.selectedPageBtn - 1;\n    //this.prepareCalDataRows(this.selectedPageBtn);\n    this.calPageBtn();\n  }\n\n  pageFirst() {\n    this.selectedPageBtn = 1;\n    // this.prepareCalDataRows(this.selectedPageBtn);\n    this.calPageBtn();\n  }\n\n  pageLast() {\n    this.selectedPageBtn = this.no_of_pages;\n    //this.prepareCalDataRows(this.selectedPageBtn);\n    this.calPageBtn();\n  }\n\n  setPageBtnArray() {\n    this.viewPageButtonArray = [];\n    for (let i = 0; i < this.displayBtnCount; i++) {\n      if (this.startPageIndex + i <= this.no_of_pages) this.viewPageButtonArray.push(this.startPageIndex + i);\n    }\n    this.cdf.detectChanges();\n    this.activePage.emit({ activePage: this.selectedPageBtn, pageSize: this.selectedPageSize });\n  }\n\n  calPageBtn() {\n    this.startPageIndex = this.selectedPageBtn == 1 ? this.selectedPageBtn : this.selectedPageBtn - 1;\n    // this.endPageIndex = this.selectedPageBtn == this.no_of_pages ? this.selectedPageBtn : this.selectedPageBtn + 1;\n    this.showingListCnt()\n    this.setPageBtnArray();\n    // let remainder = this.selectedPageBtn % this.displayBtnCount;\n    // if(remainder == 0){\n    //   this.startPageIndex = (this.selectedPageBtn - this.displayBtnCount) + 1;\n    //   this.endPageIndex = ((this.startPageIndex + this.displayBtnCount) - 1) < this.no_of_pages?\n    //   (this.startPageIndex + this.displayBtnCount) - 1 : this.no_of_pages;\n    // }else if(remainder > 0){\n    //   this.startPageIndex = (this.selectedPageBtn - remainder) + 1;\n    //   this.endPageIndex = ((this.startPageIndex + this.displayBtnCount) - 1) < this.no_of_pages?\n    //   (this.startPageIndex + this.displayBtnCount) - 1 : this.no_of_pages;\n    // }\n  }\n\n\n  calDataRows(start: number, end: number) {\n    this.responseData = [];\n    let count = end < ((start + this.selectedPageSize) - 1) ? (end - start + 1) : this.selectedPageSize;\n    for (let i = 0; i < count; i++) {\n      if (start + i <= end) this.responseData.push(this.sourceData[start + i]);\n    }\n  }\n}\n","export default \"<div class=\\\"row\\\">\\n    <div class=\\\"col-12\\\">\\n        <div class=\\\"card card-custom gutter-b\\\" [class.remove-p]=\\\"isPopup\\\">\\n            <div class=\\\"card-header\\\">\\n                <div class=\\\"card-title\\\">\\n                    <h3 class=\\\"card-label left-border-image\\\">{{\\\"FORM.customer_list\\\" | translate}}</h3>\\n                </div>\\n                <div class=\\\"card-toolbar\\\">\\n                    <!-- <button *ngIf=\\\"!isPopup\\\" type=\\\"button\\\" class=\\\"btn btn-primary btn-circle\\\" style=\\\"margin-right: 1rem;\\n                    \\\" (click)=\\\"navigateToDetail('create')\\\">\\n                        <span class=\\\"flaticon2-plus\\\"></span>\\n                    </button> -->\\n                    <!-- <button type=\\\"button\\\" class=\\\"btn btn-primary ml-2\\\" style=\\\"min-width: 50px;\\\" (click)=\\\"getList()\\\">\\n                        <span class=\\\"flaticon2-magnifier-tool search-tool\\\"></span>\\n                    </button> -->\\n                    <span class=\\\"flaticon2-magnifier-tool search-tool\\\" (click)=\\\"getList()\\\"></span>\\n                    <button type=\\\"button\\\" class=\\\"btn btn-primary ml-2\\\" style=\\\"min-width: 50px;\\\" (click)=\\\"cancel()\\\">\\n                        <span class=\\\"\\\">{{\\\"FORM.btn_cancel\\\" | translate}}</span>\\n                    </button>\\n                </div>\\n            </div>\\n            <div class=\\\"card-body px-10 py-3\\\">\\n                <form action=\\\"#\\\" class=\\\"form\\\" [formGroup]=\\\"customerForm\\\">\\n                    <div class=\\\"row\\\" style=\\\"align-items: center;\\\">\\n                        <app-start-end-date [formInput]=\\\"customerForm\\\" remove-host [colClass]=\\\"'col-md-6'\\\">\\n                        </app-start-end-date>\\n                    </div>\\n                    <div class=\\\"row\\\" style=\\\"align-items: center;\\\">\\n                        <div class=\\\"col-md-6\\\">\\n                            <div class=\\\"form-group row\\\">\\n                                <label class=\\\"col-sm-4 col-form-label\\\">{{\\\"FORM.name\\\" | translate}}</label>\\n                                <div class=\\\"col-sm-8\\\">\\n                                    <input type=\\\"text\\\" class=\\\"form-control form-control-sm \\\" name=\\\"name\\\"\\n                                        autocomplete=\\\"off\\\" [class.is-invalid]=\\\"isControlInvalid('name')\\\"\\n                                        [class.is-valid]=\\\"isControlValid('name')\\\" formControlName=\\\"name\\\" />\\n                                </div>\\n                            </div>\\n                        </div>\\n                        <div class=\\\"col-md-6\\\">\\n                            <div class=\\\"form-group row\\\">\\n                                <label class=\\\"col-sm-4 col-form-label\\\">{{\\\"FORM.party_code\\\" | translate}}</label>\\n                                <div class=\\\"col-sm-8\\\">\\n                                    <input type=\\\"text\\\" class=\\\"form-control form-control-sm \\\" name=\\\"partyCode\\\"\\n                                        autocomplete=\\\"off\\\" [class.is-invalid]=\\\"isControlInvalid('partyCode')\\\"\\n                                        [class.is-valid]=\\\"isControlValid('partyCode')\\\" formControlName=\\\"partyCode\\\" />\\n                                </div>\\n                            </div>\\n\\n                        </div>\\n\\n                    </div>\\n                    <div class=\\\"row\\\" style=\\\"align-items: center;\\\">\\n                        <div class=\\\"col-md-6\\\">\\n                            <div class=\\\"form-group row\\\">\\n                                <label class=\\\"col-sm-4 col-form-label\\\">{{\\\"FORM.id_type\\\" | translate}}</label>\\n                                <div class=\\\"col-sm-8\\\">\\n                                    <ng-select class=\\\"ng-custom-select ng-custom-select-sm\\\"\\n                                        [class.is-invalid]=\\\"isControlInvalid('identityType')\\\"\\n                                        [class.is-valid]=\\\"isControlValid('identityType')\\\" [items]=\\\"identityTypeOption\\\"\\n                                        bindLabel=\\\"value\\\" bindValue=\\\"code\\\" formControlName=\\\"identityType\\\">\\n                                    </ng-select>\\n\\n                                </div>\\n                            </div>\\n                        </div>\\n                        <div class=\\\"col-md-6\\\">\\n                            <div class=\\\"form-group row\\\">\\n                                <label class=\\\"col-sm-4 col-form-label\\\">{{\\\"FORM.id_no\\\" | translate}}</label>\\n                                <div class=\\\"col-sm-8\\\">\\n                                    <input type=\\\"text\\\" class=\\\"form-control form-control-sm \\\" name=\\\"identityNumber\\\"\\n                                        autocomplete=\\\"off\\\" [class.is-invalid]=\\\"isControlInvalid('identityNumber')\\\"\\n                                        [class.is-valid]=\\\"isControlValid('identityNumber')\\\"\\n                                        formControlName=\\\"identityNumber\\\" />\\n                                </div>\\n                            </div>\\n                        </div>\\n                    </div>\\n                    <!-- </div> -->\\n                    <div class=\\\"row\\\">\\n                        <div class=\\\"col-md-6\\\">\\n                            <div class=\\\"form-group row\\\">\\n                                <label class=\\\"col-sm-4 col-form-label\\\">{{\\\"FORM.status\\\" | translate}}</label>\\n                                <div class=\\\"col-sm-8\\\">\\n                                    <ng-select class=\\\"ng-custom-select ng-custom-select-sm\\\"\\n                                        [class.is-invalid]=\\\"isControlInvalid('statusCode')\\\"\\n                                        [class.is-valid]=\\\"isControlValid('statusCode')\\\" [items]=\\\"statusOption\\\"\\n                                        bindLabel=\\\"value\\\" bindValue=\\\"code\\\" formControlName=\\\"statusCode\\\">\\n                                    </ng-select>\\n                                </div>\\n                            </div>\\n                        </div>\\n                    </div>\\n                </form>\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n<div class=\\\"row\\\">\\n    <div class=\\\"col-12\\\">\\n        <div class=\\\"card card-custom gutter-b data\\\" [class.remove-p]=\\\"isPopup\\\">\\n            <div class=\\\"card-body customer-card-body\\\" *ngIf=\\\"show\\\">\\n                <div *ngIf=\\\"isPopup;else no_popup\\\">\\n                    <app-material-table-view [data]=\\\"customerList\\\" [colum]=\\\"ELEMENT_COL\\\"\\n                        [displayedColumns]=\\\"displayedColumns\\\" (emitter)=\\\"actionBtn($event)\\\"\\n                        (rowselect)=\\\"rowSelected($event)\\\" [selectable]=\\\"isPopup\\\">\\n                    </app-material-table-view>\\n                </div>\\n                <ng-template #no_popup>\\n                    <app-common-list-2 *ngIf=\\\"customerList.length > 0\\\" class=\\\"data-list\\\" #commonList\\n                        [data]=\\\"customerList\\\" [type]=\\\"'customer'\\\" (btnEvent)=\\\"actionBtn($event)\\\"></app-common-list-2>\\n                </ng-template>\\n                <div class=\\\"row\\\">\\n                    <div class=\\\"col-12\\\">\\n                        <ng-container *ngIf=\\\"isPopup && !isDynamic\\\">\\n                            <div class=\\\"card-footer\\\">\\n                                <button type=\\\"button\\\" class=\\\"btn btn-light btn-elevate mr-2\\\"\\n                                    (click)=\\\"closeModal()\\\">{{\\\"FORM.cancel\\\" | translate}}</button>\\n                                <button type=\\\"button\\\" class=\\\"btn btn-primary btn-elevate\\\" (click)=\\\"nextProd()\\\"\\n                                    [disabled]=\\\"!selected.customerId\\\">Next</button>\\n                            </div>\\n                        </ng-container>\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\";","export default \"\\n  <div class=\\\"data-header\\\" *ngIf=\\\"itemData\\\">\\n    <div class=\\\"col-8\\\">\\n      <img src=\\\"./assets/images/activity/activity-list-01.svg\\\" alt=\\\"activity\\\" />\\n      <label> {{ itemData.activityNo }} </label>\\n    </div>\\n    <div class=\\\"col-4\\\">\\n      <section class=\\\"icon-group\\\">\\n        <div class=\\\"actions\\\">\\n          <img src=\\\"../../../assets/images/edit-01.svg\\\" (click)=\\\"actionBtn(itemData, eventType.EDIT )\\\" alt=\\\"edit\\\" />\\n          \\n        </div>\\n      </section>\\n    </div>\\n  </div>\\n  <div class=\\\"data-content row\\\">\\n    <div class=\\\"col-4\\\">\\n      <label *ngIf=\\\"itemData.activityTitle\\\"> {{ itemData.activityTitle }}</label>\\n      <label *ngIf=\\\"itemData.assignName\\\"> Assign to: {{ itemData.assignName }} </label>\\n    </div>\\n    <div class=\\\"col-4\\\">\\n      <label *ngIf=\\\"itemData.dueDate\\\"> {{ itemData.dueDate | date:'dd/MM/YYYY' }} </label>\\n      <label *ngIf=\\\"itemData.status == '01' \\\" style=\\\"color: #FF8100 !important; \\\"> Open </label>\\n      <label *ngIf=\\\"itemData.status == '02' \\\" style=\\\"color: #005EAA !important; \\\"> Complete </label>\\n      <label *ngIf=\\\"itemData.status == '03' \\\" style=\\\"color: #00ACEA !important;\\\"> Cancel </label>\\n    </div>\\n    <div class=\\\"col-4\\\">\\n      <label> Activity Type: <span>{{ itemData.activityType }}</span> </label>\\n    </div>\\n  </div>\\n\";","export default \"<div class=\\\"data-header\\\" *ngIf=\\\"itemData\\\">\\n  <div class=\\\"col-8\\\">\\n    <!-- <img src=\\\"../../../assets/images/customer/custoner_list.svg\\\" alt=\\\"quo\\\" /> -->\\n    <img [src]=\\\"itemData.productImage\\\" alt=\\\"\\\" />\\n    <label> {{ itemData.id }} </label>\\n  </div>\\n  <div class=\\\"col-4\\\">\\n    <section class=\\\"icon-group\\\">\\n      <div class=\\\"actions\\\">\\n        <img src=\\\"../../../assets/images/view-01.svg\\\" (click)=\\\"actionBtn(itemData,eventType.VIEW)\\\" alt=\\\"view\\\" />\\n      </div>\\n      <div class=\\\"actions\\\"\\n        *ngIf=\\\"(itemData.status == 'in_progress' || itemData.status == 'In_progress' ) || ((itemData.status == 'submitted' || itemData.status == 'Submitted') && itemData.apiStatus == 'fail')\\\">\\n        <img src=\\\"../../../assets/images/edit-01.svg\\\" (click)=\\\"actionBtn(itemData,eventType.EDIT)\\\" alt=\\\"edit\\\" />\\n      </div>\\n    </section>\\n  </div>\\n</div>\\n<div class=\\\"data-content row\\\">\\n  <div class=\\\"col-4\\\">\\n    <label *ngIf=\\\"itemData.agentFirstName\\\"> {{ itemData.agentFirstName }} {{ itemData.agentLastName }}</label>\\n    <label *ngIf=\\\"itemData.productName\\\"> {{ itemData.productName }} </label>\\n    <label *ngIf=\\\"itemData.submittedCode\\\"> {{ itemData.submittedCode }} </label>\\n  </div>\\n  <div class=\\\"col-4\\\">\\n    <label *ngIf=\\\"itemData.createdAt\\\"> {{ itemData.createdAt | date:'dd/MM/YYYY' }} </label>\\n    <label *ngIf=\\\"itemData.status == 'in_progress' || itemData.status == 'In_progress' \\\"\\n      style=\\\"color: #FF8100 !important;\\\"> In Progress </label>\\n    <label *ngIf=\\\"itemData.status == 'cancel' || itemData.status == 'Cancel' \\\" style=\\\"color: #00ACEA !important;\\\">\\n      Cancel </label>\\n    <label *ngIf=\\\"itemData.status == 'submitted' || itemData.status == 'Submitted' \\\" style=\\\"color: #005EAA !important;\\\">\\n      Submitted </label>\\n    <label *ngIf=\\\"itemData.status == 'approved' || itemData.status == 'Approved' \\\" style=\\\"color: #005EAA !important;\\\">\\n      Approved </label>\\n    <label *ngIf=\\\"itemData.status == 'fail' || itemData.status == 'Fail' \\\" style=\\\"color: #DD5E5E !important;\\\"> Fail\\n    </label>\\n    <label *ngIf=\\\"itemData.status == 'success' || itemData.status == 'Success' \\\" style=\\\"color: #FFD300 !important;\\\">\\n      Success </label>\\n  </div>\\n  <div class=\\\"col-4\\\">\\n    <label> Premium : <span>{{ itemData.premium }}</span> </label>\\n  </div>\\n</div>\";","export default \"<ng-container *ngFor=\\\"let atom of dataList | dataSort: order : colField | slice: start: end\\\">\\n    <ng-container listDirective [viewType]=\\\"type\\\" [itemData]=\\\"atom\\\" (btnEvent)=\\\"actionTrigger($event)\\\"></ng-container>\\n</ng-container>\\n<!-- | dataSort: order : colField -->\\n<div class=\\\"example-preview\\\" *ngIf=\\\"dataList.length > 0\\\">\\n    <app-pager *ngIf=\\\"dataList.length > 0\\\" [sourceData]=\\\"dataList\\\" [formType]=\\\"type\\\" (activePage)=\\\"reponseFromPager($event)\\\">\\n    </app-pager>\\n</div>\";","export default \"<div class=\\\"data-header\\\" *ngIf=\\\"itemData\\\">\\n  <div class=\\\"col-8\\\">\\n    <img src=\\\"../../../assets/images/customer/custoner_list.svg\\\" alt=\\\"customer\\\" />\\n    <label> {{ itemData.partyCode }} </label>\\n  </div>\\n  <div class=\\\"col-4\\\">\\n    <section class=\\\"icon-group\\\">\\n      <div class=\\\"actions\\\">\\n        <img src=\\\"../../../assets/images/edit-01.svg\\\" (click)=\\\"actionBtn(itemData, eventType.EDIT )\\\" alt=\\\"edit\\\" />\\n      </div>\\n    </section>\\n  </div>\\n</div>\\n<div class=\\\"data-content row\\\">\\n  <div class=\\\"col-4\\\">\\n    <label *ngIf=\\\"itemData.name\\\"> {{ itemData.name }}</label>\\n    <label *ngIf=\\\"itemData.fatherName\\\"> {{ itemData.fatherName }} </label>\\n    <label *ngIf=\\\"itemData.identityNumber\\\"> {{ itemData.identityNumber }} </label>\\n  </div>\\n  <div class=\\\"col-4\\\">\\n    <label *ngIf=\\\"itemData.dateOfBirth\\\"> {{ itemData.dateOfBirth | date:'dd/MM/YYYY' }} </label>\\n    <label *ngIf=\\\"itemData.statusCode == 'A' \\\" style=\\\"color: #FF8100 !important;\\\"> Active </label>\\n    <label *ngIf=\\\"itemData.statusCode != 'A' \\\" style=\\\"color: #005EAA !important;\\\"> InActive </label>\\n  </div>\\n  <div class=\\\"col-4\\\">\\n    <label> ID Type: <span>{{ itemData.identityType }}</span> </label>\\n  </div>\\n</div>\";","export default \"<div class=\\\"data-header\\\" *ngIf=\\\"itemData\\\">\\n    <div class=\\\"col-8\\\">\\n        <img src=\\\"../../../assets/images/activity/activity-list-01.svg\\\" alt=\\\"activity\\\" />\\n        <label> {{ itemData.leadId }} </label>\\n    </div>\\n    <div class=\\\"col-4\\\">\\n        <section class=\\\"icon-group\\\">\\n            <div class=\\\"actions\\\">\\n                <img src=\\\"../../../assets/images/view-01.svg\\\" (click)=\\\"actionBtn(itemData, eventType.VIEW )\\\"\\n                    alt=\\\"View\\\" />\\n            </div>\\n            <div class=\\\"actions\\\">\\n                <img src=\\\"../../../assets/images/edit-01.svg\\\" (click)=\\\"actionBtn(itemData, eventType.EDIT )\\\"\\n                    alt=\\\"edit\\\" />\\n            </div>\\n        </section>\\n    </div>\\n</div>\\n<div class=\\\"data-content row\\\">\\n    <div class=\\\"col-4\\\">\\n        <label *ngIf=\\\"itemData.contactName\\\"> {{ itemData.contactName }}</label>\\n        <label *ngIf=\\\"itemData.productName\\\">{{ itemData.productName }} </label>\\n        <label *ngIf=\\\"itemData.email\\\">{{ itemData.email }}, {{ itemData.phoneNo }}</label>\\n    </div>\\n    <div class=\\\"col-4\\\">\\n        <label *ngIf=\\\"itemData.openedDate\\\"> {{ itemData.openedDate | date:'dd/MM/YYYY' }} </label>\\n        <label *ngIf=\\\"itemData.statusCode == '01' \\\" style=\\\"color: #FF8100 !important;\\\"> Open </label>\\n        <label *ngIf=\\\"itemData.statusCode == '02' \\\" style=\\\"color: #005EAA !important;\\\"> Assigned </label>\\n        <label *ngIf=\\\"itemData.statusCode == '03' \\\" style=\\\"color: #FF8100 !important;\\\"> Follow Up </label>\\n        <label *ngIf=\\\"itemData.statusCode == '04' \\\" style=\\\"color: #DD5E5E !important;\\\"> Reject </label>\\n        <label *ngIf=\\\"itemData.statusCode == '05' \\\" style=\\\"color: #00ACEA !important;\\\"> Win </label>\\n        <label *ngIf=\\\"itemData.statusCode == '06' \\\" style=\\\"color: #DD5E5E !important;\\\"> Lost </label>\\n    </div>\\n    <div class=\\\"col-4\\\">\\n        <label> Score : <span>{{ itemData.score }}</span> </label>\\n    </div>\\n</div>\";","export default \"<!-- <div *ngFor=\\\"let quo of quoList; let i = index\\\" class=\\\"data-list\\\"> -->\\n<div class=\\\"data-header\\\" *ngIf=\\\"itemData\\\">\\n  <div class=\\\"col-8\\\">\\n    <!-- <img src=\\\"../../../assets/images/customer/custoner_list.svg\\\" alt=\\\"quo\\\" /> -->\\n    <img [src]=\\\"itemData.productImage\\\" alt=\\\"\\\" />\\n    <label> {{ itemData.id }} </label>\\n  </div>\\n  <div class=\\\"col-4\\\">\\n    <section class=\\\"icon-group\\\">\\n      <div class=\\\"actions\\\">\\n        <img src=\\\"./assets/images/view-01.svg\\\" (click)=\\\"actionBtn(itemData,eventType.VIEW)\\\" alt=\\\"view\\\" />\\n      </div>\\n      <div class=\\\"actions\\\"\\n        *ngIf=\\\"itemData.status == 'in_progress' || itemData.status == 'In_progress' \\\">\\n        <img src=\\\"./assets/images/edit-01.svg\\\" (click)=\\\"actionBtn(itemData,eventType.EDIT)\\\" alt=\\\"edit\\\" />\\n      </div>\\n    </section>\\n  </div>\\n</div>\\n<div class=\\\"data-content row\\\">\\n  <div class=\\\"col-4\\\">\\n    <label *ngIf=\\\"itemData.agentFirstName\\\"> {{ itemData.agentFirstName }} {{ itemData.agentLastName }}</label>\\n    <label *ngIf=\\\"itemData.productName\\\"> {{ itemData.productName }} </label>\\n  </div>\\n  <div class=\\\"col-4\\\">\\n    <label *ngIf=\\\"itemData.createdAt\\\"> {{ itemData.createdAt | date:'dd/MM/YYYY' }} </label>\\n    <label *ngIf=\\\"itemData.status == 'in_progress' || itemData.status == 'In_progress' \\\"\\n      style=\\\"color: #FF8100 !important;\\\"> In Progress </label>\\n    <label *ngIf=\\\"itemData.status == 'cancel' || itemData.status == 'Cancel' \\\" style=\\\"color: #00ACEA !important;\\\">\\n      Cancel </label>\\n    <label *ngIf=\\\"itemData.status == 'submitted' || itemData.status == 'Submitted' \\\" style=\\\"color: #005EAA !important;\\\">\\n      Submitted </label>\\n    <label *ngIf=\\\"itemData.status == 'approved' || itemData.status == 'Approved' \\\" style=\\\"color: #005EAA !important;\\\">\\n      Approved </label>\\n    <label *ngIf=\\\"itemData.status == 'fail' || itemData.status == 'Fail' \\\" style=\\\"color: #DD5E5E !important;\\\"> Fail\\n    </label>\\n    <label *ngIf=\\\"itemData.status == 'success' || itemData.status == 'Success' \\\" style=\\\"color: #FFD300 !important;\\\">\\n      Success </label>\\n  </div>\\n  <div class=\\\"col-4\\\">\\n    <label> Premium : <span>{{ itemData.premium }}</span> </label>\\n  </div>\\n</div>\\n<!-- </div> -->\";","export default \"<div class=\\\"pager\\\" *ngIf=\\\"sourceData.length > 0\\\">\\n    <div class=\\\"row\\\">\\n        <div class=\\\"col-md-6 col-sm-6 col-xs-12\\\">\\n            <div class=\\\"pager_btn_wrapper mt_5 mb_10 right\\\">\\n                <div class=\\\"pager_atom\\\">\\n                    <span>Items per page:</span>\\n                    <button mat-button [matMenuTriggerFor]=\\\"menu\\\"\\n                    class=\\\"menu_bg\\\">\\n                        <div class=\\\"pager_btn_wrapper ml_15\\\">{{ selectedPageSize }}<img\\n                                src=\\\"./assets/images/down_arrow-01.svg\\\" class=\\\"ml_30\\\" alt=\\\"\\\" /></div>\\n                    </button>\\n                    <mat-menu #menu=\\\"matMenu\\\">\\n                        <button mat-menu-item *ngFor=\\\"let pagesize of pageSizeArray\\\" (click)=\\\"clickMenuItem(pagesize)\\\">\\n                            <span> {{ pagesize }}</span></button>\\n                    </mat-menu>\\n                </div>\\n\\n                <div class=\\\"pager_atom ml_15\\\">\\n                    <span>{{ started }} – {{ endPageIndex }} of {{ sourceData.length }}</span>\\n                </div>\\n            </div>\\n        </div>\\n        <div class=\\\"col-md-6 col-sm-6 col-xs-12\\\">\\n            <div class=\\\"pager_btn_wrapper right\\\">\\n                <div class=\\\"mr_15\\\" (click)=\\\"pageFirst()\\\">\\n                    <img class=\\\"pager_icon\\\" src=\\\"./../../../../assets/images/chevron-double-left.svg\\\" alt=\\\"\\\" />\\n                </div>\\n\\n                <div class=\\\"mr_15\\\" (click)=\\\"pageDecresed()\\\">\\n                    <img class=\\\"pager_icon\\\" src=\\\"./assets/images/arrow-left.svg\\\" alt=\\\"\\\" />\\n                </div>\\n\\n                <div *ngFor=\\\"let btn of viewPageButtonArray\\\">\\n                    <div [ngClass]=\\\"selectedPageBtn == btn? 'pager_primary_btn_selected mr_15' : 'pager_primary_btn mr_15'\\\"\\n                        (click)=\\\"pageBtnClicked(btn)\\\">\\n                        <span class=\\\"pager_display\\\">{{ btn }}</span>\\n                    </div>\\n                </div>\\n\\n                <div class=\\\"mr_15\\\" (click)=\\\"pageIncreased()\\\">\\n                    <img class=\\\"pager_icon\\\" src=\\\"./assets/images/arrow-right.svg\\\" alt=\\\"\\\" />\\n                </div>\\n                <div (click)=\\\"pageLast()\\\">\\n                    <img class=\\\"pager_icon\\\" src=\\\"./assets/images/chevron-double-right.svg\\\" alt=\\\"\\\" />\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n</div>\";"],"names":[],"sourceRoot":"webpack:///"}