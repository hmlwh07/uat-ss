{"version":3,"file":"src_app_pages_resourse-detail_resourse-detail_module_ts.js","mappings":"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","sources":["./src/app/core/master-data-map.ts","./src/app/pages/product-form/page-data.service.ts","./src/app/pages/products/print-preview-modal/print-preview-modal.component.ts","./src/app/pages/resourse-detail/resourse-detail.component.ts","./src/app/pages/resourse-detail/resourse-detail.module.ts","./src/app/pages/products/print-preview-modal/print-preview-modal.component.html","./src/app/pages/resourse-detail/resourse-detail.component.html"],"sourcesContent":["import { forkJoin, Observable, of } from \"rxjs\";\nimport { map, mergeMap } from \"rxjs/operators\";\nimport { MasterDataService } from \"../modules/master-data/master-data.service\";\nimport { ConfigInput } from \"../pages/form-component/field.interface\";\n\nexport function getMasterValue(masterServer: MasterDataService, response: any, column: ConfigInput[], editing: boolean = false): Observable<any> {\n\n  if (Array.isArray(response) && response.length > 0) {\n    return of(response).pipe(map((result: any[]) => {\n      let masterPost = []\n      let resource = result.map((res) => {\n        let masterObj = (res.data as any[]).filter(x => (x.value + \"\" as string).startsWith(\"T-\") || (x.value + \"\" as string).startsWith(\"TA-\"))\n        if (masterObj.length > 0) {\n          let postData = masterObj.map(x => {\n            let columnName = column.find(col => col.name == x.column)\n            if (columnName.masterData) {\n              return {\n                \"codeId\": x.value,\n                \"codeType\": columnName.masterData,\n                \"langCd\": \"EN\"\n              }\n            }\n          })\n          masterPost.push(...postData)\n        }\n      })\n\n      return { result, masterPost }\n    }), mergeMap((result: any) => {\n\n      if (result.masterPost.length > 0) {\n        let postData = {\n          \"codeBookRequest\": result.masterPost\n        }\n        return masterServer.getMasterValue(postData).pipe(map((masterValues: any) => {\n          return result.result.map(resp => {\n            resp.data = resp.data.flatMap(x => {\n              if ((x.value + \"\").startsWith(\"T-\") || (x.value + \"\").startsWith(\"TA-\")) {\n                let columnName = column.find(col => col.name == x.column)\n                let index = masterValues.findIndex(master => master.codeId == x.value && columnName.masterData == master.codeType)\n                if (index >= 0) {\n                  if (editing) {\n                    return [x, { column: x.column + \"Value\", value: masterValues[index].codeName }]\n                  } else {\n                    x.value = masterValues[index].codeName\n                  }\n                }\n              }\n              return x\n            })\n            return resp\n          })\n          // return result\n        }))\n      }\n      return of(result.result)\n    }))\n  }\n  return of(response)\n\n}\n\n// return masterServer.getMasterValue(postData).pipe(map((x: any) => {\n//   return x.map(masterD => {\n//     let index = res.data.findIndex(val => val.value == masterD.codeId)\n//     res.data[index].value = masterD.codeName\n//     return res.data[index]\n//   })\n// }), mergeMap((res2) => {\n\n//   let masterObj = (res.data as any[]).filter(x => !(x.value + \"\" as string).includes(\"T-\"))\n//   console.log([...masterObj, ...res2]);\n\n//   return of({ data: [...masterObj, ...res2] })\n// })\n// )\n// export function getMasterValue(masterServer: MasterDataService, response: any, column: ConfigInput[]): Observable<any> {\n//   console.log(response);\n\n//   if (Array.isArray(response) && response.length > 0) {\n//     return of(response).pipe(mergeMap((result: any[]) => {\n//       return forkJoin(result.map((res) => {\n//         let masterObj = (res.data as any[]).filter(x => (x.value + \"\" as string).includes(\"T-\"))\n\n//         if (masterObj.length > 0) {\n//           let postData = {\n//             \"codeBookRequest\": []\n//           }\n//           postData.codeBookRequest = masterObj.map(x => {\n//             let columnName = column.find(col => col.name == x.column)\n//             if (columnName.masterData) {\n//               return {\n//                 \"codeId\": x.value,\n//                 \"codeType\": columnName.masterData,\n//                 \"langCd\": \"EN\"\n//               }\n//             }\n\n//           })\n\n//           return masterServer.getMasterValue(postData).pipe(map((x: any) => {\n//             return x.map(masterD => {\n//               let index = res.data.findIndex(val => val.value == masterD.codeId)\n//               res.data[index].value = masterD.codeName\n//               return res.data[index]\n//             })\n//           }), mergeMap((res2) => {\n\n//             let masterObj = (res.data as any[]).filter(x => !(x.value + \"\" as string).includes(\"T-\"))\n//             console.log([...masterObj, ...res2]);\n\n//             return of({ data: [...masterObj, ...res2] })\n//           })\n//           )\n//         }\n//         return of(res)\n//         // res.data.map(x => {\n//         //   if((x.value as string).includes(\"T-\")){\n\n//         //   }\n//         // })\n//       }))\n//     }))\n//     // response.map(x=> {\n//     //   x.data.map()\n//     // })\n//   }\n//   return of(response)\n\n// }","import { HttpClient } from \"@angular/common/http\";\nimport { Injectable } from \"@angular/core\";\nimport { Observable, of } from \"rxjs\";\nimport { flatMap, mergeMap, switchMap } from \"rxjs/operators\";\nimport { environment } from \"../../../environments/environment\";\nimport { BizOperationService } from \"../../core/biz.operation.service\";\nimport { getMasterValue } from \"../../core/master-data-map\";\nimport { MasterDataService } from \"../../modules/master-data/master-data.service\";\nimport { ConfigInput } from \"../form-component/field.interface\";\n\nconst API_PAGEDATA_URL = `${environment.apiUrl}/pagedata`;\n\n@Injectable({ providedIn: 'root' })\nexport class PageDataService extends BizOperationService<any, number>{\n\n  constructor(protected httpClient: HttpClient, private masterData: MasterDataService) {\n    super(httpClient, API_PAGEDATA_URL);\n  }\n\n  getDetail(table: any, resourceId: any, id: any, view: boolean = false, colums: ConfigInput[] = [], editing: boolean = false) {\n    return this.httpClient.get(API_PAGEDATA_URL + \"/\" + table + \"/\" + resourceId + \"/\" + id).pipe(mergeMap((res: any) => {\n      if (view) {\n        return getMasterValue(this.masterData, res, colums, editing)\n      }\n      return of(res)\n    }))\n  }\n\n  deleteData(table, refID, id) {\n    return this.httpClient.delete(API_PAGEDATA_URL + \"/\" + table + \"/\" + refID + \"/\" + id)\n  }\n\n  updatePremimun(postData: any): Observable<any> {\n    return this.httpClient.put(API_PAGEDATA_URL + \"/resource\", postData)\n  }\n  // updateStatus(data){\n  //   return this.httpClient.put(API_PAGEDATA_URL + \"/resource\",data)\n  // }\n\n}","import { ChangeDetectorRef, Component, Input, OnDestroy, OnInit } from '@angular/core';\r\nimport { NgbActiveModal } from '@ng-bootstrap/ng-bootstrap';\r\nimport { FormUIService } from '../../dashboard/services/form-ui.service';\r\nimport { FromGroupData } from '../../form-component/field.interface';\r\nimport { PrintConfig, PrintFormat } from '../models/print-config.interface';\r\nimport { Product } from '../models/product.dto';\r\n\r\n\r\n@Component({\r\n  selector: 'app-print-preview-modal',\r\n  templateUrl: './print-preview-modal.component.html',\r\n  styleUrls: ['./print-preview-modal.component.scss'],\r\n})\r\nexport class PrintPreviewModalComponent implements OnInit, OnDestroy {\r\n  @Input() configData: PrintFormat[] = []\r\n  @Input() product: Product = {}\r\n  @Input() configOrder: FromGroupData[] = []\r\n  @Input() tempData: any = {}\r\n  @Input() resourcesId: string = \"\"\r\n  constructor(public modal: NgbActiveModal, private cdRef: ChangeDetectorRef) { }\r\n\r\n  ngOnInit() {\r\n\r\n  }\r\n\r\n  ngOnDestroy() { }\r\n\r\n  printPDf() {\r\n    window.scrollTo(0,0)\r\n    window.print();\r\n    // const printContent = document.getElementById(\"componentID\").cloneNode(true);;\r\n    // const WindowPrt = window.open('', '', 'left=0,top=0,width=900,height=900,toolbar=0,scrollbars=0,status=0');\r\n    // WindowPrt.document.body.append(printContent);\r\n    // WindowPrt.document.close();\r\n    // WindowPrt.focus();\r\n    // WindowPrt.print();\r\n    // WindowPrt.close();\r\n  }\r\n\r\n}\r\n","import { DatePipe, DecimalPipe, Location } from '@angular/common';\nimport { ChangeDetectorRef, Component, OnDestroy, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\nimport { AttachmentDownloadService } from '../../_metronic/core/services/attachment-data.service';\nimport { checkVaidDep } from '../check-parent';\nimport { ConfigInput, ConfigPage, FromGroupData, OptionValue } from '../form-component/field.interface';\nimport { PageDataService } from '../product-form/page-data.service';\nimport { PrintConfig } from '../products/models/print-config.interface';\nimport { PageUIType, ProductPages } from '../products/models/product.dto';\nimport { PrintPreviewModalComponent } from '../products/print-preview-modal/print-preview-modal.component';\nimport { AddOnQuoService } from '../products/services/add-on-quo.service';\nimport { CoverageQuoService } from '../products/services/coverage-quo.service';\nimport { ProductDataService } from '../products/services/products-data.service';\n\n@Component({\n  selector: 'app-resourse-detail',\n  templateUrl: './resourse-detail.component.html',\n  styleUrls: ['./resourse-detail.component.scss']\n})\nexport class ResourseDetailComponent implements OnInit, OnDestroy {\n  premiumAmt: string\n  item: any\n  resultObj: any = {}\n  type: string\n  Object = Object;\n  Array = Array;\n  pageOrder: any[]\n  coverage = {\n    sumInsured: false,\n    unit: false,\n    premium: false,\n  }\n  addon = {\n    sumInsured: false,\n    unit: false,\n    premium: false,\n  }\n  coverageData: any = {}\n  addOnData: any = {}\n  resourceDetail: any = {}\n  detailInput: any = {}\n  private formatedData = {}\n  printConfig: PrintConfig = {}\n  constructor(private productService: ProductDataService, private location: Location, private pageDataService: PageDataService, private addonQuo: AddOnQuoService, private coverageQuo: CoverageQuoService, private router: Router, private cdf: ChangeDetectorRef, private downloadService: AttachmentDownloadService, private numberPipe: DecimalPipe, private datePipe: DatePipe, private modalService: NgbModal) { }\n\n  async ngOnInit() {\n    if (!this.productService.createingProd || !this.productService.createingProd.id) {\n      this.location.back()\n    } else {\n      this.item = this.productService.createingProd\n      this.type = this.productService.previewType\n      this.resourceDetail = this.productService.editData\n      if (!this.resourceDetail) {\n        this.location.back()\n        return\n      }\n      let pageUI: ProductPages = JSON.parse(this.item.config);\n\n      if (this.productService.previewType == 'quotation') {\n        this.pageOrder = pageUI.quotation || []\n        this.detailInput = pageUI.quotation_input || {}\n      } else {\n        this.pageOrder = pageUI.application || []\n        this.detailInput = pageUI.application_input || {}\n      }\n      let dumType = this.type == 'policy' ? 'application' : this.type\n      let tempFormData = this.item.productUIs.map(x => {\n        if (x.type == dumType)\n          return JSON.parse(x.dynamicProduct.config)\n      })\n      // if (this.productService.resultData) {\n      //   this.resultObj = this.productService.resultData\n      //   this.rechangePageData(tempFormData)\n      // } else {\n      this.printConfig = JSON.parse(this.item.pdfConfig)\n      this.item = this.productService.createingProd\n      this.getDetail(tempFormData)\n      // }\n\n      // if (this.item.coverages && this.item.coverages.length > 0) {\n      //   this.coverage = {\n      //     sumInsured: this.item.coverages[0].sumInsured,\n      //     unit: this.item.coverages[0].unit,\n      //     premium: this.item.coverages[0].premium,\n      //   }\n\n      //   for (const item of this.item.coverages) {\n      //     let response: any = {};\n      //     try {\n      //       if (this.resourceDetail) {\n      //         response = await this.coverageQuo.getOne(item.id, this.resourceDetail.id).toPromise()\n      //       }\n      //     } catch (error) {\n\n      //     }\n      //     this.coverageData[item.id] = {\n      //       sum: response ? response.sumInsured || 0 : 0,\n      //       unit: response ? response.unit || 0 : 0,\n      //       premium: response ? response.premium || 0 : 0\n      //     }\n\n      //   }\n\n      // }\n      // if (this.item.addOns && this.item.addOns.length > 0) {\n      //   this.addon = {\n      //     sumInsured: this.item.addOns[0].sumInsured,\n      //     unit: this.item.addOns[0].unit,\n      //     premium: this.item.addOns[0].premium,\n      //   }\n      //   for (const item of this.item.addOns) {\n      //     let response: any = {};\n      //     try {\n      //       if (this.resourceDetail) {\n      //         response = await this.addonQuo.getOne(item.id, this.resourceDetail.id).toPromise()\n      //       }\n      //     } catch (error) {\n\n      //     }\n      //     this.addOnData[item.id] = {\n      //       sum: response ? response.sumInsured || 0 : 0,\n      //       unit: response ? response.unit || 0 : 0,\n      //       premium: response ? response.premium || 0 : 0\n      //     }\n      //   }\n      // }\n      this.cdf.detectChanges()\n    }\n  }\n  ngOnDestroy() {\n    this.productService.createingProd = null\n    this.productService.editData = null;\n  }\n\n  getDetail(tempFormData) {\n    this.getOldData(this.resourceDetail, tempFormData)\n  }\n\n  getOldData(oldData: any, tempFormData) {\n    let index = 0\n    // this.pageOrder.forEach((element) => {\n    // let lengthData = this.pageOrder.filter(x => x.type == PageUIType.DYN).length\n    let lengthData = this.pageOrder.length\n    for (let element of this.pageOrder) {\n      if (element.type == PageUIType.DYN) {\n        let page = this.findPageValue(tempFormData, element.id)\n        this.pageOrder[index].tableName = page.tableName\n        this.pageOrder[index].id = page.id\n        this.pageOrder[index].controls = page.controls\n\n        this.pageDataService.getDetail(page.tableName, oldData.id, page.id, true, page.controls).toPromise().then((res: any[]) => {\n\n          if (res) {\n            let temp = page.pageType == 'form' ? {} : []\n            for (const data of res) {\n              let tmpObj = {}\n              for (const item of data.data) {\n                if (item.column != 'id' && item.column != 'created_at' && item.column != 'updated_at')\n                  tmpObj[item.column] = item.value\n              }\n              if (Array.isArray(temp)) {\n                temp.push(tmpObj)\n              } else {\n                temp = tmpObj\n              }\n            };\n            this.resultObj[page.tableName + page.id] = temp\n            this.formatedData = JSON.parse(JSON.stringify(this.resultObj))\n\n            if (lengthData == index) {\n              this.cdf.detectChanges()\n            }\n          }\n        })\n      }\n      index += 1\n\n    }\n    this.cdf.detectChanges()\n    // });\n\n  }\n\n  download(cols: string[], data: any) {\n    let value = this.getOtherData(cols, data)\n    if (value) {\n      let valueId = value.split(\"].\")[0].replace(\"[\", \"\")\n      this.downloadService.getDownload(valueId, value)\n    }\n  }\n\n  getFormatTable(controls: ConfigInput[]) {\n    // let tableReform = []\n    // let parentArray: string[] = []\n    // let tempControls: ConfigInput[] = JSON.parse(JSON.stringify(controls))\n    // for (let x of tempControls) {\n    //   let skip = false\n    //   if (!x.isHideView) {\n    //     if (x.dependency) {\n    //       let index = parentArray.findIndex(data => data == x.dependency.parentName)\n    //       if (index < 0) {\n    //         parentArray.push(x.dependency.parentName)\n    //       } else {\n    //         skip = true\n    //       }\n    //       // parentArray.push()\n    //     }\n    //     if (!skip) {\n    //       let tempObj = {\n    //         title: x.label || x.name,\n    //         cols: [x.name],\n    //         parent: x.dependency ? x.dependency.parentName : \"\"\n    //       }\n    //       tableReform.push(tempObj)\n    //     } else {\n    //       let index = tableReform.findIndex(data => data.parent == x.dependency.parentName)\n    //       if (index >= 0)\n    //         tableReform[index].cols.push(x.name)\n    //     }\n    //     // return x\n    //   }\n    // }\n    // return tableReform\n\n    let tableReform = []\n    let parentArray: string[] = []\n    let tempControls: ConfigInput[] = JSON.parse(JSON.stringify(controls))\n    for (let x of tempControls) {\n      x.options = x.options ? x.options : []\n      let skip = false\n      if (!x.isHideView) {\n        if (x.tableTitle) {\n          let index = parentArray.findIndex(data => data == x.tableTitle)\n          if (index < 0) {\n            parentArray.push(x.tableTitle)\n          } else {\n            skip = true\n          }\n          // parentArray.push()\n          // x.master == 'true' ? x.name + \"Value\" :\n        }\n        if (!skip) {\n          let tempName = x.name\n          let otherNameObj = {\n            name: tempName,\n            type: x.input,\n            subType: x.type,\n            options: (x.master == \"false\" || x.master == false) && x.options.length > 0 ? x.options : []\n          }\n          let tempObj = {\n            title: x.tableTitle || x.label || x.name,\n            cols: [otherNameObj],\n            type: x.input,\n            subType: x.type,\n            parent: x.dependency ? x.dependency.parentName : \"\",\n            options: (x.master == \"false\" || x.master == false) && x.options.length > 0 ? x.options : []\n          }\n          tableReform.push(tempObj)\n        } else {\n          let index = tableReform.findIndex(data => data.parent == x.dependency.parentName)\n          if (index >= 0) {\n            let tempName = x.name\n            let otherNameObj = {\n              name: tempName,\n              type: x.input,\n              subType: x.type,\n              options: (x.master == \"false\" || x.master == false) && x.options.length > 0 ? x.options : []\n            }\n            tableReform[index].cols.push(otherNameObj)\n          }\n        }\n        // return x\n      }\n    }\n    return tableReform\n  }\n\n  getOtherData(cols: any[], data: any) {\n    for (let col of cols) {\n      if (data[col.name]) {\n        if ((data[col.name] + \"\").length > 0) {\n          let value = \"\"\n          if (col.type == \"input\" && col.subType == \"number\") {\n            return this.numberPipe.transform(data[col.name])\n          }\n          if (col.type == \"date\") {\n            return this.datePipe.transform(data[col.name], \"dd/MM/yyyy\")\n          }\n          if (col.options.length > 0) {\n            let valueData = col.options.find(x => x.value == data[col.name])\n            if (valueData) {\n              return valueData.text\n            }\n          }\n          return data[col.name]\n        }\n      }\n    }\n  }\n\n  findPageValue(array: ConfigPage[], value: string) {\n\n    let data: FromGroupData\n    for (let index = 0; index < array.length; index++) {\n      if (!array[index]) continue\n      data = array[index].fromGroup.find(x => x.id == value);\n      if (data) {\n        data.controls.map(x => {\n          if (this.detailInput[value] && x.input != \"underline\" && x.input != \"label\") {\n            x.show = this.detailInput[value][x.name] >= 0 ? (this.detailInput[value][x.name] > 0 ? true : false) : x.show\n            x.disabled = this.detailInput[value][x.name] >= 0 ? (this.detailInput[value][x.name] == 2 ? true : x.disabled) : x.disabled\n          } else if (this.detailInput[value] && x.input == \"label\") {\n            x.show = this.detailInput[value][x.placeholder] >= 0 ? (this.detailInput[value][x.placeholder] > 0 ? true : false) : x.show\n          }\n          return x\n        })\n\n        break\n      }\n      // break\n    }\n\n    return data\n  }\n\n  rechangePageData(tempFormData) {\n    for (let index = 0; index < this.pageOrder.length; index++) {\n      const element = this.pageOrder[index];\n      if (element.id != 'coverage' && element.id != 'addon') {\n        let page = this.findPageValue(tempFormData, element.id)\n        this.pageOrder[index].tableName = page.tableName\n        this.pageOrder[index].id = page.id\n        this.pageOrder[index].controls = page.controls\n\n      }\n    }\n    // this.pageOrder.forEach((element) => {\n    //   if (element.id != 'coverage' && element.id != 'addon') {\n\n    //   }\n    // })\n  }\n\n  goToList() {\n    if (this.type == 'quotation') {\n      this.productService.createingProd = null;\n      this.productService.editData = null;\n      this.router.navigateByUrl(\"/sale/quotation/list\")\n    } else\n      this.router.navigateByUrl(\"/sale/application/list\")\n  }\n\n  createPolicy() {\n    this.productService.createingProdRef = this.item\n    this.productService.viewType = 'policy'\n    this.productService.type = 'policy'\n    this.productService.referenceID = this.resourceDetail.id\n    this.productService.referenceStatus = this.resourceDetail.status\n    this.productService.editData = null\n    this.router.navigateByUrl(\"/product-form\")\n  }\n  checkDep(dependency, checkData) {\n    if (dependency)\n      return checkVaidDep(dependency, { value: checkData })\n    return true\n  }\n\n  getOptionValue(value, options: OptionValue[], id: string, name: string) {\n    let valueData = options.find(x => x.value == value)\n    if (valueData) {\n      if (this.formatedData)\n        this.formatedData[id][name] = valueData.text\n      return valueData.text\n    }\n    return value\n  }\n\n  viewPrint() {\n    const modalRef = this.modalService.open(PrintPreviewModalComponent, { size: 'xl', backdrop: false });\n    modalRef.componentInstance.configData = this.printConfig.printFormat\n    modalRef.componentInstance.configOrder = this.printConfig.prinitUI\n    modalRef.componentInstance.product = this.item\n    modalRef.componentInstance.tempData = this.formatedData\n    modalRef.componentInstance.resourcesId = this.resourceDetail.id\n    modalRef.result.then(() => { }, (res) => {\n\n    })\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule, DatePipe, DecimalPipe } from '@angular/common';\nimport { ResourseDetailComponent } from './resourse-detail.component';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { NgbModalModule } from '@ng-bootstrap/ng-bootstrap';\nimport { FormComponentModule } from '../form-component/form-component.module';\nimport { RouterModule } from '@angular/router';\nimport { StaticPagesViewModule } from '../static-page-review/static-pages-reivew.module';\n\n@NgModule({\n  declarations: [ResourseDetailComponent],\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    NgbModalModule,\n    FormComponentModule,\n    StaticPagesViewModule,\n    RouterModule.forChild([\n      {\n        path: '',\n        component: ResourseDetailComponent,\n      },\n    ]),\n  ],\n  providers: [DatePipe, DecimalPipe]\n})\nexport class ResourseDetailModule { }\n","export default \"<div class=\\\"modal-content\\\">\\r\\n  <div class=\\\"modal-header\\\">\\r\\n    <div class=\\\"modal-title h4 left-border-image\\\" id=\\\"example-modal-sizes-title-lg\\\">\\r\\n      Preview Print Form\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"overlay overlay-block cursor-default modal-body\\\">\\r\\n    <div id=\\\"printable\\\">\\r\\n      <div id=\\\"second-print\\\">\\r\\n        <app-print-view-box [config]=\\\"configData\\\" [product]=\\\"product\\\" [resourcesId]=\\\"resourcesId\\\" [tempData]=\\\"tempData\\\" [configOrder]=\\\"configOrder\\\">\\r\\n        </app-print-view-box>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"modal-footer\\\">\\r\\n    <button type=\\\"button\\\" class=\\\"btn btn-light btn-elevate mr-2\\\" (click)=\\\"printPDf()\\\">Print</button>\\r\\n    <button type=\\\"button\\\" class=\\\"btn btn-light btn-elevate mr-2\\\" (click)=\\\"modal.dismiss()\\\">Close</button>\\r\\n  </div>\\r\\n</div>\";","export default \"<div class=\\\"row\\\">\\n  <div class=\\\"col-12\\\">\\n    <div class=\\\"card card-custom gutter-b\\\">\\n      <div class=\\\"card-body\\\">\\n        <div style=\\\"display:flex\\\">\\n          <div class=\\\"top-box\\\">\\n            PRODUCT <br>\\n            <span *ngIf=\\\"item\\\">{{item.name}}</span>\\n          </div>\\n          <!-- <div class=\\\"top-box\\\">\\n            Customer <br>\\n            <span>Jimmy Tao</span>\\n          </div> -->\\n          <div class=\\\"top-box\\\">\\n            PREMIUM <br>\\n            <span *ngIf=\\\"resourceDetail\\\">{{resourceDetail.premiumView || 0 }}</span>\\n          </div>\\n          <button class=\\\"btn btn-outline-primary\\\" style=\\\"margin-left: auto;\\\" (click)=\\\"viewPrint()\\\">\\n            <i class=\\\"flaticon2-print\\\"></i> Print\\n          </button>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n<ng-container *ngIf=\\\"resourceDetail\\\">\\n  <div class=\\\"row\\\">\\n    <ng-container *ngFor=\\\"let page of pageOrder\\\">\\n      <!-- <div class=\\\"{{Array.isArray(resultObj[page.tableName+item.id]) ? 'col-sm-12' : 'col-sm-6'}}\\\"> -->\\n      <div class=\\\"col-md-12 mx-auto\\\">\\n        <ng-container *ngIf=\\\"page.type === 'static';else dynView \\\">\\n          <ng-container staticPageView [compId]=\\\"page.id\\\" [product]=\\\"item\\\" [resourcesId]=\\\"resourceDetail.id\\\">\\n          </ng-container>\\n        </ng-container>\\n        <ng-template #dynView>\\n          <div class=\\\"card card-custom gutter-b\\\">\\n            <div class=\\\"card-header\\\">\\n              <div class=\\\"card-title\\\">\\n                <h3 class=\\\"card-label\\\">{{ page.pageTitle | titlecase }} :</h3>\\n              </div>\\n            </div>\\n            <div class=\\\"card-body customer-card-body\\\">\\n              <ng-container>\\n                <ng-container *ngIf=\\\"resultObj[page.tableName+page.id]\\\">\\n                  <ul class=\\\"list-group\\\" *ngIf=\\\"!Array.isArray(resultObj[page.tableName+page.id])\\\">\\n                    <ng-container *ngFor=\\\"let cont of page.controls\\\">\\n                      <ng-container *ngIf=\\\"cont.show\\\">\\n                        <!-- <hr > -->\\n                        <li *ngIf=\\\"cont.input == 'label'\\\" class=\\\"list-group-item\\\"\\n                          style=\\\"border-top: 0.5px solid #dad9d9 !important;\\\">\\n                          <h5 style=\\\"margin-bottom: 0px;\\\">{{cont.name}} </h5>\\n\\n                        </li>\\n                        <ng-container\\n                          *ngIf=\\\"!cont.isHideView && checkDep(cont.dependency,resultObj[page.tableName+page.id]) && cont.input != 'underline' && cont.input != 'label'\\\">\\n                          <li class=\\\"list-group-item\\\">\\n                            <!-- <span class=\\\"pull-right\\\"> -->\\n                            <!-- <span class=\\\"btn btn-xs btn-default\\\"> -->\\n                            <!-- {{cont.input}}cont.input != 'label' ?  -->\\n                            {{cont.label || cont.name }} :\\n                            <!-- </span> -->\\n                            <!-- </span> -->\\n                            <ng-container\\n                              *ngIf=\\\"(cont.master == 'false' || cont.master == false) && cont.options && cont.options.length > 0 ;else nomalValue\\\">\\n                              <span>\\n                                {{getOptionValue(resultObj[page.tableName+page.id][cont.name],cont.options,page.tableName+page.id,cont.name)}}</span>\\n                            </ng-container>\\n                            <ng-template #nomalValue>\\n                              <span *ngIf=\\\"cont.input == 'input' && cont.type == 'currency'\\\">\\n                                {{ (resultObj[page.tableName+page.id][cont.name] || 0 ) | number }}\\n                              </span>\\n                              <span *ngIf=\\\"cont.input == 'date'\\\">\\n                                <!-- {{resultObj[page.tableName+page.id][cont.name].length > 0 ? true: false}} D -->\\n                                {{ resultObj[page.tableName+page.id][cont.name] &&\\n                                resultObj[page.tableName+page.id][cont.name] != \\\"null\\\" ?\\n                                (resultObj[page.tableName+page.id][cont.name] | date: 'dd/MM/yyyy') : \\\"\\\" }}\\n\\n                              </span>\\n                              <span *ngIf=\\\"cont.type != 'currency' && cont.input != 'date'\\\">\\n                                {{resultObj[page.tableName+page.id][cont.name]}}\\n                              </span>\\n                              <ng-container *ngIf=\\\"cont.input == 'date' && cont.type == 'policy'\\\">\\n                                <!-- {{cont.endLabel == '-' }}  --> -\\n                                {{resultObj[page.tableName+page.id][cont.endName] | date: 'dd/MM/yyyy'}}\\n                              </ng-container>\\n                            </ng-template>\\n                            <div style=\\\"clear: both;\\\"></div>\\n                          </li>\\n\\n                        </ng-container>\\n                      </ng-container>\\n                    </ng-container>\\n                  </ul>\\n                  <div class=\\\"table-responsive angular-bootstrap-table\\\"\\n                    *ngIf=\\\"Array.isArray(resultObj[page.tableName+page.id])\\\">\\n                    <table class=\\\"table table-head-custom table-vertical-center\\\">\\n                      <thead>\\n                        <tr>\\n                          <th>NO</th>\\n                          <ng-container *ngFor=\\\"let cont of getFormatTable(page.controls)\\\">\\n                            <th [ngStyle]=\\\"{'text-align': cont.subType == 'currency' ? 'right' : 'left'}\\\">{{cont.title}}\\n                            </th>\\n                            <!-- <td *ngIf=\\\"cont.input != 'file'\\\">{{ getOtherData(cont.cols,item) }}</td>\\n                            <td *ngIf=\\\"cont.input == 'file'\\\"> <a href=\\\"javascript:;\\\"\\n                                (click)=\\\"download(cont.cols,item)\\\">{{ getOtherData(cont.cols,item) }}</a> </td> -->\\n                          </ng-container>\\n                        </tr>\\n                      </thead>\\n                      <tbody>\\n                        <ng-container *ngIf=\\\"resultObj[page.tableName+page.id]\\\">\\n                          <tr *ngFor=\\\"let result of resultObj[page.tableName+page.id];let i = index\\\">\\n                            <td>{{i+1}}</td>\\n                            <ng-container *ngFor=\\\"let control of getFormatTable(page.controls)\\\">\\n                              <td [ngStyle]=\\\"{'text-align': control.subType == 'currency' ? 'right' : 'left'}\\\">\\n                                {{getOtherData(control.cols,result) }}</td>\\n                            </ng-container>\\n                          </tr>\\n                        </ng-container>\\n                      </tbody>\\n                    </table>\\n                  </div>\\n                </ng-container>\\n              </ng-container>\\n\\n            </div>\\n\\n            <!--begin::Footer-->\\n            <!-- <div class=\\\"card-footer\\\">\\n          <div class=\\\"row\\\">\\n            <div class=\\\"col-lg-8\\\">\\n              <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\">\\n                Go To {{ type | titlecase }} List\\n              </button>\\n            </div>\\n          </div>\\n        </div> -->\\n            <!--end::Footer-->\\n          </div>\\n        </ng-template>\\n      </div>\\n    </ng-container>\\n  </div>\\n\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-12\\\">\\n      <div class=\\\"card card-custom gutter-b\\\">\\n        <div class=\\\"card-footer\\\">\\n          <div class=\\\"row\\\">\\n            <div class=\\\"{{type == 'quotation' ? 'col-sm-6': 'col-sm-12' }}\\\">\\n              <button type=\\\"submit\\\" class=\\\"btn btn-primary btn-block\\\" (click)=\\\"goToList()\\\">\\n                Go Back To {{ (type == 'policy' ? \\\"application\\\" : type) | titlecase }} List\\n              </button>\\n            </div>\\n            <div class=\\\"col-sm-6\\\" *ngIf=\\\"type == 'quotation'\\\">\\n              <button type=\\\"submit\\\" class=\\\"btn btn-primary btn-block\\\" (click)=\\\"createPolicy()\\\">\\n                Create New Application\\n              </button>\\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n</ng-container>\";"],"names":[],"sourceRoot":"webpack:///"}