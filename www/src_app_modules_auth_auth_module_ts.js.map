{"version":3,"file":"src_app_modules_auth_auth_module_ts.js","mappings":"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","sources":["./src/app/modules/auth/auth-routing.module.ts","./src/app/modules/auth/auth.component.ts","./src/app/modules/auth/auth.module.ts","./src/app/modules/auth/forgot-password/forgot-password.component.ts","./src/app/modules/auth/login/login.component.ts","./src/app/modules/auth/logout/logout.component.ts","./src/app/modules/auth/registration/registration.component.ts","./src/app/modules/auth/auth.component.html","./src/app/modules/auth/forgot-password/forgot-password.component.html","./src/app/modules/auth/login/login.component-new.html","./src/app/modules/auth/logout/logout.component.html","./src/app/modules/auth/registration/registration.component.html"],"sourcesContent":["import {NgModule} from '@angular/core';\r\nimport {Routes, RouterModule} from '@angular/router';\r\nimport {AuthComponent} from './auth.component';\r\nimport {LoginComponent} from './login/login.component';\r\nimport {RegistrationComponent} from './registration/registration.component';\r\nimport {ForgotPasswordComponent} from './forgot-password/forgot-password.component';\r\nimport {LogoutComponent} from './logout/logout.component';\r\n\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: AuthComponent,\r\n    children: [\r\n      {\r\n        path: '',\r\n        redirectTo: 'login',\r\n        pathMatch: 'full'\r\n      },\r\n      {\r\n        path: 'login',\r\n        component: LoginComponent,\r\n        data: {returnUrl: window.location.pathname}\r\n      },\r\n      {\r\n        path: 'registration',\r\n        component: RegistrationComponent\r\n      },\r\n      {\r\n        path: 'forgot-password',\r\n        component: ForgotPasswordComponent\r\n      },\r\n      {\r\n        path: 'logout',\r\n        component: LogoutComponent\r\n      },\r\n      {path: '', redirectTo: 'login', pathMatch: 'full'},\r\n      {path: '**', redirectTo: 'login', pathMatch: 'full'},\r\n    ]\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [ RouterModule.forChild(routes) ],\r\n  exports: [ RouterModule ]\r\n})\r\nexport class AuthRoutingModule {}\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-auth',\r\n  templateUrl: './auth.component.html',\r\n  styleUrls: ['./auth.component.scss']\r\n})\r\nexport class AuthComponent implements OnInit {\r\n\r\n  today: Date = new Date();\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { ReactiveFormsModule, FormsModule } from '@angular/forms';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { AuthRoutingModule } from './auth-routing.module';\r\nimport { LoginComponent } from './login/login.component';\r\nimport { RegistrationComponent } from './registration/registration.component';\r\nimport { ForgotPasswordComponent } from './forgot-password/forgot-password.component';\r\nimport { LogoutComponent } from './logout/logout.component';\r\nimport { AuthComponent } from './auth.component';\r\nimport { StaticPagesModule } from '../../pages/static-pages/static-pages.module';\r\nimport { LanguagesService } from '../languages/languages.service';\r\nimport { LanguageModule } from '../languages/languages.modules';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    LoginComponent,\r\n    RegistrationComponent,\r\n    ForgotPasswordComponent,\r\n    LogoutComponent,\r\n    AuthComponent,\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    AuthRoutingModule,\r\n    FormsModule,\r\n    LanguageModule,\r\n    ReactiveFormsModule,\r\n    HttpClientModule,\r\n  ],\r\n})\r\nexport class AuthModule {}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport { Observable, Subscription } from 'rxjs';\r\nimport { AuthService } from '../_services/auth.service';\r\nimport { first } from 'rxjs/operators';\r\n\r\nenum ErrorStates {\r\n  NotSubmitted,\r\n  HasError,\r\n  NoError,\r\n}\r\n\r\n@Component({\r\n  selector: 'app-forgot-password',\r\n  templateUrl: './forgot-password.component.html',\r\n  styleUrls: ['./forgot-password.component.scss'],\r\n})\r\nexport class ForgotPasswordComponent implements OnInit {\r\n  forgotPasswordForm: FormGroup;\r\n  errorState: ErrorStates = ErrorStates.NotSubmitted;\r\n  errorStates = ErrorStates;\r\n  isLoading$: Observable<boolean>;\r\n\r\n  // private fields\r\n  private unsubscribe: Subscription[] = []; // Read more: => https://brianflove.com/2016/12/11/anguar-2-unsubscribe-observables/\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    private authService: AuthService\r\n  ) {\r\n    this.isLoading$ = this.authService.isLoading$;\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.initForm();\r\n  }\r\n\r\n  // convenience getter for easy access to form fields\r\n  get f() {\r\n    return this.forgotPasswordForm.controls;\r\n  }\r\n\r\n  initForm() {\r\n    this.forgotPasswordForm = this.fb.group({\r\n      email: [\r\n        'admin@demo.com',\r\n        Validators.compose([\r\n          Validators.required,\r\n          Validators.email,\r\n          Validators.minLength(3),\r\n          Validators.maxLength(320), // https://stackoverflow.com/questions/386294/what-is-the-maximum-length-of-a-valid-email-address\r\n        ]),\r\n      ],\r\n    });\r\n  }\r\n\r\n  submit() {\r\n    this.errorState = ErrorStates.NotSubmitted;\r\n    const forgotPasswordSubscr = this.authService\r\n      .forgotPassword(this.f.email.value)\r\n      .pipe(first())\r\n      .subscribe((result: boolean) => {\r\n        this.errorState = result ? ErrorStates.NoError : ErrorStates.HasError;\r\n      });\r\n    this.unsubscribe.push(forgotPasswordSubscr);\r\n  }\r\n}\r\n","import { Component, OnInit, OnDestroy, ChangeDetectorRef } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { Subscription, Observable, of, mergeMap } from 'rxjs';\r\nimport { first } from 'rxjs/operators';\r\nimport { UserModel } from '../_models/user.model';\r\nimport { AuthService } from '../_services/auth.service';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { LanguagesService } from '../../languages/languages.service';\r\nimport { MenuDataService } from '../../../core/menu-data.service';\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component-new.html',\r\n  styleUrls: ['./login.component.scss'],\r\n})\r\nexport class LoginComponent implements OnInit, OnDestroy {\r\n  // KeenThemes mock, change it to:\r\n  // defaultAuth = {\r\n  //   email: '',\r\n  //   password: '',\r\n  // };\r\n  defaultAuth: any = {\r\n    email: '',\r\n    password: '',\r\n  };\r\n  loginForm: FormGroup;\r\n  hasError: boolean;\r\n  returnUrl: string;\r\n  isLoading$: Observable<boolean>;\r\n\r\n  // private fields\r\n  private unsubscribe: Subscription[] = []; // Read more: => https://brianflove.com/2016/12/11/anguar-2-unsubscribe-observables/\r\n\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    private authService: AuthService,\r\n    private route: ActivatedRoute,\r\n    private router: Router,\r\n    private translate: LanguagesService,\r\n    private menuDataService: MenuDataService\r\n  ) {\r\n    this.isLoading$ = this.authService.isLoading$;\r\n    // redirect to home if already logged in\r\n    if (this.authService.currentUserValue) {\r\n      this.router.navigate(['/'], { replaceUrl: true });\r\n    }\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.initForm();\r\n    // get return url from route parameters or default to '/'\r\n    // this.returnUrl =\r\n    //   this.route.snapshot.queryParams['returnUrl'.toString()] || '/';\r\n    this.unsubscribe[0] = this.route.queryParams.subscribe(params => {\r\n      this.returnUrl = params['redirectTo']; // (+) converts string 'id' to a number\r\n      // In a real app: dispatch action to load the details here.\r\n    });\r\n  }\r\n\r\n  // convenience getter for easy access to form fields\r\n  get f() {\r\n    return this.loginForm.controls;\r\n  }\r\n\r\n  initForm() {\r\n    this.loginForm = this.fb.group({\r\n      email: [\r\n        this.defaultAuth.email,\r\n        Validators.compose([\r\n          Validators.required,\r\n          // Validators.email,\r\n          Validators.minLength(3),\r\n          Validators.maxLength(320), // https://stackoverflow.com/questions/386294/what-is-the-maximum-length-of-a-valid-email-address\r\n        ]),\r\n      ],\r\n      password: [\r\n        this.defaultAuth.password,\r\n        Validators.compose([\r\n          Validators.required,\r\n          Validators.minLength(3),\r\n          Validators.maxLength(100),\r\n        ]),\r\n      ],\r\n    });\r\n  }\r\n\r\n  submit() {\r\n    this.hasError = false;\r\n    const loginSubscr = this.authService\r\n      .login(this.f.email.value, this.f.password.value)\r\n      .pipe(first(), mergeMap((x) => {\r\n        return this.menuDataService.getMenusData().pipe(mergeMap((data) => {\r\n          return of(x)\r\n        }))\r\n      }))\r\n      .subscribe((user: UserModel) => {\r\n        if (user) {\r\n          this.router.navigateByUrl(this.returnUrl, { replaceUrl: true });\r\n        } else {\r\n          this.hasError = true;\r\n        }\r\n      });\r\n    this.unsubscribe.push(loginSubscr);\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.unsubscribe.forEach((sb) => sb.unsubscribe());\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { AuthService } from '../_services/auth.service';\r\n\r\n@Component({\r\n  selector: 'app-logout',\r\n  templateUrl: './logout.component.html',\r\n  styleUrls: ['./logout.component.scss'],\r\n})\r\nexport class LogoutComponent implements OnInit {\r\n  constructor(private authService: AuthService) {\r\n    this.authService.logout();\r\n  }\r\n\r\n  ngOnInit(): void {}\r\n}\r\n","import { Component, OnInit, OnDestroy } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport { Subscription, Observable } from 'rxjs';\r\nimport { AuthService } from '../_services/auth.service';\r\nimport { Router } from '@angular/router';\r\nimport { ConfirmPasswordValidator } from './confirm-password.validator';\r\nimport { UserModel } from '../_models/user.model';\r\nimport { first } from 'rxjs/operators';\r\n\r\n@Component({\r\n  selector: 'app-registration',\r\n  templateUrl: './registration.component.html',\r\n  styleUrls: ['./registration.component.scss'],\r\n})\r\nexport class RegistrationComponent implements OnInit, OnDestroy {\r\n  registrationForm: FormGroup;\r\n  hasError: boolean;\r\n  isLoading$: Observable<boolean>;\r\n\r\n  // private fields\r\n  private unsubscribe: Subscription[] = []; // Read more: => https://brianflove.com/2016/12/11/anguar-2-unsubscribe-observables/\r\n\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    private authService: AuthService,\r\n    private router: Router\r\n  ) {\r\n    this.isLoading$ = this.authService.isLoading$;\r\n    // redirect to home if already logged in\r\n    if (this.authService.currentUserValue) {\r\n      this.router.navigate(['/']);\r\n    }\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.initForm();\r\n  }\r\n\r\n  // convenience getter for easy access to form fields\r\n  get f() {\r\n    return this.registrationForm.controls;\r\n  }\r\n\r\n  initForm() {\r\n    this.registrationForm = this.fb.group(\r\n      {\r\n        fullname: [\r\n          '',\r\n          Validators.compose([\r\n            Validators.required,\r\n            Validators.minLength(3),\r\n            Validators.maxLength(100),\r\n          ]),\r\n        ],\r\n        email: [\r\n          'qwe@qwe.qwe',\r\n          Validators.compose([\r\n            Validators.required,\r\n            Validators.email,\r\n            Validators.minLength(3),\r\n            Validators.maxLength(320), // https://stackoverflow.com/questions/386294/what-is-the-maximum-length-of-a-valid-email-address\r\n          ]),\r\n        ],\r\n        password: [\r\n          '',\r\n          Validators.compose([\r\n            Validators.required,\r\n            Validators.minLength(3),\r\n            Validators.maxLength(100),\r\n          ]),\r\n        ],\r\n        cPassword: [\r\n          '',\r\n          Validators.compose([\r\n            Validators.required,\r\n            Validators.minLength(3),\r\n            Validators.maxLength(100),\r\n          ]),\r\n        ],\r\n        agree: [false, Validators.compose([Validators.required])],\r\n      },\r\n      {\r\n        validator: ConfirmPasswordValidator.MatchPassword,\r\n      }\r\n    );\r\n  }\r\n\r\n  submit() {\r\n    this.hasError = false;\r\n    const result = {};\r\n    Object.keys(this.f).forEach(key => {\r\n      result[key] = this.f[key].value;\r\n    });\r\n    const newUser = new UserModel();\r\n    newUser.setUser(result);\r\n    const registrationSubscr = this.authService\r\n      .registration(newUser)\r\n      .pipe(first())\r\n      .subscribe((user: UserModel) => {\r\n        if (user) {\r\n          this.router.navigate(['/']);\r\n        } else {\r\n          this.hasError = true;\r\n        }\r\n      });\r\n    this.unsubscribe.push(registrationSubscr);\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.unsubscribe.forEach((sb) => sb.unsubscribe());\r\n  }\r\n}\r\n","export default \"<div class=\\\"d-flex flex-column flex-root h-100\\\" id=\\\"kt_login_wrapper\\\">\\r\\n    <!--begin::Login-->\\r\\n    <div class=\\\"login login-1 login-signin-on d-flex flex-column flex-lg-row flex-column-fluid bg-white\\\" id=\\\"kt_login\\\" style=\\\"background-color: #005eaa !important;background-size: cover;background-position: bottom;\\\">\\r\\n        <!--begin::Aside-->\\r\\n        <!-- <div class=\\\"login-aside d-flex flex-column flex-row-auto\\\" style=\\\"background-color: #F2C98A;\\\"> -->\\r\\n        <!--begin::Aside Top-->\\r\\n        <!-- <div class=\\\"d-flex flex-column-auto flex-column pt-lg-40 pt-15\\\"> -->\\r\\n        <!--begin::Aside header-->\\r\\n        <!-- <a href=\\\"#\\\" class=\\\"text-center mb-10\\\">\\r\\n          <img src=\\\"./assets/media/logos/logo-letter-1.png\\\" class=\\\"max-h-70px\\\" alt=\\\"\\\" />\\r\\n        </a> -->\\r\\n        <!--end::Aside header-->\\r\\n\\r\\n        <!--begin::Aside title-->\\r\\n        <!-- <h3 class=\\\"font-weight-bolder text-center font-size-h4 font-size-h1-lg\\\" style=\\\"color: #986923;\\\">\\r\\n          Discover Amazing web<br />\\r\\n          with great build tools\\r\\n        </h3> -->\\r\\n        <!--end::Aside title-->\\r\\n        <!-- </div> -->\\r\\n        <!--end::Aside Top-->\\r\\n\\r\\n        <!--begin::Aside Bottom-->\\r\\n        <!-- <div class=\\\"aside-img d-flex flex-row-fluid bgi-no-repeat bgi-position-y-bottom bgi-position-x-center\\\" style=\\\"background-image: url('./assets/media/svg/illustrations/login-visual-1.svg')\\\"></div> -->\\r\\n        <!--end::Aside Bottom-->\\r\\n        <!-- </div> -->\\r\\n        <!--begin::Aside-->\\r\\n\\r\\n\\r\\n        <!--begin::Content-->\\r\\n        <div class=\\\"login-content flex-row-fluid d-flex flex-column justify-content-center position-relative overflow-hidden p-7 mx-auto\\\">\\r\\n            <!--begin::Content body-->\\r\\n            <div class=\\\"d-flex flex-column-fluid flex-center\\\">\\r\\n                <router-outlet></router-outlet>\\r\\n            </div>\\r\\n            <!--end::Content body-->\\r\\n\\r\\n            <!--begin::Content footer-->\\r\\n            <!-- <div class=\\\"d-flex justify-content-lg-start justify-content-center align-items-end py-7 py-lg-0\\\">\\r\\n                <a href=\\\"#\\\" class=\\\"text-primary font-weight-bolder font-size-h5\\\">Terms</a>\\r\\n                <a href=\\\"#\\\" class=\\\"text-primary ml-10 font-weight-bolder font-size-h5\\\">Plans</a>\\r\\n                <a href=\\\"#\\\" class=\\\"text-primary ml-10 font-weight-bolder font-size-h5\\\">Contact Us</a>\\r\\n            </div> -->\\r\\n            <!--end::Content footer-->\\r\\n        </div>\\r\\n        <!--end::Content-->\\r\\n    </div>\\r\\n    <!--end::Login-->\\r\\n</div>\";","export default \"<div class=\\\"login-form login-forgot\\\">\\r\\n  <!--begin::Form-->\\r\\n  <form\\r\\n    class=\\\"form fv-plugins-bootstrap fv-plugins-framework\\\"\\r\\n    novalidate=\\\"novalidate\\\"\\r\\n    [formGroup]=\\\"forgotPasswordForm\\\"\\r\\n    (ngSubmit)=\\\"submit()\\\"\\r\\n    id=\\\"kt_login_forgot_form\\\"\\r\\n    [ngStyle]=\\\"{\\r\\n      display: errorState === errorStates.NoError ? 'none' : 'block'\\r\\n    }\\\"\\r\\n  >\\r\\n    <!--begin::Title-->\\r\\n    <div class=\\\"pb-13 pt-lg-0 pt-5\\\">\\r\\n      <h3 class=\\\"font-weight-bolder text-dark font-size-h4 font-size-h1-lg\\\">\\r\\n        Forgotten Password ?\\r\\n      </h3>\\r\\n      <p class=\\\"text-muted font-weight-bold font-size-h4\\\">\\r\\n        Enter your email to reset your password\\r\\n      </p>\\r\\n    </div>\\r\\n    <!--end::Title-->\\r\\n\\r\\n    <!-- begin::Alert error-->\\r\\n    <ng-container *ngIf=\\\"errorState === errorStates.HasError\\\">\\r\\n      <div\\r\\n        class=\\\"mb-10 alert alert-custom alert-light-danger alert-dismissible\\\"\\r\\n      >\\r\\n        <div class=\\\"alert-text\\\">The email detail is incorrect</div>\\r\\n      </div>\\r\\n    </ng-container>\\r\\n    <!-- end::Alert error-->\\r\\n\\r\\n    <!--begin::Form group-->\\r\\n    <div class=\\\"form-group fv-plugins-icon-container has-danger\\\">\\r\\n      <input\\r\\n        class=\\\"form-control form-control-sm h-auto py-7 px-6 rounded-lg font-size-h6\\\"\\r\\n        type=\\\"email\\\"\\r\\n        formControlName=\\\"email\\\"\\r\\n        placeholder=\\\"Email\\\"\\r\\n        name=\\\"email\\\"\\r\\n        autocomplete=\\\"off\\\"\\r\\n        [ngClass]=\\\"{\\r\\n          'is-invalid': forgotPasswordForm.controls['email'].invalid\\r\\n        }\\\"\\r\\n      />\\r\\n\\r\\n      <ng-container\\r\\n        [ngTemplateOutlet]=\\\"formError\\\"\\r\\n        [ngTemplateOutletContext]=\\\"{\\r\\n          validation: 'required',\\r\\n          message: 'Email is required',\\r\\n          control: forgotPasswordForm.controls['email']\\r\\n        }\\\"\\r\\n      ></ng-container>\\r\\n      <ng-container\\r\\n        [ngTemplateOutlet]=\\\"formError\\\"\\r\\n        [ngTemplateOutletContext]=\\\"{\\r\\n          validation: 'email',\\r\\n          message: 'Email is invalid',\\r\\n          control: forgotPasswordForm.controls['email']\\r\\n        }\\\"\\r\\n      ></ng-container>\\r\\n      <ng-container\\r\\n        [ngTemplateOutlet]=\\\"formError\\\"\\r\\n        [ngTemplateOutletContext]=\\\"{\\r\\n          validation: 'minLength',\\r\\n          message: 'Email should have at least 3 symbols',\\r\\n          control: forgotPasswordForm.controls['email']\\r\\n        }\\\"\\r\\n      ></ng-container>\\r\\n      <ng-container\\r\\n        [ngTemplateOutlet]=\\\"formError\\\"\\r\\n        [ngTemplateOutletContext]=\\\"{\\r\\n          validation: 'maxLength',\\r\\n          message: 'Email should have maximum 360 symbols',\\r\\n          control: forgotPasswordForm.controls['email']\\r\\n        }\\\"\\r\\n      ></ng-container>\\r\\n    </div>\\r\\n    <!--end::Form group-->\\r\\n    <!--begin::Form group-->\\r\\n    <div class=\\\"form-group d-flex flex-wrap pb-lg-0\\\">\\r\\n      <button\\r\\n        type=\\\"submit\\\"\\r\\n        id=\\\"kt_login_forgot_submit\\\"\\r\\n        class=\\\"btn btn-primary font-weight-bolder font-size-h6 px-8 py-4 my-3 mr-4\\\"\\r\\n      >\\r\\n        Submit\\r\\n      </button>\\r\\n      <a\\r\\n        routerLink=\\\"/auth/login\\\"\\r\\n        id=\\\"kt_login_forgot_cancel\\\"\\r\\n        class=\\\"btn btn-light-primary font-weight-bolder font-size-h6 px-8 py-4 my-3\\\"\\r\\n      >\\r\\n        Cancel\\r\\n      </a>\\r\\n\\r\\n      <ng-container *ngIf=\\\"isLoading$ | async\\\">\\r\\n        <span class=\\\"spinner spinner-primary ml-5\\\"></span>\\r\\n      </ng-container>\\r\\n    </div>\\r\\n    <!--end::Form group-->\\r\\n    <div></div>\\r\\n  </form>\\r\\n  <!--end::Form-->\\r\\n\\r\\n  <ng-container *ngIf=\\\"errorState === errorStates.NoError\\\">\\r\\n    <div\\r\\n      class=\\\"card card-custom bgi-no-repeat gutter-b\\\"\\r\\n      style=\\\"\\r\\n        height: 175px;\\r\\n        background-color: #4ab58e;\\r\\n        background-position: calc(100% + 1rem) bottom;\\r\\n        background-size: 25% auto;\\r\\n        background-image: url(assets/media/svg/humans/custom-1.svg);\\r\\n      \\\"\\r\\n    >\\r\\n      <!--begin::Body-->\\r\\n      <div class=\\\"card-body d-flex align-items-center\\\">\\r\\n        <div class=\\\"py-2\\\">\\r\\n          <h3 class=\\\"text-white font-weight-bolder mb-3\\\">Email is correct!</h3>\\r\\n          <p class=\\\"text-white font-size-lg\\\">\\r\\n            Message with 'recovery' instruction<br />\\r\\n            has been sent<br />\\r\\n          </p>\\r\\n          <a\\r\\n            routerLink=\\\"/auth/login\\\"\\r\\n            class=\\\"swal2-confirm btn font-weight-bold btn-light-primary\\\"\\r\\n          >\\r\\n            Ok, got it!\\r\\n          </a>\\r\\n        </div>\\r\\n      </div>\\r\\n      <!--end::Body-->\\r\\n    </div>\\r\\n  </ng-container>\\r\\n</div>\\r\\n\\r\\n<ng-template\\r\\n  #formError\\r\\n  let-control=\\\"control\\\"\\r\\n  let-message=\\\"message\\\"\\r\\n  let-validation=\\\"validation\\\"\\r\\n>\\r\\n  <ng-container\\r\\n    *ngIf=\\\"control.hasError(validation) && (control.dirty || control.touched)\\\"\\r\\n  >\\r\\n    <div class=\\\"fv-plugins-message-container\\\">\\r\\n      <div class=\\\"fv-help-block\\\">\\r\\n        {{ message }}\\r\\n      </div>\\r\\n    </div>\\r\\n  </ng-container>\\r\\n</ng-template>\\r\\n\";","export default \"<!--begin::Signin-->\\n\\n<div class=\\\"row\\\">\\n\\n    <div class=\\\"col-sm-6 text-center\\\">\\n        <img src=\\\"assets/ms-logo.png\\\" style=\\\"width:150px\\\" /><br>\\n        <!-- <span class=\\\"logo-text\\\">KBZMS<br><small>General Insurance</small></span> -->\\n\\n    </div>\\n    <div class=\\\"col-sm-6 text-center\\\">\\n        <img src=\\\"assets/life-logo.png\\\" style=\\\"width:150px\\\" /><br>\\n        <!-- <span class=\\\"logo-text\\\">KBZ LIFE</span> -->\\n    </div>\\n    <div class=\\\"col-12 pt-5 pb-5\\\">\\n        <h5 class=\\\"font-weight-bolder text-white text-center\\\" style=\\\"font-size: 1.1rem;\\\">\\n            {{\\\"CARD.welcometxt\\\" | translate}}\\n        </h5>\\n\\n    </div>\\n    <!--begin::Form-->\\n    <div class=\\\"card card-custom-orange\\\" style=\\\"width: 100%;\\\">\\n        <div class=\\\"card-body\\\">\\n            <form class=\\\"form\\\" [formGroup]=\\\"loginForm\\\" novalidate=\\\"novalidate\\\" id=\\\"kt_login_signin_form\\\" (ngSubmit)=\\\"submit()\\\">\\n\\n\\n                <!--begin::Title-->\\n\\n\\n\\n                <!-- begin::Alert error-->\\n                <ng-container *ngIf=\\\"hasError\\\">\\n                    <div class=\\\"mb-10 alert alert-custom alert-light-danger alert-dismissible\\\">\\n                        <div class=\\\"alert-text\\\">The login details are incorrect</div>\\n                    </div>\\n                </ng-container>\\n                <!-- end::Alert error-->\\n\\n                <!--begin::Form group-->\\n                <div class=\\\"form-group\\\">\\n                    <!-- <input placeholder=\\\"User ID\\\" class=\\\"form-control form-control-sm h-3 py-7 px-6 rounded-lg\\\" type=\\\"text\\\"\\n                        name=\\\"username\\\" formControlName=\\\"email\\\" autocomplete=\\\"off\\\"\\n                        [ngClass]=\\\"{ 'is-invalid': loginForm.controls['email'].invalid }\\\" /> -->\\n                    <div class=\\\"input-icons\\\">\\n                        <i class=\\\"flaticon-avatar\\\"></i>\\n                        <input placeholder=\\\"User ID\\\" class=\\\"input-field form-control h-3 py-7 px-11 rounded-lg\\\" type=\\\"text\\\" name=\\\"username\\\" formControlName=\\\"email\\\" autocomplete=\\\"off\\\" [ngClass]=\\\"{ 'is-invalid': loginForm.controls['email'].invalid }\\\" />\\n                    </div>\\n                </div>\\n                <!--end::Form group-->\\n\\n                <!--begin::Form group-->\\n                <div class=\\\"form-group\\\">\\n\\n                    <div class=\\\"input-icons\\\">\\n                        <i class=\\\"flaticon-lock\\\"></i>\\n                        <input placeholder=\\\"Password\\\" class=\\\"input-field form-control h-3 py-7 px-6 rounded-lg\\\" type=\\\"password\\\" name=\\\"password\\\" autocomplete=\\\"off\\\" formControlName=\\\"password\\\" [ngClass]=\\\"{ 'is-invalid': loginForm.controls['password'].invalid }\\\" />\\n                    </div>\\n                </div>\\n                <!--end::Form group-->\\n                <div class=\\\"font-weight-bolder text-center\\\">\\n                    <a routerLink=\\\"/auth/forgot-password\\\" class=\\\"text-new text-center font-weight-bolder text-hover-new \\\">\\n                        {{\\\"CARD.forgettxt\\\" | translate}}\\n                    </a>\\n                </div>\\n                <!--begin::Action-->\\n                <div class=\\\"pb-lg-10 pb-10\\\">\\n                    <button style=\\\"width: 100%;\\\" type=\\\"submit\\\" id=\\\"kt_login_signin_submit\\\" class=\\\"btn btn-new text-white font-weight-bolder font-size-h6 px-8 py-4 my-3 mr-3\\\">\\n                        {{\\\"CARD.signin\\\" | translate}}\\n                    </button>\\n                    <ng-container *ngIf=\\\"isLoading$ | async\\\">\\n                        <span class=\\\"spinner spinner-primary ml-5\\\"></span>\\n                    </ng-container>\\n                </div>\\n                <!-- <h5 class=\\\"font-weight-bolder text-white text-center\\\" style=\\\"font-size: 1.1rem;\\\">\\n                    {{\\\"CARD.welcometxt\\\" | translate}}\\n                </h5> -->\\n                <!--end::Action-->\\n            </form>\\n        </div>\\n    </div>\\n    <!--end::Form-->\\n</div>\\n<!--end::Signin-->\\n\\n<ng-template #formError let-control=\\\"control\\\" let-message=\\\"message\\\" let-validation=\\\"validation\\\">\\n    <ng-container *ngIf=\\\"control.hasError(validation) && (control.dirty || control.touched)\\\">\\n        <div class=\\\"fv-plugins-message-container\\\">\\n            <div class=\\\"fv-help-block\\\">\\n                {{ message }}\\n            </div>\\n        </div>\\n    </ng-container>\\n</ng-template>\";","export default \"<p>logout works!</p>\\r\\n\";","export default \"<!--begin::Signup-->\\r\\n<div class=\\\"login-form login-signup\\\">\\r\\n  <!--begin::Form-->\\r\\n  <form\\r\\n    class=\\\"form\\\"\\r\\n    novalidate=\\\"novalidate\\\"\\r\\n    id=\\\"kt_login_signup_form\\\"\\r\\n    [formGroup]=\\\"registrationForm\\\"\\r\\n    (ngSubmit)=\\\"submit()\\\"\\r\\n  >\\r\\n    <!--begin::Title-->\\r\\n    <div class=\\\"pb-13 pt-lg-0 pt-5\\\">\\r\\n      <h3 class=\\\"font-weight-bolder text-dark font-size-h4 font-size-h1-lg\\\">\\r\\n        Sign Up\\r\\n      </h3>\\r\\n      <p class=\\\"text-muted font-weight-bold font-size-h4\\\">\\r\\n        Enter your details to create your account\\r\\n      </p>\\r\\n    </div>\\r\\n    <!--end::Title-->\\r\\n\\r\\n    <!-- begin::Alert error-->\\r\\n    <ng-container *ngIf=\\\"hasError\\\">\\r\\n      <div\\r\\n        class=\\\"mb-10 alert alert-custom alert-light-danger alert-dismissible\\\"\\r\\n      >\\r\\n        <div class=\\\"alert-text\\\">The registration details are incorrect</div>\\r\\n      </div>\\r\\n    </ng-container>\\r\\n    <!-- end::Alert error-->\\r\\n\\r\\n    <!--begin::Form group-->\\r\\n    <div class=\\\"form-group\\\">\\r\\n      <label class=\\\"font-size-h6 font-weight-bolder text-dark\\\">Fullname</label>\\r\\n      <input\\r\\n        class=\\\"form-control form-control-sm h-auto py-7 px-6 rounded-lg font-size-h6\\\"\\r\\n        type=\\\"text\\\"\\r\\n        name=\\\"fullname\\\"\\r\\n        formControlName=\\\"fullname\\\"\\r\\n        placeholder=\\\"Fullname\\\"\\r\\n        autocomplete=\\\"off\\\"\\r\\n        [ngClass]=\\\"{\\r\\n          'is-invalid': registrationForm.controls['fullname'].invalid\\r\\n        }\\\"\\r\\n      />\\r\\n      <ng-container\\r\\n        [ngTemplateOutlet]=\\\"formError\\\"\\r\\n        [ngTemplateOutletContext]=\\\"{\\r\\n          validation: 'required',\\r\\n          message: 'Fullname is required',\\r\\n          control: registrationForm.controls['fullname']\\r\\n        }\\\"\\r\\n      ></ng-container>\\r\\n      <ng-container\\r\\n        [ngTemplateOutlet]=\\\"formError\\\"\\r\\n        [ngTemplateOutletContext]=\\\"{\\r\\n          validation: 'minlength',\\r\\n          message: 'Fullname should have at least 3 symbols',\\r\\n          control: registrationForm.controls['fullname']\\r\\n        }\\\"\\r\\n      ></ng-container>\\r\\n      <ng-container\\r\\n        [ngTemplateOutlet]=\\\"formError\\\"\\r\\n        [ngTemplateOutletContext]=\\\"{\\r\\n          validation: 'maxLength',\\r\\n          message: 'Fullname should have maximum 100 symbols',\\r\\n          control: registrationForm.controls['fullname']\\r\\n        }\\\"\\r\\n      ></ng-container>\\r\\n    </div>\\r\\n    <!--end::Form group-->\\r\\n\\r\\n    <!--begin::Form group-->\\r\\n    <div class=\\\"form-group\\\">\\r\\n      <label class=\\\"font-size-h6 font-weight-bolder text-dark\\\">Email</label>\\r\\n      <input\\r\\n        class=\\\"form-control form-control-sm h-auto py-7 px-6 rounded-lg font-size-h6\\\"\\r\\n        type=\\\"email\\\"\\r\\n        placeholder=\\\"Email\\\"\\r\\n        name=\\\"email\\\"\\r\\n        formControlName=\\\"email\\\"\\r\\n        autocomplete=\\\"off\\\"\\r\\n        [ngClass]=\\\"{ 'is-invalid': registrationForm.controls['email'].invalid }\\\"\\r\\n      />\\r\\n      <ng-container\\r\\n        [ngTemplateOutlet]=\\\"formError\\\"\\r\\n        [ngTemplateOutletContext]=\\\"{\\r\\n          validation: 'required',\\r\\n          message: 'Email is required',\\r\\n          control: registrationForm.controls['email']\\r\\n        }\\\"\\r\\n      ></ng-container>\\r\\n      <ng-container\\r\\n        [ngTemplateOutlet]=\\\"formError\\\"\\r\\n        [ngTemplateOutletContext]=\\\"{\\r\\n          validation: 'email',\\r\\n          message: 'Email is invalid',\\r\\n          control: registrationForm.controls['email']\\r\\n        }\\\"\\r\\n      ></ng-container>\\r\\n      <ng-container\\r\\n        [ngTemplateOutlet]=\\\"formError\\\"\\r\\n        [ngTemplateOutletContext]=\\\"{\\r\\n          validation: 'minlength',\\r\\n          message: 'Email should have at least 3 symbols',\\r\\n          control: registrationForm.controls['email']\\r\\n        }\\\"\\r\\n      ></ng-container>\\r\\n      <ng-container\\r\\n        [ngTemplateOutlet]=\\\"formError\\\"\\r\\n        [ngTemplateOutletContext]=\\\"{\\r\\n          validation: 'maxLength',\\r\\n          message: 'Email should have maximum 360 symbols',\\r\\n          control: registrationForm.controls['email']\\r\\n        }\\\"\\r\\n      ></ng-container>\\r\\n    </div>\\r\\n    <!--end::Form group-->\\r\\n\\r\\n    <!--begin::Form group-->\\r\\n    <div class=\\\"form-group\\\">\\r\\n      <label class=\\\"font-size-h6 font-weight-bolder text-dark pt-5\\\"\\r\\n        >Password</label\\r\\n      >\\r\\n      <input\\r\\n        class=\\\"form-control form-control-sm h-auto py-7 px-6 rounded-lg font-size-h6\\\"\\r\\n        type=\\\"password\\\"\\r\\n        placeholder=\\\"Password\\\"\\r\\n        name=\\\"password\\\"\\r\\n        formControlName=\\\"password\\\"\\r\\n        autocomplete=\\\"off\\\"\\r\\n        [ngClass]=\\\"{\\r\\n          'is-invalid': registrationForm.controls['password'].invalid\\r\\n        }\\\"\\r\\n      />\\r\\n      <ng-container\\r\\n        [ngTemplateOutlet]=\\\"formError\\\"\\r\\n        [ngTemplateOutletContext]=\\\"{\\r\\n          validation: 'required',\\r\\n          message: 'Password is required',\\r\\n          control: registrationForm.controls['password']\\r\\n        }\\\"\\r\\n      ></ng-container>\\r\\n      <ng-container\\r\\n        [ngTemplateOutlet]=\\\"formError\\\"\\r\\n        [ngTemplateOutletContext]=\\\"{\\r\\n          validation: 'minlength',\\r\\n          message: 'Password should have at least 3 symbols',\\r\\n          control: registrationForm.controls['password']\\r\\n        }\\\"\\r\\n      ></ng-container>\\r\\n      <ng-container\\r\\n        [ngTemplateOutlet]=\\\"formError\\\"\\r\\n        [ngTemplateOutletContext]=\\\"{\\r\\n          validation: 'maxLength',\\r\\n          message: 'Password should have maximum 100 symbols',\\r\\n          control: registrationForm.controls['password']\\r\\n        }\\\"\\r\\n      ></ng-container>\\r\\n    </div>\\r\\n    <!--end::Form group-->\\r\\n\\r\\n    <!--begin::Form group-->\\r\\n    <div class=\\\"form-group\\\">\\r\\n      <label class=\\\"font-size-h6 font-weight-bolder text-dark pt-5\\\"\\r\\n        >Confirm Password</label\\r\\n      >\\r\\n      <input\\r\\n        class=\\\"form-control form-control-sm h-auto py-7 px-6 rounded-lg font-size-h6\\\"\\r\\n        type=\\\"password\\\"\\r\\n        placeholder=\\\"Confirm password\\\"\\r\\n        name=\\\"cPassword\\\"\\r\\n        autocomplete=\\\"off\\\"\\r\\n        formControlName=\\\"cPassword\\\"\\r\\n        [ngClass]=\\\"{\\r\\n          'is-invalid': registrationForm.controls['cPassword'].invalid\\r\\n        }\\\"\\r\\n      />\\r\\n      <ng-container\\r\\n        [ngTemplateOutlet]=\\\"formError\\\"\\r\\n        [ngTemplateOutletContext]=\\\"{\\r\\n          validation: 'required',\\r\\n          message: 'Confirm Password is required',\\r\\n          control: registrationForm.controls['cPassword']\\r\\n        }\\\"\\r\\n      ></ng-container>\\r\\n      <ng-container\\r\\n        [ngTemplateOutlet]=\\\"formError\\\"\\r\\n        [ngTemplateOutletContext]=\\\"{\\r\\n          validation: 'minlength',\\r\\n          message: 'Confirm Password should have at least 3 symbols',\\r\\n          control: registrationForm.controls['cPassword']\\r\\n        }\\\"\\r\\n      ></ng-container>\\r\\n      <ng-container\\r\\n        [ngTemplateOutlet]=\\\"formError\\\"\\r\\n        [ngTemplateOutletContext]=\\\"{\\r\\n          validation: 'maxLength',\\r\\n          message: 'Confirm Password should have maximum 100 symbols',\\r\\n          control: registrationForm.controls['cPassword']\\r\\n        }\\\"\\r\\n      ></ng-container>\\r\\n      <ng-container\\r\\n        *ngIf=\\\"\\r\\n          registrationForm.controls['cPassword'].errors &&\\r\\n          registrationForm.controls['cPassword'].errors.ConfirmPassword\\r\\n        \\\"\\r\\n      >\\r\\n        <div class=\\\"fv-plugins-message-container\\\">\\r\\n          <div class=\\\"fv-help-block\\\">\\r\\n            'Passsword' and 'Confirm Password' didn't match.\\r\\n          </div>\\r\\n        </div>\\r\\n      </ng-container>\\r\\n    </div>\\r\\n    <!--end::Form group-->\\r\\n\\r\\n    <!--begin::Form group-->\\r\\n    <div class=\\\"form-group\\\">\\r\\n      <label class=\\\"checkbox mb-0\\\">\\r\\n        <input type=\\\"checkbox\\\" formControlName=\\\"agree\\\" name=\\\"agree\\\" />&nbsp;I\\r\\n        Agree the&nbsp;<a\\r\\n          href=\\\"https://keenthemes.com/metronic/?page=faq\\\"\\r\\n          target=\\\"_blank\\\"\\r\\n          >terms and conditions</a\\r\\n        >.&nbsp;\\r\\n        <span></span>\\r\\n      </label>\\r\\n    </div>\\r\\n    <!--end::Form group-->\\r\\n\\r\\n    <!--begin::Form group-->\\r\\n    <div class=\\\"form-group d-flex flex-wrap pb-lg-0 pb-3\\\">\\r\\n      <button\\r\\n        type=\\\"submit\\\"\\r\\n        id=\\\"kt_login_signup_submit\\\"\\r\\n        [disabled]=\\\"\\r\\n          registrationForm.invalid || !registrationForm.controls['agree'].value\\r\\n        \\\"\\r\\n        class=\\\"btn btn-primary font-weight-bolder font-size-h6 px-8 py-4 my-3 mr-4\\\"\\r\\n      >\\r\\n        Submit\\r\\n      </button>\\r\\n      <a\\r\\n        routerLink=\\\"/auth/login\\\"\\r\\n        type=\\\"button\\\"\\r\\n        id=\\\"kt_login_signup_cancel\\\"\\r\\n        class=\\\"btn btn-light-primary font-weight-bolder font-size-h6 px-8 py-4 my-3\\\"\\r\\n      >\\r\\n        Cancel\\r\\n      </a>\\r\\n\\r\\n      <ng-container *ngIf=\\\"isLoading$ | async\\\">\\r\\n        <span class=\\\"spinner spinner-primary ml-5\\\"></span>\\r\\n      </ng-container>\\r\\n    </div>\\r\\n    <!--end::Form group-->\\r\\n  </form>\\r\\n  <!--end::Form-->\\r\\n</div>\\r\\n<!--end::Signup-->\\r\\n\\r\\n<ng-template\\r\\n  #formError\\r\\n  let-control=\\\"control\\\"\\r\\n  let-message=\\\"message\\\"\\r\\n  let-validation=\\\"validation\\\"\\r\\n>\\r\\n  <ng-container\\r\\n    *ngIf=\\\"control.hasError(validation) && (control.dirty || control.touched)\\\"\\r\\n  >\\r\\n    <div class=\\\"fv-plugins-message-container\\\">\\r\\n      <div class=\\\"fv-help-block\\\">\\r\\n        {{ message }}\\r\\n      </div>\\r\\n    </div>\\r\\n  </ng-container>\\r\\n</ng-template>\\r\\n\";"],"names":[],"sourceRoot":"webpack:///"}