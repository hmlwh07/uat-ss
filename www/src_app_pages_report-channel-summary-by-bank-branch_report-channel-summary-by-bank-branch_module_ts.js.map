{"version":3,"file":"src_app_pages_report-channel-summary-by-bank-branch_report-channel-summary-by-bank-branch_module_ts.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;AAA8D;AACnB;AACR;AACF;AAC6C;AACd;AAEhE,MAAM,aAAa,GAAG,GAAG,yEAAkB,uBAAuB,CAAC;AACnE,MAAM,iBAAiB,GAAG,GAAG,yEAAkB,kBAAkB,CAAC;AAClE,MAAM,oBAAoB,GAAG,GAAG,yEAAkB,gBAAgB,CAAC;AAGnE,MAAM,QAAQ,GAAG,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG;IAChhJ,2CAA2C,SAA3C,2CAA4C,SAAQ,gFAAgC;IAC/F,YAAsB,UAAsB;QAC1C,KAAK,CAAC,UAAU,EAAE,aAAa,CAAC,CAAC;QADb,eAAU,GAAV,UAAU,CAAY;IAE5C,CAAC;IAED,kBAAkB,CAAC,QAAQ,EAAE,QAAQ;QACnC,IAAI,MAAM,GAAG;YACX,QAAQ,EAAE,QAAQ;YAClB,QAAQ,EAAE,QAAQ;SACnB;QACD,MAAM,MAAM,GAAG,IAAI,4DAAU,CAAC;YAC5B,UAAU,EAAE,MAAM;SACnB,CAAC,CAAC;QACH,OAAO,IAAI,CAAC,UAAU,CAAC,GAAG,CAAM,iBAAiB,EAAE,EAAE,MAAM,EAAE,MAAM,EAAE,CAAC,CAAC;IACzE,CAAC;IAED,cAAc,CAAC,QAAQ;QACrB,IAAI,MAAM,GAAG;YACX,QAAQ,EAAE,QAAQ;SACnB;QACD,MAAM,MAAM,GAAG,IAAI,4DAAU,CAAC;YAC5B,UAAU,EAAE,MAAM;SACnB,CAAC,CAAC;QACH,OAAO,IAAI,CAAC,UAAU,CAAC,GAAG,CAAM,oBAAoB,EAAE,EAAE,MAAM,EAAE,MAAM,EAAE,CAAC,CAAC;IAC5E,CAAC;IAGD,gBAAgB,CAAC,WAAW;QAC1B,IAAI,WAAW,CAAC,QAAQ,EAAE;YACxB,WAAW,CAAC,QAAQ,GAAG,IAAI,CAAC,oBAAoB,CAAC,WAAW,CAAC,QAAQ,CAAC,CAAC;SACxE;QACD,IAAI,WAAW,CAAC,MAAM,EAAE;YACtB,WAAW,CAAC,MAAM,GAAG,IAAI,CAAC,oBAAoB,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC;SACpE;QACD,MAAM,MAAM,GAAG,IAAI,4DAAU,CAAC;YAC5B,UAAU,EAAE,WAAW;SACxB,CAAC,CAAC;QACH,OAAO,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,aAAa,EAAE,EAAE,MAAM,EAAE,MAAM,EAAE,CAAC,CAAC;IAChE,CAAC;IAED,eAAe,CAAC,KAAK;QACnB,OAAO,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,aAAa,GAAG,GAAG,GAAG,KAAK,GAAG,QAAQ,CAAC,CAAC;IACrE,CAAC;IAGD,oBAAoB,CAAC,IAAI;QACvB,IAAI,CAAC,GAAG,IAAI,IAAI,CAAC,IAAI,CAAC,EACpB,KAAK,GAAG,EAAE,GAAG,CAAC,CAAC,CAAC,QAAQ,EAAE,GAAG,CAAC,CAAC,EAC/B,GAAG,GAAG,EAAE,GAAG,CAAC,CAAC,OAAO,EAAE,EACtB,IAAI,GAAG,CAAC,CAAC,WAAW,EAAE,CAAC;QACzB,IAAI,KAAK,CAAC,MAAM,GAAG,CAAC;YAClB,KAAK,GAAG,GAAG,GAAG,KAAK,CAAC;QACtB,IAAI,GAAG,CAAC,MAAM,GAAG,CAAC;YAChB,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC;QAClB,OAAO,CAAC,IAAI,EAAE,KAAK,EAAE,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;IACtC,CAAC;IAED,WAAW,CAAC,SAAS;QACnB,sBAAsB;QACtB,MAAM,KAAK,GAAG,SAAS,CAAC,KAAK,CAAC;QAC9B,MAAM,WAAW,GAAG,SAAS,CAAC,WAAW;QACzC,MAAM,kBAAkB,GAAG,SAAS,CAAC,kBAAkB;QACvD,MAAM,gBAAgB,GAAG,SAAS,CAAC,gBAAgB;QACnD,MAAM,eAAe,GAAG,SAAS,CAAC,eAAe,CAAC;QAElD,oCAAoC;QACpC,IAAI,QAAQ,GAAG,IAAI,6CAAQ,EAAE,CAAC;QAC9B,IAAI,SAAS,GAAG,QAAQ,CAAC,YAAY,CAAC,QAAQ,CAAC,CAAC;QAEhD,SAAS;QACT,SAAS,CAAC,KAAK,GAAG;YAChB,EAAE,KAAK,EAAE,QAAQ,EAAE,MAAM,EAAE,CAAC,EAAE,MAAM,EAAE,CAAC,EAAE,UAAU,EAAE,IAAI,EAAE;SAC5D,CAAC;QAEF,wBAAwB;QACxB,SAAS,CAAC,UAAU,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;QACjC,IAAI,QAAQ,GAAG,SAAS,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;QACvC,QAAQ,CAAC,KAAK,GAAG,KAAK;QACtB,QAAQ,CAAC,IAAI,GAAG;YACd,IAAI,EAAE,SAAS;YACf,IAAI,EAAE,EAAE;YACR,SAAS,EAAE,QAAQ;YACnB,IAAI,EAAE,IAAI;YACV,KAAK,EAAE,EAAE,IAAI,EAAE,QAAQ,EAAE;SAC1B;QACD,QAAQ,CAAC,SAAS,GAAG,EAAE,QAAQ,EAAE,QAAQ,EAAE,UAAU,EAAE,MAAM,EAAE;QAE/D,OAAO,CAAC,GAAG,CAAC,aAAa,EAAE,WAAW,CAAC,CAAC;QAExC,yBAAyB;QACzB,IAAI,WAAW,CAAC,MAAM,GAAG,CAAC,EAAE;YAC1B,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,WAAW,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;gBAC3C,IAAI,SAAS,GAAG,IAAI,CAAC;gBACrB,IAAI,cAAc,GAAG,IAAI,CAAC;gBAC1B,IAAI,WAAW,CAAC,CAAC,CAAC,CAAC,QAAQ,EAAE;oBAC3B,SAAS,GAAG,IAAI,CAAC;oBACjB,cAAc,GAAG,aAAa,GAAG,WAAW,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC;iBAC1D;gBACD,IAAI,WAAW,CAAC,CAAC,CAAC,CAAC,MAAM,EAAE;oBACzB,SAAS,GAAG,IAAI,CAAC;oBACjB,cAAc,GAAG,WAAW,GAAG,WAAW,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC;iBACtD;gBACD,IAAI,WAAW,CAAC,CAAC,CAAC,CAAC,WAAW,EAAE;oBAC9B,SAAS,GAAG,IAAI,CAAC;oBACjB,cAAc,GAAG,WAAW,GAAG,WAAW,CAAC,CAAC,CAAC,CAAC,WAAW,CAAC;iBAC3D;gBACD,IAAI,WAAW,CAAC,CAAC,CAAC,CAAC,WAAW,EAAE;oBAC9B,SAAS,GAAG,IAAI,CAAC;oBACjB,cAAc,GAAG,WAAW,GAAG,WAAW,CAAC,CAAC,CAAC,CAAC,WAAW,CAAC;iBAC3D;gBACD,IAAI,WAAW,CAAC,CAAC,CAAC,CAAC,UAAU,EAAE;oBAC7B,SAAS,GAAG,IAAI,CAAC;oBACjB,cAAc,GAAG,UAAU,GAAG,WAAW,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC;iBACzD;gBACD,IAAI,WAAW,CAAC,CAAC,CAAC,CAAC,WAAW,EAAE;oBAC9B,SAAS,GAAG,IAAI,CAAC;oBACjB,cAAc,GAAG,WAAW,GAAG,WAAW,CAAC,CAAC,CAAC,CAAC,WAAW,CAAC;iBAC3D;gBACD,IAAI,WAAW,CAAC,CAAC,CAAC,CAAC,UAAU,EAAE;oBAC7B,SAAS,GAAG,IAAI,CAAC;oBACjB,cAAc,GAAG,UAAU,GAAG,WAAW,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC;iBACzD;gBACD,IAAI,WAAW,CAAC,CAAC,CAAC,CAAC,SAAS,EAAE;oBAC5B,SAAS,GAAG,IAAI,CAAC;oBACjB,cAAc,GAAG,SAAS,GAAG,WAAW,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC;iBACvD;gBAED,IAAI,SAAS,IAAI,IAAI,IAAI,cAAc,IAAI,IAAI,EAAE;oBAC/C,IAAI,UAAU,GAAG,SAAS,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC;oBAC9C,UAAU,CAAC,KAAK,GAAG,cAAc,CAAC;oBAClC,UAAU,CAAC,IAAI,GAAG;wBAChB,IAAI,EAAE,SAAS;wBACf,IAAI,EAAE,EAAE;wBACR,IAAI,EAAE,IAAI;qBACX;oBACD,UAAU,CAAC,SAAS,GAAG,EAAE,QAAQ,EAAE,QAAQ,EAAE,UAAU,EAAE,MAAM,EAAE;iBAClE;aACF;SACF;QAED,SAAS,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC;QACrB,0CAA0C;QAC1C,IAAI,UAAU,GAAW,CAAC,CAAC;QAC3B,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,kBAAkB,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;YAClD,IAAI,KAAK,GAAG,IAAI,CAAC,mBAAmB,CAAC,UAAU,CAAC,CAAC;YACjD,UAAU,IAAI,CAAC,CAAC;YAChB,IAAI,QAAQ,GAAG,SAAS,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;YACxC,QAAQ,CAAC,KAAK,GAAG,kBAAkB,CAAC,CAAC,CAAC,CAAC;YACvC,QAAQ,CAAC,IAAI,GAAG;gBACd,IAAI,EAAE,SAAS;gBACf,IAAI,EAAE,EAAE;gBACR,IAAI,EAAE,IAAI;aACX;YACD,QAAQ,CAAC,SAAS,GAAG,EAAE,QAAQ,EAAE,QAAQ,EAAE,UAAU,EAAE,QAAQ,EAAE;SAClE;QAED,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,gBAAgB,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;YAChD,IAAI,KAAK,GAAG,IAAI,CAAC,kBAAkB,CAAC,CAAC,CAAC,CAAC;YACvC,IAAI,QAAQ,GAAG,SAAS,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;YACxC,QAAQ,CAAC,KAAK,GAAG,gBAAgB,CAAC,CAAC,CAAC,CAAC;YACrC,QAAQ,CAAC,IAAI,GAAG;gBACd,IAAI,EAAE,SAAS;gBACf,IAAI,EAAE,EAAE;gBACR,IAAI,EAAE,KAAK;aACZ;YACD,QAAQ,CAAC,SAAS,GAAG,EAAE,QAAQ,EAAE,QAAQ,EAAE,UAAU,EAAE,QAAQ,EAAE;YACjE,IAAI,CAAC,IAAI,CAAC,EAAE;gBACV,QAAQ,CAAC,SAAS,GAAG,EAAE,QAAQ,EAAE,QAAQ,EAAE,UAAU,EAAE,MAAM,EAAE;aAChE;SACF;QAED,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,eAAe,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;YAC/C,IAAI,KAAK,GAAG,IAAI,CAAC,yBAAyB,CAAC,CAAC,CAAC,CAAC;YAC9C,IAAI,QAAQ,GAAG,SAAS,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;YACxC,QAAQ,CAAC,KAAK,GAAG,eAAe,CAAC,CAAC,CAAC,CAAC;YACpC,QAAQ,CAAC,IAAI,GAAG;gBACd,IAAI,EAAE,SAAS;gBACf,IAAI,EAAE,EAAE;gBACR,IAAI,EAAE,KAAK;aACZ;YACD,QAAQ,CAAC,SAAS,GAAG,EAAE,QAAQ,EAAE,QAAQ,EAAE,UAAU,EAAE,QAAQ,EAAE;YACjE,IAAI,CAAC,IAAI,CAAC,EAAE;gBACV,QAAQ,CAAC,SAAS,GAAG,EAAE,QAAQ,EAAE,QAAQ,EAAE,UAAU,EAAE,MAAM,EAAE;aAChE;SAEF;QAED,SAAS,CAAC,OAAO,CAAC,OAAO,CAAC,UAAU,MAAM,EAAE,CAAC;YAC3C,IAAI,SAAS,GAAG,CAAC,CAAC;YAClB,MAAM,CAAC,UAAU,CAAC,CAAC,EAAE,YAAY,EAAE,IAAI,EAAE,EAAE,UAAU,IAAI;gBACvD,IAAI,YAAY,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,QAAQ,EAAE,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC;gBAClE,IAAI,YAAY,GAAG,SAAS,EAAE;oBAC5B,SAAS,GAAG,YAAY,CAAC;iBAC1B;YACH,CAAC,CAAC,CAAC;YACH,MAAM,CAAC,KAAK,GAAG,SAAS,GAAG,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,SAAS,CAAC;QACjD,CAAC,CAAC,CAAC;QAEH,SAAS,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,KAAK,GAAG,EAAE,CAAC;QAElC,MAAM,UAAU,GAAG,CAAC,SAAS,EAAE,EAAE;YAC/B,MAAM,UAAU,GAAG,EAAE,EAAC,gCAAgC;YACtD,SAAS,CAAC,OAAO,CAAC,CAAC,GAAG,EAAE,EAAE;gBACxB,IAAI,OAAO,GAAG,CAAC;gBACf,GAAG,CAAC,QAAQ,CAAC,CAAC,IAAI,EAAE,EAAE;oBACpB,OAAO,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,MAAM,GAAG,CAAC,EAAE,OAAO,CAAC;gBAChE,CAAC,CAAC;gBACF,GAAG,CAAC,MAAM,GAAG,UAAU,GAAG,OAAO;YACnC,CAAC,CAAC;QACJ,CAAC;QAED,4BAA4B;QAC5B,QAAQ,CAAC,IAAI,CAAC,WAAW,EAAE,CAAC,IAAI,CAAC,CAAC,IAAI,EAAE,EAAE;YACxC,IAAI,IAAI,GAAG,IAAI,IAAI,CAAC,CAAC,IAAI,CAAC,EAAE,EAAE,IAAI,EAAE,kFAAkF,EAAE,CAAC,CAAC;YAC1H,8CAAS,CAAC,IAAI,EAAE,KAAK,GAAG,GAAG,GAAG,IAAI,CAAC,iBAAiB,CAAC,IAAI,IAAI,EAAE,CAAC,GAAG,OAAO,CAAC,CAAC;QAC9E,CAAC,CAAC,CAAC;IAEL,CAAC;IAED,mBAAmB,CAAC,KAAK;QACvB,OAAO,QAAQ,CAAC,KAAK,CAAC,GAAG,GAAG;IAC9B,CAAC;IAED,iBAAiB,CAAC,KAAK;QACrB,OAAO,QAAQ,CAAC,KAAK,CAAC,GAAG,GAAG;IAC9B,CAAC;IAED,kBAAkB,CAAC,KAAK;QACtB,OAAO,QAAQ,CAAC,KAAK,CAAC,GAAG,GAAG;IAC9B,CAAC;IAED,yBAAyB,CAAC,KAAK;QAC7B,OAAO,QAAQ,CAAC,KAAK,CAAC,GAAG,GAAG;IAC9B,CAAC;IAED,iBAAiB,CAAC,IAAI;QACpB,IAAI,CAAC,GAAG,IAAI,IAAI,CAAC,IAAI,CAAC,EACpB,KAAK,GAAG,EAAE,GAAG,CAAC,CAAC,CAAC,QAAQ,EAAE,GAAG,CAAC,CAAC,EAC/B,GAAG,GAAG,EAAE,GAAG,CAAC,CAAC,OAAO,EAAE,EACtB,IAAI,GAAG,CAAC,CAAC,WAAW,EAAE,CAAC;QACzB,IAAI,KAAK,CAAC,MAAM,GAAG,CAAC;YAClB,KAAK,GAAG,GAAG,GAAG,KAAK,CAAC;QACtB,IAAI,GAAG,CAAC,MAAM,GAAG,CAAC;YAChB,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC;QAClB,OAAO,CAAC,GAAG,EAAE,KAAK,EAAE,IAAI,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;IACtC,CAAC;IAED,WAAW,CAAC,GAAW,EAAE,MAAc;QACrC,MAAM,MAAM,GAAG,WAAE,EAAI,MAAM,EAAC;QAC5B,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,GAAG,MAAM,CAAC,GAAG,MAAM,CAAC,CAAC,cAAc,EAAE,CAAC;IAC9D,CAAC;IAAA,CAAC;CAEH;;YAlRQ,4DAAU;;AAsBN,2CAA2C;IAHvD,yDAAU,CAAC;QACV,UAAU,EAAE,MAAM;KACnB,CAAC;GACW,2CAA2C,CA4PvD;AA5PuD;;;;;;;;;;;;;;;;;;;;;;;;;ACtBa;AACD;AACE;AAE+C;IAQxG,yCAAyC,SAAzC,yCAAyC;IAyCpD,YAAoB,GAAsB,EACjC,aAA0D;QAD/C,QAAG,GAAH,GAAG,CAAmB;QACjC,kBAAa,GAAb,aAAa,CAA6C;QAxCnE,UAAK,GAAG,wBAAwB,CAAC;QACjC,gBAAW,GAAG,IAAI,CAAC;QACnB,gBAAW,GAAG,IAAI,CAAC;QAEnB,kBAAa,GAAG;YACd,SAAS,EAAE,EAAE;YACb,QAAQ,EAAE,EAAE;YACZ,OAAO,EAAE,EAAE;YACX,OAAO,EAAE,EAAE;YACX,QAAQ,EAAE,EAAE;YACZ,MAAM,EAAE,EAAE;SACX;QAED,YAAO,GAAG,EAAE,CAAC;QACb,aAAQ,GAAG,EAAE,CAAC;QACd,aAAQ,GAAG,EAAE,CAAC;QACd,gBAAW,GAAG,EAAE,CAAC;QAEjB,gBAAW,GAAG,CAAC;gBACb,UAAU,EAAE,EAAE;gBACd,QAAQ,EAAE,EAAE;gBACZ,OAAO,EAAE,EAAE;aACZ,CAAC;QAEF,cAAS,GAAW,IAAI,CAAC;QACzB,gBAAW,GAAW,IAAI,CAAC;QAC3B,gBAAW,GAAW,IAAI,CAAC;QAC3B,eAAU,GAAW,IAAI,CAAC;QAC1B,gBAAW,GAAW,IAAI,CAAC;QAC3B,eAAU,GAAW,IAAI,CAAC;QAG1B,uBAAkB,GAAG,EAAE,CAAC;QACxB,qBAAgB,GAAG,EAAE,CAAC;QACtB,oBAAe,GAAG,EAAE,CAAC;QACrB,cAAS,GAAY,KAAK,CAAC;IAK4C,CAAC;IAGxE,QAAQ;QACN,IAAI,CAAC,QAAQ,EAAE,CAAC;QAChB,4BAA4B;IAC9B,CAAC;IAEK,kBAAkB;;YACtB,MAAM,IAAI,CAAC,aAAa,CAAC,kBAAkB,CAAC,EAAE,EAAE,IAAI,CAAC,CAAC,SAAS,EAAE,CAAC,IAAI,CAAC,CAAO,GAAQ,EAAE,EAAE,CAAC;gBACzF,IAAI,GAAG,EAAE;oBACP,IAAI,CAAC,aAAa,CAAC,SAAS,GAAG,GAAG;iBACnC;YACH,CAAC,EAAC,CAAC;QACL,CAAC;KAAA;IAEK,aAAa;;YACjB,IAAI,IAAI,CAAC,eAAe,CAAC,OAAO,EAAE;gBAChC,4EAAiB,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC;aACzC;iBAAM;gBACL,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,UAAU,GAAG,EAAE,CAAC;gBACpC,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,QAAQ,GAAG,EAAE,CAAC;gBAClC,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,OAAO,GAAG,EAAE,CAAC;gBACjC,MAAM,IAAI,CAAC,aAAa,CAAC,gBAAgB,CAAC,IAAI,CAAC,eAAe,CAAC,KAAK,CAAC,CAAC,SAAS,EAAE,CAAC,IAAI,CAAC,CAAO,GAAQ,EAAE,EAAE,CAAC;oBACzG,OAAO,CAAC,GAAG,CAAC,sBAAsB,EAAE,GAAG,CAAC,CAAC;oBAEzC,IAAI,GAAG,EAAE;wBACP,IAAI,CAAC,OAAO,GAAG,GAAG,CAAC;wBACnB,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC,IAAI,CAAC,EAAE,EAAE,EAAE,IAAI,EAAE,OAAO,EAAE,YAAY,EAAE,CAAC,CAAC;wBACzE,OAAO,CAAC,GAAG,CAAC,sBAAsB,EAAE,GAAG,CAAC,QAAQ,CAAC,CAAC;wBAElD,aAAa;wBACb,IAAI,GAAG,CAAC,QAAQ,EAAE;4BAChB,GAAG,CAAC,QAAQ,GAAG,CAAC,GAAG,IAAI,GAAG,CAAC,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,EAAE,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC,MAAM,EAAE,CAAC,CAAC;4BAChF,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,GAAG,CAAC,QAAQ,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;gCAC5C,IAAI,GAAG,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,OAAO,IAAI,IAAI,EAAE;oCACnC,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC,IAAI,CAAC;wCAClC,EAAE,EAAE,GAAG,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,EAAE;wCACtB,OAAO,EAAE,GAAG,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,OAAO;qCACjC,CAAC,CAAC;iCACJ;6BACF;4BACD,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC,IAAI,CAAC,EAAE,EAAE,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,CAAC;yBACxE;wBAED,eAAe;wBACf,IAAI,GAAG,CAAC,QAAQ,CAAC,MAAM,GAAG,CAAC,EAAE;4BAC3B,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;4BACtB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;gCAC9D,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,IAAI,CAC/B;oCACE,EAAE,EAAE,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,EAAE;oCACxC,UAAU,EAAE,CAAC;iCACd,CAAC,CAAC;gCACL,IAAI,CAAC,IAAI,CAAC,EAAE;oCACV,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,EAAE,GAAG,IAAI,CAAC;oCAC1C,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,UAAU,GAAG,iBAAiB,CAAC;iCAChE;6BACF;4BAED,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;gCAC9D,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,IAAI,CAAC;oCAC/B,EAAE,EAAE,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,EAAE;oCACxC,aAAa,EAAE,IAAI;iCACpB,CAAC,CAAC;gCACH,IAAI,CAAC,IAAI,CAAC,EAAE;oCACV,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,EAAE,GAAG,IAAI,CAAC;oCACzC,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,aAAa,GAAG,SAAS,CAAC;iCAC1D;6BACF;4BACD,iBAAiB;4BACjB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,GAAG,CAAC,QAAQ,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;gCAC5C,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,MAAM,GAAG,CAAC,EAAE,CAAC,EAAE,EAAE;oCAChE,IAAI,GAAG,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,EAAE,IAAI,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE;wCAC5D,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,UAAU,IAAI,GAAG,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,UAAU;wCACxE,uBAAuB;wCACvB,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,UAAU,IAAI,GAAG,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,UAAU;qCAC/G;iCACF;gCAED,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,MAAM,GAAG,CAAC,EAAE,CAAC,EAAE,EAAE;oCAC/D,IAAI,GAAG,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,EAAE,IAAI,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE;wCAC3D,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,aAAa,IAAI,GAAG,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,aAAa;wCAC7E,0BAA0B;wCAC1B,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,aAAa,IAAI,GAAG,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,aAAa;qCACnH;iCACF;6BACF;4BAED,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;gCAC5D,IAAI,CAAC,GAAG,CAAC,EAAE;oCACT,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,UAAU,GAAG,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC,EAAE,CAAC,CAAC,CAAC;iCACtH;6BACF;4BAED,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;gCAC3D,IAAI,CAAC,GAAG,CAAC,EAAE;oCACT,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,aAAa,GAAG,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,aAAa,CAAC,EAAE,CAAC,CAAC,CAAC;iCAC1H;6BACF;yBACF;6BAAM;4BACL,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;yBACxB;qBACF;gBACH,CAAC,EAAC,CAAC;aACJ;YACD,IAAI,CAAC,GAAG,CAAC,aAAa,EAAE,CAAC;QAC3B,CAAC;KAAA;IAED,mBAAmB;QACjB,IAAI,CAAC,kBAAkB,GAAG,EAAE,CAAC;QAC7B,IAAI,CAAC,gBAAgB,GAAG,EAAE,CAAC;QAC3B,IAAI,CAAC,eAAe,GAAG,EAAE,CAAC;QAE1B,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;YAC9D,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC;SACxE;QAED,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;YAC5D,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,UAAU,IAAI,CAAC,CAAC;SAC5E;QAED,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;YAC3D,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,aAAa,IAAI,CAAC,CAAC;SAC7E;QAED,IAAI,QAAQ,GAAG,EAAE,CAAC;QAClB,IAAI,MAAM,GAAG,EAAE,CAAC;QAChB,IAAI,IAAI,CAAC,eAAe,CAAC,KAAK,CAAC,QAAQ,EAAE;YACvC,QAAQ,GAAG,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,eAAe,CAAC,KAAK,CAAC,QAAQ,CAAC;SACvE;QACD,IAAI,IAAI,CAAC,eAAe,CAAC,KAAK,CAAC,MAAM,EAAE;YACrC,MAAM,GAAG,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,eAAe,CAAC,KAAK,CAAC,MAAM,CAAC;SACnE;QAED,IAAI,UAAU,GAAG;YACf,KAAK,EAAE,IAAI,CAAC,KAAK;YACjB,WAAW,EAAE;gBACX,EAAE,QAAQ,EAAE,QAAQ,EAAE;gBACtB,EAAE,MAAM,EAAE,MAAM,EAAE;gBAClB,EAAE,SAAS,EAAE,IAAI,CAAC,SAAS,EAAE;gBAC7B,EAAE,WAAW,EAAE,IAAI,CAAC,WAAW,EAAE;gBACjC,EAAE,WAAW,EAAE,IAAI,CAAC,WAAW,EAAE;gBACjC,EAAE,UAAU,EAAE,IAAI,CAAC,UAAU,EAAE;gBAC/B,EAAE,WAAW,EAAE,IAAI,CAAC,WAAW,EAAE;gBACjC,EAAE,UAAU,EAAE,IAAI,CAAC,UAAU,EAAE;aAChC;YACD,kBAAkB,EAAE,IAAI,CAAC,kBAAkB;YAC3C,gBAAgB,EAAE,IAAI,CAAC,gBAAgB;YACvC,eAAe,EAAE,IAAI,CAAC,eAAe;SACtC;QACD,IAAI,CAAC,aAAa,CAAC,WAAW,CAAC,UAAU,CAAC,CAAC;IAC7C,CAAC;IACD,YAAY;QACV,IAAI,CAAC,eAAe,CAAC,KAAK,EAAE,CAAC;QAC7B,IAAI,CAAC,QAAQ,EAAE,CAAC;QAChB,IAAI,CAAC,aAAa,CAAC,QAAQ,GAAG,EAAE,CAAC;QACjC,IAAI,CAAC,aAAa,CAAC,OAAO,GAAG,EAAE,CAAC;QAChC,IAAI,CAAC,aAAa,CAAC,OAAO,GAAG,EAAE,CAAC;QAChC,IAAI,CAAC,aAAa,CAAC,QAAQ,GAAG,EAAE,CAAC;QACjC,IAAI,CAAC,aAAa,CAAC,MAAM,GAAG,EAAE,CAAC;QAC/B,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,UAAU,GAAG,EAAE,CAAC;QACpC,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,QAAQ,GAAG,EAAE,CAAC;QAClC,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,OAAO,GAAG,EAAE,CAAC;QACjC,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;QACtB,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC;QACxB,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC;QACxB,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;QACvB,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC;QACxB,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;QACvB,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;QACtB,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;QACpB,IAAI,CAAC,GAAG,CAAC,aAAa,EAAE,CAAC;IAC3B,CAAC;IAGK,aAAa,CAAC,EAAE,EAAE,IAAI;;YAC1B,IAAI,IAAI,IAAI,SAAS,EAAE;gBACrB,IAAI,EAAE,EAAE;oBACN,IAAI,CAAC,WAAW,GAAG,EAAE,CAAC,IAAI;oBAC1B,MAAM,IAAI,CAAC,aAAa,CAAC,kBAAkB,CAAC,EAAE,EAAE,IAAI,CAAC,CAAC,SAAS,EAAE,CAAC,IAAI,CAAC,CAAO,GAAQ,EAAE,EAAE,CAAC;wBACzF,OAAO,CAAC,GAAG,CAAC,iBAAiB,EAAE,GAAG,CAAC,CAAC;wBACpC,IAAI,GAAG,EAAE;4BACP,IAAI,CAAC,aAAa,CAAC,QAAQ,GAAG,GAAG;yBAClC;oBACH,CAAC,EAAC,CAAC;iBACJ;qBAAM;oBACL,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC;oBACxB,IAAI,CAAC,aAAa,CAAC,QAAQ,GAAG,EAAE,CAAC;oBACjC,IAAI,CAAC,aAAa,CAAC,OAAO,GAAG,EAAE,CAAC;oBAChC,IAAI,CAAC,aAAa,CAAC,OAAO,GAAG,EAAE,CAAC;oBAChC,IAAI,CAAC,aAAa,CAAC,QAAQ,GAAG,EAAE,CAAC;oBACjC,IAAI,CAAC,aAAa,CAAC,MAAM,GAAG,EAAE,CAAC;oBAC/B,IAAI,CAAC,eAAe,CAAC,QAAQ,CAAC,WAAW,CAAC,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC;oBACxD,IAAI,CAAC,eAAe,CAAC,QAAQ,CAAC,UAAU,CAAC,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC;oBACvD,IAAI,CAAC,eAAe,CAAC,QAAQ,CAAC,WAAW,CAAC,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC;oBACxD,IAAI,CAAC,eAAe,CAAC,QAAQ,CAAC,UAAU,CAAC,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC;oBACvD,IAAI,CAAC,eAAe,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC;iBACvD;gBACD,IAAI,CAAC,aAAa,CAAC,QAAQ,GAAG,CAAC,GAAG,IAAI,CAAC,aAAa,CAAC,QAAQ,CAAC,CAAC;gBAC/D,IAAI,CAAC,aAAa,CAAC,OAAO,GAAG,CAAC,GAAG,IAAI,CAAC,aAAa,CAAC,OAAO,CAAC,CAAC;gBAC7D,IAAI,CAAC,aAAa,CAAC,OAAO,GAAG,CAAC,GAAG,IAAI,CAAC,aAAa,CAAC,OAAO,CAAC,CAAC;gBAC7D,IAAI,CAAC,aAAa,CAAC,QAAQ,GAAG,CAAC,GAAG,IAAI,CAAC,aAAa,CAAC,QAAQ,CAAC,CAAC;aAChE;YAED,IAAI,IAAI,IAAI,SAAS,EAAE;gBACrB,IAAI,CAAC,aAAa,CAAC,QAAQ,GAAG,EAAE,CAAC;gBACjC,IAAI,CAAC,aAAa,CAAC,OAAO,GAAG,EAAE,CAAC;gBAChC,IAAI,CAAC,aAAa,CAAC,OAAO,GAAG,EAAE,CAAC;gBAChC,IAAI,CAAC,aAAa,CAAC,QAAQ,GAAG,EAAE,CAAC;gBACjC,IAAI,CAAC,aAAa,CAAC,MAAM,GAAG,EAAE,CAAC;gBAC/B,IAAI,CAAC,eAAe,CAAC,QAAQ,CAAC,WAAW,CAAC,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC;gBACxD,IAAI,CAAC,eAAe,CAAC,QAAQ,CAAC,UAAU,CAAC,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC;gBACvD,IAAI,CAAC,eAAe,CAAC,QAAQ,CAAC,WAAW,CAAC,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC;gBACxD,IAAI,CAAC,eAAe,CAAC,QAAQ,CAAC,UAAU,CAAC,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC;gBACvD,IAAI,CAAC,eAAe,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC;gBACtD,IAAI,EAAE,EAAE;oBACN,IAAI,CAAC,WAAW,GAAG,EAAE,CAAC,IAAI,CAAC;oBAC3B,MAAM,IAAI,CAAC,aAAa,CAAC,kBAAkB,CAAC,EAAE,CAAC,EAAE,EAAE,IAAI,CAAC,CAAC,SAAS,EAAE,CAAC,IAAI,CAAC,CAAO,GAAQ,EAAE,EAAE,CAAC;wBAC5F,IAAI,GAAG,EAAE;4BACP,IAAI,CAAC,aAAa,CAAC,QAAQ,GAAG,GAAG;yBAClC;oBACH,CAAC,EAAC,CAAC;iBACJ;qBAAM;oBACL,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC;oBACxB,IAAI,CAAC,eAAe,CAAC,KAAK,CAAC,SAAS,GAAG,EAAE,CAAC;oBAC1C,IAAI,CAAC,eAAe,CAAC,KAAK,CAAC,SAAS,GAAG,EAAE,CAAC;oBAC1C,IAAI,CAAC,eAAe,CAAC,KAAK,CAAC,QAAQ,GAAG,EAAE,CAAC;oBACzC,IAAI,CAAC,eAAe,CAAC,KAAK,CAAC,SAAS,GAAG,EAAE,CAAC;oBAC1C,IAAI,CAAC,eAAe,CAAC,KAAK,CAAC,QAAQ,GAAG,EAAE,CAAC;oBACzC,IAAI,CAAC,eAAe,CAAC,KAAK,CAAC,OAAO,GAAG,EAAE,CAAC;iBACzC;aACF;YAED,IAAI,IAAI,IAAI,QAAQ,EAAE;gBACpB,IAAI,CAAC,aAAa,CAAC,OAAO,GAAG,EAAE,CAAC;gBAChC,IAAI,CAAC,aAAa,CAAC,OAAO,GAAG,EAAE,CAAC;gBAChC,IAAI,CAAC,aAAa,CAAC,QAAQ,GAAG,EAAE,CAAC;gBACjC,IAAI,CAAC,aAAa,CAAC,MAAM,GAAG,EAAE,CAAC;gBAC/B,IAAI,CAAC,eAAe,CAAC,QAAQ,CAAC,UAAU,CAAC,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC;gBACvD,IAAI,CAAC,eAAe,CAAC,QAAQ,CAAC,WAAW,CAAC,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC;gBACxD,IAAI,CAAC,eAAe,CAAC,QAAQ,CAAC,UAAU,CAAC,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC;gBACvD,IAAI,CAAC,eAAe,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC;gBACtD,IAAI,EAAE,EAAE;oBACN,IAAI,CAAC,WAAW,GAAG,EAAE,CAAC,IAAI,CAAC;oBAC3B,MAAM,IAAI,CAAC,aAAa,CAAC,kBAAkB,CAAC,EAAE,CAAC,EAAE,EAAE,IAAI,CAAC,CAAC,SAAS,EAAE,CAAC,IAAI,CAAC,CAAO,GAAQ,EAAE,EAAE,CAAC;wBAC5F,IAAI,GAAG,EAAE;4BACP,IAAI,CAAC,aAAa,CAAC,OAAO,GAAG,GAAG;yBACjC;oBACH,CAAC,EAAC,CAAC;iBACJ;qBAAM;oBACL,IAAI,CAAC,WAAW,GAAG,IAAI;oBACvB,IAAI,CAAC,eAAe,CAAC,KAAK,CAAC,SAAS,GAAG,EAAE,CAAC;oBAC1C,IAAI,CAAC,eAAe,CAAC,KAAK,CAAC,QAAQ,GAAG,EAAE,CAAC;oBACzC,IAAI,CAAC,eAAe,CAAC,KAAK,CAAC,SAAS,GAAG,EAAE,CAAC;oBAC1C,IAAI,CAAC,eAAe,CAAC,KAAK,CAAC,QAAQ,GAAG,EAAE,CAAC;oBACzC,IAAI,CAAC,eAAe,CAAC,KAAK,CAAC,OAAO,GAAG,EAAE,CAAC;iBACzC;aAEF;YAED,IAAI,IAAI,IAAI,SAAS,EAAE;gBACrB,IAAI,CAAC,aAAa,CAAC,OAAO,GAAG,EAAE,CAAC;gBAChC,IAAI,CAAC,aAAa,CAAC,QAAQ,GAAG,EAAE,CAAC;gBACjC,IAAI,CAAC,aAAa,CAAC,MAAM,GAAG,EAAE,CAAC;gBAC/B,IAAI,CAAC,eAAe,CAAC,QAAQ,CAAC,WAAW,CAAC,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC;gBACxD,IAAI,CAAC,eAAe,CAAC,QAAQ,CAAC,UAAU,CAAC,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC;gBACvD,IAAI,CAAC,eAAe,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC;gBACtD,IAAI,EAAE,EAAE;oBACN,IAAI,CAAC,UAAU,GAAG,EAAE,CAAC,IAAI;oBACzB,MAAM,IAAI,CAAC,aAAa,CAAC,kBAAkB,CAAC,EAAE,CAAC,EAAE,EAAE,IAAI,CAAC,CAAC,SAAS,EAAE,CAAC,IAAI,CAAC,CAAO,GAAQ,EAAE,EAAE,CAAC;wBAC5F,IAAI,GAAG,EAAE;4BACP,IAAI,CAAC,aAAa,CAAC,OAAO,GAAG,GAAG;yBACjC;oBACH,CAAC,EAAC,CAAC;iBACJ;qBAAM;oBACL,IAAI,CAAC,UAAU,GAAG,IAAI;oBACtB,IAAI,CAAC,eAAe,CAAC,KAAK,CAAC,QAAQ,GAAG,EAAE,CAAC;oBACzC,IAAI,CAAC,eAAe,CAAC,KAAK,CAAC,SAAS,GAAG,EAAE,CAAC;oBAC1C,IAAI,CAAC,eAAe,CAAC,KAAK,CAAC,QAAQ,GAAG,EAAE,CAAC;oBACzC,IAAI,CAAC,eAAe,CAAC,KAAK,CAAC,OAAO,GAAG,EAAE,CAAC;iBACzC;aACF;YACD,IAAI,IAAI,IAAI,QAAQ,EAAE;gBACpB,IAAI,CAAC,aAAa,CAAC,QAAQ,GAAG,EAAE,CAAC;gBACjC,IAAI,CAAC,aAAa,CAAC,MAAM,GAAG,EAAE,CAAC;gBAC/B,IAAI,CAAC,eAAe,CAAC,QAAQ,CAAC,UAAU,CAAC,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC;gBACvD,IAAI,CAAC,eAAe,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC;gBACtD,IAAI,EAAE,EAAE;oBACN,IAAI,CAAC,WAAW,GAAG,EAAE,CAAC,IAAI,CAAC;oBAC3B,MAAM,IAAI,CAAC,aAAa,CAAC,kBAAkB,CAAC,EAAE,CAAC,EAAE,EAAE,IAAI,CAAC,CAAC,SAAS,EAAE,CAAC,IAAI,CAAC,CAAO,GAAQ,EAAE,EAAE,CAAC;wBAC5F,IAAI,GAAG,EAAE;4BACP,IAAI,CAAC,aAAa,CAAC,QAAQ,GAAG,GAAG;yBAClC;oBACH,CAAC,EAAC,CAAC;iBACJ;qBAAM;oBACL,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC;oBACxB,IAAI,CAAC,eAAe,CAAC,KAAK,CAAC,SAAS,GAAG,EAAE,CAAC;oBAC1C,IAAI,CAAC,eAAe,CAAC,KAAK,CAAC,QAAQ,GAAG,EAAE,CAAC;oBACzC,IAAI,CAAC,eAAe,CAAC,KAAK,CAAC,OAAO,GAAG,EAAE,CAAC;iBACzC;aACF;YAED,IAAI,IAAI,IAAI,OAAO,EAAE;gBACnB,IAAI,EAAE,EAAE;oBACN,IAAI,CAAC,UAAU,GAAG,EAAE,CAAC,IAAI;oBACzB,MAAM,IAAI,CAAC,aAAa,CAAC,cAAc,CAAC,EAAE,CAAC,CAAC,SAAS,EAAE,CAAC,IAAI,CAAC,CAAO,GAAQ,EAAE,EAAE,CAAC;wBAC/E,IAAI,GAAG,EAAE;4BACP,IAAI,CAAC,aAAa,CAAC,MAAM,GAAG,GAAG;yBAChC;oBACH,CAAC,EAAC,CAAC;iBACJ;qBAAM;oBACL,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;oBACvB,IAAI,CAAC,aAAa,CAAC,MAAM,GAAG,EAAE,CAAC;oBAC/B,IAAI,CAAC,eAAe,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC;oBACtD,IAAI,CAAC,eAAe,CAAC,KAAK,CAAC,QAAQ,GAAG,EAAE,CAAC;oBACzC,IAAI,CAAC,eAAe,CAAC,KAAK,CAAC,OAAO,GAAG,EAAE,CAAC;iBACzC;aACF;YAED,OAAO,CAAC,GAAG,CAAC,MAAM,EAAE,IAAI,CAAC,CAAC;YAC1B,OAAO,CAAC,GAAG,CAAC,IAAI,EAAE,EAAE,CAAC,CAAC;YAEtB,IAAI,IAAI,IAAI,QAAQ,EAAE;gBACpB,IAAI,EAAE,EAAE;oBACN,IAAI,CAAC,SAAS,GAAG,EAAE,CAAC,SAAS;iBAC9B;qBAAM;oBACL,IAAI,CAAC,SAAS,GAAG,IAAI;oBACrB,IAAI,CAAC,eAAe,CAAC,KAAK,CAAC,OAAO,GAAG,EAAE,CAAC;iBACzC;aACF;YACD,IAAI,CAAC,GAAG,CAAC,aAAa,EAAE;QAC1B,CAAC;KAAA;IAID,QAAQ;QACN,IAAI,CAAC,eAAe,GAAG,IAAI,qDAAS,CAAC;YACnC,UAAU,EAAE,IAAI,uDAAW,CAAC,EAAE,EAAE,CAAC,+DAAmB,EAAE,oEAAwB,CAAC,CAAC;YAChF,QAAQ,EAAE,IAAI,uDAAW,CAAC,EAAE,EAAE,CAAC,+DAAmB,EAAE,oEAAwB,CAAC,CAAC;YAC9E,SAAS,EAAE,IAAI,uDAAW,CAAC,EAAE,CAAC;YAC9B,WAAW,EAAE,IAAI,uDAAW,CAAC,EAAE,CAAC;YAChC,WAAW,EAAE,IAAI,uDAAW,CAAC,EAAE,CAAC;YAChC,UAAU,EAAE,IAAI,uDAAW,CAAC,EAAE,CAAC;YAC/B,WAAW,EAAE,IAAI,uDAAW,CAAC,EAAE,CAAC;YAChC,UAAU,EAAE,IAAI,uDAAW,CAAC,EAAE,CAAC;SAChC,CAAC,CAAC;IACL,CAAC;IAED,cAAc,CAAC,WAAmB;QAChC,MAAM,OAAO,GAAG,IAAI,CAAC,eAAe,CAAC,QAAQ,CAAC,WAAW,CAAC,CAAC;QAC3D,OAAO,OAAO,CAAC,KAAK,IAAI,CAAC,OAAO,CAAC,KAAK,IAAI,OAAO,CAAC,OAAO,CAAC,CAAC;IAC7D,CAAC;IAED,gBAAgB,CAAC,WAAmB;QAClC,MAAM,OAAO,GAAG,IAAI,CAAC,eAAe,CAAC,QAAQ,CAAC,WAAW,CAAC,CAAC;QAC3D,OAAO,OAAO,CAAC,OAAO,IAAI,CAAC,OAAO,CAAC,KAAK,IAAI,OAAO,CAAC,OAAO,CAAC,CAAC;IAC/D,CAAC;IAED,eAAe,CAAC,UAAU,EAAE,WAAW;QACrC,MAAM,OAAO,GAAG,IAAI,CAAC,eAAe,CAAC,QAAQ,CAAC,WAAW,CAAC,CAAC;QAC3D,OAAO,OAAO,CAAC,QAAQ,CAAC,UAAU,CAAC,IAAI,CAAC,OAAO,CAAC,KAAK,IAAI,OAAO,CAAC,OAAO,CAAC,CAAC;IAC5E,CAAC;IAED,gBAAgB,CAAC,WAAW;QAC1B,MAAM,OAAO,GAAG,IAAI,CAAC,eAAe,CAAC,QAAQ,CAAC,WAAW,CAAC,CAAC;QAC3D,OAAO,OAAO,CAAC,KAAK,IAAI,OAAO,CAAC,OAAO,CAAC;IAC1C,CAAC;IAED,OAAO,CAAC,IAAI;QACV,OAAO,CAAC,GAAG,CAAC,SAAS,EAAE,IAAI,CAAC,CAAC;QAC7B,IAAI,IAAI,IAAI,UAAU,EAAE;YACtB,IAAI,CAAC,WAAW,GAAG,IAAI,IAAI,CAAC,IAAI,CAAC,eAAe,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC;YACjE,IAAI,CAAC,WAAW,GAAG,IAAI,IAAI,CAAC,IAAI,IAAI,EAAE,CAAC,WAAW,CAAC,IAAI,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,WAAW,EAAE,GAAG,CAAC,CAAC,CAAC;YACjG,IAAI,QAAQ,GAAG,IAAI,IAAI,CAAC,IAAI,CAAC,eAAe,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,WAAW,EAAE,GAAG,IAAI,IAAI,CAAC,IAAI,CAAC,eAAe,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC,WAAW,EAAE,CAAC;YACvI,IAAI,QAAQ,IAAI,CAAC,IAAI,QAAQ,IAAI,CAAC,EAAE;gBAClC,IAAI,CAAC,eAAe,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC;aACtD;SACF;QAED,IAAI,IAAI,IAAI,QAAQ,EAAE;YACpB,IAAI,CAAC,WAAW,GAAG,IAAI,IAAI,CAAC,IAAI,CAAC,eAAe,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC;YAC/D,IAAI,CAAC,WAAW,GAAG,IAAI,IAAI,CAAC,IAAI,IAAI,EAAE,CAAC,WAAW,CAAC,IAAI,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,WAAW,EAAE,GAAG,CAAC,CAAC,CAAC;YACjG,IAAI,QAAQ,GAAG,IAAI,IAAI,CAAC,IAAI,CAAC,eAAe,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,WAAW,EAAE,GAAG,IAAI,IAAI,CAAC,IAAI,CAAC,eAAe,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC,WAAW,EAAE,CAAC;YACvI,IAAI,QAAQ,IAAI,CAAC,IAAI,QAAQ,IAAI,CAAC,EAAE;gBAClC,IAAI,CAAC,eAAe,CAAC,QAAQ,CAAC,UAAU,CAAC,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC;aACxD;SACF;QACD,IAAI,CAAC,GAAG,CAAC,aAAa,EAAE,CAAC;IAC3B,CAAC;IAED,SAAS,CAAC,IAAI;QACZ,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC;QACxB,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC;QACxB,IAAI,IAAI,IAAI,UAAU,EAAE;YACtB,IAAI,CAAC,eAAe,CAAC,QAAQ,CAAC,UAAU,CAAC,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC;SACxD;QACD,IAAI,IAAI,IAAI,QAAQ,EAAE;YACpB,IAAI,CAAC,eAAe,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC;SACtD;QAED,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;QACvB,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,UAAU,GAAG,EAAE,CAAC;QACpC,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,QAAQ,GAAG,EAAE,CAAC;QAClC,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,OAAO,GAAG,EAAE,CAAC;QAEjC,IAAI,CAAC,aAAa,CAAC,QAAQ,GAAG,EAAE,CAAC;QACjC,IAAI,CAAC,aAAa,CAAC,OAAO,GAAG,EAAE,CAAC;QAChC,IAAI,CAAC,aAAa,CAAC,OAAO,GAAG,EAAE,CAAC;QAChC,IAAI,CAAC,aAAa,CAAC,QAAQ,GAAG,EAAE,CAAC;QACjC,IAAI,CAAC,aAAa,CAAC,MAAM,GAAG,EAAE,CAAC;QAC/B,IAAI,CAAC,eAAe,CAAC,QAAQ,CAAC,WAAW,CAAC,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC;QACxD,IAAI,CAAC,eAAe,CAAC,QAAQ,CAAC,WAAW,CAAC,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC;QACxD,IAAI,CAAC,eAAe,CAAC,QAAQ,CAAC,UAAU,CAAC,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC;QACvD,IAAI,CAAC,eAAe,CAAC,QAAQ,CAAC,WAAW,CAAC,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC;QACxD,IAAI,CAAC,eAAe,CAAC,QAAQ,CAAC,UAAU,CAAC,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC;QACvD,IAAI,CAAC,eAAe,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC;IACxD,CAAC;IAED,iBAAiB,CAAC,IAAI;QACpB,IAAI,CAAC,GAAG,IAAI,IAAI,CAAC,IAAI,CAAC,EACpB,KAAK,GAAG,EAAE,GAAG,CAAC,CAAC,CAAC,QAAQ,EAAE,GAAG,CAAC,CAAC,EAC/B,GAAG,GAAG,EAAE,GAAG,CAAC,CAAC,OAAO,EAAE,EACtB,IAAI,GAAG,CAAC,CAAC,WAAW,EAAE,CAAC;QACzB,IAAI,KAAK,CAAC,MAAM,GAAG,CAAC;YAClB,KAAK,GAAG,GAAG,GAAG,KAAK,CAAC;QACtB,IAAI,GAAG,CAAC,MAAM,GAAG,CAAC;YAChB,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC;QAClB,OAAO,CAAC,GAAG,EAAE,KAAK,EAAE,IAAI,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;IACtC,CAAC;IAED,WAAW,CAAC,GAAW,EAAE,MAAc;QACrC,MAAM,MAAM,GAAG,WAAE,EAAI,MAAM,EAAC;QAC5B,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,GAAG,MAAM,CAAC,GAAG,MAAM,CAAC,CAAC,cAAc,EAAE,CAAC;IAC9D,CAAC;IAAA,CAAC;CAEH;;YA1eQ,4DAAiB;YAIjB,8HAA2C;;AAQvC,yCAAyC;IALrD,wDAAS,CAAC;QACT,QAAQ,EAAE,2CAA2C;QACrD,qMAAqE;;KAEtE,CAAC;GACW,yCAAyC,CA8drD;AA9dqD;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACZb;AACM;AAC+D;AAC/D;AACuB;AACtB;AACkB;AACZ;AACW;AACd;AACgB;AACN;AACJ;AACS;IA2BrD,sCAAsC,SAAtC,sCAAsC;CAAI;AAA1C,sCAAsC;IAvBlD,uDAAQ,CAAC;QACR,YAAY,EAAE,CAAC,uHAAyC,CAAC;QACzD,OAAO,EAAE;YACP,yDAAY;YACZ,uDAAW;YACX,gEAAc;YACd,+DAAmB;YACnB,0DAAe;YACf,+EAAe;YACf,2EAAmB;YACnB,6DAAkB;YAClB,8EAAmB;YACnB,wEAAmB;YACnB,oEAAc;YACd,6EAAkB;YAChB,mEAAqB,CAAC;gBACpB;oBACE,IAAI,EAAE,EAAE;oBACR,SAAS,EAAE,uHAAyC;iBACrD;aACF,CAAC;SACL;KACF,CAAC;GACW,sCAAsC,CAAI;AAAJ;;;;;;;;;;;;;;;ACxCnD,iEAAe,4PAA4P,QAAQ,gLAAgL,2VAA2V,qPAAqP,iVAAiV,28BAA28B,soCAAsoC,2SAA2S,y4DAAy4D,22DAA22D,q+DAAq+D,4BAA4B,mBAAmB,yCAAyC,aAAa,mBAAmB,2NAA2N,MAAM,QAAQ,gEAAgE,aAAa,mBAAmB,4OAA4O,+EAA+E,oCAAoC,OAAO,OAAO,OAAO,MAAM,8EAA8E,4EAA4E,2VAA2V,eAAe,yFAAyF,eAAe,uFAAuF,cAAc,wRAAwR,eAAe,uFAAuF,aAAa,qFAAqF,aAAa,sGAAsG,6BAA6B,6BAA6B,2IAA2I,mBAAmB,qBAAqB,mKAAmK,mBAAmB,2BAA2B,iKAAiK,mBAAmB,6BAA6B,+JAA+J,mBAAmB,4BAA4B","sources":["./src/app/pages/report-channel-summary-by-bank-branch/report-channel-summary-by-bank-branch-export.service.ts","./src/app/pages/report-channel-summary-by-bank-branch/report-channel-summary-by-bank-branch.component.ts","./src/app/pages/report-channel-summary-by-bank-branch/report-channel-summary-by-bank-branch.module.ts","./src/app/pages/report-channel-summary-by-bank-branch/report-channel-summary-by-bank-branch.component.html"],"sourcesContent":["import { HttpClient, HttpParams } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Workbook } from 'exceljs';\nimport * as fs from 'file-saver';\nimport { BizOperationService } from '../../../app/core/biz.operation.service';\nimport { environment } from '../../../environments/environment';\n\nconst API_ADDON_URL = `${environment.apiUrl}/channelSummaryReport`;\nconst API_HIREARCHY_URL = `${environment.apiUrl}/officeHirearchy`;\nconst API_AGENT_OFFICE_URL = `${environment.apiUrl}/agentByOffice`;\n\n\nconst alphabet = [\"A\", \"B\", \"C\", \"D\", \"E\", \"F\", \"G\", \"H\", \"I\", \"J\", \"K\", \"L\", \"M\", \"N\", \"O\", \"P\", \"Q\", \"R\", \"S\", \"T\", \"U\", \"V\", \"W\", \"X\", \"Y\", \"Z\",\n  \"AA\", \"AB\", \"AC\", \"AD\", \"AE\", \"AF\", \"AG\", \"AH\", \"AI\", \"AJ\", \"AK\", \"AL\", \"AM\", \"AN\", \"AO\", \"AP\", \"AQ\", \"AR\", \"AS\", \"AT\", \"AU\", \"AV\", \"AW\", \"AX\", \"AY\", \"AZ\",\n  \"BA\", \"BB\", \"BC\", \"BD\", \"BE\", \"BF\", \"BG\", \"BH\", \"BI\", \"BJ\", \"BK\", \"BL\", \"BM\", \"BN\", \"BO\", \"BP\", \"BQ\", \"BR\", \"BS\", \"BT\", \"BU\", \"BV\", \"BW\", \"BX\", \"BY\", \"BZ\",\n  \"CA\", \"CB\", \"CC\", \"CD\", \"CE\", \"CF\", \"CG\", \"CH\", \"CI\", \"CJ\", \"CK\", \"CL\", \"CM\", \"CN\", \"CO\", \"CP\", \"CQ\", \"CR\", \"CS\", \"CT\", \"CU\", \"CV\", \"CW\", \"CX\", \"CY\", \"CZ\",\n  \"DA\", \"DB\", \"DC\", \"DD\", \"DE\", \"DF\", \"DG\", \"DH\", \"DI\", \"DJ\", \"DK\", \"DL\", \"DM\", \"DN\", \"DO\", \"DP\", \"DQ\", \"DR\", \"DS\", \"DT\", \"DU\", \"DV\", \"DW\", \"DX\", \"DY\", \"DZ\",\n  \"EA\", \"EB\", \"EC\", \"ED\", \"EE\", \"EF\", \"EG\", \"EH\", \"EI\", \"EJ\", \"EK\", \"EL\", \"EM\", \"EN\", \"EO\", \"EP\", \"EQ\", \"ER\", \"ES\", \"ET\", \"EU\", \"EV\", \"EW\", \"EX\", \"EY\", \"Z\"];\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ReportChannelSummaryBankBranchExportService extends BizOperationService<any, number>{\n  constructor(protected httpClient: HttpClient) {\n    super(httpClient, API_ADDON_URL);\n  }\n\n  getOfficeHirearchy(parentId, typeCode) {\n    let reqObj = {\n      parentId: parentId,\n      typeCode: typeCode,\n    }\n    const params = new HttpParams({\n      fromObject: reqObj\n    });\n    return this.httpClient.get<any>(API_HIREARCHY_URL, { params: params });\n  }\n\n  getAgentOffice(officeId) {\n    let reqObj = {\n      officeId: officeId,\n    }\n    const params = new HttpParams({\n      fromObject: reqObj\n    });\n    return this.httpClient.get<any>(API_AGENT_OFFICE_URL, { params: params });\n  }\n\n\n  getAllReportData(searchValue) {\n    if (searchValue.fromDate) {\n      searchValue.fromDate = this.formatDateYYYY_MM_DD(searchValue.fromDate);\n    }\n    if (searchValue.toDate) {\n      searchValue.toDate = this.formatDateYYYY_MM_DD(searchValue.toDate);\n    }\n    const params = new HttpParams({\n      fromObject: searchValue\n    });\n    return this.httpClient.get(API_ADDON_URL, { params: params });\n  }\n\n  getAllAboutBRAM(fnaId) {\n    return this.httpClient.get(API_ADDON_URL + '/' + fnaId + '/asset');\n  }\n\n\n  formatDateYYYY_MM_DD(date) {\n    var d = new Date(date),\n      month = '' + (d.getMonth() + 1),\n      day = '' + d.getDate(),\n      year = d.getFullYear();\n    if (month.length < 2)\n      month = '0' + month;\n    if (day.length < 2)\n      day = '0' + day;\n    return [year, month, day].join('-');\n  }\n\n  exportExcel(excelData) {\n    //Title, Header & Data\n    const title = excelData.title;\n    const searchValue = excelData.searchValue\n    const particularForExcel = excelData.particularForExcel\n    const policiesForExcel = excelData.policiesForExcel\n    const premiumForExcel = excelData.premiumForExcel;\n\n    //Create a workbook with a worksheet\n    let workbook = new Workbook();\n    let worksheet = workbook.addWorksheet('Sheet1');\n\n    // Freeze\n    worksheet.views = [\n      { state: 'frozen', xSplit: 1, ySplit: 0, activeCell: 'A1' }\n    ];\n\n    //Add Row and formatting\n    worksheet.mergeCells('A1', 'B2');\n    let titleRow = worksheet.getCell('A1');\n    titleRow.value = title\n    titleRow.font = {\n      name: 'Calibri',\n      size: 12,\n      underline: 'single',\n      bold: true,\n      color: { argb: '0085A3' }\n    }\n    titleRow.alignment = { vertical: 'middle', horizontal: 'left' }\n\n    console.log('searchValue', searchValue);\n\n    // Display search name   \n    if (searchValue.length > 0) {\n      for (var i = 0; i < searchValue.length; i++) {\n        let cellIndex = null;\n        let cellIndexValue = null;\n        if (searchValue[i].fromDate) {\n          cellIndex = 'F1';\n          cellIndexValue = 'From Date: ' + searchValue[i].fromDate;\n        }\n        if (searchValue[i].toDate) {\n          cellIndex = 'F2';\n          cellIndexValue = 'To Date: ' + searchValue[i].toDate;\n        }\n        if (searchValue[i].companyName) {\n          cellIndex = 'L1';\n          cellIndexValue = 'Company: ' + searchValue[i].companyName;\n        }\n        if (searchValue[i].channelName) {\n          cellIndex = 'M1';\n          cellIndexValue = 'Channel: ' + searchValue[i].channelName;\n        }\n        if (searchValue[i].regionName) {\n          cellIndex = 'N1';\n          cellIndexValue = 'Region: ' + searchValue[i].regionName;\n        }\n        if (searchValue[i].clusterName) {\n          cellIndex = 'L2';\n          cellIndexValue = 'Cluster: ' + searchValue[i].clusterName;\n        }\n        if (searchValue[i].branchName) {\n          cellIndex = 'M2';\n          cellIndexValue = 'Branch: ' + searchValue[i].branchName;\n        }\n        if (searchValue[i].agentName) {\n          cellIndex = 'N2';\n          cellIndexValue = 'Agent: ' + searchValue[i].agentName;\n        }\n\n        if (cellIndex != null && cellIndexValue != null) {\n          let searchCell = worksheet.getCell(cellIndex);\n          searchCell.value = cellIndexValue;\n          searchCell.font = {\n            name: 'Calibri',\n            size: 10,\n            bold: true\n          }\n          searchCell.alignment = { vertical: 'middle', horizontal: 'left' }\n        }\n      }\n    }\n\n    worksheet.addRow([]);\n    // Adding Data with Conditional Formatting\n    let startIndex: number = 0;\n    for (var i = 0; i < particularForExcel.length; i++) {\n      let start = this.calculateStartPoint(startIndex);\n      startIndex += 1;\n      let fireCell = worksheet.getCell(start);\n      fireCell.value = particularForExcel[i];\n      fireCell.font = {\n        name: 'Calibri',\n        size: 12,\n        bold: true\n      }\n      fireCell.alignment = { vertical: 'middle', horizontal: 'center' }\n    }\n\n    for (var i = 0; i < policiesForExcel.length; i++) {\n      let start = this.calculateDataPoint(i);\n      let dataCell = worksheet.getCell(start);\n      dataCell.value = policiesForExcel[i];\n      dataCell.font = {\n        name: 'Calibri',\n        size: 12,\n        bold: false\n      }\n      dataCell.alignment = { vertical: 'middle', horizontal: 'center' }\n      if (i == 0) {\n        dataCell.alignment = { vertical: 'middle', horizontal: 'left' }\n      }\n    }\n\n    for (var i = 0; i < premiumForExcel.length; i++) {\n      let start = this.calculatePremiumDataPoint(i);\n      let dataCell = worksheet.getCell(start);\n      dataCell.value = premiumForExcel[i];\n      dataCell.font = {\n        name: 'Calibri',\n        size: 12,\n        bold: false\n      }\n      dataCell.alignment = { vertical: 'middle', horizontal: 'center' }\n      if (i == 0) {\n        dataCell.alignment = { vertical: 'middle', horizontal: 'left' }\n      }\n\n    }\n\n    worksheet.columns.forEach(function (column, i) {\n      var maxLength = 0;\n      column[\"eachCell\"]({ includeEmpty: true }, function (cell) {\n        var columnLength = cell.value ? cell.value.toString().length : 10;\n        if (columnLength > maxLength) {\n          maxLength = columnLength;\n        }\n      });\n      column.width = maxLength < 10 ? 10 : maxLength;\n    });\n\n    worksheet.getColumn(1).width = 25;\n\n    const autoHeight = (worksheet) => {\n      const lineHeight = 12 // height per line is roughly 12\n      worksheet.eachRow((row) => {\n        let maxLine = 1\n        row.eachCell((cell) => {\n          maxLine = Math.max(cell.value.split('\\n').length - 1, maxLine)\n        })\n        row.height = lineHeight * maxLine\n      })\n    }\n\n    //Generate & Save Excel File\n    workbook.xlsx.writeBuffer().then((data) => {\n      let blob = new Blob([data], { type: 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet; charset=utf-8' });\n      fs.saveAs(blob, title + '_' + this.formatDateDDMMYYY(new Date()) + '.xlsx');\n    });\n\n  }\n\n  calculateStartPoint(index) {\n    return alphabet[index] + '4'\n  }\n\n  calculateEndPoint(index) {\n    return alphabet[index] + '4'\n  }\n\n  calculateDataPoint(index) {\n    return alphabet[index] + '5'\n  }\n\n  calculatePremiumDataPoint(index) {\n    return alphabet[index] + '6'\n  }\n\n  formatDateDDMMYYY(date) {\n    var d = new Date(date),\n      month = '' + (d.getMonth() + 1),\n      day = '' + d.getDate(),\n      year = d.getFullYear();\n    if (month.length < 2)\n      month = '0' + month;\n    if (day.length < 2)\n      day = '0' + day;\n    return [day, month, year].join('_');\n  }\n\n  mathRoundTo(num: number, places: number) {\n    const factor = 10 ** places;\n    return (Math.round(num * factor) / factor).toLocaleString();\n  };\n\n}\n","import { ChangeDetectorRef, Component, OnInit } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { validateAllFields } from '../../../app/core/valid-all-feild';\nimport { ReportIdentityType, ReportStatus } from '../report-detail-by-agent/report-detail-by-agent.const';\nimport { ReportChannelSummaryBankBranchExportService } from './report-channel-summary-by-bank-branch-export.service';\nimport { CONSTANT_AGENT_REPORT_DATA } from './report-channel-summary-by-bank-branch.const';\n\n@Component({\n  selector: 'app-report-channel-summary-by-bank-branch',\n  templateUrl: './report-channel-summary-by-bank-branch.component.html',\n  styleUrls: ['./report-channel-summary-by-bank-branch.component.scss']\n})\nexport class ReportChannelSummaryByBankBranchComponent implements OnInit {\n  createFormGroup: FormGroup;\n  title = \"Channel Summary Report\";\n  fromMinDate = null;\n  fromMaxDate = null;\n  toMaxDate: { year: number; month: number; day: number; };\n  selectOptions = {\n    companies: [],\n    channels: [],\n    regions: [],\n    cluster: [],\n    branches: [],\n    agents: [],\n  }\n\n  reports = [];\n  products = [];\n  policies = [];\n  productList = [];\n\n  displayList = [{\n    particular: [],\n    policies: [],\n    premium: []\n  }]\n\n  agentName: string = null;\n  companyName: string = null;\n  channelName: string = null;\n  regionName: string = null;\n  clusterName: string = null;\n  branchName: string = null;\n\n\n  particularForExcel = [];\n  policiesForExcel = [];\n  premiumForExcel = [];\n  isHasData: boolean = false;\n  isData: boolean;\n  dataList: any;\n\n  constructor(private cdf: ChangeDetectorRef,\n    public exportService: ReportChannelSummaryBankBranchExportService) { }\n\n\n  ngOnInit(): void {\n    this.loadForm();\n    //this.getOfficeHirearchy();\n  }\n\n  async getOfficeHirearchy() {\n    await this.exportService.getOfficeHirearchy('', '01').toPromise().then(async (res: any) => {\n      if (res) {\n        this.selectOptions.companies = res\n      }\n    });\n  }\n\n  async getAllReports() {\n    if (this.createFormGroup.invalid) {\n      validateAllFields(this.createFormGroup);\n    } else {\n      this.displayList[0].particular = [];\n      this.displayList[0].policies = [];\n      this.displayList[0].premium = [];\n      await this.exportService.getAllReportData(this.createFormGroup.value).toPromise().then(async (res: any) => {\n        console.log('channelSummaryReport', res);\n\n        if (res) {\n          this.reports = res;\n          this.displayList[0].particular.push({ id: null, channel: 'Particular' });\n          console.log('res.channels =====> ', res.channels);\n\n          // add header\n          if (res.channels) {\n            res.channels = [...new Map(res.channels.map(item => [item.id, item])).values()];\n            for (var i = 0; i < res.channels.length; i++) {\n              if (res.channels[i].channel != null) {\n                this.displayList[0].particular.push({\n                  id: res.channels[i].id,\n                  channel: res.channels[i].channel\n                });\n              }\n            }\n            this.displayList[0].particular.push({ id: 'total', channel: \"Total\" });\n          }\n\n          // make a table\n          if (res.dataList.length > 0) {\n            this.isHasData = true;\n            for (var j = 0; j < this.displayList[0].particular.length; j++) {\n              this.displayList[0].policies.push(\n                {\n                  id: this.displayList[0].particular[j].id,\n                  noOfPolicy: 0\n                });\n              if (j == 1) {\n                this.displayList[0].policies[0].id = null;\n                this.displayList[0].policies[0].noOfPolicy = 'No. of Policies';\n              }\n            }\n\n            for (var j = 0; j < this.displayList[0].particular.length; j++) {\n              this.displayList[0].premium.push({\n                id: this.displayList[0].particular[j].id,\n                totalPreminum: null\n              });\n              if (j == 1) {\n                this.displayList[0].premium[0].id = null;\n                this.displayList[0].premium[0].totalPreminum = 'Premuim';\n              }\n            }\n            // add data value\n            for (var i = 0; i < res.dataList.length; i++) {\n              for (var j = 0; j < this.displayList[0].policies.length - 1; j++) {\n                if (res.dataList[i].id == this.displayList[0].policies[j].id) {\n                  this.displayList[0].policies[j].noOfPolicy += res.dataList[i].noOfPolicy\n                  // add total noOfPolicy\n                  this.displayList[0].policies[this.displayList[0].policies.length - 1].noOfPolicy += res.dataList[i].noOfPolicy\n                }\n              }\n\n              for (var j = 0; j < this.displayList[0].premium.length - 1; j++) {\n                if (res.dataList[i].id == this.displayList[0].premium[j].id) {\n                  this.displayList[0].premium[j].totalPreminum += res.dataList[i].totalPreminum\n                  // add total totalPreminum\n                  this.displayList[0].premium[this.displayList[0].premium.length - 1].totalPreminum += res.dataList[i].totalPreminum\n                }\n              }\n            }\n\n            for (var j = 0; j < this.displayList[0].policies.length; j++) {\n              if (j > 0) {\n                this.displayList[0].policies[j].noOfPolicy = this.mathRoundTo(Number(this.displayList[0].policies[j].noOfPolicy), 2);\n              }\n            }\n\n            for (var j = 0; j < this.displayList[0].premium.length; j++) {\n              if (j > 0) {\n                this.displayList[0].premium[j].totalPreminum = this.mathRoundTo(Number(this.displayList[0].premium[j].totalPreminum), 2);\n              }\n            }\n          } else {\n            this.isHasData = false;\n          }\n        }\n      });\n    }\n    this.cdf.detectChanges();\n  }\n\n  generateReportExcel() {\n    this.particularForExcel = [];\n    this.policiesForExcel = [];\n    this.premiumForExcel = [];\n\n    for (var i = 0; i < this.displayList[0].particular.length; i++) {\n      this.particularForExcel.push(this.displayList[0].particular[i].channel)\n    }\n\n    for (var i = 0; i < this.displayList[0].policies.length; i++) {\n      this.policiesForExcel.push(this.displayList[0].policies[i].noOfPolicy || 0)\n    }\n\n    for (var i = 0; i < this.displayList[0].premium.length; i++) {\n      this.premiumForExcel.push(this.displayList[0].premium[i].totalPreminum || 0)\n    }\n\n    let fromDate = '';\n    let toDate = '';\n    if (this.createFormGroup.value.fromDate) {\n      fromDate = this.formatDateDDMMYYY(this.createFormGroup.value.fromDate)\n    }\n    if (this.createFormGroup.value.toDate) {\n      toDate = this.formatDateDDMMYYY(this.createFormGroup.value.toDate)\n    }\n\n    let reportData = {\n      title: this.title,\n      searchValue: [\n        { fromDate: fromDate },\n        { toDate: toDate },\n        { agentName: this.agentName },\n        { companyName: this.companyName },\n        { channelName: this.channelName },\n        { regionName: this.regionName },\n        { clusterName: this.clusterName },\n        { branchName: this.branchName }\n      ],\n      particularForExcel: this.particularForExcel,\n      policiesForExcel: this.policiesForExcel,\n      premiumForExcel: this.premiumForExcel\n    }\n    this.exportService.exportExcel(reportData);\n  }\n  cancelReport() {\n    this.createFormGroup.reset();\n    this.loadForm();\n    this.selectOptions.channels = [];\n    this.selectOptions.regions = [];\n    this.selectOptions.cluster = [];\n    this.selectOptions.branches = [];\n    this.selectOptions.agents = [];\n    this.displayList[0].particular = [];\n    this.displayList[0].policies = [];\n    this.displayList[0].premium = [];\n    this.agentName = null;\n    this.companyName = null;\n    this.channelName = null;\n    this.regionName = null;\n    this.clusterName = null;\n    this.branchName = null;\n    this.agentName = null;\n    this.isData = false;\n    this.cdf.detectChanges();\n  }\n\n\n  async changeOptions(ev, type) {\n    if (type == 'company') {\n      if (ev) {\n        this.companyName = ev.name\n        await this.exportService.getOfficeHirearchy('', '01').toPromise().then(async (res: any) => {\n          console.log('officeHirearchy', res);\n          if (res) {\n            this.selectOptions.channels = res\n          }\n        });\n      } else {\n        this.companyName = null;\n        this.selectOptions.channels = [];\n        this.selectOptions.regions = [];\n        this.selectOptions.cluster = [];\n        this.selectOptions.branches = [];\n        this.selectOptions.agents = [];\n        this.createFormGroup.controls['channelId'].setValue('');\n        this.createFormGroup.controls['regionId'].setValue('');\n        this.createFormGroup.controls['clusterId'].setValue('');\n        this.createFormGroup.controls['branchId'].setValue('');\n        this.createFormGroup.controls['agentId'].setValue('');\n      }\n      this.selectOptions.channels = [...this.selectOptions.channels];\n      this.selectOptions.regions = [...this.selectOptions.regions];\n      this.selectOptions.cluster = [...this.selectOptions.cluster];\n      this.selectOptions.branches = [...this.selectOptions.branches];\n    }\n\n    if (type == 'channel') {\n      this.selectOptions.channels = [];\n      this.selectOptions.regions = [];\n      this.selectOptions.cluster = [];\n      this.selectOptions.branches = [];\n      this.selectOptions.agents = [];\n      this.createFormGroup.controls['channelId'].setValue('');\n      this.createFormGroup.controls['regionId'].setValue('');\n      this.createFormGroup.controls['clusterId'].setValue('');\n      this.createFormGroup.controls['branchId'].setValue('');\n      this.createFormGroup.controls['agentId'].setValue('');\n      if (ev) {\n        this.companyName = ev.name;\n        await this.exportService.getOfficeHirearchy(ev.id, '02').toPromise().then(async (res: any) => {\n          if (res) {\n            this.selectOptions.channels = res\n          }\n        });\n      } else {\n        this.companyName = null;\n        this.createFormGroup.value.companyId = '';\n        this.createFormGroup.value.channelId = '';\n        this.createFormGroup.value.regionId = '';\n        this.createFormGroup.value.clusterId = '';\n        this.createFormGroup.value.branchId = '';\n        this.createFormGroup.value.agentId = '';\n      }\n    }\n\n    if (type == 'region') {\n      this.selectOptions.regions = [];\n      this.selectOptions.cluster = [];\n      this.selectOptions.branches = [];\n      this.selectOptions.agents = [];\n      this.createFormGroup.controls['regionId'].setValue('');\n      this.createFormGroup.controls['clusterId'].setValue('');\n      this.createFormGroup.controls['branchId'].setValue('');\n      this.createFormGroup.controls['agentId'].setValue('');\n      if (ev) {\n        this.channelName = ev.name;\n        await this.exportService.getOfficeHirearchy(ev.id, '03').toPromise().then(async (res: any) => {\n          if (res) {\n            this.selectOptions.regions = res\n          }\n        });\n      } else {\n        this.channelName = null\n        this.createFormGroup.value.channelId = '';\n        this.createFormGroup.value.regionId = '';\n        this.createFormGroup.value.clusterId = '';\n        this.createFormGroup.value.branchId = '';\n        this.createFormGroup.value.agentId = '';\n      }\n\n    }\n\n    if (type == 'cluster') {\n      this.selectOptions.cluster = [];\n      this.selectOptions.branches = [];\n      this.selectOptions.agents = [];\n      this.createFormGroup.controls['clusterId'].setValue('');\n      this.createFormGroup.controls['branchId'].setValue('');\n      this.createFormGroup.controls['agentId'].setValue('');\n      if (ev) {\n        this.regionName = ev.name\n        await this.exportService.getOfficeHirearchy(ev.id, '04').toPromise().then(async (res: any) => {\n          if (res) {\n            this.selectOptions.cluster = res\n          }\n        });\n      } else {\n        this.regionName = null\n        this.createFormGroup.value.regionId = '';\n        this.createFormGroup.value.clusterId = '';\n        this.createFormGroup.value.branchId = '';\n        this.createFormGroup.value.agentId = '';\n      }\n    }\n    if (type == 'branch') {\n      this.selectOptions.branches = [];\n      this.selectOptions.agents = [];\n      this.createFormGroup.controls['branchId'].setValue('');\n      this.createFormGroup.controls['agentId'].setValue('');\n      if (ev) {\n        this.clusterName = ev.name;\n        await this.exportService.getOfficeHirearchy(ev.id, '05').toPromise().then(async (res: any) => {\n          if (res) {\n            this.selectOptions.branches = res\n          }\n        });\n      } else {\n        this.clusterName = null;\n        this.createFormGroup.value.clusterId = '';\n        this.createFormGroup.value.branchId = '';\n        this.createFormGroup.value.agentId = '';\n      }\n    }\n\n    if (type == 'agent') {\n      if (ev) {\n        this.branchName = ev.name\n        await this.exportService.getAgentOffice(11).toPromise().then(async (res: any) => {\n          if (res) {\n            this.selectOptions.agents = res\n          }\n        });\n      } else {\n        this.branchName = null;\n        this.selectOptions.agents = [];\n        this.createFormGroup.controls['agentId'].setValue('');\n        this.createFormGroup.value.branchId = '';\n        this.createFormGroup.value.agentId = '';\n      }\n    }\n\n    console.log('type', type);\n    console.log('ev', ev);\n\n    if (type == 'office') {\n      if (ev) {\n        this.agentName = ev.agentName\n      } else {\n        this.agentName = null\n        this.createFormGroup.value.agentId = '';\n      }\n    }\n    this.cdf.detectChanges()\n  }\n\n\n\n  loadForm() {\n    this.createFormGroup = new FormGroup({\n      \"fromDate\": new FormControl('', [Validators.required, Validators.nullValidator]),\n      \"toDate\": new FormControl('', [Validators.required, Validators.nullValidator]),\n      \"agentId\": new FormControl(''),\n      \"companyId\": new FormControl(''),\n      \"channelId\": new FormControl(''),\n      \"regionId\": new FormControl(''),\n      \"clusterId\": new FormControl(''),\n      \"branchId\": new FormControl('')\n    });\n  }\n\n  isControlValid(controlName: string): boolean {\n    const control = this.createFormGroup.controls[controlName];\n    return control.valid && (control.dirty || control.touched);\n  }\n\n  isControlInvalid(controlName: string): boolean {\n    const control = this.createFormGroup.controls[controlName];\n    return control.invalid && (control.dirty || control.touched);\n  }\n\n  controlHasError(validation, controlName): boolean {\n    const control = this.createFormGroup.controls[controlName];\n    return control.hasError(validation) && (control.dirty || control.touched);\n  }\n\n  isControlTouched(controlName): boolean {\n    const control = this.createFormGroup.controls[controlName];\n    return control.dirty || control.touched;\n  }\n\n  doValid(type) {\n    console.log('doValid', type);\n    if (type == 'FromDate') {\n      this.fromMinDate = new Date(this.createFormGroup.value.fromDate);\n      this.fromMaxDate = new Date(new Date().setFullYear(new Date(this.fromMinDate).getFullYear() + 1))\n      let diffYear = new Date(this.createFormGroup.value.toDate).getFullYear() - new Date(this.createFormGroup.value.fromDate).getFullYear();\n      if (diffYear != 0 && diffYear != 1) {\n        this.createFormGroup.controls['toDate'].setValue('');\n      }\n    }\n\n    if (type == 'ToDate') {\n      this.fromMaxDate = new Date(this.createFormGroup.value.toDate);\n      this.fromMinDate = new Date(new Date().setFullYear(new Date(this.fromMaxDate).getFullYear() - 1))\n      let diffYear = new Date(this.createFormGroup.value.toDate).getFullYear() - new Date(this.createFormGroup.value.fromDate).getFullYear();\n      if (diffYear != 0 && diffYear != 1) {\n        this.createFormGroup.controls['fromDate'].setValue('');\n      }\n    }\n    this.cdf.detectChanges();\n  }\n\n  clearDate(type) {\n    this.fromMinDate = null;\n    this.fromMaxDate = null;\n    if (type == 'FromDate') {\n      this.createFormGroup.controls['fromDate'].setValue('');\n    }\n    if (type == 'ToDate') {\n      this.createFormGroup.controls['toDate'].setValue('');\n    }\n\n    this.isHasData = false;\n    this.displayList[0].particular = [];\n    this.displayList[0].policies = [];\n    this.displayList[0].premium = [];\n\n    this.selectOptions.channels = [];\n    this.selectOptions.regions = [];\n    this.selectOptions.cluster = [];\n    this.selectOptions.branches = [];\n    this.selectOptions.agents = [];\n    this.createFormGroup.controls['companyId'].setValue('');\n    this.createFormGroup.controls['channelId'].setValue('');\n    this.createFormGroup.controls['regionId'].setValue('');\n    this.createFormGroup.controls['clusterId'].setValue('');\n    this.createFormGroup.controls['branchId'].setValue('');\n    this.createFormGroup.controls['agentId'].setValue('');\n  }\n\n  formatDateDDMMYYY(date) {\n    var d = new Date(date),\n      month = '' + (d.getMonth() + 1),\n      day = '' + d.getDate(),\n      year = d.getFullYear();\n    if (month.length < 2)\n      month = '0' + month;\n    if (day.length < 2)\n      day = '0' + day;\n    return [day, month, year].join('/');\n  }\n\n  mathRoundTo(num: number, places: number) {\n    const factor = 10 ** places;\n    return (Math.round(num * factor) / factor).toLocaleString();\n  };\n\n}","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ReportChannelSummaryByBankBranchComponent } from './report-channel-summary-by-bank-branch.component';\nimport { RouterModule } from '@angular/router';\nimport { CRUDTableModule } from 'src/app/_metronic/shared/crud-table';\nimport { InlineSVGModule } from 'ng-inline-svg';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { NgSelectModule } from '@ng-select/ng-select';\nimport { NgbDatepickerModule } from '@ng-bootstrap/ng-bootstrap';\nimport { NgApexchartsModule } from 'ng-apexcharts';\nimport { MatDatepickerModule } from '@angular/material/datepicker';\nimport { MatNativeDateModule } from '@angular/material/core';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatFormFieldModule } from '@angular/material/form-field';\n\n\n\n@NgModule({\n  declarations: [ReportChannelSummaryByBankBranchComponent],\n  imports: [   \n    CommonModule,\n    FormsModule,\n    NgSelectModule,\n    ReactiveFormsModule,\n    InlineSVGModule,\n    CRUDTableModule,\n    NgbDatepickerModule,\n    NgApexchartsModule,\n    MatDatepickerModule,\n    MatNativeDateModule,\n    MatInputModule,\n    MatFormFieldModule,\n      RouterModule.forChild([\n        {\n          path: '',\n          component: ReportChannelSummaryByBankBranchComponent,\n        },\n      ]),\n  ]\n})\nexport class ReportChannelSummaryByBankBranchModule { }\n","export default \"<div class=\\\"row\\\">\\n    <div class=\\\"col-12\\\">\\n        <div class=\\\"card card-custom gutter-b\\\">\\n            <div class=\\\"card-header\\\">\\n                <div class=\\\"card-title\\\">\\n                    <h3 class=\\\"card-label left-border-image\\\">{{ title }}</h3>\\n                </div>\\n                <div class=\\\"card-toolbar\\\">\\n                    <button type=\\\"button\\\" class=\\\"btn btn-primary ml-2\\\" style=\\\"min-width: 50px;\\\"\\n                        (click)=\\\"getAllReports()\\\">\\n                        <span class=\\\"flaticon2-magnifier-tool\\\"></span>\\n                    </button>\\n                    <button type=\\\"button\\\" [disabled]=\\\"!isHasData\\\" (click)=\\\"generateReportExcel()\\\"\\n                        class=\\\"btn btn-primary ml-2\\\" style=\\\"min-width: 50px;\\\">\\n                        <span class=\\\"\\\">Generate</span>\\n                    </button>\\n                    <button type=\\\"button\\\" (click)=\\\"cancelReport()\\\" class=\\\"btn btn-primary ml-2\\\"\\n                        style=\\\"min-width: 50px;\\\">\\n                        <span class=\\\"\\\">Cancel</span>\\n                    </button>\\n                </div>\\n            </div>\\n            <div class=\\\"card-body px-10 py-3\\\">\\n                <form action=\\\"#\\\" class=\\\"form\\\" [formGroup]=\\\"createFormGroup\\\">\\n                    <div class=\\\"row\\\" style=\\\"align-items: center;\\\">\\n                        <div class=\\\"col-sm-6 from-date\\\">\\n                            <div class=\\\"form-group row\\\">\\n                                <label class=\\\"col-sm-4 col-form-label\\\">From Date</label>\\n                                <div class=\\\"col-sm-6 input-date\\\">\\n                                    <input type=\\\"text\\\" readonly class=\\\"form-control form-control-sm\\\"\\n                                        formControlName=\\\"fromDate\\\" [min]=\\\"fromMinDate\\\" [max]=\\\"fromMaxDate\\\"\\n                                        [matDatepicker]=\\\"picker1\\\" (dateChange)=\\\"doValid('FromDate')\\\" autocomplete=\\\"off\\\">\\n                                    <mat-datepicker-toggle matSuffix [for]=\\\"picker1\\\"></mat-datepicker-toggle>\\n                                    <mat-datepicker #picker1 disabled=\\\"false\\\"></mat-datepicker>\\n                                </div>\\n                                <button type=\\\"button\\\" style=\\\"margin: 0 !important;\\\" (click)=\\\"clearDate('FromDate')\\\"\\n                                    class=\\\"btn btn-primary btn-elevate mx-2\\\">Clear</button>\\n                            </div>\\n                        </div>\\n                        <div class=\\\"col-sm-6 from-date\\\">\\n                            <div class=\\\"form-group row\\\">\\n                                <label class=\\\"col-sm-4 col-form-label\\\">To Date</label>\\n                                <div class=\\\"col-sm-6 input-date\\\">\\n                                    <input type=\\\"text\\\" readonly class=\\\"form-control form-control-sm\\\"\\n                                        formControlName=\\\"toDate\\\" [min]=\\\"fromMinDate\\\" [max]=\\\"fromMaxDate\\\"\\n                                        [matDatepicker]=\\\"picker\\\" (dateChange)=\\\"doValid('ToDate')\\\" autocomplete=\\\"off\\\">\\n                                    <mat-datepicker-toggle matSuffix [for]=\\\"picker\\\"></mat-datepicker-toggle>\\n                                    <mat-datepicker #picker disabled=\\\"false\\\"></mat-datepicker>\\n                                </div>\\n                                <button type=\\\"button\\\" style=\\\"margin: 0 !important;\\\" (click)=\\\"clearDate('ToDate')\\\"\\n                                    class=\\\"btn btn-primary btn-elevate mx-2\\\">Clear</button>\\n                            </div>\\n                        </div>\\n                    </div>\\n                    <!-- <div class=\\\"row\\\" style=\\\"align-items: center;\\\"\\n                        *ngIf=\\\"createFormGroup.value.fromDate != '' && createFormGroup.value.toDate != '' \\\">\\n                        <div class=\\\"col-sm-6\\\"\\n                            *ngIf=\\\"createFormGroup.value.fromDate != '' && createFormGroup.value.toDate != '' \\\">\\n                            <div class=\\\"form-group row\\\">\\n                                <label class=\\\"col-sm-4 col-form-label\\\">Company</label>\\n                                <div class=\\\"col-sm-8\\\">\\n                                    <ng-select class=\\\"ng-custom-select\\\" placeholder=\\\"Please Select\\\"\\n                                        (change)=\\\"changeOptions($event, 'channel')\\\" [items]=\\\"selectOptions.companies\\\"\\n                                        bindLabel=\\\"name\\\" bindValue=\\\"id\\\" formControlName=\\\"companyId\\\">\\n                                    </ng-select>\\n                                </div>\\n                            </div>\\n                        </div>\\n                        <div class=\\\"col-sm-6\\\">\\n                            <div class=\\\"form-group row\\\">\\n                                <label class=\\\"col-sm-4 col-form-label\\\">Channel</label>\\n                                <div class=\\\"col-sm-8\\\">\\n                                    <ng-select [readonly]=\\\"selectOptions.channels.length == 0 \\\" class=\\\"ng-custom-select\\\"\\n                                        placeholder=\\\"Please Select\\\" (change)=\\\"changeOptions($event, 'region')\\\"\\n                                        [items]=\\\"selectOptions.channels\\\" bindLabel=\\\"name\\\" bindValue=\\\"id\\\"\\n                                        formControlName=\\\"channelId\\\">\\n                                    </ng-select>\\n                                </div>\\n                            </div>\\n                        </div>\\n                    </div> -->\\n                    <!-- <div class=\\\"row\\\" style=\\\"align-items: center;\\\"\\n                        *ngIf=\\\"createFormGroup.value.fromDate != '' && createFormGroup.value.toDate != '' \\\">\\n                        <div class=\\\"col-sm-6\\\">\\n                            <div class=\\\"form-group row\\\">\\n                                <label class=\\\"col-sm-4 col-form-label\\\">Region</label>\\n                                <div class=\\\"col-sm-8\\\">\\n                                    <ng-select [readonly]=\\\"selectOptions.regions.length == 0 \\\" class=\\\"ng-custom-select\\\"\\n                                        placeholder=\\\"Please Select\\\" (change)=\\\"changeOptions($event, 'cluster')\\\"\\n                                        [items]=\\\"selectOptions.regions\\\" bindLabel=\\\"name\\\" bindValue=\\\"id\\\"\\n                                        formControlName=\\\"regionId\\\">\\n                                    </ng-select>\\n                                </div>\\n                            </div>\\n                        </div>\\n                        <div class=\\\"col-sm-6\\\">\\n                            <div class=\\\"form-group row\\\">\\n                                <label class=\\\"col-sm-4 col-form-label\\\">Cluster</label>\\n                                <div class=\\\"col-sm-8\\\">\\n                                    <ng-select [readonly]=\\\"selectOptions.cluster.length == 0 \\\" class=\\\"ng-custom-select\\\"\\n                                        placeholder=\\\"Please Select\\\" (change)=\\\"changeOptions($event, 'branch')\\\"\\n                                        [items]=\\\"selectOptions.cluster\\\" bindLabel=\\\"name\\\" bindValue=\\\"id\\\"\\n                                        formControlName=\\\"clusterId\\\">\\n                                    </ng-select>\\n                                </div>\\n                            </div>\\n                        </div>\\n                    </div> -->\\n                    <!-- <div class=\\\"row\\\" style=\\\"align-items: center;\\\"\\n                        *ngIf=\\\"createFormGroup.value.fromDate != '' && createFormGroup.value.toDate != '' \\\">\\n                        <div class=\\\"col-sm-6\\\">\\n                            <div class=\\\"form-group row\\\">\\n                                <label class=\\\"col-sm-4 col-form-label\\\">Branch</label>\\n                                <div class=\\\"col-sm-8\\\">\\n                                    <ng-select [readonly]=\\\"selectOptions.branches.length == 0 \\\" class=\\\"ng-custom-select\\\"\\n                                        placeholder=\\\"Please Select\\\" (change)=\\\"changeOptions($event, 'agent')\\\"\\n                                        [items]=\\\"selectOptions.branches\\\" bindLabel=\\\"name\\\" bindValue=\\\"id\\\"\\n                                        formControlName=\\\"branchId\\\">\\n                                    </ng-select>\\n                                </div>\\n                            </div>\\n                        </div>\\n                        <div class=\\\"col-sm-6\\\">\\n                            <div class=\\\"form-group row\\\">\\n                                <label class=\\\"col-sm-4 col-form-label\\\">Agent Name</label>\\n                                <div class=\\\"col-sm-8\\\">\\n                                    <ng-select [readonly]=\\\"selectOptions.agents.length == 0 \\\" class=\\\"ng-custom-select\\\"\\n                                        placeholder=\\\"Please Select\\\" (change)=\\\"changeOptions($event, 'office')\\\"\\n                                        [items]=\\\"selectOptions.agents\\\" bindLabel=\\\"agentName\\\" bindValue=\\\"agentId\\\"\\n                                        formControlName=\\\"agentId\\\">\\n                                    </ng-select>\\n                                </div>\\n                            </div>\\n                        </div>\\n                    </div> -->\\n                </form>\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n\\n<div class=\\\"row\\\" *ngIf=\\\"isHasData\\\">\\n    <div class=\\\"col-12\\\">\\n        <div style=\\\"width: 100%;\\n        overflow: hidden; position: relative;\\\">\\n            <div style=\\\"width: 30%;float: left; position: relative;\\\">\\n                <br *ngIf=\\\"createFormGroup.value.companyId\\\">\\n                <br *ngIf=\\\"createFormGroup.value.clusterId\\\">\\n                <h3 class=\\\"card-label left-border-image\\\" style=\\\"font-size: 1.15rem;\\\">{{ title }}</h3>\\n            </div>\\n            <div style=\\\"width: 30%; float: left; position: relative;\\\">\\n                <br *ngIf=\\\"createFormGroup.value.companyId\\\">\\n                <br *ngIf=\\\"createFormGroup.value.clusterId\\\">\\n                <div>\\n                    <span *ngIf=\\\"createFormGroup.value.fromDate\\\">From Date: {{\\n                        formatDateDDMMYYY(createFormGroup.value.fromDate) }} </span>\\n                    &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;\\n                    <span *ngIf=\\\"createFormGroup.value.toDate\\\">To Date: {{\\n                        formatDateDDMMYYY(createFormGroup.value.toDate) }}</span>\\n                </div>\\n            </div>\\n            <div class=\\\"search-display\\\">\\n                <div *ngIf=\\\"createFormGroup.value.companyId != '' || \\n                createFormGroup.value.channelId !='' || createFormGroup.value.regionId != '' \\\">\\n                    <span *ngIf=\\\"createFormGroup.value.companyId\\\">Company: {{ companyName }} </span>\\n                    <span *ngIf=\\\"createFormGroup.value.channelId\\\">Channel: {{ channelName }} </span>\\n                    <span *ngIf=\\\"createFormGroup.value.regionId\\\">Region: {{ regionName }} </span>\\n                </div>\\n                <div *ngIf=\\\"createFormGroup.value.clusterId != '' || \\n                createFormGroup.value.branchId !='' || createFormGroup.value.agentId !='' \\\">\\n                    <span *ngIf=\\\"createFormGroup.value.clusterId\\\">Cluster: {{ clusterName }} </span>\\n                    <span *ngIf=\\\"createFormGroup.value.branchId\\\">Branch: {{ branchName }}</span>\\n                    <span *ngIf=\\\"createFormGroup.value.agentId\\\">Agent: {{ agentName }} </span>\\n                </div>\\n            </div>\\n        </div>\\n        <div style=\\\"width: 100%;\\n        overflow-y: hidden;\\n        overflow-x: scroll;\\\">\\n            <table border=\\\"1\\\">\\n                <tr>\\n                    <th *ngFor=\\\"let particular of displayList[0].particular; let i = index\\\">{{ particular.channel }}\\n                    </th>\\n                </tr>\\n                <tr class=\\\"data\\\">\\n                    <td *ngFor=\\\"let policies of displayList[0].policies; let i = index\\\">{{ policies.noOfPolicy || 0 }}\\n                    </td>\\n                </tr>\\n                <tr class=\\\"data\\\">\\n                    <td *ngFor=\\\"let premium of displayList[0].premium; let i = index\\\">{{ premium.totalPreminum || 0 }}\\n                    </td>\\n                </tr>\\n            </table>\\n        </div>\\n    </div>\\n</div>\\n\\n<div *ngIf=\\\"!isHasData\\\" style=\\\"color: gray; text-align: center;\\\"> There is no data </div>\";"],"names":[],"sourceRoot":"webpack:///"}