{"version":3,"file":"src_app_pages_customer-list_customer-list_const_ts-src_app_pages_customer-list_customer-list_-6e8582.js","mappings":"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","sources":["./src/app/pages/customer-list/customer-list.const.ts","./src/app/pages/customer-list/customer-list.service.ts","./src/app/pages/prospect-customer-list/prospect-customer-list.module.ts"],"sourcesContent":["import { COLTYPE, TableCol } from '../../_metronic/shared/crud-table/components/material-table-view/table-dto'\nexport const CustomerCol: TableCol[] = [\n  {\n    title: \"First Name\",\n    type: COLTYPE.FEILD,\n    field: \"firstName\"\n  },\n  {\n    title: \"Middle Name\",\n    type: COLTYPE.FEILD,\n    field: \"middleName\"\n  },\n  {\n    title: \"Last Name\",\n    type: COLTYPE.FEILD,\n    field: \"lastName\"\n  },\n\n  {\n    title: \"Party Code\",\n    type: COLTYPE.FEILD,\n    field: \"partyCode\"\n  },\n  {\n    title: \"ID Type\",\n    type: COLTYPE.FEILD,\n    field: \"identityType\",\n  },\n  {\n    title: \"ID No.\",\n    type: COLTYPE.FEILD,\n    field: \"identityNumber\",\n  },\n  {\n    title: \"Date of Birth\",\n    type: COLTYPE.FEILD,\n    field: \"dateOfBirth\",\n    isFromatDate: true\n  },\n  {\n    title: \"Father Name\",\n    type: COLTYPE.FEILD,\n    field: \"fatherName\"\n  },\n  {\n    title: \"Status\",\n    type: COLTYPE.FEILD,\n    field: \"statusCode\",\n    isCustomerStatus: true\n  },\n  {\n    title: \"Actions\",\n    type: COLTYPE.ACTION,\n    field: \"actions\",\n    btn: {\n      edit: true\n    }\n  },\n]\n\nexport const CustomerDisplayCol: string[] = [\n  \"firstName\",\n  \"middleName\",\n  \"lastName\",\n  \"partyCode\",\n  \"identityType\",\n  \"identityNumber\",\n  \"dateOfBirth\",\n  \"fatherName\",\n  \"statusCode\",\n  \"actions\",\n]\n\nexport const Status: any[] = [\n  {\n    code : \"A\",\n    value : \"Active\"\n  },{\n    code : \"I\",\n    value : \"Inactive\"\n  },{\n    code : \"T\",\n    value : \"Terminated\"\n  }\n]\n\nexport const IdentityType: any[] = [\n  {\n    code : \"NRC\",\n    value : \"NRC\"\n  },{\n    code : \"FRC\",\n    value : \"FRC\"\n  },{\n    code : \"PASSPORT\",\n    value : \"Passport\"\n  },{\n    code : \"OTHERS\",\n    value : \"Others\"\n  }\n]","import { HttpClient } from \"@angular/common/http\";\nimport { Injectable } from \"@angular/core\";\nimport * as moment from \"moment\";\nimport { environment } from \"../../../environments/environment\";\n\nconst API_CUSTOMER_URL = `${environment.apiUrl}/customer`;\nconst API_CUSTOMER_URL_PAGE = `${environment.apiUrl}/customer/page`;\n@Injectable({\n  providedIn: 'root'\n})\nexport class CustomerListService {\n  constructor(protected httpClient: HttpClient) {\n  }\n\n  getCustomerList(search: any = {}, party: boolean, popup: boolean, isCustom?: boolean) {\n    let url = popup ? API_CUSTOMER_URL + \"?\" : API_CUSTOMER_URL_PAGE + \"?\"\n    if (search.name) {\n      url = url + \"name=\" + search.name + \"&\"\n    }\n    if (search.phoneNo) {\n      url = url + \"phoneNo=\" + search.phoneNo + \"&\"\n    }\n    if (search.partyCode) {\n      url = url + \"partyCode=\" + search.partyCode + \"&\"\n    }\n    if (search.startDate) {\n      url = url + \"startDate=\" + moment(search.startDate).format(\"YYYY-MM-DD\") + \"&\"\n    }\n    if (search.endDate) {\n      url = url + \"endDate=\" + moment(search.endDate).format(\"YYYY-MM-DD\") + \"&\"\n    }\n    if (search.statusCode) {\n      url = url + \"statusCode=\" + search.statusCode + \"&\"\n    }\n    if (search.identityType) {\n      url = url + \"identityType=\" + search.identityType + \"&\"\n    }\n    if (search.identityNumber) {\n      url = url + \"identityNumber=\" + search.identityNumber + \"&\"\n    }\n    if (!popup) {\n      if (search.limit) {\n        url = url + \"limit=\" + search.limit + \"&\"\n      }\n      if (search.offset) {\n        url = url + \"offset=\" + search.offset + \"&\"\n      }\n    }\n    if (!isCustom) {\n      url = url + \"isPartyCode=\" + party\n    }\n\n    return this.httpClient.get(url)\n  }\n}","import { NgModule, Optional, SkipSelf } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule } from '@angular/router';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { InlineSVGModule } from 'ng-inline-svg';\nimport { CRUDTableModule } from '../../_metronic/shared/crud-table';\nimport { ProspectCustomerListComponent } from './prospect-customer-list.component';\nimport { NgSelectModule } from '@ng-select/ng-select';\nimport { ShareComponentModule } from '../share-components/share-component.module';\nimport { throwIfAlreadyLoaded } from 'src/app/modules/loading-toast/module-import-guard';\nimport { LanguageModule } from 'src/app/modules/languages/languages.modules';\nimport { ProspectCustomerListShareModule } from './prospect-customer-list.share.module';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    InlineSVGModule,\n    NgSelectModule,\n    CRUDTableModule,\n    LanguageModule,\n    ProspectCustomerListShareModule,\n    RouterModule.forChild([\n      {\n        path: '',\n        component: ProspectCustomerListComponent,\n      },\n    ]),\n\n  ]\n})\nexport class ProspectCustomerListModule {\n  constructor(@Optional() @SkipSelf() parentModule: ProspectCustomerListModule) {\n    throwIfAlreadyLoaded(parentModule, 'ProspectCustomerListModule')\n  }\n }\n"],"names":[],"sourceRoot":"webpack:///"}